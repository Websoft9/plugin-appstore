{"version":3,"file":"static/js/81.537530c2.chunk.js","mappings":"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","sources":["components/FormInput.js","pages/appstore.js"],"sourcesContent":["// @flow\nimport classNames from 'classnames';\nimport React, { useState } from 'react';\nimport { Form, InputGroup } from 'react-bootstrap';\n\n/* Password Input */\nconst PasswordInput = ({ name, placeholder, refCallback, errors, register, className, value, readOnly }) => {\n    const [showPassword, setShowPassword] = useState(false);\n\n    return (\n        <>\n            <InputGroup className=\"mb-0\">\n                <Form.Control\n                    type={showPassword ? 'text' : 'password'}\n                    placeholder={placeholder}\n                    name={name}\n                    id={name}\n                    as=\"input\"\n                    ref={(r) => {\n                        if (refCallback) refCallback(r);\n                    }}\n                    className={className}\n                    isInvalid={errors && errors[name] ? true : false}\n                    {...(register ? register(name) : {})}\n                    autoComplete={name}\n                    defaultValue={value}\n                    readOnly={readOnly}\n                />\n                <div\n                    className={classNames('input-group-text', 'input-group-password', {\n                        'show-password': showPassword,\n                    })}\n                    data-password={showPassword ? 'true' : 'false'}>\n                    <span\n                        className=\"password-eye\"\n                        onClick={() => {\n                            setShowPassword(!showPassword);\n                        }}></span>\n                </div>\n            </InputGroup>\n        </>\n    );\n};\n\ntype FormInputProps = {\n    label?: string,\n    type?: string,\n    name?: string,\n    value?: string,\n    placeholder?: string,\n    register?: any,\n    errors?: any,\n    className?: string,\n    labelClassName?: string,\n    containerClass?: string,\n    refCallback?: any,\n    children?: any,\n};\n\nconst FormInput = ({\n    label,\n    type,\n    name,\n    value,\n    readOnly,\n    placeholder,\n    register,\n    errors,\n    className,\n    labelClassName,\n    containerClass,\n    refCallback,\n    children,\n    ...otherProps\n}: FormInputProps): React$Element<React$FragmentType> => {\n    // handle input type\n    const comp = type === 'textarea' ? 'textarea' : type === 'select' ? 'select' : 'input';\n\n    return (\n        <>\n            {type === 'hidden' ? (\n                <input type={type} name={name} {...(register ? register(name) : {})} {...otherProps} />\n            ) : (\n                <>\n                    {type === 'password' ? (\n                        <>\n                            <Form.Group className={containerClass}>\n                                {label ? (\n                                    <>\n                                        {' '}\n                                        <Form.Label className={labelClassName}>{label}</Form.Label> {children}{' '}\n                                    </>\n                                ) : null}\n                                <PasswordInput\n                                    name={name}\n                                    placeholder={placeholder}\n                                    refCallback={refCallback}\n                                    errors={errors}\n                                    register={register}\n                                    className={className}\n                                    value={value}\n                                    readOnly={readOnly}\n                                />\n\n                                {errors && errors[name] ? (\n                                    <Form.Control.Feedback type=\"invalid\" className=\"d-block\">\n                                        {errors[name]['message']}\n                                    </Form.Control.Feedback>\n                                ) : null}\n                            </Form.Group>\n                        </>\n                    ) : (\n                        <>\n                            {type === 'select' ? (\n                                <>\n                                    <Form.Group className={containerClass}>\n                                        {label ? <Form.Label className={labelClassName}>{label}</Form.Label> : null}\n\n                                        <Form.Select\n                                            type={type}\n                                            label={label}\n                                            name={name}\n                                            id={name}\n                                            ref={(r) => {\n                                                if (refCallback) refCallback(r);\n                                            }}\n                                            comp={comp}\n                                            className={className}\n                                            isInvalid={errors && errors[name] ? true : false}\n                                            {...(register ? register(name) : {})}\n                                            {...otherProps}>\n                                            {children}\n                                        </Form.Select>\n\n                                        {errors && errors[name] ? (\n                                            <Form.Control.Feedback type=\"invalid\">\n                                                {errors[name]['message']}\n                                            </Form.Control.Feedback>\n                                        ) : null}\n                                    </Form.Group>\n                                </>\n                            ) : (\n                                <>\n                                    {type === 'checkbox' || type === 'radio' ? (\n                                        <>\n                                            <Form.Group className={containerClass}>\n                                                <Form.Check\n                                                    type={type}\n                                                    label={label}\n                                                    name={name}\n                                                    id={name}\n                                                    ref={(r) => {\n                                                        if (refCallback) refCallback(r);\n                                                    }}\n                                                    className={className}\n                                                    isInvalid={errors && errors[name] ? true : false}\n                                                    {...(register ? register(name) : {})}\n                                                    {...otherProps}\n                                                />\n\n                                                {errors && errors[name] ? (\n                                                    <Form.Control.Feedback type=\"invalid\">\n                                                        {errors[name]['message']}\n                                                    </Form.Control.Feedback>\n                                                ) : null}\n                                            </Form.Group>\n                                        </>\n                                    ) : (\n                                        <Form.Group className={containerClass}>\n                                            {label ? <Form.Label className={labelClassName}>{label}</Form.Label> : null}\n\n                                            <Form.Control\n                                                type={type}\n                                                placeholder={placeholder}\n                                                value={value}\n                                                name={name}\n                                                id={name}\n                                                as={comp}\n                                                ref={(r) => {\n                                                    if (refCallback) refCallback(r);\n                                                }}\n                                                className={className}\n                                                isInvalid={errors && errors[name] ? true : false}\n                                                {...(register ? register(name) : {})}\n                                                {...otherProps}\n                                                autoComplete={name}>\n                                                {children ? children : null}\n                                            </Form.Control>\n\n                                            {errors && errors[name] ? (\n                                                <Form.Control.Feedback type=\"invalid\">\n                                                    {errors[name]['message']}\n                                                </Form.Control.Feedback>\n                                            ) : null}\n                                        </Form.Group>\n                                    )}\n                                </>\n                            )}\n                        </>\n                    )}\n                </>\n            )}\n        </>\n    );\n};\n\nexport default FormInput;\n","// @flow\nimport MuiAlert from '@mui/material/Alert';\nimport Snackbar from '@mui/material/Snackbar';\nimport axios from 'axios';\nimport cockpit from 'cockpit';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { Button, Carousel, Col, Form, Modal, Row } from 'react-bootstrap';\nimport Spinner from 'react-bootstrap/Spinner';\nimport { useNavigate } from \"react-router-dom\";\nimport DefaultImg from '../assets/images/default.png';\nimport FormInput from '../components/FormInput';\n\nconst _ = cockpit.gettext;\nconst language = cockpit.language;//获取cockpit的当前语言环境\n\nconst Alert = React.forwardRef(function Alert(props, ref) {\n    return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\n});\n\n//应用详情弹窗\nconst AppDetailModal = ({ product, showFlag, onClose }) => {\n    const [index, setIndex] = useState(0); //用户图片浏览\n    const navigate = useNavigate(); //用于页面跳转\n    const [visible, setVisible] = useState(true); //用于显示安装选项：版本和应用名称\n    const [customName, setCustomName] = useState(\"\"); //用户存储用户输入的应用名称\n    const [showAlert, setShowAlert] = useState(false); //用于是否显示错误提示\n    const [alertMessage, setAlertMessage] = useState(\"\");//用于显示错误提示消息\n    const [disable, setDisable] = useState(false);//用于按钮禁用\n\n    //用户单击“安装”按钮\n    async function handleInstallClick() {\n        if (!visible) {\n            if (!customName || customName.length < 2 || customName.length > 20) { //判断用户是否输入应用名称\n                setShowAlert(true);\n                setAlertMessage(_(\"Please enter a custom application name between 2 and 20 characters.\"))\n            }\n            else {\n                //调用应用安装接口\n                try {\n                    setDisable(true);\n                    var IP;\n                    const Port = \"5000\";\n                    cockpit.spawn([\"docker\", \"inspect\", \"-f\", \"{{range.NetworkSettings.Networks}}{{.IPAddress}}{{end}}\", \"websoft9-appmanage\"])\n                        .then(function (data) {\n                            IP = data.trim();\n                            cockpit.http({ \"address\": IP, \"port\": 5000, })\n                                .get(\"/AppInstall\", { \"app_name\": product.key, \"app_version\": selectedVersion, \"customer_app_name\": customName })\n                                .then(function (response) {\n                                    response = JSON.parse(response);\n                                    if (response.Error) {\n                                        setShowAlert(true);\n                                        setAlertMessage(response.Error.Message);\n                                        setDisable(false);\n                                    }\n                                    else {\n                                        setShowAlert(false);\n                                        setAlertMessage(\"\");\n                                        cockpit.file('/etc/hostname').watch(content => {\n                                            console.log(content);\n                                        });\n                                        cockpit.jump(\"/myapps\");\n                                        onClose();\n                                    }\n                                }).catch(function (error) {\n                                    setShowAlert(true);\n                                    setAlertMessage(error.message);\n                                    setDisable(false);\n                                });\n                        })\n                        .catch(function (error) {\n                            setShowAlert(true);\n                            setAlertMessage(error.message);\n                            setDisable(false);\n                        });\n                }\n                catch (error) {\n                    setShowAlert(false);\n                    setAlertMessage(\"\");\n                    navigate(\"/error-500\");\n                }\n            }\n            return;\n        }\n        setVisible(!visible);\n    }\n\n    const handleSelect = (selectedIndex, e) => {\n        setIndex(selectedIndex);\n    };\n\n    let versions = (product.distribution?.filter(item => item.key === \"Community\") || []).map(version => { return version.value });//获取应用的版本\n\n    let versionList = (versions && versions.length === 1) ? versions.toString().split(\",\") : versions;\n\n    const [selectedVersion, setselectedVersion] = useState(versionList[0]); //存储用户选择的安装版本\n\n    const imagName = product?.logo?.imageurl?.split(\"/\").pop(); //获取图片名称\n\n    const changeVersion = (version) => {\n        setselectedVersion(version);\n    };\n\n    const handleInputChange = (inputValue) => {\n        setCustomName(inputValue);\n        if (!inputValue) { //验证输入应用名称\n            setShowAlert(true);\n            setAlertMessage(_(\"Please enter a custom application name between 2 and 20 characters.\"))\n        }\n        else {\n            const newValue = inputValue.replace(/[^a-z0-9]/gi, '').toLowerCase(); //先替换输入值\n            setCustomName(newValue);\n            setShowAlert(false);\n            setAlertMessage(\"\");\n        }\n    }\n\n    const handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        setShowAlert(false);\n        setAlertMessage(\"\");\n    };\n\n    return (\n        <>\n            <Modal show={showFlag} onHide={onClose} size=\"lg\" scrollable=\"true\" backdrop=\"static\">\n                <Modal.Header onHide={onClose} closeButton>\n                    <div style={{ padding: \"10px\" }}>\n                        <div className='appstore-item-content-icon col-same-height'>\n                            <img\n                                src={`./static/data/logos/${imagName}`}\n                                alt=\"\"\n                                className=\"app-icon\"\n                                onError={(e) => (e.target.src = DefaultImg)}\n                            />\n                        </div>\n                        <div className='col-same-height'>\n                            <h4 className=\"appstore-item-content-title\" style={{ marginTop: \"5px\" }}>\n                                {product.trademark}\n                            </h4>\n                            <div>\n                                <a rel=\"noreferrer\" href={`https://support.websoft9.com/docs/` + product.key} target=\"_blank\" style={{ color: '#2196f3' }} >{product.trademark} {_(\"developers\")}</a>\n                            </div>\n                            <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                                <span style={{ marginRight: \"5px\" }}>{_(\"Version\")} : </span> {versions}\n                            </div>\n                            <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                                <span style={{ marginRight: \"5px\" }}>{_(\"Requires at least\")} : {product.vcpu} vCPU,  {product.memory}  GB memory, {product.storage} GB storage</span>\n                            </div>\n                        </div>\n                    </div>\n                </Modal.Header>\n                <Modal.Body>\n                    <div style={{ display: visible ? \"block\" : \"none\" }}>\n                        <Carousel activeIndex={index} onSelect={handleSelect} style={{ width: \"80%\", margin: \"0 auto\" }}>\n                            {\n                                (product.screenshots || []).map((item) => {\n                                    const filename = item.value.split(\"/\").pop();\n                                    return (\n                                        <Carousel.Item key={item?.id} >\n                                            <img\n                                                className=\"d-block\"\n                                                src={`./static/data/screenshots/${language === \"zh_CN\" ? \"zh\" : \"en\"}/${filename}`}\n                                                alt={item?.key}\n                                                width=\"100%\"\n                                                height=\"300px\"\n                                            />\n                                        </Carousel.Item>\n                                    );\n                                })\n                            }\n                        </Carousel>\n                        <div style={{ padding: \"10px\" }}>\n                            <h4>{_(\"Overview\")}</h4>\n                            {product.overview}\n                        </div>\n                        <div style={{ padding: \"10px\" }}>\n                            <h4>{_(\"Description\")}</h4>\n                            {product.description}\n                        </div>\n                    </div>\n                    <div style={{ display: visible ? \"none\" : \"block\" }}>\n                        <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n                            <div>\n                                <span style={{ marginRight: \"5px\" }}>{_(\"Version\")} :</span>\n                                {\n                                    versionList && <FormInput\n                                        name=\"select\"\n                                        type=\"select\"\n                                        className=\"form-select\"\n                                        onChange={(e) => changeVersion(e.target.value)}\n                                        key=\"select\">\n                                        {\n                                            (versionList || []).map((version, i) => {\n                                                return <option value={version} key={version + i}>{version}</option>\n                                            })\n                                        }\n                                    </FormInput>\n                                }\n                            </div>\n                            <div style={{ marginTop: \"5px\" }}>\n                                <span style={{ marginRight: \"5px\" }}>{_(\"Name\")} :</span>\n                                <FormInput type=\"text\" value={customName} name=\"app_Name\"\n                                    placeholder={_(\"Only letters and numbers from 2 to 20 are allowed. No special characters.\")}\n                                    onChange={(e) => { handleInputChange(e.target.value) }} />\n                            </div>\n                        </div>\n                    </div>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"light\" onClick={onClose}>\n                        {_(\"Close\")}\n                    </Button>{' '}\n                    <Button disabled={disable} variant=\"primary\" onClick={handleInstallClick}>\n                        {_(\"Install\")}\n                    </Button>\n                </Modal.Footer>\n            </Modal >\n            {\n                showAlert &&\n                <Snackbar open={showAlert} autoHideDuration={5000} onClose={handleClose} anchorOrigin={{ vertical: 'top', horizontal: 'center' }}>\n                    <Alert onClose={handleClose} severity=\"error\" sx={{ width: '100%' }}>\n                        {alertMessage}\n                    </Alert>\n                </Snackbar>\n            }\n        </>\n    );\n}\n\n\nconst AppStore = (): React$Element<React$FragmentType> => {\n    const [showModal, setShowModal] = useState(false); //用于显示弹窗的标识\n    const [selectedProduct, setSelectedProduct] = useState(null); //用于存储被选中的产品（点击应用详情时使用）\n    const [subCatalogs, setSubCatalogs] = useState(null); //用于存储二级目录\n    const [allMainCatalogApps, setAllMainCatalogApps] = useState(null); //用于存储某个一级子目录下的所有应用\n    const [isAllSelected, setIsAllSelected] = useState(true);\n    const [searchValue, setSearchValue] = useState(\"\");\n    const [mainCatalogs, setMainCatalogs] = useState([]);\n    const [apps, setApps] = useState([]); //用于存储通过目录筛选出来的数据\n    const [appList, setAppList] = useState([]); //用于存储通过目录筛选出来的数据\n    const [loading, setLoading] = useState(false);\n    const navigate = useNavigate(); //用于页面跳转\n\n\n    //读取数据文件\n    const getData = useCallback(async () => {\n        setLoading(true);\n        try {\n            const [catalogResponse, productResponse] = await Promise.all([\n                axios.get(`./static/data/json/catalog_${language === \"zh_CN\" ? \"zh\" : \"en\"}.json`),\n                axios.get(`./static/data/json/product_${language === \"zh_CN\" ? \"zh\" : \"en\"}.json`)\n            ]);\n            if (catalogResponse.status === 200) {\n                const catalogSort = catalogResponse.data.sort(function (a, b) {\n                    if (a.position === null && b.position === null) {\n                        return 0;\n                    } else if (a.position === null) {\n                        return 1;\n                    } else if (b.position === null) {\n                        return -1;\n                    } else {\n                        return a.position - b.position;\n                    }\n                });\n                setMainCatalogs(catalogSort);\n            }\n            else {\n                return <p>Error: Failed to fetch directory data </p>;\n            }\n\n            if (productResponse.status === 200) {\n                setApps(productResponse.data);\n                setAppList(productResponse.data);\n            }\n            else {\n                return <p>Error: Failed to fetch product data </p>;\n            }\n        }\n        catch {\n            navigate(\"/error-500\");\n        }\n        setLoading(false);\n    }, [language, setMainCatalogs, setApps, setAppList]);\n\n    useEffect(() => {\n        getData();\n    }, [getData]);\n\n    if (loading) return <Spinner className='dis_mid' />\n    // if (dataError) return <p>Error : ${dataError.message} </p>;\n\n    //用于显示应用详情的弹窗\n    const handleClick = (product) => {\n        setSelectedProduct(product);\n        setShowModal(true);\n    };\n\n    //用于关闭应用详情的弹窗\n    const handleClose = () => {\n        setShowModal(false);\n        setSelectedProduct(null);\n    };\n\n    //当主目录改变时\n    const changeMainCatalog = (selectedMainCatalog) => {\n        // 查询主目录下的二级目录\n        let updatedData = null;\n        //  filter\n        updatedData =\n            selectedMainCatalog === 'All'\n                ? []\n                : mainCatalogs.filter(c => c.key === selectedMainCatalog)?.[0]?.linkedFrom?.catalogCollection?.items;\n        const data = updatedData.sort(function (a, b) {\n            if (a.position === null && b.position === null) {\n                return 0;\n            } else if (a.position === null) {\n                return 1;\n            } else if (b.position === null) {\n                return -1;\n            } else {\n                return a.position - b.position;\n            }\n        });\n        setSubCatalogs(data);\n\n        //根据主目录过滤app数据\n        let subCatalogApps = null;\n        let mainCatalogAllApps = null;\n        mainCatalogAllApps = apps.filter(app => app?.catalogCollection?.items.some(sub => sub?.catalogCollection?.items.some(subsub => subsub.key === selectedMainCatalog)));\n        subCatalogApps =\n            selectedMainCatalog === \"All\"\n                ? apps\n                : mainCatalogAllApps;\n        setAppList(subCatalogApps);\n        setAllMainCatalogApps(mainCatalogAllApps);\n        setIsAllSelected(false);\n        setSearchValue(\"\");\n    };\n\n    //当子目录改变时，过滤应用数据\n    const changeSubCatalog = (selectedSubCatalog) => {\n        let updatedData = null;\n        updatedData =\n            selectedSubCatalog === \"All\"\n                ? allMainCatalogApps\n                : apps.filter(app => app?.catalogCollection?.items.some(c => c.key === selectedSubCatalog));\n        setAppList(updatedData);\n        setSearchValue(\"\");\n    };\n\n    //当搜索框的内容发生改变时，进行app的过滤搜索\n    const handleInputChange = (searchString) => {\n        setSearchValue(searchString);\n        let updatedData = null;\n        updatedData =\n            searchString === \"\"\n                ? apps\n                : apps.filter(app => { return app.trademark.toLowerCase().includes(searchString) || app.key.toLowerCase().includes(searchString) || app.summary.toLowerCase().includes(searchString) });\n\n        setAppList(updatedData);\n        setIsAllSelected(true);\n        setSubCatalogs(null);\n    }\n\n    return (\n        <>\n            <Row className=\"mb-2\">\n                <Col sm={6}>\n                    <Form.Group as={Row}>\n                        <Col sm={6}>\n                            <FormInput\n                                name=\"select1\"\n                                type=\"select\"\n                                className=\"form-select\"\n                                key=\"select1\"\n                                onChange={(e) => changeMainCatalog(e.target.value)}>\n                                <option value=\"All\" selected={isAllSelected}>{_(\"All\")}</option>\n                                {\n                                    (mainCatalogs || []).map((item, i) => {\n                                        return (\n                                            <option value={item?.key} key={item?.key + i}>{item?.title}</option>\n                                        );\n                                    })\n                                }\n                            </FormInput>\n                        </Col>\n                        <Col sm={6}>\n                            <FormInput\n                                name=\"select2\"\n                                type=\"select\"\n                                className=\"form-select\"\n                                key=\"select2\"\n                                onChange={(e) => changeSubCatalog(e.target.value)}>\n                                <option value=\"All\">{_(\"All\")}</option>\n                                {\n                                    (subCatalogs || []).map((item, i) => {\n                                        return (\n                                            <option value={item?.key} key={item?.key + i}>{item?.title}</option>\n                                        );\n                                    })\n                                }\n                            </FormInput>\n                        </Col>\n                    </Form.Group>\n                </Col>\n                <Col sm={6}>\n                    <Col xs=\"auto\">\n                        <FormInput type=\"text\" name=\"search\"\n                            placeholder={_(\"Search for apps like WordPress, MySQL, GitLab, …\")}\n                            value={searchValue}\n                            onChange={(e) => handleInputChange(e.target.value)} />\n                    </Col>\n                </Col>\n            </Row>\n            <Row>\n                {(appList || []).map((app, i) => {\n                    const imagName = app?.logo?.imageurl?.split(\"/\").pop();\n                    return (\n                        <Col xxl={3} sm={6} md={4} key={\"app-\" + i} className=\"appstore-item\">\n                            <div className='appstore-item-content highlight' onClick={() => { handleClick(app) }}>\n                                <div className='appstore-item-content-icon col-same-height'>\n                                    <img\n                                        src={`./static/data/logos/${imagName}`}\n                                        alt={imagName}\n                                        className=\"app-icon\"\n                                        onError={(e) => (e.target.src = DefaultImg)}\n                                    />\n                                </div>\n                                <div className='col-same-height' style={{ textAlign: \"initial\" }}>\n                                    <h4 className=\"appstore-item-content-title\">\n                                        {app?.trademark}\n                                    </h4>\n                                    <div className='appstore-item-content-tagline text-muted'>\n                                        {app?.summary}\n                                    </div>\n                                </div>\n                            </div>\n                        </Col>\n                    );\n                })}\n            </Row>\n            {showModal && <AppDetailModal product={selectedProduct} showFlag={showModal} onClose={handleClose} />}\n        </>\n    );\n};\n\nexport default AppStore;\n"],"names":["PasswordInput","_ref","name","placeholder","refCallback","errors","register","className","value","readOnly","_useState","useState","_useState2","_slicedToArray","showPassword","setShowPassword","_jsx","_Fragment","children","_jsxs","InputGroup","Form","Control","_objectSpread","type","id","as","ref","r","isInvalid","autoComplete","defaultValue","classNames","onClick","_ref2","label","labelClassName","containerClass","otherProps","_objectWithoutProperties","_excluded","comp","Group","Label","Feedback","Select","Check","_","cockpit","language","Alert","React","props","MuiAlert","elevation","variant","AppDetailModal","_product$distribution","_product$logo","_product$logo$imageur","product","showFlag","onClose","index","setIndex","navigate","useNavigate","_useState3","_useState4","visible","setVisible","_useState5","_useState6","customName","setCustomName","_useState7","_useState8","showAlert","setShowAlert","_useState9","_useState10","alertMessage","setAlertMessage","_useState11","_useState12","disable","setDisable","_handleInstallClick","_asyncToGenerator","_regeneratorRuntime","mark","_callee","IP","wrap","_context","prev","next","length","then","data","trim","get","key","selectedVersion","response","JSON","parse","Error","Message","watch","content","console","log","catch","error","message","abrupt","stop","apply","arguments","versions","distribution","filter","item","map","version","versionList","toString","split","_useState13","_useState14","setselectedVersion","imagName","logo","imageurl","pop","handleClose","event","reason","Modal","show","onHide","size","scrollable","backdrop","Header","closeButton","style","padding","src","concat","alt","onError","e","target","DefaultImg","marginTop","trademark","rel","href","color","display","alignItems","marginRight","vcpu","memory","storage","Body","Carousel","activeIndex","onSelect","selectedIndex","width","margin","screenshots","filename","Item","height","overview","description","flexDirection","FormInput","onChange","i","inputValue","newValue","replace","toLowerCase","handleInputChange","Footer","Button","disabled","Snackbar","open","autoHideDuration","anchorOrigin","vertical","horizontal","severity","sx","_useState15","_useState16","showModal","setShowModal","_useState17","_useState18","selectedProduct","setSelectedProduct","_useState19","_useState20","subCatalogs","setSubCatalogs","_useState21","_useState22","allMainCatalogApps","setAllMainCatalogApps","_useState23","_useState24","isAllSelected","setIsAllSelected","_useState25","_useState26","searchValue","setSearchValue","_useState27","_useState28","mainCatalogs","setMainCatalogs","_useState29","_useState30","apps","setApps","_useState31","_useState32","appList","setAppList","_useState33","_useState34","loading","setLoading","getData","useCallback","_callee2","_yield$Promise$all","_yield$Promise$all2","catalogResponse","productResponse","catalogSort","_context2","Promise","all","axios","sent","status","sort","a","b","position","t0","useEffect","Spinner","Row","Col","sm","selectedMainCatalog","_mainCatalogs$filter","_mainCatalogs$filter$","_mainCatalogs$filter$2","_mainCatalogs$filter$3","mainCatalogAllApps","c","linkedFrom","catalogCollection","items","app","_app$catalogCollectio","some","sub","_sub$catalogCollectio","subsub","changeMainCatalog","selected","title","selectedSubCatalog","updatedData","_app$catalogCollectio2","changeSubCatalog","xs","searchString","includes","summary","_app$logo","_app$logo$imageurl","xxl","md","textAlign"],"sourceRoot":""}
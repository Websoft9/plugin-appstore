{"ast":null,"code":"/* eslint-disable consistent-return, jsx-a11y/no-noninteractive-tabindex */\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { exactProp, elementAcceptingRef, unstable_useForkRef as useForkRef, unstable_ownerDocument as ownerDocument } from '@mui/utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n// Inspired by https://github.com/focus-trap/tabbable\nvar candidatesSelector = ['input', 'select', 'textarea', 'a[href]', 'button', '[tabindex]', 'audio[controls]', 'video[controls]', '[contenteditable]:not([contenteditable=\"false\"])'].join(',');\nfunction getTabIndex(node) {\n  var tabindexAttr = parseInt(node.getAttribute('tabindex') || '', 10);\n  if (!Number.isNaN(tabindexAttr)) {\n    return tabindexAttr;\n  }\n\n  // Browsers do not return `tabIndex` correctly for contentEditable nodes;\n  // https://bugs.chromium.org/p/chromium/issues/detail?id=661108&q=contenteditable%20tabindex&can=2\n  // so if they don't have a tabindex attribute specifically set, assume it's 0.\n  // in Chrome, <details/>, <audio controls/> and <video controls/> elements get a default\n  //  `tabIndex` of -1 when the 'tabindex' attribute isn't specified in the DOM,\n  //  yet they are still part of the regular tab order; in FF, they get a default\n  //  `tabIndex` of 0; since Chrome still puts those elements in the regular tab\n  //  order, consider their tab index to be 0.\n  if (node.contentEditable === 'true' || (node.nodeName === 'AUDIO' || node.nodeName === 'VIDEO' || node.nodeName === 'DETAILS') && node.getAttribute('tabindex') === null) {\n    return 0;\n  }\n  return node.tabIndex;\n}\nfunction isNonTabbableRadio(node) {\n  if (node.tagName !== 'INPUT' || node.type !== 'radio') {\n    return false;\n  }\n  if (!node.name) {\n    return false;\n  }\n  var getRadio = function getRadio(selector) {\n    return node.ownerDocument.querySelector(\"input[type=\\\"radio\\\"]\".concat(selector));\n  };\n  var roving = getRadio(\"[name=\\\"\".concat(node.name, \"\\\"]:checked\"));\n  if (!roving) {\n    roving = getRadio(\"[name=\\\"\".concat(node.name, \"\\\"]\"));\n  }\n  return roving !== node;\n}\nfunction isNodeMatchingSelectorFocusable(node) {\n  if (node.disabled || node.tagName === 'INPUT' && node.type === 'hidden' || isNonTabbableRadio(node)) {\n    return false;\n  }\n  return true;\n}\nfunction defaultGetTabbable(root) {\n  var regularTabNodes = [];\n  var orderedTabNodes = [];\n  Array.from(root.querySelectorAll(candidatesSelector)).forEach(function (node, i) {\n    var nodeTabIndex = getTabIndex(node);\n    if (nodeTabIndex === -1 || !isNodeMatchingSelectorFocusable(node)) {\n      return;\n    }\n    if (nodeTabIndex === 0) {\n      regularTabNodes.push(node);\n    } else {\n      orderedTabNodes.push({\n        documentOrder: i,\n        tabIndex: nodeTabIndex,\n        node: node\n      });\n    }\n  });\n  return orderedTabNodes.sort(function (a, b) {\n    return a.tabIndex === b.tabIndex ? a.documentOrder - b.documentOrder : a.tabIndex - b.tabIndex;\n  }).map(function (a) {\n    return a.node;\n  }).concat(regularTabNodes);\n}\nfunction defaultIsEnabled() {\n  return true;\n}\n\n/**\n * Utility component that locks focus inside the component.\n *\n * Demos:\n *\n * - [Focus Trap](https://mui.com/base/react-focus-trap/)\n *\n * API:\n *\n * - [FocusTrap API](https://mui.com/base/react-focus-trap/components-api/#focus-trap)\n */\nfunction FocusTrap(props) {\n  var children = props.children,\n    _props$disableAutoFoc = props.disableAutoFocus,\n    disableAutoFocus = _props$disableAutoFoc === void 0 ? false : _props$disableAutoFoc,\n    _props$disableEnforce = props.disableEnforceFocus,\n    disableEnforceFocus = _props$disableEnforce === void 0 ? false : _props$disableEnforce,\n    _props$disableRestore = props.disableRestoreFocus,\n    disableRestoreFocus = _props$disableRestore === void 0 ? false : _props$disableRestore,\n    _props$getTabbable = props.getTabbable,\n    getTabbable = _props$getTabbable === void 0 ? defaultGetTabbable : _props$getTabbable,\n    _props$isEnabled = props.isEnabled,\n    isEnabled = _props$isEnabled === void 0 ? defaultIsEnabled : _props$isEnabled,\n    open = props.open;\n  var ignoreNextEnforceFocus = React.useRef(false);\n  var sentinelStart = React.useRef(null);\n  var sentinelEnd = React.useRef(null);\n  var nodeToRestore = React.useRef(null);\n  var reactFocusEventTarget = React.useRef(null);\n  // This variable is useful when disableAutoFocus is true.\n  // It waits for the active element to move into the component to activate.\n  var activated = React.useRef(false);\n  var rootRef = React.useRef(null);\n  // @ts-expect-error TODO upstream fix\n  var handleRef = useForkRef(children.ref, rootRef);\n  var lastKeydown = React.useRef(null);\n  React.useEffect(function () {\n    // We might render an empty child.\n    if (!open || !rootRef.current) {\n      return;\n    }\n    activated.current = !disableAutoFocus;\n  }, [disableAutoFocus, open]);\n  React.useEffect(function () {\n    // We might render an empty child.\n    if (!open || !rootRef.current) {\n      return;\n    }\n    var doc = ownerDocument(rootRef.current);\n    if (!rootRef.current.contains(doc.activeElement)) {\n      if (!rootRef.current.hasAttribute('tabIndex')) {\n        if (process.env.NODE_ENV !== 'production') {\n          console.error(['MUI: The modal content node does not accept focus.', 'For the benefit of assistive technologies, ' + 'the tabIndex of the node is being set to \"-1\".'].join('\\n'));\n        }\n        rootRef.current.setAttribute('tabIndex', '-1');\n      }\n      if (activated.current) {\n        rootRef.current.focus();\n      }\n    }\n    return function () {\n      // restoreLastFocus()\n      if (!disableRestoreFocus) {\n        // In IE11 it is possible for document.activeElement to be null resulting\n        // in nodeToRestore.current being null.\n        // Not all elements in IE11 have a focus method.\n        // Once IE11 support is dropped the focus() call can be unconditional.\n        if (nodeToRestore.current && nodeToRestore.current.focus) {\n          ignoreNextEnforceFocus.current = true;\n          nodeToRestore.current.focus();\n        }\n        nodeToRestore.current = null;\n      }\n    };\n    // Missing `disableRestoreFocus` which is fine.\n    // We don't support changing that prop on an open FocusTrap\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [open]);\n  React.useEffect(function () {\n    // We might render an empty child.\n    if (!open || !rootRef.current) {\n      return;\n    }\n    var doc = ownerDocument(rootRef.current);\n    var contain = function contain(nativeEvent) {\n      var rootElement = rootRef.current;\n\n      // Cleanup functions are executed lazily in React 17.\n      // Contain can be called between the component being unmounted and its cleanup function being run.\n      if (rootElement === null) {\n        return;\n      }\n      if (!doc.hasFocus() || disableEnforceFocus || !isEnabled() || ignoreNextEnforceFocus.current) {\n        ignoreNextEnforceFocus.current = false;\n        return;\n      }\n      if (!rootElement.contains(doc.activeElement)) {\n        // if the focus event is not coming from inside the children's react tree, reset the refs\n        if (nativeEvent && reactFocusEventTarget.current !== nativeEvent.target || doc.activeElement !== reactFocusEventTarget.current) {\n          reactFocusEventTarget.current = null;\n        } else if (reactFocusEventTarget.current !== null) {\n          return;\n        }\n        if (!activated.current) {\n          return;\n        }\n        var tabbable = [];\n        if (doc.activeElement === sentinelStart.current || doc.activeElement === sentinelEnd.current) {\n          tabbable = getTabbable(rootRef.current);\n        }\n        if (tabbable.length > 0) {\n          var _lastKeydown$current, _lastKeydown$current2;\n          var isShiftTab = Boolean(((_lastKeydown$current = lastKeydown.current) == null ? void 0 : _lastKeydown$current.shiftKey) && ((_lastKeydown$current2 = lastKeydown.current) == null ? void 0 : _lastKeydown$current2.key) === 'Tab');\n          var focusNext = tabbable[0];\n          var focusPrevious = tabbable[tabbable.length - 1];\n          if (typeof focusNext !== 'string' && typeof focusPrevious !== 'string') {\n            if (isShiftTab) {\n              focusPrevious.focus();\n            } else {\n              focusNext.focus();\n            }\n          }\n        } else {\n          rootElement.focus();\n        }\n      }\n    };\n    var loopFocus = function loopFocus(nativeEvent) {\n      lastKeydown.current = nativeEvent;\n      if (disableEnforceFocus || !isEnabled() || nativeEvent.key !== 'Tab') {\n        return;\n      }\n\n      // Make sure the next tab starts from the right place.\n      // doc.activeElement refers to the origin.\n      if (doc.activeElement === rootRef.current && nativeEvent.shiftKey) {\n        // We need to ignore the next contain as\n        // it will try to move the focus back to the rootRef element.\n        ignoreNextEnforceFocus.current = true;\n        if (sentinelEnd.current) {\n          sentinelEnd.current.focus();\n        }\n      }\n    };\n    doc.addEventListener('focusin', contain);\n    doc.addEventListener('keydown', loopFocus, true);\n\n    // With Edge, Safari and Firefox, no focus related events are fired when the focused area stops being a focused area.\n    // e.g. https://bugzilla.mozilla.org/show_bug.cgi?id=559561.\n    // Instead, we can look if the active element was restored on the BODY element.\n    //\n    // The whatwg spec defines how the browser should behave but does not explicitly mention any events:\n    // https://html.spec.whatwg.org/multipage/interaction.html#focus-fixup-rule.\n    var interval = setInterval(function () {\n      if (doc.activeElement && doc.activeElement.tagName === 'BODY') {\n        contain(null);\n      }\n    }, 50);\n    return function () {\n      clearInterval(interval);\n      doc.removeEventListener('focusin', contain);\n      doc.removeEventListener('keydown', loopFocus, true);\n    };\n  }, [disableAutoFocus, disableEnforceFocus, disableRestoreFocus, isEnabled, open, getTabbable]);\n  var onFocus = function onFocus(event) {\n    if (nodeToRestore.current === null) {\n      nodeToRestore.current = event.relatedTarget;\n    }\n    activated.current = true;\n    reactFocusEventTarget.current = event.target;\n    var childrenPropsHandler = children.props.onFocus;\n    if (childrenPropsHandler) {\n      childrenPropsHandler(event);\n    }\n  };\n  var handleFocusSentinel = function handleFocusSentinel(event) {\n    if (nodeToRestore.current === null) {\n      nodeToRestore.current = event.relatedTarget;\n    }\n    activated.current = true;\n  };\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(\"div\", {\n      tabIndex: open ? 0 : -1,\n      onFocus: handleFocusSentinel,\n      ref: sentinelStart,\n      \"data-testid\": \"sentinelStart\"\n    }), /*#__PURE__*/React.cloneElement(children, {\n      ref: handleRef,\n      onFocus: onFocus\n    }), /*#__PURE__*/_jsx(\"div\", {\n      tabIndex: open ? 0 : -1,\n      onFocus: handleFocusSentinel,\n      ref: sentinelEnd,\n      \"data-testid\": \"sentinelEnd\"\n    })]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? FocusTrap.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * A single child content element.\n   */\n  children: elementAcceptingRef,\n  /**\n   * If `true`, the focus trap will not automatically shift focus to itself when it opens, and\n   * replace it to the last focused element when it closes.\n   * This also works correctly with any focus trap children that have the `disableAutoFocus` prop.\n   *\n   * Generally this should never be set to `true` as it makes the focus trap less\n   * accessible to assistive technologies, like screen readers.\n   * @default false\n   */\n  disableAutoFocus: PropTypes.bool,\n  /**\n   * If `true`, the focus trap will not prevent focus from leaving the focus trap while open.\n   *\n   * Generally this should never be set to `true` as it makes the focus trap less\n   * accessible to assistive technologies, like screen readers.\n   * @default false\n   */\n  disableEnforceFocus: PropTypes.bool,\n  /**\n   * If `true`, the focus trap will not restore focus to previously focused element once\n   * focus trap is hidden or unmounted.\n   * @default false\n   */\n  disableRestoreFocus: PropTypes.bool,\n  /**\n   * Returns an array of ordered tabbable nodes (i.e. in tab order) within the root.\n   * For instance, you can provide the \"tabbable\" npm dependency.\n   * @param {HTMLElement} root\n   */\n  getTabbable: PropTypes.func,\n  /**\n   * This prop extends the `open` prop.\n   * It allows to toggle the open state without having to wait for a rerender when changing the `open` prop.\n   * This prop should be memoized.\n   * It can be used to support multiple focus trap mounted at the same time.\n   * @default function defaultIsEnabled(): boolean {\n   *   return true;\n   * }\n   */\n  isEnabled: PropTypes.func,\n  /**\n   * If `true`, focus is locked.\n   */\n  open: PropTypes.bool.isRequired\n} : void 0;\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line\n  FocusTrap['propTypes' + ''] = exactProp(FocusTrap.propTypes);\n}\nexport default FocusTrap;","map":{"version":3,"names":["React","PropTypes","exactProp","elementAcceptingRef","unstable_useForkRef","useForkRef","unstable_ownerDocument","ownerDocument","jsx","_jsx","jsxs","_jsxs","candidatesSelector","join","getTabIndex","node","tabindexAttr","parseInt","getAttribute","Number","isNaN","contentEditable","nodeName","tabIndex","isNonTabbableRadio","tagName","type","name","getRadio","selector","querySelector","concat","roving","isNodeMatchingSelectorFocusable","disabled","defaultGetTabbable","root","regularTabNodes","orderedTabNodes","Array","from","querySelectorAll","forEach","i","nodeTabIndex","push","documentOrder","sort","a","b","map","defaultIsEnabled","FocusTrap","props","children","_props$disableAutoFoc","disableAutoFocus","_props$disableEnforce","disableEnforceFocus","_props$disableRestore","disableRestoreFocus","_props$getTabbable","getTabbable","_props$isEnabled","isEnabled","open","ignoreNextEnforceFocus","useRef","sentinelStart","sentinelEnd","nodeToRestore","reactFocusEventTarget","activated","rootRef","handleRef","ref","lastKeydown","useEffect","current","doc","contains","activeElement","hasAttribute","process","env","NODE_ENV","console","error","setAttribute","focus","contain","nativeEvent","rootElement","hasFocus","target","tabbable","length","_lastKeydown$current","_lastKeydown$current2","isShiftTab","Boolean","shiftKey","key","focusNext","focusPrevious","loopFocus","addEventListener","interval","setInterval","clearInterval","removeEventListener","onFocus","event","relatedTarget","childrenPropsHandler","handleFocusSentinel","Fragment","cloneElement","propTypes","bool","func","isRequired"],"sources":["/data/stackhub-web/plugins/myapps/node_modules/@mui/base/FocusTrap/FocusTrap.js"],"sourcesContent":["/* eslint-disable consistent-return, jsx-a11y/no-noninteractive-tabindex */\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { exactProp, elementAcceptingRef, unstable_useForkRef as useForkRef, unstable_ownerDocument as ownerDocument } from '@mui/utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n// Inspired by https://github.com/focus-trap/tabbable\nconst candidatesSelector = ['input', 'select', 'textarea', 'a[href]', 'button', '[tabindex]', 'audio[controls]', 'video[controls]', '[contenteditable]:not([contenteditable=\"false\"])'].join(',');\nfunction getTabIndex(node) {\n  const tabindexAttr = parseInt(node.getAttribute('tabindex') || '', 10);\n  if (!Number.isNaN(tabindexAttr)) {\n    return tabindexAttr;\n  }\n\n  // Browsers do not return `tabIndex` correctly for contentEditable nodes;\n  // https://bugs.chromium.org/p/chromium/issues/detail?id=661108&q=contenteditable%20tabindex&can=2\n  // so if they don't have a tabindex attribute specifically set, assume it's 0.\n  // in Chrome, <details/>, <audio controls/> and <video controls/> elements get a default\n  //  `tabIndex` of -1 when the 'tabindex' attribute isn't specified in the DOM,\n  //  yet they are still part of the regular tab order; in FF, they get a default\n  //  `tabIndex` of 0; since Chrome still puts those elements in the regular tab\n  //  order, consider their tab index to be 0.\n  if (node.contentEditable === 'true' || (node.nodeName === 'AUDIO' || node.nodeName === 'VIDEO' || node.nodeName === 'DETAILS') && node.getAttribute('tabindex') === null) {\n    return 0;\n  }\n  return node.tabIndex;\n}\nfunction isNonTabbableRadio(node) {\n  if (node.tagName !== 'INPUT' || node.type !== 'radio') {\n    return false;\n  }\n  if (!node.name) {\n    return false;\n  }\n  const getRadio = selector => node.ownerDocument.querySelector(`input[type=\"radio\"]${selector}`);\n  let roving = getRadio(`[name=\"${node.name}\"]:checked`);\n  if (!roving) {\n    roving = getRadio(`[name=\"${node.name}\"]`);\n  }\n  return roving !== node;\n}\nfunction isNodeMatchingSelectorFocusable(node) {\n  if (node.disabled || node.tagName === 'INPUT' && node.type === 'hidden' || isNonTabbableRadio(node)) {\n    return false;\n  }\n  return true;\n}\nfunction defaultGetTabbable(root) {\n  const regularTabNodes = [];\n  const orderedTabNodes = [];\n  Array.from(root.querySelectorAll(candidatesSelector)).forEach((node, i) => {\n    const nodeTabIndex = getTabIndex(node);\n    if (nodeTabIndex === -1 || !isNodeMatchingSelectorFocusable(node)) {\n      return;\n    }\n    if (nodeTabIndex === 0) {\n      regularTabNodes.push(node);\n    } else {\n      orderedTabNodes.push({\n        documentOrder: i,\n        tabIndex: nodeTabIndex,\n        node: node\n      });\n    }\n  });\n  return orderedTabNodes.sort((a, b) => a.tabIndex === b.tabIndex ? a.documentOrder - b.documentOrder : a.tabIndex - b.tabIndex).map(a => a.node).concat(regularTabNodes);\n}\nfunction defaultIsEnabled() {\n  return true;\n}\n\n/**\n * Utility component that locks focus inside the component.\n *\n * Demos:\n *\n * - [Focus Trap](https://mui.com/base/react-focus-trap/)\n *\n * API:\n *\n * - [FocusTrap API](https://mui.com/base/react-focus-trap/components-api/#focus-trap)\n */\nfunction FocusTrap(props) {\n  const {\n    children,\n    disableAutoFocus = false,\n    disableEnforceFocus = false,\n    disableRestoreFocus = false,\n    getTabbable = defaultGetTabbable,\n    isEnabled = defaultIsEnabled,\n    open\n  } = props;\n  const ignoreNextEnforceFocus = React.useRef(false);\n  const sentinelStart = React.useRef(null);\n  const sentinelEnd = React.useRef(null);\n  const nodeToRestore = React.useRef(null);\n  const reactFocusEventTarget = React.useRef(null);\n  // This variable is useful when disableAutoFocus is true.\n  // It waits for the active element to move into the component to activate.\n  const activated = React.useRef(false);\n  const rootRef = React.useRef(null);\n  // @ts-expect-error TODO upstream fix\n  const handleRef = useForkRef(children.ref, rootRef);\n  const lastKeydown = React.useRef(null);\n  React.useEffect(() => {\n    // We might render an empty child.\n    if (!open || !rootRef.current) {\n      return;\n    }\n    activated.current = !disableAutoFocus;\n  }, [disableAutoFocus, open]);\n  React.useEffect(() => {\n    // We might render an empty child.\n    if (!open || !rootRef.current) {\n      return;\n    }\n    const doc = ownerDocument(rootRef.current);\n    if (!rootRef.current.contains(doc.activeElement)) {\n      if (!rootRef.current.hasAttribute('tabIndex')) {\n        if (process.env.NODE_ENV !== 'production') {\n          console.error(['MUI: The modal content node does not accept focus.', 'For the benefit of assistive technologies, ' + 'the tabIndex of the node is being set to \"-1\".'].join('\\n'));\n        }\n        rootRef.current.setAttribute('tabIndex', '-1');\n      }\n      if (activated.current) {\n        rootRef.current.focus();\n      }\n    }\n    return () => {\n      // restoreLastFocus()\n      if (!disableRestoreFocus) {\n        // In IE11 it is possible for document.activeElement to be null resulting\n        // in nodeToRestore.current being null.\n        // Not all elements in IE11 have a focus method.\n        // Once IE11 support is dropped the focus() call can be unconditional.\n        if (nodeToRestore.current && nodeToRestore.current.focus) {\n          ignoreNextEnforceFocus.current = true;\n          nodeToRestore.current.focus();\n        }\n        nodeToRestore.current = null;\n      }\n    };\n    // Missing `disableRestoreFocus` which is fine.\n    // We don't support changing that prop on an open FocusTrap\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [open]);\n  React.useEffect(() => {\n    // We might render an empty child.\n    if (!open || !rootRef.current) {\n      return;\n    }\n    const doc = ownerDocument(rootRef.current);\n    const contain = nativeEvent => {\n      const {\n        current: rootElement\n      } = rootRef;\n\n      // Cleanup functions are executed lazily in React 17.\n      // Contain can be called between the component being unmounted and its cleanup function being run.\n      if (rootElement === null) {\n        return;\n      }\n      if (!doc.hasFocus() || disableEnforceFocus || !isEnabled() || ignoreNextEnforceFocus.current) {\n        ignoreNextEnforceFocus.current = false;\n        return;\n      }\n      if (!rootElement.contains(doc.activeElement)) {\n        // if the focus event is not coming from inside the children's react tree, reset the refs\n        if (nativeEvent && reactFocusEventTarget.current !== nativeEvent.target || doc.activeElement !== reactFocusEventTarget.current) {\n          reactFocusEventTarget.current = null;\n        } else if (reactFocusEventTarget.current !== null) {\n          return;\n        }\n        if (!activated.current) {\n          return;\n        }\n        let tabbable = [];\n        if (doc.activeElement === sentinelStart.current || doc.activeElement === sentinelEnd.current) {\n          tabbable = getTabbable(rootRef.current);\n        }\n        if (tabbable.length > 0) {\n          var _lastKeydown$current, _lastKeydown$current2;\n          const isShiftTab = Boolean(((_lastKeydown$current = lastKeydown.current) == null ? void 0 : _lastKeydown$current.shiftKey) && ((_lastKeydown$current2 = lastKeydown.current) == null ? void 0 : _lastKeydown$current2.key) === 'Tab');\n          const focusNext = tabbable[0];\n          const focusPrevious = tabbable[tabbable.length - 1];\n          if (typeof focusNext !== 'string' && typeof focusPrevious !== 'string') {\n            if (isShiftTab) {\n              focusPrevious.focus();\n            } else {\n              focusNext.focus();\n            }\n          }\n        } else {\n          rootElement.focus();\n        }\n      }\n    };\n    const loopFocus = nativeEvent => {\n      lastKeydown.current = nativeEvent;\n      if (disableEnforceFocus || !isEnabled() || nativeEvent.key !== 'Tab') {\n        return;\n      }\n\n      // Make sure the next tab starts from the right place.\n      // doc.activeElement refers to the origin.\n      if (doc.activeElement === rootRef.current && nativeEvent.shiftKey) {\n        // We need to ignore the next contain as\n        // it will try to move the focus back to the rootRef element.\n        ignoreNextEnforceFocus.current = true;\n        if (sentinelEnd.current) {\n          sentinelEnd.current.focus();\n        }\n      }\n    };\n    doc.addEventListener('focusin', contain);\n    doc.addEventListener('keydown', loopFocus, true);\n\n    // With Edge, Safari and Firefox, no focus related events are fired when the focused area stops being a focused area.\n    // e.g. https://bugzilla.mozilla.org/show_bug.cgi?id=559561.\n    // Instead, we can look if the active element was restored on the BODY element.\n    //\n    // The whatwg spec defines how the browser should behave but does not explicitly mention any events:\n    // https://html.spec.whatwg.org/multipage/interaction.html#focus-fixup-rule.\n    const interval = setInterval(() => {\n      if (doc.activeElement && doc.activeElement.tagName === 'BODY') {\n        contain(null);\n      }\n    }, 50);\n    return () => {\n      clearInterval(interval);\n      doc.removeEventListener('focusin', contain);\n      doc.removeEventListener('keydown', loopFocus, true);\n    };\n  }, [disableAutoFocus, disableEnforceFocus, disableRestoreFocus, isEnabled, open, getTabbable]);\n  const onFocus = event => {\n    if (nodeToRestore.current === null) {\n      nodeToRestore.current = event.relatedTarget;\n    }\n    activated.current = true;\n    reactFocusEventTarget.current = event.target;\n    const childrenPropsHandler = children.props.onFocus;\n    if (childrenPropsHandler) {\n      childrenPropsHandler(event);\n    }\n  };\n  const handleFocusSentinel = event => {\n    if (nodeToRestore.current === null) {\n      nodeToRestore.current = event.relatedTarget;\n    }\n    activated.current = true;\n  };\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(\"div\", {\n      tabIndex: open ? 0 : -1,\n      onFocus: handleFocusSentinel,\n      ref: sentinelStart,\n      \"data-testid\": \"sentinelStart\"\n    }), /*#__PURE__*/React.cloneElement(children, {\n      ref: handleRef,\n      onFocus\n    }), /*#__PURE__*/_jsx(\"div\", {\n      tabIndex: open ? 0 : -1,\n      onFocus: handleFocusSentinel,\n      ref: sentinelEnd,\n      \"data-testid\": \"sentinelEnd\"\n    })]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? FocusTrap.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * A single child content element.\n   */\n  children: elementAcceptingRef,\n  /**\n   * If `true`, the focus trap will not automatically shift focus to itself when it opens, and\n   * replace it to the last focused element when it closes.\n   * This also works correctly with any focus trap children that have the `disableAutoFocus` prop.\n   *\n   * Generally this should never be set to `true` as it makes the focus trap less\n   * accessible to assistive technologies, like screen readers.\n   * @default false\n   */\n  disableAutoFocus: PropTypes.bool,\n  /**\n   * If `true`, the focus trap will not prevent focus from leaving the focus trap while open.\n   *\n   * Generally this should never be set to `true` as it makes the focus trap less\n   * accessible to assistive technologies, like screen readers.\n   * @default false\n   */\n  disableEnforceFocus: PropTypes.bool,\n  /**\n   * If `true`, the focus trap will not restore focus to previously focused element once\n   * focus trap is hidden or unmounted.\n   * @default false\n   */\n  disableRestoreFocus: PropTypes.bool,\n  /**\n   * Returns an array of ordered tabbable nodes (i.e. in tab order) within the root.\n   * For instance, you can provide the \"tabbable\" npm dependency.\n   * @param {HTMLElement} root\n   */\n  getTabbable: PropTypes.func,\n  /**\n   * This prop extends the `open` prop.\n   * It allows to toggle the open state without having to wait for a rerender when changing the `open` prop.\n   * This prop should be memoized.\n   * It can be used to support multiple focus trap mounted at the same time.\n   * @default function defaultIsEnabled(): boolean {\n   *   return true;\n   * }\n   */\n  isEnabled: PropTypes.func,\n  /**\n   * If `true`, focus is locked.\n   */\n  open: PropTypes.bool.isRequired\n} : void 0;\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line\n  FocusTrap['propTypes' + ''] = exactProp(FocusTrap.propTypes);\n}\nexport default FocusTrap;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
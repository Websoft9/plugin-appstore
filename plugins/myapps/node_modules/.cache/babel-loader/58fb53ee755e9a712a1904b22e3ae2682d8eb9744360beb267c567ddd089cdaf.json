{"ast":null,"code":"import _defineProperty from \"/data/stackhub-web/plugins/myapps/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _slicedToArray from \"/data/stackhub-web/plugins/myapps/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport { formatMuiErrorMessage as _formatMuiErrorMessage } from \"@mui/utils\";\nvar _excluded = [\"colorSchemes\", \"components\", \"generateCssVars\", \"cssVarPrefix\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { deepmerge } from '@mui/utils';\nimport { GlobalStyles } from '@mui/styled-engine';\nimport { useTheme as muiUseTheme } from '@mui/private-theming';\nimport ThemeProvider from '../ThemeProvider';\nimport systemGetInitColorSchemeScript, { DEFAULT_ATTRIBUTE, DEFAULT_COLOR_SCHEME_STORAGE_KEY, DEFAULT_MODE_STORAGE_KEY } from './getInitColorSchemeScript';\nimport useCurrentColorScheme from './useCurrentColorScheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var DISABLE_CSS_TRANSITION = '*{-webkit-transition:none!important;-moz-transition:none!important;-o-transition:none!important;-ms-transition:none!important;transition:none!important}';\nexport default function createCssVarsProvider(options) {\n  var themeId = options.themeId,\n    _options$theme = options.theme,\n    defaultTheme = _options$theme === void 0 ? {} : _options$theme,\n    _options$attribute = options.attribute,\n    defaultAttribute = _options$attribute === void 0 ? DEFAULT_ATTRIBUTE : _options$attribute,\n    _options$modeStorageK = options.modeStorageKey,\n    defaultModeStorageKey = _options$modeStorageK === void 0 ? DEFAULT_MODE_STORAGE_KEY : _options$modeStorageK,\n    _options$colorSchemeS = options.colorSchemeStorageKey,\n    defaultColorSchemeStorageKey = _options$colorSchemeS === void 0 ? DEFAULT_COLOR_SCHEME_STORAGE_KEY : _options$colorSchemeS,\n    _options$defaultMode = options.defaultMode,\n    designSystemMode = _options$defaultMode === void 0 ? 'light' : _options$defaultMode,\n    designSystemColorScheme = options.defaultColorScheme,\n    _options$disableTrans = options.disableTransitionOnChange,\n    designSystemTransitionOnChange = _options$disableTrans === void 0 ? false : _options$disableTrans,\n    resolveTheme = options.resolveTheme,\n    excludeVariablesFromRoot = options.excludeVariablesFromRoot;\n  if (!defaultTheme.colorSchemes || typeof designSystemColorScheme === 'string' && !defaultTheme.colorSchemes[designSystemColorScheme] || typeof designSystemColorScheme === 'object' && !defaultTheme.colorSchemes[designSystemColorScheme == null ? void 0 : designSystemColorScheme.light] || typeof designSystemColorScheme === 'object' && !defaultTheme.colorSchemes[designSystemColorScheme == null ? void 0 : designSystemColorScheme.dark]) {\n    console.error(\"MUI: `\".concat(designSystemColorScheme, \"` does not exist in `theme.colorSchemes`.\"));\n  }\n  var ColorSchemeContext = /*#__PURE__*/React.createContext(undefined);\n  var useColorScheme = function useColorScheme() {\n    var value = React.useContext(ColorSchemeContext);\n    if (!value) {\n      throw new Error(process.env.NODE_ENV !== \"production\" ? \"MUI: `useColorScheme` must be called under <CssVarsProvider />\" : _formatMuiErrorMessage(19));\n    }\n    return value;\n  };\n  function CssVarsProvider(_ref2) {\n    var children = _ref2.children,\n      _ref2$theme = _ref2.theme,\n      themeProp = _ref2$theme === void 0 ? defaultTheme : _ref2$theme,\n      _ref2$modeStorageKey = _ref2.modeStorageKey,\n      modeStorageKey = _ref2$modeStorageKey === void 0 ? defaultModeStorageKey : _ref2$modeStorageKey,\n      _ref2$colorSchemeStor = _ref2.colorSchemeStorageKey,\n      colorSchemeStorageKey = _ref2$colorSchemeStor === void 0 ? defaultColorSchemeStorageKey : _ref2$colorSchemeStor,\n      _ref2$attribute = _ref2.attribute,\n      attribute = _ref2$attribute === void 0 ? defaultAttribute : _ref2$attribute,\n      _ref2$defaultMode = _ref2.defaultMode,\n      defaultMode = _ref2$defaultMode === void 0 ? designSystemMode : _ref2$defaultMode,\n      _ref2$defaultColorSch = _ref2.defaultColorScheme,\n      defaultColorScheme = _ref2$defaultColorSch === void 0 ? designSystemColorScheme : _ref2$defaultColorSch,\n      _ref2$disableTransiti = _ref2.disableTransitionOnChange,\n      disableTransitionOnChange = _ref2$disableTransiti === void 0 ? designSystemTransitionOnChange : _ref2$disableTransiti,\n      _ref2$storageWindow = _ref2.storageWindow,\n      storageWindow = _ref2$storageWindow === void 0 ? typeof window === 'undefined' ? undefined : window : _ref2$storageWindow,\n      _ref2$documentNode = _ref2.documentNode,\n      documentNode = _ref2$documentNode === void 0 ? typeof document === 'undefined' ? undefined : document : _ref2$documentNode,\n      _ref2$colorSchemeNode = _ref2.colorSchemeNode,\n      colorSchemeNode = _ref2$colorSchemeNode === void 0 ? typeof document === 'undefined' ? undefined : document.documentElement : _ref2$colorSchemeNode,\n      _ref2$colorSchemeSele = _ref2.colorSchemeSelector,\n      colorSchemeSelector = _ref2$colorSchemeSele === void 0 ? ':root' : _ref2$colorSchemeSele,\n      _ref2$disableNestedCo = _ref2.disableNestedContext,\n      disableNestedContext = _ref2$disableNestedCo === void 0 ? false : _ref2$disableNestedCo,\n      _ref2$disableStyleShe = _ref2.disableStyleSheetGeneration,\n      disableStyleSheetGeneration = _ref2$disableStyleShe === void 0 ? false : _ref2$disableStyleShe;\n    var hasMounted = React.useRef(false);\n    var upperTheme = muiUseTheme();\n    var ctx = React.useContext(ColorSchemeContext);\n    var nested = !!ctx && !disableNestedContext;\n    var scopedTheme = themeProp[themeId];\n    var _ref = scopedTheme || themeProp,\n      _ref$colorSchemes = _ref.colorSchemes,\n      colorSchemes = _ref$colorSchemes === void 0 ? {} : _ref$colorSchemes,\n      _ref$components = _ref.components,\n      components = _ref$components === void 0 ? {} : _ref$components,\n      _ref$generateCssVars = _ref.generateCssVars,\n      generateCssVars = _ref$generateCssVars === void 0 ? function () {\n        return {\n          vars: {},\n          css: {}\n        };\n      } : _ref$generateCssVars,\n      cssVarPrefix = _ref.cssVarPrefix,\n      restThemeProp = _objectWithoutPropertiesLoose(_ref, _excluded);\n    var allColorSchemes = Object.keys(colorSchemes);\n    var defaultLightColorScheme = typeof defaultColorScheme === 'string' ? defaultColorScheme : defaultColorScheme.light;\n    var defaultDarkColorScheme = typeof defaultColorScheme === 'string' ? defaultColorScheme : defaultColorScheme.dark;\n\n    // 1. Get the data about the `mode`, `colorScheme`, and setter functions.\n    var _useCurrentColorSchem = useCurrentColorScheme({\n        supportedColorSchemes: allColorSchemes,\n        defaultLightColorScheme: defaultLightColorScheme,\n        defaultDarkColorScheme: defaultDarkColorScheme,\n        modeStorageKey: modeStorageKey,\n        colorSchemeStorageKey: colorSchemeStorageKey,\n        defaultMode: defaultMode,\n        storageWindow: storageWindow\n      }),\n      stateMode = _useCurrentColorSchem.mode,\n      setMode = _useCurrentColorSchem.setMode,\n      systemMode = _useCurrentColorSchem.systemMode,\n      lightColorScheme = _useCurrentColorSchem.lightColorScheme,\n      darkColorScheme = _useCurrentColorSchem.darkColorScheme,\n      stateColorScheme = _useCurrentColorSchem.colorScheme,\n      setColorScheme = _useCurrentColorSchem.setColorScheme;\n    var mode = stateMode;\n    var colorScheme = stateColorScheme;\n    if (nested) {\n      mode = ctx.mode;\n      colorScheme = ctx.colorScheme;\n    }\n    var calculatedMode = function () {\n      if (mode) {\n        return mode;\n      }\n      // This scope occurs on the server\n      if (defaultMode === 'system') {\n        return designSystemMode;\n      }\n      return defaultMode;\n    }();\n    var calculatedColorScheme = function () {\n      if (!colorScheme) {\n        // This scope occurs on the server\n        if (calculatedMode === 'dark') {\n          return defaultDarkColorScheme;\n        }\n        // use light color scheme, if default mode is 'light' | 'system'\n        return defaultLightColorScheme;\n      }\n      return colorScheme;\n    }();\n\n    // 2. Create CSS variables and store them in objects (to be generated in stylesheets in the final step)\n    var _generateCssVars = generateCssVars(),\n      rootCss = _generateCssVars.css,\n      rootVars = _generateCssVars.vars;\n\n    // 3. Start composing the theme object\n    var theme = _extends({}, restThemeProp, {\n      components: components,\n      colorSchemes: colorSchemes,\n      cssVarPrefix: cssVarPrefix,\n      vars: rootVars,\n      getColorSchemeSelector: function getColorSchemeSelector(targetColorScheme) {\n        return \"[\".concat(attribute, \"=\\\"\").concat(targetColorScheme, \"\\\"] &\");\n      }\n    });\n\n    // 4. Create color CSS variables and store them in objects (to be generated in stylesheets in the final step)\n    //    The default color scheme stylesheet is constructed to have the least CSS specificity.\n    //    The other color schemes uses selector, default as data attribute, to increase the CSS specificity so that they can override the default color scheme stylesheet.\n    var defaultColorSchemeStyleSheet = {};\n    var otherColorSchemesStyleSheet = {};\n    Object.entries(colorSchemes).forEach(function (_ref3) {\n      var _ref4 = _slicedToArray(_ref3, 2),\n        key = _ref4[0],\n        scheme = _ref4[1];\n      var _generateCssVars2 = generateCssVars(key),\n        css = _generateCssVars2.css,\n        vars = _generateCssVars2.vars;\n      theme.vars = deepmerge(theme.vars, vars);\n      if (key === calculatedColorScheme) {\n        // 4.1 Merge the selected color scheme to the theme\n        Object.keys(scheme).forEach(function (schemeKey) {\n          if (scheme[schemeKey] && typeof scheme[schemeKey] === 'object') {\n            // shallow merge the 1st level structure of the theme.\n            theme[schemeKey] = _extends({}, theme[schemeKey], scheme[schemeKey]);\n          } else {\n            theme[schemeKey] = scheme[schemeKey];\n          }\n        });\n        if (theme.palette) {\n          theme.palette.colorScheme = key;\n        }\n      }\n      var resolvedDefaultColorScheme = function () {\n        if (typeof defaultColorScheme === 'string') {\n          return defaultColorScheme;\n        }\n        if (defaultMode === 'dark') {\n          return defaultColorScheme.dark;\n        }\n        return defaultColorScheme.light;\n      }();\n      if (key === resolvedDefaultColorScheme) {\n        if (excludeVariablesFromRoot) {\n          var excludedVariables = {};\n          excludeVariablesFromRoot(cssVarPrefix).forEach(function (cssVar) {\n            excludedVariables[cssVar] = css[cssVar];\n            delete css[cssVar];\n          });\n          defaultColorSchemeStyleSheet[\"[\".concat(attribute, \"=\\\"\").concat(key, \"\\\"]\")] = excludedVariables;\n        }\n        defaultColorSchemeStyleSheet[\"\".concat(colorSchemeSelector, \", [\").concat(attribute, \"=\\\"\").concat(key, \"\\\"]\")] = css;\n      } else {\n        otherColorSchemesStyleSheet[\"\".concat(colorSchemeSelector === ':root' ? '' : colorSchemeSelector, \"[\").concat(attribute, \"=\\\"\").concat(key, \"\\\"]\")] = css;\n      }\n    });\n    theme.vars = deepmerge(theme.vars, rootVars);\n\n    // 5. Declaring effects\n    // 5.1 Updates the selector value to use the current color scheme which tells CSS to use the proper stylesheet.\n    React.useEffect(function () {\n      if (colorScheme && colorSchemeNode) {\n        // attaches attribute to <html> because the css variables are attached to :root (html)\n        colorSchemeNode.setAttribute(attribute, colorScheme);\n      }\n    }, [colorScheme, attribute, colorSchemeNode]);\n\n    // 5.2 Remove the CSS transition when color scheme changes to create instant experience.\n    // credit: https://github.com/pacocoursey/next-themes/blob/b5c2bad50de2d61ad7b52a9c5cdc801a78507d7a/index.tsx#L313\n    React.useEffect(function () {\n      var timer;\n      if (disableTransitionOnChange && hasMounted.current && documentNode) {\n        var css = documentNode.createElement('style');\n        css.appendChild(documentNode.createTextNode(DISABLE_CSS_TRANSITION));\n        documentNode.head.appendChild(css);\n\n        // Force browser repaint\n        (function () {\n          return window.getComputedStyle(documentNode.body);\n        })();\n        timer = setTimeout(function () {\n          documentNode.head.removeChild(css);\n        }, 1);\n      }\n      return function () {\n        clearTimeout(timer);\n      };\n    }, [colorScheme, disableTransitionOnChange, documentNode]);\n    React.useEffect(function () {\n      hasMounted.current = true;\n      return function () {\n        hasMounted.current = false;\n      };\n    }, []);\n    var contextValue = React.useMemo(function () {\n      return {\n        mode: mode,\n        systemMode: systemMode,\n        setMode: setMode,\n        lightColorScheme: lightColorScheme,\n        darkColorScheme: darkColorScheme,\n        colorScheme: colorScheme,\n        setColorScheme: setColorScheme,\n        allColorSchemes: allColorSchemes\n      };\n    }, [allColorSchemes, colorScheme, darkColorScheme, lightColorScheme, mode, setColorScheme, setMode, systemMode]);\n    var shouldGenerateStyleSheet = true;\n    if (disableStyleSheetGeneration || nested && (upperTheme == null ? void 0 : upperTheme.cssVarPrefix) === cssVarPrefix) {\n      shouldGenerateStyleSheet = false;\n    }\n    var element = /*#__PURE__*/_jsxs(React.Fragment, {\n      children: [shouldGenerateStyleSheet && /*#__PURE__*/_jsxs(React.Fragment, {\n        children: [/*#__PURE__*/_jsx(GlobalStyles, {\n          styles: _defineProperty({}, colorSchemeSelector, rootCss)\n        }), /*#__PURE__*/_jsx(GlobalStyles, {\n          styles: defaultColorSchemeStyleSheet\n        }), /*#__PURE__*/_jsx(GlobalStyles, {\n          styles: otherColorSchemesStyleSheet\n        })]\n      }), /*#__PURE__*/_jsx(ThemeProvider, {\n        themeId: scopedTheme ? themeId : undefined,\n        theme: resolveTheme ? resolveTheme(theme) : theme,\n        children: children\n      })]\n    });\n    if (nested) {\n      return element;\n    }\n    return /*#__PURE__*/_jsx(ColorSchemeContext.Provider, {\n      value: contextValue,\n      children: element\n    });\n  }\n  process.env.NODE_ENV !== \"production\" ? CssVarsProvider.propTypes = {\n    /**\n     * The body attribute name to attach colorScheme.\n     */\n    attribute: PropTypes.string,\n    /**\n     * The component tree.\n     */\n    children: PropTypes.node,\n    /**\n     * The node used to attach the color-scheme attribute\n     */\n    colorSchemeNode: PropTypes.any,\n    /**\n     * The CSS selector for attaching the generated custom properties\n     */\n    colorSchemeSelector: PropTypes.string,\n    /**\n     * localStorage key used to store `colorScheme`\n     */\n    colorSchemeStorageKey: PropTypes.string,\n    /**\n     * The initial color scheme used.\n     */\n    defaultColorScheme: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n    /**\n     * The initial mode used.\n     */\n    defaultMode: PropTypes.string,\n    /**\n     * If `true`, the provider creates its own context and generate stylesheet as if it is a root `CssVarsProvider`.\n     */\n    disableNestedContext: PropTypes.bool,\n    /**\n     * If `true`, the style sheet won't be generated.\n     *\n     * This is useful for controlling nested CssVarsProvider behavior.\n     */\n    disableStyleSheetGeneration: PropTypes.bool,\n    /**\n     * Disable CSS transitions when switching between modes or color schemes\n     */\n    disableTransitionOnChange: PropTypes.bool,\n    /**\n     * The document to attach the attribute to\n     */\n    documentNode: PropTypes.any,\n    /**\n     * The key in the local storage used to store current color scheme.\n     */\n    modeStorageKey: PropTypes.string,\n    /**\n     * The window that attaches the 'storage' event listener\n     * @default window\n     */\n    storageWindow: PropTypes.any,\n    /**\n     * The calculated theme object that will be passed through context.\n     */\n    theme: PropTypes.object\n  } : void 0;\n  var defaultLightColorScheme = typeof designSystemColorScheme === 'string' ? designSystemColorScheme : designSystemColorScheme.light;\n  var defaultDarkColorScheme = typeof designSystemColorScheme === 'string' ? designSystemColorScheme : designSystemColorScheme.dark;\n  var getInitColorSchemeScript = function getInitColorSchemeScript(params) {\n    return systemGetInitColorSchemeScript(_extends({\n      attribute: defaultAttribute,\n      colorSchemeStorageKey: defaultColorSchemeStorageKey,\n      defaultMode: designSystemMode,\n      defaultLightColorScheme: defaultLightColorScheme,\n      defaultDarkColorScheme: defaultDarkColorScheme,\n      modeStorageKey: defaultModeStorageKey\n    }, params));\n  };\n  return {\n    CssVarsProvider: CssVarsProvider,\n    useColorScheme: useColorScheme,\n    getInitColorSchemeScript: getInitColorSchemeScript\n  };\n}","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","formatMuiErrorMessage","_formatMuiErrorMessage","_excluded","React","PropTypes","deepmerge","GlobalStyles","useTheme","muiUseTheme","ThemeProvider","systemGetInitColorSchemeScript","DEFAULT_ATTRIBUTE","DEFAULT_COLOR_SCHEME_STORAGE_KEY","DEFAULT_MODE_STORAGE_KEY","useCurrentColorScheme","jsx","_jsx","jsxs","_jsxs","DISABLE_CSS_TRANSITION","createCssVarsProvider","options","themeId","_options$theme","theme","defaultTheme","_options$attribute","attribute","defaultAttribute","_options$modeStorageK","modeStorageKey","defaultModeStorageKey","_options$colorSchemeS","colorSchemeStorageKey","defaultColorSchemeStorageKey","_options$defaultMode","defaultMode","designSystemMode","designSystemColorScheme","defaultColorScheme","_options$disableTrans","disableTransitionOnChange","designSystemTransitionOnChange","resolveTheme","excludeVariablesFromRoot","colorSchemes","light","dark","console","error","concat","ColorSchemeContext","createContext","undefined","useColorScheme","value","useContext","Error","process","env","NODE_ENV","CssVarsProvider","_ref2","children","_ref2$theme","themeProp","_ref2$modeStorageKey","_ref2$colorSchemeStor","_ref2$attribute","_ref2$defaultMode","_ref2$defaultColorSch","_ref2$disableTransiti","_ref2$storageWindow","storageWindow","window","_ref2$documentNode","documentNode","document","_ref2$colorSchemeNode","colorSchemeNode","documentElement","_ref2$colorSchemeSele","colorSchemeSelector","_ref2$disableNestedCo","disableNestedContext","_ref2$disableStyleShe","disableStyleSheetGeneration","hasMounted","useRef","upperTheme","ctx","nested","scopedTheme","_ref","_ref$colorSchemes","_ref$components","components","_ref$generateCssVars","generateCssVars","vars","css","cssVarPrefix","restThemeProp","allColorSchemes","Object","keys","defaultLightColorScheme","defaultDarkColorScheme","_useCurrentColorSchem","supportedColorSchemes","stateMode","mode","setMode","systemMode","lightColorScheme","darkColorScheme","stateColorScheme","colorScheme","setColorScheme","calculatedMode","calculatedColorScheme","_generateCssVars","rootCss","rootVars","getColorSchemeSelector","targetColorScheme","defaultColorSchemeStyleSheet","otherColorSchemesStyleSheet","entries","forEach","_ref3","_ref4","_slicedToArray","key","scheme","_generateCssVars2","schemeKey","palette","resolvedDefaultColorScheme","excludedVariables","cssVar","useEffect","setAttribute","timer","current","createElement","appendChild","createTextNode","head","getComputedStyle","body","setTimeout","removeChild","clearTimeout","contextValue","useMemo","shouldGenerateStyleSheet","element","Fragment","styles","_defineProperty","Provider","propTypes","string","node","any","oneOfType","object","bool","getInitColorSchemeScript","params"],"sources":["/data/stackhub-web/plugins/myapps/node_modules/@mui/system/esm/cssVars/createCssVarsProvider.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport { formatMuiErrorMessage as _formatMuiErrorMessage } from \"@mui/utils\";\nconst _excluded = [\"colorSchemes\", \"components\", \"generateCssVars\", \"cssVarPrefix\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { deepmerge } from '@mui/utils';\nimport { GlobalStyles } from '@mui/styled-engine';\nimport { useTheme as muiUseTheme } from '@mui/private-theming';\nimport ThemeProvider from '../ThemeProvider';\nimport systemGetInitColorSchemeScript, { DEFAULT_ATTRIBUTE, DEFAULT_COLOR_SCHEME_STORAGE_KEY, DEFAULT_MODE_STORAGE_KEY } from './getInitColorSchemeScript';\nimport useCurrentColorScheme from './useCurrentColorScheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const DISABLE_CSS_TRANSITION = '*{-webkit-transition:none!important;-moz-transition:none!important;-o-transition:none!important;-ms-transition:none!important;transition:none!important}';\nexport default function createCssVarsProvider(options) {\n  const {\n    themeId,\n    theme: defaultTheme = {},\n    attribute: defaultAttribute = DEFAULT_ATTRIBUTE,\n    modeStorageKey: defaultModeStorageKey = DEFAULT_MODE_STORAGE_KEY,\n    colorSchemeStorageKey: defaultColorSchemeStorageKey = DEFAULT_COLOR_SCHEME_STORAGE_KEY,\n    defaultMode: designSystemMode = 'light',\n    defaultColorScheme: designSystemColorScheme,\n    disableTransitionOnChange: designSystemTransitionOnChange = false,\n    resolveTheme,\n    excludeVariablesFromRoot\n  } = options;\n  if (!defaultTheme.colorSchemes || typeof designSystemColorScheme === 'string' && !defaultTheme.colorSchemes[designSystemColorScheme] || typeof designSystemColorScheme === 'object' && !defaultTheme.colorSchemes[designSystemColorScheme == null ? void 0 : designSystemColorScheme.light] || typeof designSystemColorScheme === 'object' && !defaultTheme.colorSchemes[designSystemColorScheme == null ? void 0 : designSystemColorScheme.dark]) {\n    console.error(`MUI: \\`${designSystemColorScheme}\\` does not exist in \\`theme.colorSchemes\\`.`);\n  }\n  const ColorSchemeContext = /*#__PURE__*/React.createContext(undefined);\n  const useColorScheme = () => {\n    const value = React.useContext(ColorSchemeContext);\n    if (!value) {\n      throw new Error(process.env.NODE_ENV !== \"production\" ? `MUI: \\`useColorScheme\\` must be called under <CssVarsProvider />` : _formatMuiErrorMessage(19));\n    }\n    return value;\n  };\n  function CssVarsProvider({\n    children,\n    theme: themeProp = defaultTheme,\n    modeStorageKey = defaultModeStorageKey,\n    colorSchemeStorageKey = defaultColorSchemeStorageKey,\n    attribute = defaultAttribute,\n    defaultMode = designSystemMode,\n    defaultColorScheme = designSystemColorScheme,\n    disableTransitionOnChange = designSystemTransitionOnChange,\n    storageWindow = typeof window === 'undefined' ? undefined : window,\n    documentNode = typeof document === 'undefined' ? undefined : document,\n    colorSchemeNode = typeof document === 'undefined' ? undefined : document.documentElement,\n    colorSchemeSelector = ':root',\n    disableNestedContext = false,\n    disableStyleSheetGeneration = false\n  }) {\n    const hasMounted = React.useRef(false);\n    const upperTheme = muiUseTheme();\n    const ctx = React.useContext(ColorSchemeContext);\n    const nested = !!ctx && !disableNestedContext;\n    const scopedTheme = themeProp[themeId];\n    const _ref = scopedTheme || themeProp,\n      {\n        colorSchemes = {},\n        components = {},\n        generateCssVars = () => ({\n          vars: {},\n          css: {}\n        }),\n        cssVarPrefix\n      } = _ref,\n      restThemeProp = _objectWithoutPropertiesLoose(_ref, _excluded);\n    const allColorSchemes = Object.keys(colorSchemes);\n    const defaultLightColorScheme = typeof defaultColorScheme === 'string' ? defaultColorScheme : defaultColorScheme.light;\n    const defaultDarkColorScheme = typeof defaultColorScheme === 'string' ? defaultColorScheme : defaultColorScheme.dark;\n\n    // 1. Get the data about the `mode`, `colorScheme`, and setter functions.\n    const {\n      mode: stateMode,\n      setMode,\n      systemMode,\n      lightColorScheme,\n      darkColorScheme,\n      colorScheme: stateColorScheme,\n      setColorScheme\n    } = useCurrentColorScheme({\n      supportedColorSchemes: allColorSchemes,\n      defaultLightColorScheme,\n      defaultDarkColorScheme,\n      modeStorageKey,\n      colorSchemeStorageKey,\n      defaultMode,\n      storageWindow\n    });\n    let mode = stateMode;\n    let colorScheme = stateColorScheme;\n    if (nested) {\n      mode = ctx.mode;\n      colorScheme = ctx.colorScheme;\n    }\n    const calculatedMode = (() => {\n      if (mode) {\n        return mode;\n      }\n      // This scope occurs on the server\n      if (defaultMode === 'system') {\n        return designSystemMode;\n      }\n      return defaultMode;\n    })();\n    const calculatedColorScheme = (() => {\n      if (!colorScheme) {\n        // This scope occurs on the server\n        if (calculatedMode === 'dark') {\n          return defaultDarkColorScheme;\n        }\n        // use light color scheme, if default mode is 'light' | 'system'\n        return defaultLightColorScheme;\n      }\n      return colorScheme;\n    })();\n\n    // 2. Create CSS variables and store them in objects (to be generated in stylesheets in the final step)\n    const {\n      css: rootCss,\n      vars: rootVars\n    } = generateCssVars();\n\n    // 3. Start composing the theme object\n    const theme = _extends({}, restThemeProp, {\n      components,\n      colorSchemes,\n      cssVarPrefix,\n      vars: rootVars,\n      getColorSchemeSelector: targetColorScheme => `[${attribute}=\"${targetColorScheme}\"] &`\n    });\n\n    // 4. Create color CSS variables and store them in objects (to be generated in stylesheets in the final step)\n    //    The default color scheme stylesheet is constructed to have the least CSS specificity.\n    //    The other color schemes uses selector, default as data attribute, to increase the CSS specificity so that they can override the default color scheme stylesheet.\n    const defaultColorSchemeStyleSheet = {};\n    const otherColorSchemesStyleSheet = {};\n    Object.entries(colorSchemes).forEach(([key, scheme]) => {\n      const {\n        css,\n        vars\n      } = generateCssVars(key);\n      theme.vars = deepmerge(theme.vars, vars);\n      if (key === calculatedColorScheme) {\n        // 4.1 Merge the selected color scheme to the theme\n        Object.keys(scheme).forEach(schemeKey => {\n          if (scheme[schemeKey] && typeof scheme[schemeKey] === 'object') {\n            // shallow merge the 1st level structure of the theme.\n            theme[schemeKey] = _extends({}, theme[schemeKey], scheme[schemeKey]);\n          } else {\n            theme[schemeKey] = scheme[schemeKey];\n          }\n        });\n        if (theme.palette) {\n          theme.palette.colorScheme = key;\n        }\n      }\n      const resolvedDefaultColorScheme = (() => {\n        if (typeof defaultColorScheme === 'string') {\n          return defaultColorScheme;\n        }\n        if (defaultMode === 'dark') {\n          return defaultColorScheme.dark;\n        }\n        return defaultColorScheme.light;\n      })();\n      if (key === resolvedDefaultColorScheme) {\n        if (excludeVariablesFromRoot) {\n          const excludedVariables = {};\n          excludeVariablesFromRoot(cssVarPrefix).forEach(cssVar => {\n            excludedVariables[cssVar] = css[cssVar];\n            delete css[cssVar];\n          });\n          defaultColorSchemeStyleSheet[`[${attribute}=\"${key}\"]`] = excludedVariables;\n        }\n        defaultColorSchemeStyleSheet[`${colorSchemeSelector}, [${attribute}=\"${key}\"]`] = css;\n      } else {\n        otherColorSchemesStyleSheet[`${colorSchemeSelector === ':root' ? '' : colorSchemeSelector}[${attribute}=\"${key}\"]`] = css;\n      }\n    });\n    theme.vars = deepmerge(theme.vars, rootVars);\n\n    // 5. Declaring effects\n    // 5.1 Updates the selector value to use the current color scheme which tells CSS to use the proper stylesheet.\n    React.useEffect(() => {\n      if (colorScheme && colorSchemeNode) {\n        // attaches attribute to <html> because the css variables are attached to :root (html)\n        colorSchemeNode.setAttribute(attribute, colorScheme);\n      }\n    }, [colorScheme, attribute, colorSchemeNode]);\n\n    // 5.2 Remove the CSS transition when color scheme changes to create instant experience.\n    // credit: https://github.com/pacocoursey/next-themes/blob/b5c2bad50de2d61ad7b52a9c5cdc801a78507d7a/index.tsx#L313\n    React.useEffect(() => {\n      let timer;\n      if (disableTransitionOnChange && hasMounted.current && documentNode) {\n        const css = documentNode.createElement('style');\n        css.appendChild(documentNode.createTextNode(DISABLE_CSS_TRANSITION));\n        documentNode.head.appendChild(css);\n\n        // Force browser repaint\n        (() => window.getComputedStyle(documentNode.body))();\n        timer = setTimeout(() => {\n          documentNode.head.removeChild(css);\n        }, 1);\n      }\n      return () => {\n        clearTimeout(timer);\n      };\n    }, [colorScheme, disableTransitionOnChange, documentNode]);\n    React.useEffect(() => {\n      hasMounted.current = true;\n      return () => {\n        hasMounted.current = false;\n      };\n    }, []);\n    const contextValue = React.useMemo(() => ({\n      mode,\n      systemMode,\n      setMode,\n      lightColorScheme,\n      darkColorScheme,\n      colorScheme,\n      setColorScheme,\n      allColorSchemes\n    }), [allColorSchemes, colorScheme, darkColorScheme, lightColorScheme, mode, setColorScheme, setMode, systemMode]);\n    let shouldGenerateStyleSheet = true;\n    if (disableStyleSheetGeneration || nested && (upperTheme == null ? void 0 : upperTheme.cssVarPrefix) === cssVarPrefix) {\n      shouldGenerateStyleSheet = false;\n    }\n    const element = /*#__PURE__*/_jsxs(React.Fragment, {\n      children: [shouldGenerateStyleSheet && /*#__PURE__*/_jsxs(React.Fragment, {\n        children: [/*#__PURE__*/_jsx(GlobalStyles, {\n          styles: {\n            [colorSchemeSelector]: rootCss\n          }\n        }), /*#__PURE__*/_jsx(GlobalStyles, {\n          styles: defaultColorSchemeStyleSheet\n        }), /*#__PURE__*/_jsx(GlobalStyles, {\n          styles: otherColorSchemesStyleSheet\n        })]\n      }), /*#__PURE__*/_jsx(ThemeProvider, {\n        themeId: scopedTheme ? themeId : undefined,\n        theme: resolveTheme ? resolveTheme(theme) : theme,\n        children: children\n      })]\n    });\n    if (nested) {\n      return element;\n    }\n    return /*#__PURE__*/_jsx(ColorSchemeContext.Provider, {\n      value: contextValue,\n      children: element\n    });\n  }\n  process.env.NODE_ENV !== \"production\" ? CssVarsProvider.propTypes = {\n    /**\n     * The body attribute name to attach colorScheme.\n     */\n    attribute: PropTypes.string,\n    /**\n     * The component tree.\n     */\n    children: PropTypes.node,\n    /**\n     * The node used to attach the color-scheme attribute\n     */\n    colorSchemeNode: PropTypes.any,\n    /**\n     * The CSS selector for attaching the generated custom properties\n     */\n    colorSchemeSelector: PropTypes.string,\n    /**\n     * localStorage key used to store `colorScheme`\n     */\n    colorSchemeStorageKey: PropTypes.string,\n    /**\n     * The initial color scheme used.\n     */\n    defaultColorScheme: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n    /**\n     * The initial mode used.\n     */\n    defaultMode: PropTypes.string,\n    /**\n     * If `true`, the provider creates its own context and generate stylesheet as if it is a root `CssVarsProvider`.\n     */\n    disableNestedContext: PropTypes.bool,\n    /**\n     * If `true`, the style sheet won't be generated.\n     *\n     * This is useful for controlling nested CssVarsProvider behavior.\n     */\n    disableStyleSheetGeneration: PropTypes.bool,\n    /**\n     * Disable CSS transitions when switching between modes or color schemes\n     */\n    disableTransitionOnChange: PropTypes.bool,\n    /**\n     * The document to attach the attribute to\n     */\n    documentNode: PropTypes.any,\n    /**\n     * The key in the local storage used to store current color scheme.\n     */\n    modeStorageKey: PropTypes.string,\n    /**\n     * The window that attaches the 'storage' event listener\n     * @default window\n     */\n    storageWindow: PropTypes.any,\n    /**\n     * The calculated theme object that will be passed through context.\n     */\n    theme: PropTypes.object\n  } : void 0;\n  const defaultLightColorScheme = typeof designSystemColorScheme === 'string' ? designSystemColorScheme : designSystemColorScheme.light;\n  const defaultDarkColorScheme = typeof designSystemColorScheme === 'string' ? designSystemColorScheme : designSystemColorScheme.dark;\n  const getInitColorSchemeScript = params => systemGetInitColorSchemeScript(_extends({\n    attribute: defaultAttribute,\n    colorSchemeStorageKey: defaultColorSchemeStorageKey,\n    defaultMode: designSystemMode,\n    defaultLightColorScheme,\n    defaultDarkColorScheme,\n    modeStorageKey: defaultModeStorageKey\n  }, params));\n  return {\n    CssVarsProvider,\n    useColorScheme,\n    getInitColorSchemeScript\n  };\n}"],"mappings":";;AAAA,OAAOA,QAAQ,MAAM,oCAAoC;AACzD,OAAOC,6BAA6B,MAAM,yDAAyD;AACnG,SAASC,qBAAqB,IAAIC,sBAAsB,QAAQ,YAAY;AAC5E,IAAMC,SAAS,GAAG,CAAC,cAAc,EAAE,YAAY,EAAE,iBAAiB,EAAE,cAAc,CAAC;AACnF,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,SAAS,QAAQ,YAAY;AACtC,SAASC,YAAY,QAAQ,oBAAoB;AACjD,SAASC,QAAQ,IAAIC,WAAW,QAAQ,sBAAsB;AAC9D,OAAOC,aAAa,MAAM,kBAAkB;AAC5C,OAAOC,8BAA8B,IAAIC,iBAAiB,EAAEC,gCAAgC,EAAEC,wBAAwB,QAAQ,4BAA4B;AAC1J,OAAOC,qBAAqB,MAAM,yBAAyB;AAC3D,SAASC,GAAG,IAAIC,IAAI,QAAQ,mBAAmB;AAC/C,SAASC,IAAI,IAAIC,KAAK,QAAQ,mBAAmB;AACjD,OAAO,IAAMC,sBAAsB,GAAG,0JAA0J;AAChM,eAAe,SAASC,qBAAqBA,CAACC,OAAO,EAAE;EACrD,IACEC,OAAO,GAULD,OAAO,CAVTC,OAAO;IAAAC,cAAA,GAULF,OAAO,CATTG,KAAK;IAAEC,YAAY,GAAAF,cAAA,cAAG,CAAC,CAAC,GAAAA,cAAA;IAAAG,kBAAA,GAStBL,OAAO,CARTM,SAAS;IAAEC,gBAAgB,GAAAF,kBAAA,cAAGf,iBAAiB,GAAAe,kBAAA;IAAAG,qBAAA,GAQ7CR,OAAO,CAPTS,cAAc;IAAEC,qBAAqB,GAAAF,qBAAA,cAAGhB,wBAAwB,GAAAgB,qBAAA;IAAAG,qBAAA,GAO9DX,OAAO,CANTY,qBAAqB;IAAEC,4BAA4B,GAAAF,qBAAA,cAAGpB,gCAAgC,GAAAoB,qBAAA;IAAAG,oBAAA,GAMpFd,OAAO,CALTe,WAAW;IAAEC,gBAAgB,GAAAF,oBAAA,cAAG,OAAO,GAAAA,oBAAA;IACnBG,uBAAuB,GAIzCjB,OAAO,CAJTkB,kBAAkB;IAAAC,qBAAA,GAIhBnB,OAAO,CAHToB,yBAAyB;IAAEC,8BAA8B,GAAAF,qBAAA,cAAG,KAAK,GAAAA,qBAAA;IACjEG,YAAY,GAEVtB,OAAO,CAFTsB,YAAY;IACZC,wBAAwB,GACtBvB,OAAO,CADTuB,wBAAwB;EAE1B,IAAI,CAACnB,YAAY,CAACoB,YAAY,IAAI,OAAOP,uBAAuB,KAAK,QAAQ,IAAI,CAACb,YAAY,CAACoB,YAAY,CAACP,uBAAuB,CAAC,IAAI,OAAOA,uBAAuB,KAAK,QAAQ,IAAI,CAACb,YAAY,CAACoB,YAAY,CAACP,uBAAuB,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,uBAAuB,CAACQ,KAAK,CAAC,IAAI,OAAOR,uBAAuB,KAAK,QAAQ,IAAI,CAACb,YAAY,CAACoB,YAAY,CAACP,uBAAuB,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,uBAAuB,CAACS,IAAI,CAAC,EAAE;IACjbC,OAAO,CAACC,KAAK,UAAAC,MAAA,CAAWZ,uBAAuB,8CAA8C,CAAC;EAChG;EACA,IAAMa,kBAAkB,GAAG,aAAahD,KAAK,CAACiD,aAAa,CAACC,SAAS,CAAC;EACtE,IAAMC,cAAc,GAAG,SAAjBA,cAAcA,CAAA,EAAS;IAC3B,IAAMC,KAAK,GAAGpD,KAAK,CAACqD,UAAU,CAACL,kBAAkB,CAAC;IAClD,IAAI,CAACI,KAAK,EAAE;MACV,MAAM,IAAIE,KAAK,CAACC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,sEAAwE3D,sBAAsB,CAAC,EAAE,CAAC,CAAC;IAC1J;IACA,OAAOsD,KAAK;EACd,CAAC;EACD,SAASM,eAAeA,CAAAC,KAAA,EAerB;IAAA,IAdDC,QAAQ,GAAAD,KAAA,CAARC,QAAQ;MAAAC,WAAA,GAAAF,KAAA,CACRtC,KAAK;MAAEyC,SAAS,GAAAD,WAAA,cAAGvC,YAAY,GAAAuC,WAAA;MAAAE,oBAAA,GAAAJ,KAAA,CAC/BhC,cAAc;MAAdA,cAAc,GAAAoC,oBAAA,cAAGnC,qBAAqB,GAAAmC,oBAAA;MAAAC,qBAAA,GAAAL,KAAA,CACtC7B,qBAAqB;MAArBA,qBAAqB,GAAAkC,qBAAA,cAAGjC,4BAA4B,GAAAiC,qBAAA;MAAAC,eAAA,GAAAN,KAAA,CACpDnC,SAAS;MAATA,SAAS,GAAAyC,eAAA,cAAGxC,gBAAgB,GAAAwC,eAAA;MAAAC,iBAAA,GAAAP,KAAA,CAC5B1B,WAAW;MAAXA,WAAW,GAAAiC,iBAAA,cAAGhC,gBAAgB,GAAAgC,iBAAA;MAAAC,qBAAA,GAAAR,KAAA,CAC9BvB,kBAAkB;MAAlBA,kBAAkB,GAAA+B,qBAAA,cAAGhC,uBAAuB,GAAAgC,qBAAA;MAAAC,qBAAA,GAAAT,KAAA,CAC5CrB,yBAAyB;MAAzBA,yBAAyB,GAAA8B,qBAAA,cAAG7B,8BAA8B,GAAA6B,qBAAA;MAAAC,mBAAA,GAAAV,KAAA,CAC1DW,aAAa;MAAbA,aAAa,GAAAD,mBAAA,cAAG,OAAOE,MAAM,KAAK,WAAW,GAAGrB,SAAS,GAAGqB,MAAM,GAAAF,mBAAA;MAAAG,kBAAA,GAAAb,KAAA,CAClEc,YAAY;MAAZA,YAAY,GAAAD,kBAAA,cAAG,OAAOE,QAAQ,KAAK,WAAW,GAAGxB,SAAS,GAAGwB,QAAQ,GAAAF,kBAAA;MAAAG,qBAAA,GAAAhB,KAAA,CACrEiB,eAAe;MAAfA,eAAe,GAAAD,qBAAA,cAAG,OAAOD,QAAQ,KAAK,WAAW,GAAGxB,SAAS,GAAGwB,QAAQ,CAACG,eAAe,GAAAF,qBAAA;MAAAG,qBAAA,GAAAnB,KAAA,CACxFoB,mBAAmB;MAAnBA,mBAAmB,GAAAD,qBAAA,cAAG,OAAO,GAAAA,qBAAA;MAAAE,qBAAA,GAAArB,KAAA,CAC7BsB,oBAAoB;MAApBA,oBAAoB,GAAAD,qBAAA,cAAG,KAAK,GAAAA,qBAAA;MAAAE,qBAAA,GAAAvB,KAAA,CAC5BwB,2BAA2B;MAA3BA,2BAA2B,GAAAD,qBAAA,cAAG,KAAK,GAAAA,qBAAA;IAEnC,IAAME,UAAU,GAAGpF,KAAK,CAACqF,MAAM,CAAC,KAAK,CAAC;IACtC,IAAMC,UAAU,GAAGjF,WAAW,CAAC,CAAC;IAChC,IAAMkF,GAAG,GAAGvF,KAAK,CAACqD,UAAU,CAACL,kBAAkB,CAAC;IAChD,IAAMwC,MAAM,GAAG,CAAC,CAACD,GAAG,IAAI,CAACN,oBAAoB;IAC7C,IAAMQ,WAAW,GAAG3B,SAAS,CAAC3C,OAAO,CAAC;IAChC,IAAAuE,IAAI,GAAGD,WAAW,IAAI3B,SAAS;MAAA6B,iBAAA,GAS/BD,IAAI,CAPNhD,YAAY;MAAZA,YAAY,GAAAiD,iBAAA,cAAG,CAAC,CAAC,GAAAA,iBAAA;MAAAC,eAAA,GAOfF,IAAI,CANNG,UAAU;MAAVA,UAAU,GAAAD,eAAA,cAAG,CAAC,CAAC,GAAAA,eAAA;MAAAE,oBAAA,GAMbJ,IAAI,CALNK,eAAe;MAAfA,eAAe,GAAAD,oBAAA,cAAG;QAAA,OAAO;UACvBE,IAAI,EAAE,CAAC,CAAC;UACRC,GAAG,EAAE,CAAC;QACR,CAAC;MAAA,CAAC,GAAAH,oBAAA;MACFI,YAAY,GACVR,IAAI,CADNQ,YAAY;MAEdC,aAAa,GAAGvG,6BAA6B,CAAC8F,IAAI,EAAE3F,SAAS,CAAC;IAChE,IAAMqG,eAAe,GAAGC,MAAM,CAACC,IAAI,CAAC5D,YAAY,CAAC;IACjD,IAAM6D,uBAAuB,GAAG,OAAOnE,kBAAkB,KAAK,QAAQ,GAAGA,kBAAkB,GAAGA,kBAAkB,CAACO,KAAK;IACtH,IAAM6D,sBAAsB,GAAG,OAAOpE,kBAAkB,KAAK,QAAQ,GAAGA,kBAAkB,GAAGA,kBAAkB,CAACQ,IAAI;;IAEpH;IACA,IAAA6D,qBAAA,GAQI9F,qBAAqB,CAAC;QACxB+F,qBAAqB,EAAEN,eAAe;QACtCG,uBAAuB,EAAvBA,uBAAuB;QACvBC,sBAAsB,EAAtBA,sBAAsB;QACtB7E,cAAc,EAAdA,cAAc;QACdG,qBAAqB,EAArBA,qBAAqB;QACrBG,WAAW,EAAXA,WAAW;QACXqC,aAAa,EAAbA;MACF,CAAC,CAAC;MAfMqC,SAAS,GAAAF,qBAAA,CAAfG,IAAI;MACJC,OAAO,GAAAJ,qBAAA,CAAPI,OAAO;MACPC,UAAU,GAAAL,qBAAA,CAAVK,UAAU;MACVC,gBAAgB,GAAAN,qBAAA,CAAhBM,gBAAgB;MAChBC,eAAe,GAAAP,qBAAA,CAAfO,eAAe;MACFC,gBAAgB,GAAAR,qBAAA,CAA7BS,WAAW;MACXC,cAAc,GAAAV,qBAAA,CAAdU,cAAc;IAUhB,IAAIP,IAAI,GAAGD,SAAS;IACpB,IAAIO,WAAW,GAAGD,gBAAgB;IAClC,IAAIzB,MAAM,EAAE;MACVoB,IAAI,GAAGrB,GAAG,CAACqB,IAAI;MACfM,WAAW,GAAG3B,GAAG,CAAC2B,WAAW;IAC/B;IACA,IAAME,cAAc,GAAI,YAAM;MAC5B,IAAIR,IAAI,EAAE;QACR,OAAOA,IAAI;MACb;MACA;MACA,IAAI3E,WAAW,KAAK,QAAQ,EAAE;QAC5B,OAAOC,gBAAgB;MACzB;MACA,OAAOD,WAAW;IACpB,CAAC,CAAE,CAAC;IACJ,IAAMoF,qBAAqB,GAAI,YAAM;MACnC,IAAI,CAACH,WAAW,EAAE;QAChB;QACA,IAAIE,cAAc,KAAK,MAAM,EAAE;UAC7B,OAAOZ,sBAAsB;QAC/B;QACA;QACA,OAAOD,uBAAuB;MAChC;MACA,OAAOW,WAAW;IACpB,CAAC,CAAE,CAAC;;IAEJ;IACA,IAAAI,gBAAA,GAGIvB,eAAe,CAAC,CAAC;MAFdwB,OAAO,GAAAD,gBAAA,CAAZrB,GAAG;MACGuB,QAAQ,GAAAF,gBAAA,CAAdtB,IAAI;;IAGN;IACA,IAAM3E,KAAK,GAAG1B,QAAQ,CAAC,CAAC,CAAC,EAAEwG,aAAa,EAAE;MACxCN,UAAU,EAAVA,UAAU;MACVnD,YAAY,EAAZA,YAAY;MACZwD,YAAY,EAAZA,YAAY;MACZF,IAAI,EAAEwB,QAAQ;MACdC,sBAAsB,EAAE,SAAAA,uBAAAC,iBAAiB;QAAA,WAAA3E,MAAA,CAAQvB,SAAS,SAAAuB,MAAA,CAAK2E,iBAAiB;MAAA;IAClF,CAAC,CAAC;;IAEF;IACA;IACA;IACA,IAAMC,4BAA4B,GAAG,CAAC,CAAC;IACvC,IAAMC,2BAA2B,GAAG,CAAC,CAAC;IACtCvB,MAAM,CAACwB,OAAO,CAACnF,YAAY,CAAC,CAACoF,OAAO,CAAC,UAAAC,KAAA,EAAmB;MAAA,IAAAC,KAAA,GAAAC,cAAA,CAAAF,KAAA;QAAjBG,GAAG,GAAAF,KAAA;QAAEG,MAAM,GAAAH,KAAA;MAChD,IAAAI,iBAAA,GAGIrC,eAAe,CAACmC,GAAG,CAAC;QAFtBjC,GAAG,GAAAmC,iBAAA,CAAHnC,GAAG;QACHD,IAAI,GAAAoC,iBAAA,CAAJpC,IAAI;MAEN3E,KAAK,CAAC2E,IAAI,GAAG9F,SAAS,CAACmB,KAAK,CAAC2E,IAAI,EAAEA,IAAI,CAAC;MACxC,IAAIkC,GAAG,KAAKb,qBAAqB,EAAE;QACjC;QACAhB,MAAM,CAACC,IAAI,CAAC6B,MAAM,CAAC,CAACL,OAAO,CAAC,UAAAO,SAAS,EAAI;UACvC,IAAIF,MAAM,CAACE,SAAS,CAAC,IAAI,OAAOF,MAAM,CAACE,SAAS,CAAC,KAAK,QAAQ,EAAE;YAC9D;YACAhH,KAAK,CAACgH,SAAS,CAAC,GAAG1I,QAAQ,CAAC,CAAC,CAAC,EAAE0B,KAAK,CAACgH,SAAS,CAAC,EAAEF,MAAM,CAACE,SAAS,CAAC,CAAC;UACtE,CAAC,MAAM;YACLhH,KAAK,CAACgH,SAAS,CAAC,GAAGF,MAAM,CAACE,SAAS,CAAC;UACtC;QACF,CAAC,CAAC;QACF,IAAIhH,KAAK,CAACiH,OAAO,EAAE;UACjBjH,KAAK,CAACiH,OAAO,CAACpB,WAAW,GAAGgB,GAAG;QACjC;MACF;MACA,IAAMK,0BAA0B,GAAI,YAAM;QACxC,IAAI,OAAOnG,kBAAkB,KAAK,QAAQ,EAAE;UAC1C,OAAOA,kBAAkB;QAC3B;QACA,IAAIH,WAAW,KAAK,MAAM,EAAE;UAC1B,OAAOG,kBAAkB,CAACQ,IAAI;QAChC;QACA,OAAOR,kBAAkB,CAACO,KAAK;MACjC,CAAC,CAAE,CAAC;MACJ,IAAIuF,GAAG,KAAKK,0BAA0B,EAAE;QACtC,IAAI9F,wBAAwB,EAAE;UAC5B,IAAM+F,iBAAiB,GAAG,CAAC,CAAC;UAC5B/F,wBAAwB,CAACyD,YAAY,CAAC,CAAC4B,OAAO,CAAC,UAAAW,MAAM,EAAI;YACvDD,iBAAiB,CAACC,MAAM,CAAC,GAAGxC,GAAG,CAACwC,MAAM,CAAC;YACvC,OAAOxC,GAAG,CAACwC,MAAM,CAAC;UACpB,CAAC,CAAC;UACFd,4BAA4B,KAAA5E,MAAA,CAAKvB,SAAS,SAAAuB,MAAA,CAAKmF,GAAG,SAAK,GAAGM,iBAAiB;QAC7E;QACAb,4BAA4B,IAAA5E,MAAA,CAAIgC,mBAAmB,SAAAhC,MAAA,CAAMvB,SAAS,SAAAuB,MAAA,CAAKmF,GAAG,SAAK,GAAGjC,GAAG;MACvF,CAAC,MAAM;QACL2B,2BAA2B,IAAA7E,MAAA,CAAIgC,mBAAmB,KAAK,OAAO,GAAG,EAAE,GAAGA,mBAAmB,OAAAhC,MAAA,CAAIvB,SAAS,SAAAuB,MAAA,CAAKmF,GAAG,SAAK,GAAGjC,GAAG;MAC3H;IACF,CAAC,CAAC;IACF5E,KAAK,CAAC2E,IAAI,GAAG9F,SAAS,CAACmB,KAAK,CAAC2E,IAAI,EAAEwB,QAAQ,CAAC;;IAE5C;IACA;IACAxH,KAAK,CAAC0I,SAAS,CAAC,YAAM;MACpB,IAAIxB,WAAW,IAAItC,eAAe,EAAE;QAClC;QACAA,eAAe,CAAC+D,YAAY,CAACnH,SAAS,EAAE0F,WAAW,CAAC;MACtD;IACF,CAAC,EAAE,CAACA,WAAW,EAAE1F,SAAS,EAAEoD,eAAe,CAAC,CAAC;;IAE7C;IACA;IACA5E,KAAK,CAAC0I,SAAS,CAAC,YAAM;MACpB,IAAIE,KAAK;MACT,IAAItG,yBAAyB,IAAI8C,UAAU,CAACyD,OAAO,IAAIpE,YAAY,EAAE;QACnE,IAAMwB,GAAG,GAAGxB,YAAY,CAACqE,aAAa,CAAC,OAAO,CAAC;QAC/C7C,GAAG,CAAC8C,WAAW,CAACtE,YAAY,CAACuE,cAAc,CAAChI,sBAAsB,CAAC,CAAC;QACpEyD,YAAY,CAACwE,IAAI,CAACF,WAAW,CAAC9C,GAAG,CAAC;;QAElC;QACA,CAAC;UAAA,OAAM1B,MAAM,CAAC2E,gBAAgB,CAACzE,YAAY,CAAC0E,IAAI,CAAC;QAAA,GAAE,CAAC;QACpDP,KAAK,GAAGQ,UAAU,CAAC,YAAM;UACvB3E,YAAY,CAACwE,IAAI,CAACI,WAAW,CAACpD,GAAG,CAAC;QACpC,CAAC,EAAE,CAAC,CAAC;MACP;MACA,OAAO,YAAM;QACXqD,YAAY,CAACV,KAAK,CAAC;MACrB,CAAC;IACH,CAAC,EAAE,CAAC1B,WAAW,EAAE5E,yBAAyB,EAAEmC,YAAY,CAAC,CAAC;IAC1DzE,KAAK,CAAC0I,SAAS,CAAC,YAAM;MACpBtD,UAAU,CAACyD,OAAO,GAAG,IAAI;MACzB,OAAO,YAAM;QACXzD,UAAU,CAACyD,OAAO,GAAG,KAAK;MAC5B,CAAC;IACH,CAAC,EAAE,EAAE,CAAC;IACN,IAAMU,YAAY,GAAGvJ,KAAK,CAACwJ,OAAO,CAAC;MAAA,OAAO;QACxC5C,IAAI,EAAJA,IAAI;QACJE,UAAU,EAAVA,UAAU;QACVD,OAAO,EAAPA,OAAO;QACPE,gBAAgB,EAAhBA,gBAAgB;QAChBC,eAAe,EAAfA,eAAe;QACfE,WAAW,EAAXA,WAAW;QACXC,cAAc,EAAdA,cAAc;QACdf,eAAe,EAAfA;MACF,CAAC;IAAA,CAAC,EAAE,CAACA,eAAe,EAAEc,WAAW,EAAEF,eAAe,EAAED,gBAAgB,EAAEH,IAAI,EAAEO,cAAc,EAAEN,OAAO,EAAEC,UAAU,CAAC,CAAC;IACjH,IAAI2C,wBAAwB,GAAG,IAAI;IACnC,IAAItE,2BAA2B,IAAIK,MAAM,IAAI,CAACF,UAAU,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,UAAU,CAACY,YAAY,MAAMA,YAAY,EAAE;MACrHuD,wBAAwB,GAAG,KAAK;IAClC;IACA,IAAMC,OAAO,GAAG,aAAa3I,KAAK,CAACf,KAAK,CAAC2J,QAAQ,EAAE;MACjD/F,QAAQ,EAAE,CAAC6F,wBAAwB,IAAI,aAAa1I,KAAK,CAACf,KAAK,CAAC2J,QAAQ,EAAE;QACxE/F,QAAQ,EAAE,CAAC,aAAa/C,IAAI,CAACV,YAAY,EAAE;UACzCyJ,MAAM,EAAAC,eAAA,KACH9E,mBAAmB,EAAGwC,OAAO;QAElC,CAAC,CAAC,EAAE,aAAa1G,IAAI,CAACV,YAAY,EAAE;UAClCyJ,MAAM,EAAEjC;QACV,CAAC,CAAC,EAAE,aAAa9G,IAAI,CAACV,YAAY,EAAE;UAClCyJ,MAAM,EAAEhC;QACV,CAAC,CAAC;MACJ,CAAC,CAAC,EAAE,aAAa/G,IAAI,CAACP,aAAa,EAAE;QACnCa,OAAO,EAAEsE,WAAW,GAAGtE,OAAO,GAAG+B,SAAS;QAC1C7B,KAAK,EAAEmB,YAAY,GAAGA,YAAY,CAACnB,KAAK,CAAC,GAAGA,KAAK;QACjDuC,QAAQ,EAAEA;MACZ,CAAC,CAAC;IACJ,CAAC,CAAC;IACF,IAAI4B,MAAM,EAAE;MACV,OAAOkE,OAAO;IAChB;IACA,OAAO,aAAa7I,IAAI,CAACmC,kBAAkB,CAAC8G,QAAQ,EAAE;MACpD1G,KAAK,EAAEmG,YAAY;MACnB3F,QAAQ,EAAE8F;IACZ,CAAC,CAAC;EACJ;EACAnG,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAGC,eAAe,CAACqG,SAAS,GAAG;IAClE;AACJ;AACA;IACIvI,SAAS,EAAEvB,SAAS,CAAC+J,MAAM;IAC3B;AACJ;AACA;IACIpG,QAAQ,EAAE3D,SAAS,CAACgK,IAAI;IACxB;AACJ;AACA;IACIrF,eAAe,EAAE3E,SAAS,CAACiK,GAAG;IAC9B;AACJ;AACA;IACInF,mBAAmB,EAAE9E,SAAS,CAAC+J,MAAM;IACrC;AACJ;AACA;IACIlI,qBAAqB,EAAE7B,SAAS,CAAC+J,MAAM;IACvC;AACJ;AACA;IACI5H,kBAAkB,EAAEnC,SAAS,CAACkK,SAAS,CAAC,CAAClK,SAAS,CAAC+J,MAAM,EAAE/J,SAAS,CAACmK,MAAM,CAAC,CAAC;IAC7E;AACJ;AACA;IACInI,WAAW,EAAEhC,SAAS,CAAC+J,MAAM;IAC7B;AACJ;AACA;IACI/E,oBAAoB,EAAEhF,SAAS,CAACoK,IAAI;IACpC;AACJ;AACA;AACA;AACA;IACIlF,2BAA2B,EAAElF,SAAS,CAACoK,IAAI;IAC3C;AACJ;AACA;IACI/H,yBAAyB,EAAErC,SAAS,CAACoK,IAAI;IACzC;AACJ;AACA;IACI5F,YAAY,EAAExE,SAAS,CAACiK,GAAG;IAC3B;AACJ;AACA;IACIvI,cAAc,EAAE1B,SAAS,CAAC+J,MAAM;IAChC;AACJ;AACA;AACA;IACI1F,aAAa,EAAErE,SAAS,CAACiK,GAAG;IAC5B;AACJ;AACA;IACI7I,KAAK,EAAEpB,SAAS,CAACmK;EACnB,CAAC,GAAG,KAAK,CAAC;EACV,IAAM7D,uBAAuB,GAAG,OAAOpE,uBAAuB,KAAK,QAAQ,GAAGA,uBAAuB,GAAGA,uBAAuB,CAACQ,KAAK;EACrI,IAAM6D,sBAAsB,GAAG,OAAOrE,uBAAuB,KAAK,QAAQ,GAAGA,uBAAuB,GAAGA,uBAAuB,CAACS,IAAI;EACnI,IAAM0H,wBAAwB,GAAG,SAA3BA,wBAAwBA,CAAGC,MAAM;IAAA,OAAIhK,8BAA8B,CAACZ,QAAQ,CAAC;MACjF6B,SAAS,EAAEC,gBAAgB;MAC3BK,qBAAqB,EAAEC,4BAA4B;MACnDE,WAAW,EAAEC,gBAAgB;MAC7BqE,uBAAuB,EAAvBA,uBAAuB;MACvBC,sBAAsB,EAAtBA,sBAAsB;MACtB7E,cAAc,EAAEC;IAClB,CAAC,EAAE2I,MAAM,CAAC,CAAC;EAAA;EACX,OAAO;IACL7G,eAAe,EAAfA,eAAe;IACfP,cAAc,EAAdA,cAAc;IACdmH,wBAAwB,EAAxBA;EACF,CAAC;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Truncate/truncate';\nimport { css } from '@patternfly/react-styles';\nimport { Tooltip } from '../Tooltip';\nexport var TruncatePosition;\n(function (TruncatePosition) {\n  TruncatePosition[\"start\"] = \"start\";\n  TruncatePosition[\"end\"] = \"end\";\n  TruncatePosition[\"middle\"] = \"middle\";\n})(TruncatePosition || (TruncatePosition = {}));\nvar truncateStyles = {\n  start: styles.truncateEnd,\n  end: styles.truncateStart\n};\nvar minWidthCharacters = 12;\nvar sliceContent = function sliceContent(str, slice) {\n  return [str.slice(0, str.length - slice), str.slice(-slice)];\n};\nexport var Truncate = function Truncate(_a) {\n  var className = _a.className,\n    _a$position = _a.position,\n    position = _a$position === void 0 ? 'end' : _a$position,\n    _a$tooltipPosition = _a.tooltipPosition,\n    tooltipPosition = _a$tooltipPosition === void 0 ? 'top' : _a$tooltipPosition,\n    _a$trailingNumChars = _a.trailingNumChars,\n    trailingNumChars = _a$trailingNumChars === void 0 ? 7 : _a$trailingNumChars,\n    content = _a.content,\n    removeFindDomNode = _a.removeFindDomNode,\n    props = __rest(_a, [\"className\", \"position\", \"tooltipPosition\", \"trailingNumChars\", \"content\", \"removeFindDomNode\"]);\n  return React.createElement(Tooltip, {\n    position: tooltipPosition,\n    content: content,\n    removeFindDomNode: removeFindDomNode\n  }, React.createElement(\"span\", Object.assign({\n    className: css(styles.truncate, className)\n  }, props), (position === TruncatePosition.end || position === TruncatePosition.start) && React.createElement(\"span\", {\n    className: truncateStyles[position]\n  }, content, position === TruncatePosition.start && React.createElement(React.Fragment, null, \"\\u200E\")), position === TruncatePosition.middle && content.slice(0, content.length - trailingNumChars).length > minWidthCharacters && React.createElement(React.Fragment, null, React.createElement(\"span\", {\n    className: styles.truncateStart\n  }, sliceContent(content, trailingNumChars)[0]), React.createElement(\"span\", {\n    className: styles.truncateEnd\n  }, sliceContent(content, trailingNumChars)[1])), position === TruncatePosition.middle && content.slice(0, content.length - trailingNumChars).length <= minWidthCharacters && content));\n};\nTruncate.displayName = 'Truncate';","map":{"version":3,"names":["React","styles","css","Tooltip","TruncatePosition","truncateStyles","start","truncateEnd","end","truncateStart","minWidthCharacters","sliceContent","str","slice","length","Truncate","_a","className","_a$position","position","_a$tooltipPosition","tooltipPosition","_a$trailingNumChars","trailingNumChars","content","removeFindDomNode","props","__rest","createElement","Object","assign","truncate","Fragment","middle","displayName"],"sources":["/data/stackhub-web/plugins/myapps/node_modules/@patternfly/react-core/src/components/Truncate/Truncate.tsx"],"sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Truncate/truncate';\nimport { css } from '@patternfly/react-styles';\nimport { Tooltip, TooltipPosition } from '../Tooltip';\n\nexport enum TruncatePosition {\n  start = 'start',\n  end = 'end',\n  middle = 'middle'\n}\n\nconst truncateStyles = {\n  start: styles.truncateEnd,\n  end: styles.truncateStart\n};\n\nconst minWidthCharacters: number = 12;\n\ninterface TruncateProps extends React.HTMLProps<HTMLSpanElement> {\n  /** Class to add to outer span */\n  className?: string;\n  /** Text to truncate */\n  content: string;\n  /** The number of characters displayed in the second half of the truncation */\n  trailingNumChars?: number;\n  /** Where the text will be truncated */\n  position?: 'start' | 'middle' | 'end';\n  /** Tooltip position */\n  tooltipPosition?:\n    | TooltipPosition\n    | 'auto'\n    | 'top'\n    | 'bottom'\n    | 'left'\n    | 'right'\n    | 'top-start'\n    | 'top-end'\n    | 'bottom-start'\n    | 'bottom-end'\n    | 'left-start'\n    | 'left-end'\n    | 'right-start'\n    | 'right-end';\n  /** @beta Opt-in for updated popper that does not use findDOMNode. */\n  removeFindDomNode?: boolean;\n}\n\nconst sliceContent = (str: string, slice: number) => [str.slice(0, str.length - slice), str.slice(-slice)];\n\nexport const Truncate: React.FunctionComponent<TruncateProps> = ({\n  className,\n  position = 'end',\n  tooltipPosition = 'top',\n  trailingNumChars = 7,\n  content,\n  removeFindDomNode,\n  ...props\n}: TruncateProps) => (\n  <Tooltip position={tooltipPosition} content={content} removeFindDomNode={removeFindDomNode}>\n    <span className={css(styles.truncate, className)} {...props}>\n      {(position === TruncatePosition.end || position === TruncatePosition.start) && (\n        <span className={truncateStyles[position]}>\n          {content}\n          {position === TruncatePosition.start && <React.Fragment>&lrm;</React.Fragment>}\n        </span>\n      )}\n      {position === TruncatePosition.middle &&\n        content.slice(0, content.length - trailingNumChars).length > minWidthCharacters && (\n          <React.Fragment>\n            <span className={styles.truncateStart}>{sliceContent(content, trailingNumChars)[0]}</span>\n            <span className={styles.truncateEnd}>{sliceContent(content, trailingNumChars)[1]}</span>\n          </React.Fragment>\n        )}\n      {position === TruncatePosition.middle &&\n        content.slice(0, content.length - trailingNumChars).length <= minWidthCharacters &&\n        content}\n    </span>\n  </Tooltip>\n);\nTruncate.displayName = 'Truncate';\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
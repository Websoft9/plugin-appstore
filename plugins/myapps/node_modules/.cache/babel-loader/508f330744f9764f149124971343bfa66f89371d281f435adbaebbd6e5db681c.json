{"ast":null,"code":"import _slicedToArray from \"/data/stackhub-web/plugins/myapps/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Drawer/drawer';\nimport { css } from '@patternfly/react-styles';\nimport { DrawerColorVariant, DrawerContext } from './Drawer';\nimport { formatBreakpointMods } from '../../helpers/util';\nimport { GenerateId } from '../../helpers/GenerateId/GenerateId';\nvar isResizing = null;\nvar newSize = 0;\nexport var DrawerPanelContent = function DrawerPanelContent(_a) {\n  var _a$className = _a.className,\n    className = _a$className === void 0 ? '' : _a$className,\n    id = _a.id,\n    children = _a.children,\n    _a$hasNoBorder = _a.hasNoBorder,\n    hasNoBorder = _a$hasNoBorder === void 0 ? false : _a$hasNoBorder,\n    _a$isResizable = _a.isResizable,\n    isResizable = _a$isResizable === void 0 ? false : _a$isResizable,\n    onResize = _a.onResize,\n    minSize = _a.minSize,\n    defaultSize = _a.defaultSize,\n    maxSize = _a.maxSize,\n    _a$increment = _a.increment,\n    increment = _a$increment === void 0 ? 5 : _a$increment,\n    _a$resizeAriaLabel = _a.resizeAriaLabel,\n    resizeAriaLabel = _a$resizeAriaLabel === void 0 ? 'Resize' : _a$resizeAriaLabel,\n    widths = _a.widths,\n    _a$colorVariant = _a.colorVariant,\n    colorVariant = _a$colorVariant === void 0 ? DrawerColorVariant.default : _a$colorVariant,\n    props = __rest(_a, [\"className\", \"id\", \"children\", \"hasNoBorder\", \"isResizable\", \"onResize\", \"minSize\", \"defaultSize\", \"maxSize\", \"increment\", \"resizeAriaLabel\", \"widths\", \"colorVariant\"]);\n  var panel = React.useRef();\n  var splitterRef = React.useRef();\n  var _React$useState = React.useState(0),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    separatorValue = _React$useState2[0],\n    setSeparatorValue = _React$useState2[1];\n  var _React$useContext = React.useContext(DrawerContext),\n    position = _React$useContext.position,\n    isExpanded = _React$useContext.isExpanded,\n    isStatic = _React$useContext.isStatic,\n    onExpand = _React$useContext.onExpand,\n    drawerRef = _React$useContext.drawerRef,\n    drawerContentRef = _React$useContext.drawerContentRef,\n    isInline = _React$useContext.isInline;\n  var hidden = isStatic ? false : !isExpanded;\n  var _React$useState3 = React.useState(!hidden),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    isExpandedInternal = _React$useState4[0],\n    setIsExpandedInternal = _React$useState4[1];\n  var currWidth = 0;\n  var panelRect;\n  var right;\n  var left;\n  var bottom;\n  var setInitialVals = true;\n  React.useEffect(function () {\n    if (!isStatic && isExpanded) {\n      setIsExpandedInternal(isExpanded);\n    }\n  }, [isStatic, isExpanded]);\n  var calcValueNow = function calcValueNow() {\n    var splitterPos;\n    var drawerSize;\n    if (isInline && position === 'right') {\n      splitterPos = panel.current.getBoundingClientRect().right - splitterRef.current.getBoundingClientRect().left;\n      drawerSize = drawerRef.current.getBoundingClientRect().right - drawerRef.current.getBoundingClientRect().left;\n    } else if (isInline && position === 'left') {\n      splitterPos = splitterRef.current.getBoundingClientRect().right - panel.current.getBoundingClientRect().left;\n      drawerSize = drawerRef.current.getBoundingClientRect().right - drawerRef.current.getBoundingClientRect().left;\n    } else if (position === 'right') {\n      splitterPos = drawerContentRef.current.getBoundingClientRect().right - splitterRef.current.getBoundingClientRect().left;\n      drawerSize = drawerContentRef.current.getBoundingClientRect().right - drawerContentRef.current.getBoundingClientRect().left;\n    } else if (position === 'left') {\n      splitterPos = splitterRef.current.getBoundingClientRect().right - drawerContentRef.current.getBoundingClientRect().left;\n      drawerSize = drawerContentRef.current.getBoundingClientRect().right - drawerContentRef.current.getBoundingClientRect().left;\n    } else if (position === 'bottom') {\n      splitterPos = drawerContentRef.current.getBoundingClientRect().bottom - splitterRef.current.getBoundingClientRect().top;\n      drawerSize = drawerContentRef.current.getBoundingClientRect().bottom - drawerContentRef.current.getBoundingClientRect().top;\n    }\n    var newSplitterPos = splitterPos / drawerSize * 100;\n    return Math.round((newSplitterPos + Number.EPSILON) * 100) / 100;\n  };\n  var handleTouchStart = function handleTouchStart(e) {\n    e.stopPropagation();\n    document.addEventListener('touchmove', callbackTouchMove, {\n      passive: false\n    });\n    document.addEventListener('touchend', callbackTouchEnd);\n    isResizing = true;\n  };\n  var handleMousedown = function handleMousedown(e) {\n    e.stopPropagation();\n    e.preventDefault();\n    document.addEventListener('mousemove', callbackMouseMove);\n    document.addEventListener('mouseup', callbackMouseUp);\n    drawerRef.current.classList.add(css(styles.modifiers.resizing));\n    isResizing = true;\n    setInitialVals = true;\n  };\n  var handleMouseMove = function handleMouseMove(e) {\n    var mousePos = position === 'bottom' ? e.clientY : e.clientX;\n    handleControlMove(e, mousePos);\n  };\n  var handleTouchMove = function handleTouchMove(e) {\n    e.preventDefault();\n    e.stopImmediatePropagation();\n    var touchPos = position === 'bottom' ? e.touches[0].clientY : e.touches[0].clientX;\n    handleControlMove(e, touchPos);\n  };\n  var handleControlMove = function handleControlMove(e, controlPosition) {\n    e.stopPropagation();\n    if (!isResizing) {\n      return;\n    }\n    if (setInitialVals) {\n      panelRect = panel.current.getBoundingClientRect();\n      right = panelRect.right;\n      left = panelRect.left;\n      bottom = panelRect.bottom;\n      setInitialVals = false;\n    }\n    var mousePos = controlPosition;\n    var newSize = 0;\n    if (position === 'right') {\n      newSize = right - mousePos;\n    } else if (position === 'left') {\n      newSize = mousePos - left;\n    } else {\n      newSize = bottom - mousePos;\n    }\n    if (position === 'bottom') {\n      panel.current.style.overflowAnchor = 'none';\n    }\n    panel.current.style.setProperty('--pf-c-drawer__panel--md--FlexBasis', newSize + 'px');\n    currWidth = newSize;\n    setSeparatorValue(calcValueNow());\n  };\n  var handleMouseup = function handleMouseup() {\n    if (!isResizing) {\n      return;\n    }\n    drawerRef.current.classList.remove(css(styles.modifiers.resizing));\n    isResizing = false;\n    onResize && onResize(currWidth, id);\n    setInitialVals = true;\n    document.removeEventListener('mousemove', callbackMouseMove);\n    document.removeEventListener('mouseup', callbackMouseUp);\n  };\n  var handleTouchEnd = function handleTouchEnd(e) {\n    e.stopPropagation();\n    if (!isResizing) {\n      return;\n    }\n    isResizing = false;\n    onResize && onResize(currWidth, id);\n    document.removeEventListener('touchmove', callbackTouchMove);\n    document.removeEventListener('touchend', callbackTouchEnd);\n  };\n  var callbackMouseMove = React.useCallback(handleMouseMove, []);\n  var callbackTouchEnd = React.useCallback(handleTouchEnd, []);\n  var callbackTouchMove = React.useCallback(handleTouchMove, []);\n  var callbackMouseUp = React.useCallback(handleMouseup, []);\n  var handleKeys = function handleKeys(e) {\n    var key = e.key;\n    if (key !== 'Escape' && key !== 'Enter' && key !== 'ArrowUp' && key !== 'ArrowDown' && key !== 'ArrowLeft' && key !== 'ArrowRight') {\n      if (isResizing) {\n        e.preventDefault();\n      }\n      return;\n    }\n    e.preventDefault();\n    if (key === 'Escape' || key === 'Enter') {\n      onResize && onResize(currWidth, id);\n    }\n    var panelRect = panel.current.getBoundingClientRect();\n    newSize = position === 'bottom' ? panelRect.height : panelRect.width;\n    var delta = 0;\n    if (key === 'ArrowRight') {\n      delta = position === 'left' ? increment : -increment;\n    } else if (key === 'ArrowLeft') {\n      delta = position === 'left' ? -increment : increment;\n    } else if (key === 'ArrowUp') {\n      delta = increment;\n    } else if (key === 'ArrowDown') {\n      delta = -increment;\n    }\n    newSize = newSize + delta;\n    if (position === 'bottom') {\n      panel.current.style.overflowAnchor = 'none';\n    }\n    panel.current.style.setProperty('--pf-c-drawer__panel--md--FlexBasis', newSize + 'px');\n    currWidth = newSize;\n    setSeparatorValue(calcValueNow());\n  };\n  var boundaryCssVars = {};\n  if (defaultSize) {\n    boundaryCssVars['--pf-c-drawer__panel--md--FlexBasis'] = defaultSize;\n  }\n  if (minSize) {\n    boundaryCssVars['--pf-c-drawer__panel--md--FlexBasis--min'] = minSize;\n  }\n  if (maxSize) {\n    boundaryCssVars['--pf-c-drawer__panel--md--FlexBasis--max'] = maxSize;\n  }\n  return React.createElement(GenerateId, {\n    prefix: \"pf-drawer-panel-\"\n  }, function (panelId) {\n    return React.createElement(\"div\", Object.assign({\n      id: id || panelId,\n      className: css(styles.drawerPanel, isResizable && styles.modifiers.resizable, hasNoBorder && styles.modifiers.noBorder, formatBreakpointMods(widths, styles), colorVariant === DrawerColorVariant.light200 && styles.modifiers.light_200, className),\n      ref: panel,\n      onTransitionEnd: function onTransitionEnd(ev) {\n        if (!hidden && ev.nativeEvent.propertyName === 'transform') {\n          onExpand();\n        }\n        setIsExpandedInternal(!hidden);\n      },\n      hidden: hidden\n    }, (defaultSize || minSize || maxSize) && {\n      style: boundaryCssVars\n    }, props), isExpandedInternal && React.createElement(React.Fragment, null, isResizable && React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      className: css(styles.drawerSplitter, position !== 'bottom' && styles.modifiers.vertical),\n      role: \"separator\",\n      tabIndex: 0,\n      \"aria-orientation\": position === 'bottom' ? 'horizontal' : 'vertical',\n      \"aria-label\": resizeAriaLabel,\n      \"aria-valuenow\": separatorValue,\n      \"aria-valuemin\": 0,\n      \"aria-valuemax\": 100,\n      \"aria-controls\": id || panelId,\n      onMouseDown: handleMousedown,\n      onKeyDown: handleKeys,\n      onTouchStart: handleTouchStart,\n      ref: splitterRef\n    }, React.createElement(\"div\", {\n      className: css(styles.drawerSplitterHandle),\n      \"aria-hidden\": true\n    })), React.createElement(\"div\", {\n      className: css(styles.drawerPanelMain)\n    }, children)), !isResizable && children));\n  });\n};\nDrawerPanelContent.displayName = 'DrawerPanelContent';","map":{"version":3,"names":["React","styles","css","DrawerColorVariant","DrawerContext","formatBreakpointMods","GenerateId","isResizing","newSize","DrawerPanelContent","_a","className","_a$className","id","children","_a$hasNoBorder","hasNoBorder","_a$isResizable","isResizable","onResize","minSize","defaultSize","maxSize","_a$increment","increment","_a$resizeAriaLabel","resizeAriaLabel","widths","_a$colorVariant","colorVariant","default","props","__rest","panel","useRef","splitterRef","_React$useState","useState","_React$useState2","_slicedToArray","separatorValue","setSeparatorValue","_React$useContext","useContext","position","isExpanded","isStatic","onExpand","drawerRef","drawerContentRef","isInline","hidden","_React$useState3","_React$useState4","isExpandedInternal","setIsExpandedInternal","currWidth","panelRect","right","left","bottom","setInitialVals","useEffect","calcValueNow","splitterPos","drawerSize","current","getBoundingClientRect","top","newSplitterPos","Math","round","Number","EPSILON","handleTouchStart","e","stopPropagation","document","addEventListener","callbackTouchMove","passive","callbackTouchEnd","handleMousedown","preventDefault","callbackMouseMove","callbackMouseUp","classList","add","modifiers","resizing","handleMouseMove","mousePos","clientY","clientX","handleControlMove","handleTouchMove","stopImmediatePropagation","touchPos","touches","controlPosition","style","overflowAnchor","setProperty","handleMouseup","remove","removeEventListener","handleTouchEnd","useCallback","handleKeys","key","height","width","delta","boundaryCssVars","createElement","prefix","panelId","Object","assign","drawerPanel","resizable","noBorder","light200","light_200","ref","onTransitionEnd","ev","nativeEvent","propertyName","Fragment","drawerSplitter","vertical","role","tabIndex","onMouseDown","onKeyDown","onTouchStart","drawerSplitterHandle","drawerPanelMain","displayName"],"sources":["/data/stackhub-web/plugins/myapps/node_modules/@patternfly/react-core/src/components/Drawer/DrawerPanelContent.tsx"],"sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Drawer/drawer';\nimport { css } from '@patternfly/react-styles';\nimport { DrawerColorVariant, DrawerContext } from './Drawer';\nimport { formatBreakpointMods } from '../../helpers/util';\nimport { GenerateId } from '../../helpers/GenerateId/GenerateId';\n\nexport interface DrawerPanelContentProps extends React.HTMLProps<HTMLDivElement> {\n  /** Additional classes added to the drawer. */\n  className?: string;\n  /** ID of the drawer panel */\n  id?: string;\n  /** Content to be rendered in the drawer panel. */\n  children?: React.ReactNode;\n  /** Flag indicating that the drawer panel should not have a border. */\n  hasNoBorder?: boolean;\n  /** Flag indicating that the drawer panel should be resizable. */\n  isResizable?: boolean;\n  /** Callback for resize end. */\n  onResize?: (width: number, id: string) => void;\n  /** The minimum size of a drawer, in either pixels or percentage. */\n  minSize?: string;\n  /** The starting size of a resizable drawer, in either pixels or percentage. */\n  defaultSize?: string;\n  /** The maximum size of a drawer, in either pixels or percentage. */\n  maxSize?: string;\n  /** The increment amount for keyboard drawer resizing, in pixels. */\n  increment?: number;\n  /** Aria label for the resizable drawer splitter. */\n  resizeAriaLabel?: string;\n  /** Width for drawer panel at various breakpoints. Overriden by resizable drawer minSize and defaultSize. */\n  widths?: {\n    default?: 'width_25' | 'width_33' | 'width_50' | 'width_66' | 'width_75' | 'width_100';\n    lg?: 'width_25' | 'width_33' | 'width_50' | 'width_66' | 'width_75' | 'width_100';\n    xl?: 'width_25' | 'width_33' | 'width_50' | 'width_66' | 'width_75' | 'width_100';\n    '2xl'?: 'width_25' | 'width_33' | 'width_50' | 'width_66' | 'width_75' | 'width_100';\n  };\n  /** Color variant of the background of the drawer panel */\n  colorVariant?: DrawerColorVariant | 'light-200' | 'default';\n}\nlet isResizing: boolean = null;\nlet newSize: number = 0;\n\nexport const DrawerPanelContent: React.FunctionComponent<DrawerPanelContentProps> = ({\n  className = '',\n  id,\n  children,\n  hasNoBorder = false,\n  isResizable = false,\n  onResize,\n  minSize,\n  defaultSize,\n  maxSize,\n  increment = 5,\n  resizeAriaLabel = 'Resize',\n  widths,\n  colorVariant = DrawerColorVariant.default,\n  ...props\n}: DrawerPanelContentProps) => {\n  const panel = React.useRef<HTMLDivElement>();\n  const splitterRef = React.useRef<HTMLDivElement>();\n  const [separatorValue, setSeparatorValue] = React.useState(0);\n  const { position, isExpanded, isStatic, onExpand, drawerRef, drawerContentRef, isInline } = React.useContext(\n    DrawerContext\n  );\n  const hidden = isStatic ? false : !isExpanded;\n  const [isExpandedInternal, setIsExpandedInternal] = React.useState(!hidden);\n  let currWidth: number = 0;\n  let panelRect: DOMRect;\n  let right: number;\n  let left: number;\n  let bottom: number;\n  let setInitialVals: boolean = true;\n\n  React.useEffect(() => {\n    if (!isStatic && isExpanded) {\n      setIsExpandedInternal(isExpanded);\n    }\n  }, [isStatic, isExpanded]);\n\n  const calcValueNow = () => {\n    let splitterPos;\n    let drawerSize;\n\n    if (isInline && position === 'right') {\n      splitterPos = panel.current.getBoundingClientRect().right - splitterRef.current.getBoundingClientRect().left;\n      drawerSize = drawerRef.current.getBoundingClientRect().right - drawerRef.current.getBoundingClientRect().left;\n    } else if (isInline && position === 'left') {\n      splitterPos = splitterRef.current.getBoundingClientRect().right - panel.current.getBoundingClientRect().left;\n      drawerSize = drawerRef.current.getBoundingClientRect().right - drawerRef.current.getBoundingClientRect().left;\n    } else if (position === 'right') {\n      splitterPos =\n        drawerContentRef.current.getBoundingClientRect().right - splitterRef.current.getBoundingClientRect().left;\n      drawerSize =\n        drawerContentRef.current.getBoundingClientRect().right - drawerContentRef.current.getBoundingClientRect().left;\n    } else if (position === 'left') {\n      splitterPos =\n        splitterRef.current.getBoundingClientRect().right - drawerContentRef.current.getBoundingClientRect().left;\n      drawerSize =\n        drawerContentRef.current.getBoundingClientRect().right - drawerContentRef.current.getBoundingClientRect().left;\n    } else if (position === 'bottom') {\n      splitterPos =\n        drawerContentRef.current.getBoundingClientRect().bottom - splitterRef.current.getBoundingClientRect().top;\n      drawerSize =\n        drawerContentRef.current.getBoundingClientRect().bottom - drawerContentRef.current.getBoundingClientRect().top;\n    }\n\n    const newSplitterPos = (splitterPos / drawerSize) * 100;\n    return Math.round((newSplitterPos + Number.EPSILON) * 100) / 100;\n  };\n\n  const handleTouchStart = (e: React.TouchEvent) => {\n    e.stopPropagation();\n    document.addEventListener('touchmove', callbackTouchMove, { passive: false });\n    document.addEventListener('touchend', callbackTouchEnd);\n    isResizing = true;\n  };\n\n  const handleMousedown = (e: React.MouseEvent) => {\n    e.stopPropagation();\n    e.preventDefault();\n    document.addEventListener('mousemove', callbackMouseMove);\n    document.addEventListener('mouseup', callbackMouseUp);\n    drawerRef.current.classList.add(css(styles.modifiers.resizing));\n    isResizing = true;\n    setInitialVals = true;\n  };\n\n  const handleMouseMove = (e: MouseEvent) => {\n    const mousePos = position === 'bottom' ? e.clientY : e.clientX;\n    handleControlMove(e, mousePos);\n  };\n\n  const handleTouchMove = (e: TouchEvent) => {\n    e.preventDefault();\n    e.stopImmediatePropagation();\n    const touchPos = position === 'bottom' ? e.touches[0].clientY : e.touches[0].clientX;\n    handleControlMove(e, touchPos);\n  };\n\n  const handleControlMove = (e: MouseEvent | TouchEvent, controlPosition: number) => {\n    e.stopPropagation();\n    if (!isResizing) {\n      return;\n    }\n\n    if (setInitialVals) {\n      panelRect = panel.current.getBoundingClientRect();\n      right = panelRect.right;\n      left = panelRect.left;\n      bottom = panelRect.bottom;\n      setInitialVals = false;\n    }\n    const mousePos = controlPosition;\n    let newSize = 0;\n    if (position === 'right') {\n      newSize = right - mousePos;\n    } else if (position === 'left') {\n      newSize = mousePos - left;\n    } else {\n      newSize = bottom - mousePos;\n    }\n\n    if (position === 'bottom') {\n      panel.current.style.overflowAnchor = 'none';\n    }\n    panel.current.style.setProperty('--pf-c-drawer__panel--md--FlexBasis', newSize + 'px');\n    currWidth = newSize;\n    setSeparatorValue(calcValueNow());\n  };\n\n  const handleMouseup = () => {\n    if (!isResizing) {\n      return;\n    }\n    drawerRef.current.classList.remove(css(styles.modifiers.resizing));\n    isResizing = false;\n    onResize && onResize(currWidth, id);\n    setInitialVals = true;\n    document.removeEventListener('mousemove', callbackMouseMove);\n    document.removeEventListener('mouseup', callbackMouseUp);\n  };\n\n  const handleTouchEnd = (e: TouchEvent) => {\n    e.stopPropagation();\n    if (!isResizing) {\n      return;\n    }\n    isResizing = false;\n    onResize && onResize(currWidth, id);\n    document.removeEventListener('touchmove', callbackTouchMove);\n    document.removeEventListener('touchend', callbackTouchEnd);\n  };\n\n  const callbackMouseMove = React.useCallback(handleMouseMove, []);\n  const callbackTouchEnd = React.useCallback(handleTouchEnd, []);\n  const callbackTouchMove = React.useCallback(handleTouchMove, []);\n  const callbackMouseUp = React.useCallback(handleMouseup, []);\n\n  const handleKeys = (e: React.KeyboardEvent) => {\n    const key = e.key;\n    if (\n      key !== 'Escape' &&\n      key !== 'Enter' &&\n      key !== 'ArrowUp' &&\n      key !== 'ArrowDown' &&\n      key !== 'ArrowLeft' &&\n      key !== 'ArrowRight'\n    ) {\n      if (isResizing) {\n        e.preventDefault();\n      }\n      return;\n    }\n    e.preventDefault();\n\n    if (key === 'Escape' || key === 'Enter') {\n      onResize && onResize(currWidth, id);\n    }\n    const panelRect = panel.current.getBoundingClientRect();\n    newSize = position === 'bottom' ? panelRect.height : panelRect.width;\n    let delta = 0;\n    if (key === 'ArrowRight') {\n      delta = position === 'left' ? increment : -increment;\n    } else if (key === 'ArrowLeft') {\n      delta = position === 'left' ? -increment : increment;\n    } else if (key === 'ArrowUp') {\n      delta = increment;\n    } else if (key === 'ArrowDown') {\n      delta = -increment;\n    }\n    newSize = newSize + delta;\n    if (position === 'bottom') {\n      panel.current.style.overflowAnchor = 'none';\n    }\n    panel.current.style.setProperty('--pf-c-drawer__panel--md--FlexBasis', newSize + 'px');\n    currWidth = newSize;\n    setSeparatorValue(calcValueNow());\n  };\n  const boundaryCssVars: any = {};\n  if (defaultSize) {\n    boundaryCssVars['--pf-c-drawer__panel--md--FlexBasis'] = defaultSize;\n  }\n  if (minSize) {\n    boundaryCssVars['--pf-c-drawer__panel--md--FlexBasis--min'] = minSize;\n  }\n  if (maxSize) {\n    boundaryCssVars['--pf-c-drawer__panel--md--FlexBasis--max'] = maxSize;\n  }\n  return (\n    <GenerateId prefix=\"pf-drawer-panel-\">\n      {panelId => (\n        <div\n          id={id || panelId}\n          className={css(\n            styles.drawerPanel,\n            isResizable && styles.modifiers.resizable,\n            hasNoBorder && styles.modifiers.noBorder,\n            formatBreakpointMods(widths, styles),\n            colorVariant === DrawerColorVariant.light200 && styles.modifiers.light_200,\n            className\n          )}\n          ref={panel}\n          onTransitionEnd={ev => {\n            if (!hidden && ev.nativeEvent.propertyName === 'transform') {\n              onExpand();\n            }\n            setIsExpandedInternal(!hidden);\n          }}\n          hidden={hidden}\n          {...((defaultSize || minSize || maxSize) && {\n            style: boundaryCssVars as React.CSSProperties\n          })}\n          {...props}\n        >\n          {isExpandedInternal && (\n            <React.Fragment>\n              {isResizable && (\n                <React.Fragment>\n                  <div\n                    className={css(styles.drawerSplitter, position !== 'bottom' && styles.modifiers.vertical)}\n                    role=\"separator\"\n                    tabIndex={0}\n                    aria-orientation={position === 'bottom' ? 'horizontal' : 'vertical'}\n                    aria-label={resizeAriaLabel}\n                    aria-valuenow={separatorValue}\n                    aria-valuemin={0}\n                    aria-valuemax={100}\n                    aria-controls={id || panelId}\n                    onMouseDown={handleMousedown}\n                    onKeyDown={handleKeys}\n                    onTouchStart={handleTouchStart}\n                    ref={splitterRef}\n                  >\n                    <div className={css(styles.drawerSplitterHandle)} aria-hidden></div>\n                  </div>\n                  <div className={css(styles.drawerPanelMain)}>{children}</div>\n                </React.Fragment>\n              )}\n              {!isResizable && children}\n            </React.Fragment>\n          )}\n        </div>\n      )}\n    </GenerateId>\n  );\n};\nDrawerPanelContent.displayName = 'DrawerPanelContent';\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
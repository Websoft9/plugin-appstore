{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Page/page';\nimport { formatBreakpointMods } from '../../helpers/util';\nimport { PageContext } from './PageContext';\nexport var PageNavigation = function PageNavigation(_a) {\n  var _a$className = _a.className,\n    className = _a$className === void 0 ? '' : _a$className,\n    children = _a.children,\n    isWidthLimited = _a.isWidthLimited,\n    sticky = _a.sticky,\n    stickyOnBreakpoint = _a.stickyOnBreakpoint,\n    _a$hasShadowTop = _a.hasShadowTop,\n    hasShadowTop = _a$hasShadowTop === void 0 ? false : _a$hasShadowTop,\n    _a$hasShadowBottom = _a.hasShadowBottom,\n    hasShadowBottom = _a$hasShadowBottom === void 0 ? false : _a$hasShadowBottom,\n    _a$hasOverflowScroll = _a.hasOverflowScroll,\n    hasOverflowScroll = _a$hasOverflowScroll === void 0 ? false : _a$hasOverflowScroll,\n    ariaLabel = _a['aria-label'],\n    props = __rest(_a, [\"className\", \"children\", \"isWidthLimited\", \"sticky\", \"stickyOnBreakpoint\", \"hasShadowTop\", \"hasShadowBottom\", \"hasOverflowScroll\", 'aria-label']);\n  var _React$useContext = React.useContext(PageContext),\n    height = _React$useContext.height,\n    getVerticalBreakpoint = _React$useContext.getVerticalBreakpoint;\n  React.useEffect(function () {\n    if (hasOverflowScroll && !ariaLabel) {\n      /* eslint-disable no-console */\n      console.warn('PageNavigation: An accessible aria-label is required when hasOverflowScroll is set to true.');\n    }\n  }, [hasOverflowScroll, ariaLabel]);\n  return React.createElement(\"div\", Object.assign({\n    className: css(styles.pageMainNav, formatBreakpointMods(stickyOnBreakpoint, styles, 'sticky-', getVerticalBreakpoint(height), true), isWidthLimited && styles.modifiers.limitWidth, sticky === 'top' && styles.modifiers.stickyTop, sticky === 'bottom' && styles.modifiers.stickyBottom, hasShadowTop && styles.modifiers.shadowTop, hasShadowBottom && styles.modifiers.shadowBottom, hasOverflowScroll && styles.modifiers.overflowScroll, className)\n  }, hasOverflowScroll && {\n    tabIndex: 0\n  }, {\n    \"aria-label\": ariaLabel\n  }, props), isWidthLimited && React.createElement(\"div\", {\n    className: css(styles.pageMainBody)\n  }, children), !isWidthLimited && children);\n};\nPageNavigation.displayName = 'PageNavigation';","map":{"version":3,"names":["React","css","styles","formatBreakpointMods","PageContext","PageNavigation","_a","className","_a$className","children","isWidthLimited","sticky","stickyOnBreakpoint","_a$hasShadowTop","hasShadowTop","_a$hasShadowBottom","hasShadowBottom","_a$hasOverflowScroll","hasOverflowScroll","ariaLabel","props","__rest","_React$useContext","useContext","height","getVerticalBreakpoint","useEffect","console","warn","createElement","Object","assign","pageMainNav","modifiers","limitWidth","stickyTop","stickyBottom","shadowTop","shadowBottom","overflowScroll","tabIndex","pageMainBody","displayName"],"sources":["/data/stackhub-web/plugins/myapps/node_modules/@patternfly/react-core/src/components/Page/PageNavigation.tsx"],"sourcesContent":["import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Page/page';\nimport { formatBreakpointMods } from '../../helpers/util';\nimport { PageContext } from './PageContext';\n\nexport interface PageNavigationProps extends React.HTMLProps<HTMLDivElement> {\n  /** Additional classes to apply to the PageNavigation */\n  className?: string;\n  /** Content rendered inside of the PageNavigation */\n  children?: React.ReactNode;\n  /** Limits the width of the PageNavigation */\n  isWidthLimited?: boolean;\n  /**  @deprecated Use the stickyOnBreakpoint prop instead - Modifier indicating if the PageBreadcrumb is sticky to the top or bottom */\n  sticky?: 'top' | 'bottom';\n  /** Modifier indicating if the PageBreadcrumb is sticky to the top or bottom at various breakpoints */\n  stickyOnBreakpoint?: {\n    default?: 'top' | 'bottom';\n    sm?: 'top' | 'bottom';\n    md?: 'top' | 'bottom';\n    lg?: 'top' | 'bottom';\n    xl?: 'top' | 'bottom';\n    '2xl'?: 'top' | 'bottom';\n  };\n  /** Flag indicating if PageNavigation should have a shadow at the top */\n  hasShadowTop?: boolean;\n  /** Flag indicating if PageNavigation should have a shadow at the bottom */\n  hasShadowBottom?: boolean;\n  /** Flag indicating if the PageNavigation has a scrolling overflow */\n  hasOverflowScroll?: boolean;\n  /** Adds an accessible name to the page navigation. Required when the hasOverflowScroll prop is set to true. */\n  'aria-label'?: string;\n}\n\nexport const PageNavigation = ({\n  className = '',\n  children,\n  isWidthLimited,\n  sticky,\n  stickyOnBreakpoint,\n  hasShadowTop = false,\n  hasShadowBottom = false,\n  hasOverflowScroll = false,\n  'aria-label': ariaLabel,\n  ...props\n}: PageNavigationProps) => {\n  const { height, getVerticalBreakpoint } = React.useContext(PageContext);\n\n  React.useEffect(() => {\n    if (hasOverflowScroll && !ariaLabel) {\n      /* eslint-disable no-console */\n      console.warn('PageNavigation: An accessible aria-label is required when hasOverflowScroll is set to true.');\n    }\n  }, [hasOverflowScroll, ariaLabel]);\n\n  return (\n    <div\n      className={css(\n        styles.pageMainNav,\n        formatBreakpointMods(stickyOnBreakpoint, styles, 'sticky-', getVerticalBreakpoint(height), true),\n        isWidthLimited && styles.modifiers.limitWidth,\n        sticky === 'top' && styles.modifiers.stickyTop,\n        sticky === 'bottom' && styles.modifiers.stickyBottom,\n        hasShadowTop && styles.modifiers.shadowTop,\n        hasShadowBottom && styles.modifiers.shadowBottom,\n        hasOverflowScroll && styles.modifiers.overflowScroll,\n        className\n      )}\n      {...(hasOverflowScroll && { tabIndex: 0 })}\n      aria-label={ariaLabel}\n      {...props}\n    >\n      {isWidthLimited && <div className={css(styles.pageMainBody)}>{children}</div>}\n      {!isWidthLimited && children}\n    </div>\n  );\n};\nPageNavigation.displayName = 'PageNavigation';\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,GAAG,QAAQ,0BAA0B;AAC9C,OAAOC,MAAM,MAAM,mDAAmD;AACtE,SAASC,oBAAoB,QAAQ,oBAAoB;AACzD,SAASC,WAAW,QAAQ,eAAe;AA8B3C,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAcA,CAAIC,EAWT,EAAI;qBAFDA,EAEH,CAVpBC,SAAS;IAATA,SAAS,GAAAC,YAAA,cAAG,EAAE,GAAAA,YAAA;IACdC,QAAQ,GAOeH,EAEH,CATpBG,QAAQ;IACRC,cAAc,GAMSJ,EAEH,CARpBI,cAAc;IACdC,MAAM,GAKiBL,EAEH,CAPpBK,MAAM;IACNC,kBAAkB,GAIKN,EAEH,CANpBM,kBAAkB;IAAAC,eAAA,GAIKP,EAEH,CALpBQ,YAAY;IAAZA,YAAY,GAAAD,eAAA,cAAG,KAAK,GAAAA,eAAA;IAAAE,kBAAA,GAGGT,EAEH,CAJpBU,eAAe;IAAfA,eAAe,GAAAD,kBAAA,cAAG,KAAK,GAAAA,kBAAA;IAAAE,oBAAA,GAEAX,EAEH,CAHpBY,iBAAiB;IAAjBA,iBAAiB,GAAAD,oBAAA,cAAG,KAAK,GAAAA,oBAAA;IACXE,SAAS,GAAAb,EAEH,CAFpB,YAAY;IACTc,KAAK,GAAAC,MAAA,CAAAf,EAAA,EAVqB,iJAW9B,CADS;EAER,IAAAgB,iBAAA,GAA0CtB,KAAK,CAACuB,UAAU,CAACnB,WAAW,CAAC;IAA/DoB,MAAM,GAAAF,iBAAA,CAANE,MAAM;IAAEC,qBAAqB,GAAAH,iBAAA,CAArBG,qBAAqB;EAErCzB,KAAK,CAAC0B,SAAS,CAAC,YAAK;IACnB,IAAIR,iBAAiB,IAAI,CAACC,SAAS,EAAE;MACnC;MACAQ,OAAO,CAACC,IAAI,CAAC,6FAA6F,CAAC;;EAE/G,CAAC,EAAE,CAACV,iBAAiB,EAAEC,SAAS,CAAC,CAAC;EAElC,OACEnB,KAAA,CAAA6B,aAAA,QAAAC,MAAA,CAAAC,MAAA;IACExB,SAAS,EAAEN,GAAG,CACZC,MAAM,CAAC8B,WAAW,EAClB7B,oBAAoB,CAACS,kBAAkB,EAAEV,MAAM,EAAE,SAAS,EAAEuB,qBAAqB,CAACD,MAAM,CAAC,EAAE,IAAI,CAAC,EAChGd,cAAc,IAAIR,MAAM,CAAC+B,SAAS,CAACC,UAAU,EAC7CvB,MAAM,KAAK,KAAK,IAAIT,MAAM,CAAC+B,SAAS,CAACE,SAAS,EAC9CxB,MAAM,KAAK,QAAQ,IAAIT,MAAM,CAAC+B,SAAS,CAACG,YAAY,EACpDtB,YAAY,IAAIZ,MAAM,CAAC+B,SAAS,CAACI,SAAS,EAC1CrB,eAAe,IAAId,MAAM,CAAC+B,SAAS,CAACK,YAAY,EAChDpB,iBAAiB,IAAIhB,MAAM,CAAC+B,SAAS,CAACM,cAAc,EACpDhC,SAAS;EACV,GACIW,iBAAiB,IAAI;IAAEsB,QAAQ,EAAE;EAAC,CAAE,EAAC;IAAA,cAC9BrB;EAAS,GACjBC,KAAK,GAERV,cAAc,IAAIV,KAAA,CAAA6B,aAAA;IAAKtB,SAAS,EAAEN,GAAG,CAACC,MAAM,CAACuC,YAAY;EAAC,GAAGhC,QAAQ,CAAO,EAC5E,CAACC,cAAc,IAAID,QAAQ,CACxB;AAEV,CAAC;AACDJ,cAAc,CAACqC,WAAW,GAAG,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}
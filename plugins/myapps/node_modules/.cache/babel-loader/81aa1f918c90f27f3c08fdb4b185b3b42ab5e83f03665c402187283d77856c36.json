{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/DragDrop/drag-drop';\nimport { DroppableContext } from './DroppableContext';\nexport var Droppable = function Droppable(_a) {\n  var className = _a.className,\n    children = _a.children,\n    _a$zone = _a.zone,\n    zone = _a$zone === void 0 ? 'defaultZone' : _a$zone,\n    _a$droppableId = _a.droppableId,\n    droppableId = _a$droppableId === void 0 ? 'defaultId' : _a$droppableId,\n    _a$hasNoWrapper = _a.hasNoWrapper,\n    hasNoWrapper = _a$hasNoWrapper === void 0 ? false : _a$hasNoWrapper,\n    props = __rest(_a, [\"className\", \"children\", \"zone\", \"droppableId\", \"hasNoWrapper\"]);\n  var childProps = Object.assign({\n    'data-pf-droppable': zone,\n    'data-pf-droppableid': droppableId,\n    // if has no wrapper is set, don't overwrite children className with the className prop\n    className: hasNoWrapper && React.Children.count(children) === 1 ? css(styles.droppable, className, children.props.className) : css(styles.droppable, className)\n  }, props);\n  return React.createElement(DroppableContext.Provider, {\n    value: {\n      zone: zone,\n      droppableId: droppableId\n    }\n  }, hasNoWrapper ? React.cloneElement(children, childProps) : React.createElement(\"div\", Object.assign({}, childProps), children));\n};\nDroppable.displayName = 'Droppable';","map":{"version":3,"names":["React","css","styles","DroppableContext","Droppable","_a","className","children","_a$zone","zone","_a$droppableId","droppableId","_a$hasNoWrapper","hasNoWrapper","props","__rest","childProps","Object","assign","Children","count","droppable","createElement","Provider","value","cloneElement","displayName"],"sources":["/data/stackhub-web/plugins/myapps/node_modules/@patternfly/react-core/src/components/DragDrop/Droppable.tsx"],"sourcesContent":["import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/DragDrop/drag-drop';\nimport { DroppableContext } from './DroppableContext';\n\ninterface DroppableProps extends React.HTMLProps<HTMLDivElement> {\n  /** Content rendered inside DragDrop */\n  children?: React.ReactNode;\n  /** Class to add to outer div */\n  className?: string;\n  /** Name of zone that items can be dragged between. Should specify if there is more than one Droppable on the page. */\n  zone?: string;\n  /** Id to be passed back on drop events */\n  droppableId?: string;\n  /** Don't wrap the component in a div. Requires passing a single child. */\n  hasNoWrapper?: boolean;\n}\n\nexport const Droppable: React.FunctionComponent<DroppableProps> = ({\n  className,\n  children,\n  zone = 'defaultZone',\n  droppableId = 'defaultId',\n  hasNoWrapper = false,\n  ...props\n}: DroppableProps) => {\n  const childProps = {\n    'data-pf-droppable': zone,\n    'data-pf-droppableid': droppableId,\n    // if has no wrapper is set, don't overwrite children className with the className prop\n    className:\n      hasNoWrapper && React.Children.count(children) === 1\n        ? css(styles.droppable, className, (children as React.ReactElement).props.className)\n        : css(styles.droppable, className),\n    ...props\n  };\n\n  return (\n    <DroppableContext.Provider value={{ zone, droppableId }}>\n      {hasNoWrapper ? (\n        React.cloneElement(children as React.ReactElement, childProps)\n      ) : (\n        <div {...childProps}>{children}</div>\n      )}\n    </DroppableContext.Provider>\n  );\n};\nDroppable.displayName = 'Droppable';\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,GAAG,QAAQ,0BAA0B;AAC9C,OAAOC,MAAM,MAAM,4DAA4D;AAC/E,SAASC,gBAAgB,QAAQ,oBAAoB;AAerD,OAAO,IAAMC,SAAS,GAA4C,SAArDA,SAASA,CAA6CC,EAOlD,EAAI;MANnBC,SAAS,GAIWD,EAEL,CANfC,SAAS;IACTC,QAAQ,GAGYF,EAEL,CALfE,QAAQ;IAAAC,OAAA,GAGYH,EAEL,CAJfI,IAAI;IAAJA,IAAI,GAAAD,OAAA,cAAG,aAAa,GAAAA,OAAA;IAAAE,cAAA,GAEAL,EAEL,CAHfM,WAAW;IAAXA,WAAW,GAAAD,cAAA,cAAG,WAAW,GAAAA,cAAA;IAAAE,eAAA,GACLP,EAEL,CAFfQ,YAAY;IAAZA,YAAY,GAAAD,eAAA,cAAG,KAAK,GAAAA,eAAA;IACjBE,KAAK,GAAAC,MAAA,CAAAV,EAAA,EANyD,gEAOlE,CADS;EAER,IAAMW,UAAU,GAAAC,MAAA,CAAAC,MAAA;IACd,mBAAmB,EAAET,IAAI;IACzB,qBAAqB,EAAEE,WAAW;IAClC;IACAL,SAAS,EACPO,YAAY,IAAIb,KAAK,CAACmB,QAAQ,CAACC,KAAK,CAACb,QAAQ,CAAC,KAAK,CAAC,GAChDN,GAAG,CAACC,MAAM,CAACmB,SAAS,EAAEf,SAAS,EAAGC,QAA+B,CAACO,KAAK,CAACR,SAAS,CAAC,GAClFL,GAAG,CAACC,MAAM,CAACmB,SAAS,EAAEf,SAAS;EAAC,GACnCQ,KAAK,CACT;EAED,OACEd,KAAA,CAAAsB,aAAA,CAACnB,gBAAgB,CAACoB,QAAQ;IAACC,KAAK,EAAE;MAAEf,IAAI,EAAJA,IAAI;MAAEE,WAAW,EAAXA;IAAW;EAAE,GACpDE,YAAY,GACXb,KAAK,CAACyB,YAAY,CAAClB,QAA8B,EAAES,UAAU,CAAC,GAE9DhB,KAAA,CAAAsB,aAAA,QAAAL,MAAA,CAAAC,MAAA,KAASF,UAAU,GAAGT,QAAQ,CAC/B,CACyB;AAEhC,CAAC;AACDH,SAAS,CAACsB,WAAW,GAAG,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}
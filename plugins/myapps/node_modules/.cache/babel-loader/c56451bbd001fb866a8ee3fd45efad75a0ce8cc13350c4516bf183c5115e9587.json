{"ast":null,"code":"import _classCallCheck from \"/data/stackhub-web/plugins/myapps/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/data/stackhub-web/plugins/myapps/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/data/stackhub-web/plugins/myapps/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/data/stackhub-web/plugins/myapps/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { ToggleTemplate } from './ToggleTemplate';\nimport styles from '@patternfly/react-styles/css/components/Pagination/pagination';\nimport { css } from '@patternfly/react-styles';\nimport { fillTemplate } from '../../helpers';\nimport { Navigation } from './Navigation';\nimport { PaginationOptionsMenu } from './PaginationOptionsMenu';\nimport { getOUIAProps, getDefaultOUIAId } from '../../helpers';\nimport { formatBreakpointMods } from '../../helpers/util';\nimport widthChars from '@patternfly/react-tokens/dist/esm/c_pagination__nav_page_select_c_form_control_width_chars';\nexport var PaginationVariant;\n(function (PaginationVariant) {\n  PaginationVariant[\"bottom\"] = \"bottom\";\n  PaginationVariant[\"top\"] = \"top\";\n})(PaginationVariant || (PaginationVariant = {}));\nvar defaultPerPageOptions = [{\n  title: '10',\n  value: 10\n}, {\n  title: '20',\n  value: 20\n}, {\n  title: '50',\n  value: 50\n}, {\n  title: '100',\n  value: 100\n}];\nvar handleInputWidth = function handleInputWidth(lastPage, node) {\n  if (!node) {\n    return;\n  }\n  var len = String(lastPage).length;\n  if (len >= 3) {\n    node.style.setProperty(widthChars.name, \"\".concat(len));\n  } else {\n    node.style.setProperty(widthChars.name, '2');\n  }\n};\nexport var Pagination = /*#__PURE__*/function (_React$Component) {\n  _inherits(Pagination, _React$Component);\n  var _super = _createSuper(Pagination);\n  function Pagination() {\n    var _this;\n    _classCallCheck(this, Pagination);\n    _this = _super.apply(this, arguments);\n    _this.paginationRef = React.createRef();\n    _this.state = {\n      ouiaStateId: getDefaultOUIAId(Pagination.displayName, _this.props.variant)\n    };\n    return _this;\n  }\n  _createClass(Pagination, [{\n    key: \"getLastPage\",\n    value: function getLastPage() {\n      var _this$props = this.props,\n        itemCount = _this$props.itemCount,\n        perPage = _this$props.perPage,\n        page = _this$props.page;\n      // when itemCount is not known let's set lastPage as page+1 as we don't know the total count\n      return itemCount || itemCount === 0 ? Math.ceil(itemCount / perPage) || 0 : page + 1;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var node = this.paginationRef.current;\n      handleInputWidth(this.getLastPage(), node);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var node = this.paginationRef.current;\n      if (prevProps.perPage !== this.props.perPage || prevProps.itemCount !== this.props.itemCount) {\n        handleInputWidth(this.getLastPage(), node);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _a = this.props,\n        children = _a.children,\n        className = _a.className,\n        variant = _a.variant,\n        isDisabled = _a.isDisabled,\n        isCompact = _a.isCompact,\n        isStatic = _a.isStatic,\n        isSticky = _a.isSticky,\n        perPage = _a.perPage,\n        titles = _a.titles,\n        firstPage = _a.firstPage,\n        propPage = _a.page,\n        offset = _a.offset,\n        defaultToFullPage = _a.defaultToFullPage,\n        itemCount = _a.itemCount,\n        itemsStart = _a.itemsStart,\n        itemsEnd = _a.itemsEnd,\n        perPageOptions = _a.perPageOptions,\n        dropDirectionProp = _a.dropDirection,\n        widgetId = _a.widgetId,\n        toggleTemplate = _a.toggleTemplate,\n        onSetPage = _a.onSetPage,\n        onPerPageSelect = _a.onPerPageSelect,\n        onFirstClick = _a.onFirstClick,\n        onPreviousClick = _a.onPreviousClick,\n        onNextClick = _a.onNextClick,\n        onPageInput = _a.onPageInput,\n        onLastClick = _a.onLastClick,\n        ouiaId = _a.ouiaId,\n        ouiaSafe = _a.ouiaSafe,\n        perPageComponent = _a.perPageComponent,\n        usePageInsets = _a.usePageInsets,\n        inset = _a.inset,\n        props = __rest(_a, [\"children\", \"className\", \"variant\", \"isDisabled\", \"isCompact\", \"isStatic\", \"isSticky\", \"perPage\", \"titles\", \"firstPage\", \"page\", \"offset\", \"defaultToFullPage\", \"itemCount\", \"itemsStart\", \"itemsEnd\", \"perPageOptions\", \"dropDirection\", \"widgetId\", \"toggleTemplate\", \"onSetPage\", \"onPerPageSelect\", \"onFirstClick\", \"onPreviousClick\", \"onNextClick\", \"onPageInput\", \"onLastClick\", \"ouiaId\", \"ouiaSafe\", \"perPageComponent\", \"usePageInsets\", \"inset\"]);\n      var dropDirection = dropDirectionProp || (variant === 'bottom' && !isStatic ? 'up' : 'down');\n      var page = propPage;\n      if (!page && offset) {\n        page = Math.ceil(offset / perPage);\n      }\n      if (page === 0 && !itemCount) {\n        page = 1;\n      }\n      var lastPage = this.getLastPage();\n      var firstIndex = (page - 1) * perPage + 1;\n      var lastIndex = page * perPage;\n      if (itemCount || itemCount === 0) {\n        firstIndex = itemCount <= 0 ? 0 : (page - 1) * perPage + 1;\n        if (page < firstPage && itemCount > 0) {\n          page = firstPage;\n        } else if (page > lastPage) {\n          page = lastPage;\n        }\n        if (itemCount >= 0) {\n          lastIndex = page === lastPage || itemCount === 0 ? itemCount : page * perPage;\n        }\n      }\n      var toggleTemplateProps = {\n        firstIndex: firstIndex,\n        lastIndex: lastIndex,\n        itemCount: itemCount,\n        itemsTitle: titles.items,\n        ofWord: titles.ofWord\n      };\n      return React.createElement(\"div\", Object.assign({\n        ref: this.paginationRef,\n        className: css(styles.pagination, variant === PaginationVariant.bottom && styles.modifiers.bottom, usePageInsets && styles.modifiers.pageInsets, formatBreakpointMods(inset, styles), isCompact && styles.modifiers.compact, isStatic && styles.modifiers.static, isSticky && styles.modifiers.sticky, className)\n      }, widgetId && {\n        id: \"\".concat(widgetId, \"-\").concat(variant, \"-pagination\")\n      }, getOUIAProps(Pagination.displayName, ouiaId !== undefined ? ouiaId : this.state.ouiaStateId, ouiaSafe), props), variant === PaginationVariant.top && React.createElement(\"div\", {\n        className: css(styles.paginationTotalItems)\n      }, toggleTemplate && typeof toggleTemplate === 'string' && fillTemplate(toggleTemplate, toggleTemplateProps), toggleTemplate && typeof toggleTemplate !== 'string' && toggleTemplate(toggleTemplateProps), !toggleTemplate && React.createElement(ToggleTemplate, {\n        firstIndex: firstIndex,\n        lastIndex: lastIndex,\n        itemCount: itemCount,\n        itemsTitle: titles.items,\n        ofWord: titles.ofWord\n      })), React.createElement(PaginationOptionsMenu, {\n        itemsPerPageTitle: titles.itemsPerPage,\n        perPageSuffix: titles.perPageSuffix,\n        itemsTitle: isCompact ? '' : titles.items,\n        optionsToggle: titles.optionsToggle,\n        perPageOptions: perPageOptions,\n        firstIndex: itemsStart !== null ? itemsStart : firstIndex,\n        lastIndex: itemsEnd !== null ? itemsEnd : lastIndex,\n        ofWord: titles.ofWord,\n        defaultToFullPage: defaultToFullPage,\n        itemCount: itemCount,\n        page: page,\n        perPage: perPage,\n        lastPage: lastPage,\n        onPerPageSelect: onPerPageSelect,\n        dropDirection: dropDirection,\n        widgetId: \"\".concat(widgetId, \"-\").concat(variant),\n        toggleTemplate: toggleTemplate,\n        isDisabled: isDisabled,\n        perPageComponent: perPageComponent\n      }), React.createElement(Navigation, {\n        pagesTitle: titles.page,\n        pagesTitlePlural: titles.pages,\n        toLastPage: titles.toLastPage,\n        toPreviousPage: titles.toPreviousPage,\n        toNextPage: titles.toNextPage,\n        toFirstPage: titles.toFirstPage,\n        currPage: titles.currPage,\n        paginationTitle: titles.paginationTitle,\n        ofWord: titles.ofWord,\n        page: itemCount && itemCount <= 0 ? 0 : page,\n        perPage: perPage,\n        itemCount: itemCount,\n        firstPage: itemsStart !== null ? itemsStart : 1,\n        lastPage: lastPage,\n        onSetPage: onSetPage,\n        onFirstClick: onFirstClick,\n        onPreviousClick: onPreviousClick,\n        onNextClick: onNextClick,\n        onLastClick: onLastClick,\n        onPageInput: onPageInput,\n        isDisabled: isDisabled,\n        isCompact: isCompact\n      }), children);\n    }\n  }]);\n  return Pagination;\n}(React.Component);\nPagination.displayName = 'Pagination';\nPagination.defaultProps = {\n  children: null,\n  className: '',\n  variant: PaginationVariant.top,\n  isDisabled: false,\n  isCompact: false,\n  isSticky: false,\n  perPage: defaultPerPageOptions[0].value,\n  titles: {\n    items: '',\n    page: '',\n    pages: '',\n    itemsPerPage: 'Items per page',\n    perPageSuffix: 'per page',\n    toFirstPage: 'Go to first page',\n    toPreviousPage: 'Go to previous page',\n    toLastPage: 'Go to last page',\n    toNextPage: 'Go to next page',\n    optionsToggle: '',\n    currPage: 'Current page',\n    paginationTitle: 'Pagination',\n    ofWord: 'of'\n  },\n  firstPage: 1,\n  page: 0,\n  offset: 0,\n  defaultToFullPage: false,\n  itemsStart: null,\n  itemsEnd: null,\n  perPageOptions: defaultPerPageOptions,\n  widgetId: 'options-menu',\n  onSetPage: function onSetPage() {\n    return undefined;\n  },\n  onPerPageSelect: function onPerPageSelect() {\n    return undefined;\n  },\n  onFirstClick: function onFirstClick() {\n    return undefined;\n  },\n  onPreviousClick: function onPreviousClick() {\n    return undefined;\n  },\n  onNextClick: function onNextClick() {\n    return undefined;\n  },\n  onPageInput: function onPageInput() {\n    return undefined;\n  },\n  onLastClick: function onLastClick() {\n    return undefined;\n  },\n  ouiaSafe: true,\n  perPageComponent: 'div'\n};","map":{"version":3,"names":["React","ToggleTemplate","styles","css","fillTemplate","Navigation","PaginationOptionsMenu","getOUIAProps","getDefaultOUIAId","formatBreakpointMods","widthChars","PaginationVariant","defaultPerPageOptions","title","value","handleInputWidth","lastPage","node","len","String","length","style","setProperty","name","concat","Pagination","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","paginationRef","createRef","state","ouiaStateId","displayName","props","variant","_createClass","key","getLastPage","_this$props","itemCount","perPage","page","Math","ceil","componentDidMount","current","componentDidUpdate","prevProps","render","_a","children","className","isDisabled","isCompact","isStatic","isSticky","titles","firstPage","propPage","offset","defaultToFullPage","itemsStart","itemsEnd","perPageOptions","dropDirectionProp","dropDirection","widgetId","toggleTemplate","onSetPage","onPerPageSelect","onFirstClick","onPreviousClick","onNextClick","onPageInput","onLastClick","ouiaId","ouiaSafe","perPageComponent","usePageInsets","inset","__rest","firstIndex","lastIndex","toggleTemplateProps","itemsTitle","items","ofWord","createElement","Object","assign","ref","pagination","bottom","modifiers","pageInsets","compact","static","sticky","id","undefined","top","paginationTotalItems","itemsPerPageTitle","itemsPerPage","perPageSuffix","optionsToggle","pagesTitle","pagesTitlePlural","pages","toLastPage","toPreviousPage","toNextPage","toFirstPage","currPage","paginationTitle","Component","defaultProps"],"sources":["/data/stackhub-web/plugins/myapps/node_modules/@patternfly/react-core/src/components/Pagination/Pagination.tsx"],"sourcesContent":["import * as React from 'react';\nimport { ToggleTemplate, ToggleTemplateProps } from './ToggleTemplate';\nimport styles from '@patternfly/react-styles/css/components/Pagination/pagination';\nimport { css } from '@patternfly/react-styles';\n\nimport { fillTemplate } from '../../helpers';\nimport { Navigation } from './Navigation';\nimport { PaginationOptionsMenu } from './PaginationOptionsMenu';\nimport { getOUIAProps, OUIAProps, getDefaultOUIAId, PickOptional } from '../../helpers';\nimport { formatBreakpointMods } from '../../helpers/util';\nimport widthChars from '@patternfly/react-tokens/dist/esm/c_pagination__nav_page_select_c_form_control_width_chars';\n\nexport enum PaginationVariant {\n  bottom = 'bottom',\n  top = 'top'\n}\n\nconst defaultPerPageOptions = [\n  {\n    title: '10',\n    value: 10\n  },\n  {\n    title: '20',\n    value: 20\n  },\n  {\n    title: '50',\n    value: 50\n  },\n  {\n    title: '100',\n    value: 100\n  }\n];\n\n/** Properties to customize the content and behavior of the pagination dropdown options. These\n * properties should be passed into the pagination component's perPageOptions property.\n */\n\nexport interface PerPageOptions {\n  /** The text title of the option, which is rendered inside the pagination dropdown menu. */\n  title?: string;\n  /** The value of the option, which determines how many items are displayed per page. */\n  value?: number;\n}\n\n/** Properties to customize various pagination titles. The following properties should be\n * passed into the pagination component's title property.\n */\n\nexport interface PaginationTitles {\n  /** Accessible label for the input displaying the current page. */\n  currPage?: string;\n  /** The type or title of the items being paginated. */\n  items?: string;\n  /** The title of the pagination options menu. */\n  itemsPerPage?: string;\n  /** Label for the English word \"of\". */\n  ofWord?: string;\n  /** Accessible label for the options toggle. */\n  optionsToggle?: string;\n  /** The title of a page displayed beside the page number. */\n  page?: string;\n  /** The title of a page displayed beside the page number (plural form). */\n  pages?: string;\n  /** Accessible label for the pagination component. */\n  paginationTitle?: string;\n  /** The suffix to be displayed after each option on the options menu dropdown. */\n  perPageSuffix?: string;\n  /** Accessible label for the button which moves to the first page. */\n  toFirstPage?: string;\n  /** Accessible label for the button which moves to the last page. */\n  toLastPage?: string;\n  /** Accessible label for the button which moves to the next page. */\n  toNextPage?: string;\n  /** Accessible label for the button which moves to the previous page. */\n  toPreviousPage?: string;\n}\n\nexport type OnSetPage = (\n  _evt: React.MouseEvent | React.KeyboardEvent | MouseEvent,\n  newPage: number,\n  perPage?: number,\n  startIdx?: number,\n  endIdx?: number\n) => void;\n\nexport type OnPerPageSelect = (\n  _evt: React.MouseEvent | React.KeyboardEvent | MouseEvent,\n  newPerPage: number,\n  newPage: number,\n  startIdx?: number,\n  endIdx?: number\n) => void;\n\n/** The main pagination component. */\n\nexport interface PaginationProps extends React.HTMLProps<HTMLDivElement>, OUIAProps {\n  /** What should be rendered inside the pagination. */\n  children?: React.ReactNode;\n  /** Additional classes for the pagination container. */\n  className?: string;\n  /** Indicate whether to show last full page of results when user selects perPage value\n   * greater than remaining rows.\n   */\n  defaultToFullPage?: boolean;\n  /** Direction of dropdown context menu. */\n  dropDirection?: 'up' | 'down';\n  /** Page to start at. */\n  firstPage?: number;\n  /** @beta Flag indicating that pagination should use page insets. */\n  usePageInsets?: boolean;\n  /** @beta Insets at various breakpoints. */\n  inset?: {\n    default?: 'insetNone' | 'insetSm' | 'insetMd' | 'insetLg' | 'insetXl' | 'inset2xl';\n    sm?: 'insetNone' | 'insetSm' | 'insetMd' | 'insetLg' | 'insetXl' | 'inset2xl';\n    md?: 'insetNone' | 'insetSm' | 'insetMd' | 'insetLg' | 'insetXl' | 'inset2xl';\n    lg?: 'insetNone' | 'insetSm' | 'insetMd' | 'insetLg' | 'insetXl' | 'inset2xl';\n    xl?: 'insetNone' | 'insetSm' | 'insetMd' | 'insetLg' | 'insetXl' | 'inset2xl';\n    '2xl'?: 'insetNone' | 'insetSm' | 'insetMd' | 'insetLg' | 'insetXl' | 'inset2xl';\n  };\n  /** Flag indicating if pagination is compact. */\n  isCompact?: boolean;\n  /** Flag indicating if pagination is disabled. */\n  isDisabled?: boolean;\n  /** Flag indicating if pagination should not be sticky on mobile. */\n  isStatic?: boolean;\n  /** Flag indicating if pagination should stick to its position (based on variant). */\n  isSticky?: boolean;\n  /** Total number of items. */\n  itemCount?: number;\n  /** Last index of items on current page. */\n  itemsEnd?: number;\n  /** First index of items on current page. */\n  itemsStart?: number;\n  /** Start index of rows to display, used in place of providing page. */\n  offset?: number;\n  /** Current page number. */\n  page?: number;\n  /** Number of items per page. */\n  perPage?: number;\n  /** Component to be used for wrapping the toggle contents. Use \"button\" when you want\n   * all of the toggle text to be clickable.\n   */\n  perPageComponent?: 'div' | 'button';\n  /** Array of the number of items per page options. */\n  perPageOptions?: PerPageOptions[];\n  /** Function called when user clicks on navigate to first page. */\n  onFirstClick?: (event: React.SyntheticEvent<HTMLButtonElement>, page: number) => void;\n  /** Function called when user clicks on navigate to last page. */\n  onLastClick?: (event: React.SyntheticEvent<HTMLButtonElement>, page: number) => void;\n  /** Function called when user clicks on navigate to next page. */\n  onNextClick?: (event: React.SyntheticEvent<HTMLButtonElement>, page: number) => void;\n  /** Function called when user inputs page number. */\n  onPageInput?: (event: React.SyntheticEvent<HTMLButtonElement>, page: number) => void;\n  /** Function called when user selects number of items per page. */\n  onPerPageSelect?: OnPerPageSelect;\n  /** Function called when user clicks on navigate to previous page. */\n  onPreviousClick?: (event: React.SyntheticEvent<HTMLButtonElement>, page: number) => void;\n  /** Function called when user sets page. */\n  onSetPage?: OnSetPage;\n  /** Object with titles to display in pagination. */\n  titles?: PaginationTitles;\n  /** This will be shown in pagination toggle span. You can use firstIndex, lastIndex,\n   * itemCount, itemsTitle, and/or ofWord props.\n   */\n  toggleTemplate?: ((props: ToggleTemplateProps) => React.ReactElement) | string;\n  /** Position where pagination is rendered. */\n  variant?: 'top' | 'bottom' | PaginationVariant;\n  /** Id to ideintify widget on page. */\n  widgetId?: string;\n  /** Value to overwrite the randomly generated data-ouia-component-id.*/\n  ouiaId?: number | string;\n  /** Set the value of data-ouia-safe. Only set to true when the component is in a static state, i.e. no animations are occurring. At all other times, this value must be false. */\n  ouiaSafe?: boolean;\n}\n\nconst handleInputWidth = (lastPage: number, node: HTMLDivElement) => {\n  if (!node) {\n    return;\n  }\n  const len = String(lastPage).length;\n  if (len >= 3) {\n    node.style.setProperty(widthChars.name, `${len}`);\n  } else {\n    node.style.setProperty(widthChars.name, '2');\n  }\n};\n\nexport class Pagination extends React.Component<PaginationProps, { ouiaStateId: string }> {\n  static displayName = 'Pagination';\n  paginationRef = React.createRef<HTMLDivElement>();\n  static defaultProps: PickOptional<PaginationProps> = {\n    children: null,\n    className: '',\n    variant: PaginationVariant.top,\n    isDisabled: false,\n    isCompact: false,\n    isSticky: false,\n    perPage: defaultPerPageOptions[0].value,\n    titles: {\n      items: '',\n      page: '',\n      pages: '',\n      itemsPerPage: 'Items per page',\n      perPageSuffix: 'per page',\n      toFirstPage: 'Go to first page',\n      toPreviousPage: 'Go to previous page',\n      toLastPage: 'Go to last page',\n      toNextPage: 'Go to next page',\n      optionsToggle: '',\n      currPage: 'Current page',\n      paginationTitle: 'Pagination',\n      ofWord: 'of'\n    },\n    firstPage: 1,\n    page: 0,\n    offset: 0,\n    defaultToFullPage: false,\n    itemsStart: null,\n    itemsEnd: null,\n    perPageOptions: defaultPerPageOptions,\n    widgetId: 'options-menu',\n    onSetPage: () => undefined,\n    onPerPageSelect: () => undefined,\n    onFirstClick: () => undefined,\n    onPreviousClick: () => undefined,\n    onNextClick: () => undefined,\n    onPageInput: () => undefined,\n    onLastClick: () => undefined,\n    ouiaSafe: true,\n    perPageComponent: 'div'\n  };\n\n  state = {\n    ouiaStateId: getDefaultOUIAId(Pagination.displayName, this.props.variant)\n  };\n\n  getLastPage() {\n    const { itemCount, perPage, page } = this.props;\n    // when itemCount is not known let's set lastPage as page+1 as we don't know the total count\n    return itemCount || itemCount === 0 ? Math.ceil(itemCount / perPage) || 0 : page + 1;\n  }\n\n  componentDidMount() {\n    const node = this.paginationRef.current;\n    handleInputWidth(this.getLastPage(), node);\n  }\n\n  componentDidUpdate(prevProps: PaginationProps & OUIAProps) {\n    const node = this.paginationRef.current;\n    if (prevProps.perPage !== this.props.perPage || prevProps.itemCount !== this.props.itemCount) {\n      handleInputWidth(this.getLastPage(), node);\n    }\n  }\n  render() {\n    const {\n      children,\n      className,\n      variant,\n      isDisabled,\n      isCompact,\n      isStatic,\n      isSticky,\n      perPage,\n      titles,\n      firstPage,\n      page: propPage,\n      offset,\n      defaultToFullPage,\n      itemCount,\n      itemsStart,\n      itemsEnd,\n      perPageOptions,\n      dropDirection: dropDirectionProp,\n      widgetId,\n      toggleTemplate,\n      onSetPage,\n      onPerPageSelect,\n      onFirstClick,\n      onPreviousClick,\n      onNextClick,\n      onPageInput,\n      onLastClick,\n      ouiaId,\n      ouiaSafe,\n      perPageComponent,\n      usePageInsets,\n      inset,\n      ...props\n    } = this.props;\n    const dropDirection = dropDirectionProp || (variant === 'bottom' && !isStatic ? 'up' : 'down');\n\n    let page = propPage;\n    if (!page && offset) {\n      page = Math.ceil(offset / perPage);\n    }\n    if (page === 0 && !itemCount) {\n      page = 1;\n    }\n\n    const lastPage = this.getLastPage();\n    let firstIndex = (page - 1) * perPage + 1;\n    let lastIndex = page * perPage;\n\n    if (itemCount || itemCount === 0) {\n      firstIndex = itemCount <= 0 ? 0 : (page - 1) * perPage + 1;\n\n      if (page < firstPage && itemCount > 0) {\n        page = firstPage;\n      } else if (page > lastPage) {\n        page = lastPage;\n      }\n\n      if (itemCount >= 0) {\n        lastIndex = page === lastPage || itemCount === 0 ? itemCount : page * perPage;\n      }\n    }\n\n    const toggleTemplateProps = { firstIndex, lastIndex, itemCount, itemsTitle: titles.items, ofWord: titles.ofWord };\n\n    return (\n      <div\n        ref={this.paginationRef}\n        className={css(\n          styles.pagination,\n          variant === PaginationVariant.bottom && styles.modifiers.bottom,\n          usePageInsets && styles.modifiers.pageInsets,\n          formatBreakpointMods(inset, styles),\n          isCompact && styles.modifiers.compact,\n          isStatic && styles.modifiers.static,\n          isSticky && styles.modifiers.sticky,\n          className\n        )}\n        {...(widgetId && { id: `${widgetId}-${variant}-pagination` })}\n        {...getOUIAProps(Pagination.displayName, ouiaId !== undefined ? ouiaId : this.state.ouiaStateId, ouiaSafe)}\n        {...props}\n      >\n        {variant === PaginationVariant.top && (\n          <div className={css(styles.paginationTotalItems)}>\n            {toggleTemplate && typeof toggleTemplate === 'string' && fillTemplate(toggleTemplate, toggleTemplateProps)}\n            {toggleTemplate &&\n              typeof toggleTemplate !== 'string' &&\n              (toggleTemplate as (props: ToggleTemplateProps) => React.ReactElement)(toggleTemplateProps)}\n            {!toggleTemplate && (\n              <ToggleTemplate\n                firstIndex={firstIndex}\n                lastIndex={lastIndex}\n                itemCount={itemCount}\n                itemsTitle={titles.items}\n                ofWord={titles.ofWord}\n              />\n            )}\n          </div>\n        )}\n        <PaginationOptionsMenu\n          itemsPerPageTitle={titles.itemsPerPage}\n          perPageSuffix={titles.perPageSuffix}\n          itemsTitle={isCompact ? '' : titles.items}\n          optionsToggle={titles.optionsToggle}\n          perPageOptions={perPageOptions}\n          firstIndex={itemsStart !== null ? itemsStart : firstIndex}\n          lastIndex={itemsEnd !== null ? itemsEnd : lastIndex}\n          ofWord={titles.ofWord}\n          defaultToFullPage={defaultToFullPage}\n          itemCount={itemCount}\n          page={page}\n          perPage={perPage}\n          lastPage={lastPage}\n          onPerPageSelect={onPerPageSelect}\n          dropDirection={dropDirection}\n          widgetId={`${widgetId}-${variant}`}\n          toggleTemplate={toggleTemplate}\n          isDisabled={isDisabled}\n          perPageComponent={perPageComponent}\n        />\n        <Navigation\n          pagesTitle={titles.page}\n          pagesTitlePlural={titles.pages}\n          toLastPage={titles.toLastPage}\n          toPreviousPage={titles.toPreviousPage}\n          toNextPage={titles.toNextPage}\n          toFirstPage={titles.toFirstPage}\n          currPage={titles.currPage}\n          paginationTitle={titles.paginationTitle}\n          ofWord={titles.ofWord}\n          page={itemCount && itemCount <= 0 ? 0 : page}\n          perPage={perPage}\n          itemCount={itemCount}\n          firstPage={itemsStart !== null ? itemsStart : 1}\n          lastPage={lastPage}\n          onSetPage={onSetPage}\n          onFirstClick={onFirstClick}\n          onPreviousClick={onPreviousClick}\n          onNextClick={onNextClick}\n          onLastClick={onLastClick}\n          onPageInput={onPageInput}\n          isDisabled={isDisabled}\n          isCompact={isCompact}\n        />\n        {children}\n      </div>\n    );\n  }\n}\n"],"mappings":";;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,cAAc,QAA6B,kBAAkB;AACtE,OAAOC,MAAM,MAAM,+DAA+D;AAClF,SAASC,GAAG,QAAQ,0BAA0B;AAE9C,SAASC,YAAY,QAAQ,eAAe;AAC5C,SAASC,UAAU,QAAQ,cAAc;AACzC,SAASC,qBAAqB,QAAQ,yBAAyB;AAC/D,SAASC,YAAY,EAAaC,gBAAgB,QAAsB,eAAe;AACvF,SAASC,oBAAoB,QAAQ,oBAAoB;AACzD,OAAOC,UAAU,MAAM,4FAA4F;AAEnH,WAAYC,iBAGX;AAHD,WAAYA,iBAAiB;EAC3BA,iBAAA,qBAAiB;EACjBA,iBAAA,eAAW;AACb,CAAC,EAHWA,iBAAiB,KAAjBA,iBAAiB;AAK7B,IAAMC,qBAAqB,GAAG,CAC5B;EACEC,KAAK,EAAE,IAAI;EACXC,KAAK,EAAE;CACR,EACD;EACED,KAAK,EAAE,IAAI;EACXC,KAAK,EAAE;CACR,EACD;EACED,KAAK,EAAE,IAAI;EACXC,KAAK,EAAE;CACR,EACD;EACED,KAAK,EAAE,KAAK;EACZC,KAAK,EAAE;CACR,CACF;AAgJD,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAIC,QAAgB,EAAEC,IAAoB,EAAI;EAClE,IAAI,CAACA,IAAI,EAAE;IACT;;EAEF,IAAMC,GAAG,GAAGC,MAAM,CAACH,QAAQ,CAAC,CAACI,MAAM;EACnC,IAAIF,GAAG,IAAI,CAAC,EAAE;IACZD,IAAI,CAACI,KAAK,CAACC,WAAW,CAACZ,UAAU,CAACa,IAAI,KAAAC,MAAA,CAAKN,GAAG,CAAE,CAAC;GAClD,MAAM;IACLD,IAAI,CAACI,KAAK,CAACC,WAAW,CAACZ,UAAU,CAACa,IAAI,EAAE,GAAG,CAAC;;AAEhD,CAAC;AAED,WAAaE,UAAW,0BAAAC,gBAAA;EAAAC,SAAA,CAAAF,UAAA,EAAAC,gBAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,UAAA;EAAxB,SAAAA,WAAA;IAAA,IAAAK,KAAA;IAAAC,eAAA,OAAAN,UAAA;;IAEEK,KAAA,CAAAE,aAAa,GAAGhC,KAAK,CAACiC,SAAS,EAAkB;IA2CjDH,KAAA,CAAAI,KAAK,GAAG;MACNC,WAAW,EAAE3B,gBAAgB,CAACiB,UAAU,CAACW,WAAW,EAAEN,KAAA,CAAKO,KAAK,CAACC,OAAO;KACzE;IAAC,OAAAR,KAAA;EAwKJ;EAACS,YAAA,CAAAd,UAAA;IAAAe,GAAA;IAAA1B,KAAA,EAtKC,SAAA2B,YAAA,EAAW;MACT,IAAAC,WAAA,GAAqC,IAAI,CAACL,KAAK;QAAvCM,SAAS,GAAAD,WAAA,CAATC,SAAS;QAAEC,OAAO,GAAAF,WAAA,CAAPE,OAAO;QAAEC,IAAI,GAAAH,WAAA,CAAJG,IAAI;MAChC;MACA,OAAOF,SAAS,IAAIA,SAAS,KAAK,CAAC,GAAGG,IAAI,CAACC,IAAI,CAACJ,SAAS,GAAGC,OAAO,CAAC,IAAI,CAAC,GAAGC,IAAI,GAAG,CAAC;IACtF;EAAC;IAAAL,GAAA;IAAA1B,KAAA,EAED,SAAAkC,kBAAA,EAAiB;MACf,IAAM/B,IAAI,GAAG,IAAI,CAACe,aAAa,CAACiB,OAAO;MACvClC,gBAAgB,CAAC,IAAI,CAAC0B,WAAW,EAAE,EAAExB,IAAI,CAAC;IAC5C;EAAC;IAAAuB,GAAA;IAAA1B,KAAA,EAED,SAAAoC,mBAAmBC,SAAsC;MACvD,IAAMlC,IAAI,GAAG,IAAI,CAACe,aAAa,CAACiB,OAAO;MACvC,IAAIE,SAAS,CAACP,OAAO,KAAK,IAAI,CAACP,KAAK,CAACO,OAAO,IAAIO,SAAS,CAACR,SAAS,KAAK,IAAI,CAACN,KAAK,CAACM,SAAS,EAAE;QAC5F5B,gBAAgB,CAAC,IAAI,CAAC0B,WAAW,EAAE,EAAExB,IAAI,CAAC;;IAE9C;EAAC;IAAAuB,GAAA;IAAA1B,KAAA,EACD,SAAAsC,OAAA,EAAM;MACE,IAAAC,EAAA,GAkCF,IAAI,CAAChB,KAAK;QAjCZiB,QAAQ,GA+BHD,EAEO,CAjCZC,QAAQ;QACRC,SAAS,GA8BJF,EAEO,CAhCZE,SAAS;QACTjB,OAAO,GA6BFe,EAEO,CA/BZf,OAAO;QACPkB,UAAU,GA4BLH,EAEO,CA9BZG,UAAU;QACVC,SAAS,GA2BJJ,EAEO,CA7BZI,SAAS;QACTC,QAAQ,GA0BHL,EAEO,CA5BZK,QAAQ;QACRC,QAAQ,GAyBHN,EAEO,CA3BZM,QAAQ;QACRf,OAAO,GAwBFS,EAEO,CA1BZT,OAAO;QACPgB,MAAM,GAuBDP,EAEO,CAzBZO,MAAM;QACNC,SAAS,GAsBJR,EAEO,CAxBZQ,SAAS;QACHC,QAAQ,GAqBTT,EAEO,CAvBZR,IAAI;QACJkB,MAAM,GAoBDV,EAEO,CAtBZU,MAAM;QACNC,iBAAiB,GAmBZX,EAEO,CArBZW,iBAAiB;QACjBrB,SAAS,GAkBJU,EAEO,CApBZV,SAAS;QACTsB,UAAU,GAiBLZ,EAEO,CAnBZY,UAAU;QACVC,QAAQ,GAgBHb,EAEO,CAlBZa,QAAQ;QACRC,cAAc,GAeTd,EAEO,CAjBZc,cAAc;QACCC,iBAAiB,GAc3Bf,EAEO,CAhBZgB,aAAa;QACbC,QAAQ,GAaHjB,EAEO,CAfZiB,QAAQ;QACRC,cAAc,GAYTlB,EAEO,CAdZkB,cAAc;QACdC,SAAS,GAWJnB,EAEO,CAbZmB,SAAS;QACTC,eAAe,GAUVpB,EAEO,CAZZoB,eAAe;QACfC,YAAY,GASPrB,EAEO,CAXZqB,YAAY;QACZC,eAAe,GAQVtB,EAEO,CAVZsB,eAAe;QACfC,WAAW,GAONvB,EAEO,CATZuB,WAAW;QACXC,WAAW,GAMNxB,EAEO,CARZwB,WAAW;QACXC,WAAW,GAKNzB,EAEO,CAPZyB,WAAW;QACXC,MAAM,GAID1B,EAEO,CANZ0B,MAAM;QACNC,QAAQ,GAGH3B,EAEO,CALZ2B,QAAQ;QACRC,gBAAgB,GAEX5B,EAEO,CAJZ4B,gBAAgB;QAChBC,aAAa,GACR7B,EAEO,CAHZ6B,aAAa;QACbC,KAAK,GAAA9B,EAEO,CAFZ8B,KAAK;QACF9C,KAAK,GAAA+C,MAAA,CAAA/B,EAAA,EAjCJ,4bAkCL,CAAa;MACd,IAAMgB,aAAa,GAAGD,iBAAiB,KAAK9B,OAAO,KAAK,QAAQ,IAAI,CAACoB,QAAQ,GAAG,IAAI,GAAG,MAAM,CAAC;MAE9F,IAAIb,IAAI,GAAGiB,QAAQ;MACnB,IAAI,CAACjB,IAAI,IAAIkB,MAAM,EAAE;QACnBlB,IAAI,GAAGC,IAAI,CAACC,IAAI,CAACgB,MAAM,GAAGnB,OAAO,CAAC;;MAEpC,IAAIC,IAAI,KAAK,CAAC,IAAI,CAACF,SAAS,EAAE;QAC5BE,IAAI,GAAG,CAAC;;MAGV,IAAM7B,QAAQ,GAAG,IAAI,CAACyB,WAAW,EAAE;MACnC,IAAI4C,UAAU,GAAG,CAACxC,IAAI,GAAG,CAAC,IAAID,OAAO,GAAG,CAAC;MACzC,IAAI0C,SAAS,GAAGzC,IAAI,GAAGD,OAAO;MAE9B,IAAID,SAAS,IAAIA,SAAS,KAAK,CAAC,EAAE;QAChC0C,UAAU,GAAG1C,SAAS,IAAI,CAAC,GAAG,CAAC,GAAG,CAACE,IAAI,GAAG,CAAC,IAAID,OAAO,GAAG,CAAC;QAE1D,IAAIC,IAAI,GAAGgB,SAAS,IAAIlB,SAAS,GAAG,CAAC,EAAE;UACrCE,IAAI,GAAGgB,SAAS;SACjB,MAAM,IAAIhB,IAAI,GAAG7B,QAAQ,EAAE;UAC1B6B,IAAI,GAAG7B,QAAQ;;QAGjB,IAAI2B,SAAS,IAAI,CAAC,EAAE;UAClB2C,SAAS,GAAGzC,IAAI,KAAK7B,QAAQ,IAAI2B,SAAS,KAAK,CAAC,GAAGA,SAAS,GAAGE,IAAI,GAAGD,OAAO;;;MAIjF,IAAM2C,mBAAmB,GAAG;QAAEF,UAAU,EAAVA,UAAU;QAAEC,SAAS,EAATA,SAAS;QAAE3C,SAAS,EAATA,SAAS;QAAE6C,UAAU,EAAE5B,MAAM,CAAC6B,KAAK;QAAEC,MAAM,EAAE9B,MAAM,CAAC8B;MAAM,CAAE;MAEjH,OACE1F,KAAA,CAAA2F,aAAA,QAAAC,MAAA,CAAAC,MAAA;QACEC,GAAG,EAAE,IAAI,CAAC9D,aAAa;QACvBuB,SAAS,EAAEpD,GAAG,CACZD,MAAM,CAAC6F,UAAU,EACjBzD,OAAO,KAAK3B,iBAAiB,CAACqF,MAAM,IAAI9F,MAAM,CAAC+F,SAAS,CAACD,MAAM,EAC/Dd,aAAa,IAAIhF,MAAM,CAAC+F,SAAS,CAACC,UAAU,EAC5CzF,oBAAoB,CAAC0E,KAAK,EAAEjF,MAAM,CAAC,EACnCuD,SAAS,IAAIvD,MAAM,CAAC+F,SAAS,CAACE,OAAO,EACrCzC,QAAQ,IAAIxD,MAAM,CAAC+F,SAAS,CAACG,MAAM,EACnCzC,QAAQ,IAAIzD,MAAM,CAAC+F,SAAS,CAACI,MAAM,EACnC9C,SAAS;MACV,GACIe,QAAQ,IAAI;QAAEgC,EAAE,KAAA9E,MAAA,CAAK8C,QAAQ,OAAA9C,MAAA,CAAIc,OAAO;MAAa,CAAE,EACxD/B,YAAY,CAACkB,UAAU,CAACW,WAAW,EAAE2C,MAAM,KAAKwB,SAAS,GAAGxB,MAAM,GAAG,IAAI,CAAC7C,KAAK,CAACC,WAAW,EAAE6C,QAAQ,CAAC,EACtG3C,KAAK,GAERC,OAAO,KAAK3B,iBAAiB,CAAC6F,GAAG,IAChCxG,KAAA,CAAA2F,aAAA;QAAKpC,SAAS,EAAEpD,GAAG,CAACD,MAAM,CAACuG,oBAAoB;MAAC,GAC7ClC,cAAc,IAAI,OAAOA,cAAc,KAAK,QAAQ,IAAInE,YAAY,CAACmE,cAAc,EAAEgB,mBAAmB,CAAC,EACzGhB,cAAc,IACb,OAAOA,cAAc,KAAK,QAAQ,IACjCA,cAAqE,CAACgB,mBAAmB,CAAC,EAC5F,CAAChB,cAAc,IACdvE,KAAA,CAAA2F,aAAA,CAAC1F,cAAc;QACboF,UAAU,EAAEA,UAAU;QACtBC,SAAS,EAAEA,SAAS;QACpB3C,SAAS,EAAEA,SAAS;QACpB6C,UAAU,EAAE5B,MAAM,CAAC6B,KAAK;QACxBC,MAAM,EAAE9B,MAAM,CAAC8B;MAAM,EAExB,CAEJ,EACD1F,KAAA,CAAA2F,aAAA,CAACrF,qBAAqB;QACpBoG,iBAAiB,EAAE9C,MAAM,CAAC+C,YAAY;QACtCC,aAAa,EAAEhD,MAAM,CAACgD,aAAa;QACnCpB,UAAU,EAAE/B,SAAS,GAAG,EAAE,GAAGG,MAAM,CAAC6B,KAAK;QACzCoB,aAAa,EAAEjD,MAAM,CAACiD,aAAa;QACnC1C,cAAc,EAAEA,cAAc;QAC9BkB,UAAU,EAAEpB,UAAU,KAAK,IAAI,GAAGA,UAAU,GAAGoB,UAAU;QACzDC,SAAS,EAAEpB,QAAQ,KAAK,IAAI,GAAGA,QAAQ,GAAGoB,SAAS;QACnDI,MAAM,EAAE9B,MAAM,CAAC8B,MAAM;QACrB1B,iBAAiB,EAAEA,iBAAiB;QACpCrB,SAAS,EAAEA,SAAS;QACpBE,IAAI,EAAEA,IAAI;QACVD,OAAO,EAAEA,OAAO;QAChB5B,QAAQ,EAAEA,QAAQ;QAClByD,eAAe,EAAEA,eAAe;QAChCJ,aAAa,EAAEA,aAAa;QAC5BC,QAAQ,KAAA9C,MAAA,CAAK8C,QAAQ,OAAA9C,MAAA,CAAIc,OAAO,CAAE;QAClCiC,cAAc,EAAEA,cAAc;QAC9Bf,UAAU,EAAEA,UAAU;QACtByB,gBAAgB,EAAEA;MAAgB,EAClC,EACFjF,KAAA,CAAA2F,aAAA,CAACtF,UAAU;QACTyG,UAAU,EAAElD,MAAM,CAACf,IAAI;QACvBkE,gBAAgB,EAAEnD,MAAM,CAACoD,KAAK;QAC9BC,UAAU,EAAErD,MAAM,CAACqD,UAAU;QAC7BC,cAAc,EAAEtD,MAAM,CAACsD,cAAc;QACrCC,UAAU,EAAEvD,MAAM,CAACuD,UAAU;QAC7BC,WAAW,EAAExD,MAAM,CAACwD,WAAW;QAC/BC,QAAQ,EAAEzD,MAAM,CAACyD,QAAQ;QACzBC,eAAe,EAAE1D,MAAM,CAAC0D,eAAe;QACvC5B,MAAM,EAAE9B,MAAM,CAAC8B,MAAM;QACrB7C,IAAI,EAAEF,SAAS,IAAIA,SAAS,IAAI,CAAC,GAAG,CAAC,GAAGE,IAAI;QAC5CD,OAAO,EAAEA,OAAO;QAChBD,SAAS,EAAEA,SAAS;QACpBkB,SAAS,EAAEI,UAAU,KAAK,IAAI,GAAGA,UAAU,GAAG,CAAC;QAC/CjD,QAAQ,EAAEA,QAAQ;QAClBwD,SAAS,EAAEA,SAAS;QACpBE,YAAY,EAAEA,YAAY;QAC1BC,eAAe,EAAEA,eAAe;QAChCC,WAAW,EAAEA,WAAW;QACxBE,WAAW,EAAEA,WAAW;QACxBD,WAAW,EAAEA,WAAW;QACxBrB,UAAU,EAAEA,UAAU;QACtBC,SAAS,EAAEA;MAAS,EACpB,EACDH,QAAQ,CACL;IAEV;EAAC;EAAA,OAAA7B,UAAA;AAAA,EAtN6BzB,KAAK,CAACuH,SAAmD;AAChF9F,UAAA,CAAAW,WAAW,GAAG,YAAY;AAE1BX,UAAA,CAAA+F,YAAY,GAAkC;EACnDlE,QAAQ,EAAE,IAAI;EACdC,SAAS,EAAE,EAAE;EACbjB,OAAO,EAAE3B,iBAAiB,CAAC6F,GAAG;EAC9BhD,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE,KAAK;EAChBE,QAAQ,EAAE,KAAK;EACff,OAAO,EAAEhC,qBAAqB,CAAC,CAAC,CAAC,CAACE,KAAK;EACvC8C,MAAM,EAAE;IACN6B,KAAK,EAAE,EAAE;IACT5C,IAAI,EAAE,EAAE;IACRmE,KAAK,EAAE,EAAE;IACTL,YAAY,EAAE,gBAAgB;IAC9BC,aAAa,EAAE,UAAU;IACzBQ,WAAW,EAAE,kBAAkB;IAC/BF,cAAc,EAAE,qBAAqB;IACrCD,UAAU,EAAE,iBAAiB;IAC7BE,UAAU,EAAE,iBAAiB;IAC7BN,aAAa,EAAE,EAAE;IACjBQ,QAAQ,EAAE,cAAc;IACxBC,eAAe,EAAE,YAAY;IAC7B5B,MAAM,EAAE;GACT;EACD7B,SAAS,EAAE,CAAC;EACZhB,IAAI,EAAE,CAAC;EACPkB,MAAM,EAAE,CAAC;EACTC,iBAAiB,EAAE,KAAK;EACxBC,UAAU,EAAE,IAAI;EAChBC,QAAQ,EAAE,IAAI;EACdC,cAAc,EAAEvD,qBAAqB;EACrC0D,QAAQ,EAAE,cAAc;EACxBE,SAAS,EAAE,SAAAA,UAAA;IAAA,OAAM+B,SAAS;EAAA;EAC1B9B,eAAe,EAAE,SAAAA,gBAAA;IAAA,OAAM8B,SAAS;EAAA;EAChC7B,YAAY,EAAE,SAAAA,aAAA;IAAA,OAAM6B,SAAS;EAAA;EAC7B5B,eAAe,EAAE,SAAAA,gBAAA;IAAA,OAAM4B,SAAS;EAAA;EAChC3B,WAAW,EAAE,SAAAA,YAAA;IAAA,OAAM2B,SAAS;EAAA;EAC5B1B,WAAW,EAAE,SAAAA,YAAA;IAAA,OAAM0B,SAAS;EAAA;EAC5BzB,WAAW,EAAE,SAAAA,YAAA;IAAA,OAAMyB,SAAS;EAAA;EAC5BvB,QAAQ,EAAE,IAAI;EACdC,gBAAgB,EAAE;CACnB"},"metadata":{},"sourceType":"module","externalDependencies":[]}
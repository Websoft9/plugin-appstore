{"ast":null,"code":"export function compact() {\n  var objects = [];\n  for (var _i = 0; _i < arguments.length; _i++) {\n    objects[_i] = arguments[_i];\n  }\n  var result = Object.create(null);\n  objects.forEach(function (obj) {\n    if (!obj) return;\n    Object.keys(obj).forEach(function (key) {\n      var value = obj[key];\n      if (value !== void 0) {\n        result[key] = value;\n      }\n    });\n  });\n  return result;\n}","map":{"version":3,"names":["compact","objects","_i","arguments","length","result","Object","create","forEach","obj","keys","key","value"],"sources":["/data/stackhub-web/plugins/myapps/node_modules/@apollo/src/utilities/common/compact.ts"],"sourcesContent":["import { TupleToIntersection } from './mergeDeep';\n\n/**\n * Merges the provided objects shallowly and removes\n * all properties with an `undefined` value\n */\nexport function compact<TArgs extends any[]>(\n  ...objects: TArgs\n): TupleToIntersection<TArgs> {\n  const result = Object.create(null);\n\n  objects.forEach(obj => {\n    if (!obj) return;\n    Object.keys(obj).forEach(key => {\n      const value = (obj as any)[key];\n      if (value !== void 0) {\n        result[key] = value;\n      }\n    });\n  });\n\n  return result;\n}\n"],"mappings":"AAMA,OAAM,SAAUA,OAAOA,CAAA;EACrB,IAAAC,OAAA;OAAA,IAAAC,EAAA,IAAiB,EAAjBA,EAAA,GAAAC,SAAA,CAAAC,MAAiB,EAAjBF,EAAA,EAAiB;IAAjBD,OAAA,CAAAC,EAAA,IAAAC,SAAA,CAAAD,EAAA;;EAEA,IAAMG,MAAM,GAAGC,MAAM,CAACC,MAAM,CAAC,IAAI,CAAC;EAElCN,OAAO,CAACO,OAAO,CAAC,UAAAC,GAAG;IACjB,IAAI,CAACA,GAAG,EAAE;IACVH,MAAM,CAACI,IAAI,CAACD,GAAG,CAAC,CAACD,OAAO,CAAC,UAAAG,GAAG;MAC1B,IAAMC,KAAK,GAAIH,GAAW,CAACE,GAAG,CAAC;MAC/B,IAAIC,KAAK,KAAK,KAAK,CAAC,EAAE;QACpBP,MAAM,CAACM,GAAG,CAAC,GAAGC,KAAK;;IAEvB,CAAC,CAAC;EACJ,CAAC,CAAC;EAEF,OAAOP,MAAM;AACf"},"metadata":{},"sourceType":"module","externalDependencies":[]}
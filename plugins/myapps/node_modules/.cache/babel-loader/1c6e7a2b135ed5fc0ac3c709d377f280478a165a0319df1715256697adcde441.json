{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/DataList/data-list';\nexport var DataListItemRow = function DataListItemRow(_a) {\n  var children = _a.children,\n    _a$className = _a.className,\n    className = _a$className === void 0 ? '' : _a$className,\n    _a$rowid = _a.rowid,\n    rowid = _a$rowid === void 0 ? '' : _a$rowid,\n    _a$wrapModifier = _a.wrapModifier,\n    wrapModifier = _a$wrapModifier === void 0 ? null : _a$wrapModifier,\n    props = __rest(_a, [\"children\", \"className\", \"rowid\", \"wrapModifier\"]);\n  return React.createElement(\"div\", Object.assign({\n    className: css(styles.dataListItemRow, className, wrapModifier && styles.modifiers[wrapModifier])\n  }, props), React.Children.map(children, function (child) {\n    return React.isValidElement(child) && React.cloneElement(child, {\n      rowid: rowid\n    });\n  }));\n};\nDataListItemRow.displayName = 'DataListItemRow';","map":{"version":3,"names":["React","css","styles","DataListItemRow","_a","children","_a$className","className","_a$rowid","rowid","_a$wrapModifier","wrapModifier","props","__rest","createElement","Object","assign","dataListItemRow","modifiers","Children","map","child","isValidElement","cloneElement","displayName"],"sources":["/data/stackhub-web/plugins/myapps/node_modules/@patternfly/react-core/src/components/DataList/DataListItemRow.tsx"],"sourcesContent":["import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/DataList/data-list';\nimport { DataListWrapModifier } from './DataList';\n\nexport interface DataListItemRowProps extends Omit<React.HTMLProps<HTMLDivElement>, 'children'> {\n  /** Content rendered inside the DataListItemRow  */\n  children: React.ReactNode;\n  /** Additional classes added to the DataListItemRow */\n  className?: string;\n  /** Id for the row item */\n  rowid?: string;\n  /** Determines which wrapping modifier to apply to the DataListItemRow */\n  wrapModifier?: DataListWrapModifier | 'nowrap' | 'truncate' | 'breakWord';\n}\n\nexport const DataListItemRow: React.FunctionComponent<DataListItemRowProps> = ({\n  children,\n  className = '',\n  rowid = '',\n  wrapModifier = null,\n  ...props\n}: DataListItemRowProps) => (\n  <div className={css(styles.dataListItemRow, className, wrapModifier && styles.modifiers[wrapModifier])} {...props}>\n    {React.Children.map(\n      children,\n      child =>\n        React.isValidElement(child) &&\n        React.cloneElement(child as React.ReactElement<any>, {\n          rowid\n        })\n    )}\n  </div>\n);\nDataListItemRow.displayName = 'DataListItemRow';\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,GAAG,QAAQ,0BAA0B;AAC9C,OAAOC,MAAM,MAAM,4DAA4D;AAc/E,OAAO,IAAMC,eAAe,GAAkD,SAAjEA,eAAeA,CAAmDC,EAMxD,EAAI;MALzBC,QAAQ,GAGWD,EAEE,CALrBC,QAAQ;IAAAC,YAAA,GAGWF,EAEE,CAJrBG,SAAS;IAATA,SAAS,GAAAD,YAAA,cAAG,EAAE,GAAAA,YAAA;IAAAE,QAAA,GAEKJ,EAEE,CAHrBK,KAAK;IAALA,KAAK,GAAAD,QAAA,cAAG,EAAE,GAAAA,QAAA;IAAAE,eAAA,GACSN,EAEE,CAFrBO,YAAY;IAAZA,YAAY,GAAAD,eAAA,cAAG,IAAI,GAAAA,eAAA;IAChBE,KAAK,GAAAC,MAAA,CAAAT,EAAA,EALqE,kDAM9E,CADS;EACkB,OAC1BJ,KAAA,CAAAc,aAAA,QAAAC,MAAA,CAAAC,MAAA;IAAKT,SAAS,EAAEN,GAAG,CAACC,MAAM,CAACe,eAAe,EAAEV,SAAS,EAAEI,YAAY,IAAIT,MAAM,CAACgB,SAAS,CAACP,YAAY,CAAC;EAAC,GAAMC,KAAK,GAC9GZ,KAAK,CAACmB,QAAQ,CAACC,GAAG,CACjBf,QAAQ,EACR,UAAAgB,KAAK;IAAA,OACHrB,KAAK,CAACsB,cAAc,CAACD,KAAK,CAAC,IAC3BrB,KAAK,CAACuB,YAAY,CAACF,KAAgC,EAAE;MACnDZ,KAAK,EAALA;KACD,CAAC;EAAA,EACL,CACG;CACP;AACDN,eAAe,CAACqB,WAAW,GAAG,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}
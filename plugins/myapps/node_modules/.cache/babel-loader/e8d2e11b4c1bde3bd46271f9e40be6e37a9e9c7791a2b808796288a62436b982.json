{"ast":null,"code":"import _classCallCheck from \"/data/stackhub-web/plugins/myapps/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/data/stackhub-web/plugins/myapps/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/data/stackhub-web/plugins/myapps/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/data/stackhub-web/plugins/myapps/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n/** This Component can be used to wrap a functional component in order to generate a random ID\n * Example of how to use this component\n *\n * const Component = ({id}: {id: string}) => (\n *  <GenerateId>{randomId => (\n *     <div id={id || randomId}>\n *       div with random ID\n *     </div>\n *   )}\n *  </GenerateId>\n *  );\n */\nimport * as React from 'react';\nvar currentId = 0;\nexport var GenerateId = /*#__PURE__*/function (_React$Component) {\n  _inherits(GenerateId, _React$Component);\n  var _super = _createSuper(GenerateId);\n  function GenerateId() {\n    var _this;\n    _classCallCheck(this, GenerateId);\n    _this = _super.apply(this, arguments);\n    _this.id = \"\".concat(_this.props.prefix).concat(currentId++);\n    return _this;\n  }\n  _createClass(GenerateId, [{\n    key: \"render\",\n    value: function render() {\n      return this.props.children(this.id);\n    }\n  }]);\n  return GenerateId;\n}(React.Component);\nGenerateId.displayName = 'GenerateId';\nGenerateId.defaultProps = {\n  prefix: 'pf-random-id-'\n};","map":{"version":3,"names":["React","currentId","GenerateId","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","id","concat","props","prefix","_createClass","key","value","render","children","Component","displayName","defaultProps"],"sources":["/data/stackhub-web/plugins/myapps/node_modules/@patternfly/react-core/src/helpers/GenerateId/GenerateId.ts"],"sourcesContent":["/** This Component can be used to wrap a functional component in order to generate a random ID\n * Example of how to use this component\n *\n * const Component = ({id}: {id: string}) => (\n *  <GenerateId>{randomId => (\n *     <div id={id || randomId}>\n *       div with random ID\n *     </div>\n *   )}\n *  </GenerateId>\n *  );\n */\n\nimport * as React from 'react';\n\nlet currentId = 0;\n\ninterface GenerateIdProps {\n  /** String to prefix the random id with */\n  prefix?: string;\n  /** Component to be rendered with the generated id */\n  children(id: string): React.ReactNode;\n}\n\nexport class GenerateId extends React.Component<GenerateIdProps, {}> {\n  static displayName = 'GenerateId';\n  static defaultProps = {\n    prefix: 'pf-random-id-'\n  };\n  id = `${this.props.prefix}${currentId++}`;\n\n  render() {\n    return this.props.children(this.id);\n  }\n}\n"],"mappings":";;;;AAAA;;;;;;;;;;;;AAaA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAE9B,IAAIC,SAAS,GAAG,CAAC;AASjB,WAAaC,UAAW,0BAAAC,gBAAA;EAAAC,SAAA,CAAAF,UAAA,EAAAC,gBAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,UAAA;EAAxB,SAAAA,WAAA;IAAA,IAAAK,KAAA;IAAAC,eAAA,OAAAN,UAAA;;IAKEK,KAAA,CAAAE,EAAE,MAAAC,MAAA,CAAMH,KAAA,CAAKI,KAAK,CAACC,MAAM,EAAAF,MAAA,CAAGT,SAAS,EAAE,CAAE;IAAC,OAAAM,KAAA;EAK5C;EAACM,YAAA,CAAAX,UAAA;IAAAY,GAAA;IAAAC,KAAA,EAHC,SAAAC,OAAA,EAAM;MACJ,OAAO,IAAI,CAACL,KAAK,CAACM,QAAQ,CAAC,IAAI,CAACR,EAAE,CAAC;IACrC;EAAC;EAAA,OAAAP,UAAA;AAAA,EAT6BF,KAAK,CAACkB,SAA8B;AAC3DhB,UAAA,CAAAiB,WAAW,GAAG,YAAY;AAC1BjB,UAAA,CAAAkB,YAAY,GAAG;EACpBR,MAAM,EAAE;CACT"},"metadata":{},"sourceType":"module","externalDependencies":[]}
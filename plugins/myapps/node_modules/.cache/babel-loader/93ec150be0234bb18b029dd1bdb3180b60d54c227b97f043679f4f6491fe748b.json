{"ast":null,"code":"import _classCallCheck from \"/data/stackhub-web/plugins/myapps/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/data/stackhub-web/plugins/myapps/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/data/stackhub-web/plugins/myapps/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/data/stackhub-web/plugins/myapps/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Tabs/tabs';\nimport buttonStyles from '@patternfly/react-styles/css/components/Button/button';\nimport { css } from '@patternfly/react-styles';\nimport AngleLeftIcon from '@patternfly/react-icons/dist/esm/icons/angle-left-icon';\nimport AngleRightIcon from '@patternfly/react-icons/dist/esm/icons/angle-right-icon';\nimport PlusIcon from '@patternfly/react-icons/dist/esm/icons/plus-icon';\nimport { getUniqueId, isElementInView, formatBreakpointMods } from '../../helpers/util';\nimport { TabContent } from './TabContent';\nimport { TabsContextProvider } from './TabsContext';\nimport { OverflowTab } from './OverflowTab';\nimport { Button } from '../Button';\nimport { getOUIAProps, getDefaultOUIAId, canUseDOM } from '../../helpers';\nimport { GenerateId } from '../../helpers/GenerateId/GenerateId';\nexport var TabsComponent;\n(function (TabsComponent) {\n  TabsComponent[\"div\"] = \"div\";\n  TabsComponent[\"nav\"] = \"nav\";\n})(TabsComponent || (TabsComponent = {}));\nvar variantStyle = {\n  default: '',\n  light300: styles.modifiers.colorSchemeLight_300\n};\nexport var Tabs = /*#__PURE__*/function (_React$Component) {\n  _inherits(Tabs, _React$Component);\n  var _super = _createSuper(Tabs);\n  function Tabs(props) {\n    var _this;\n    _classCallCheck(this, Tabs);\n    _this = _super.call(this, props);\n    _this.tabList = React.createRef();\n    _this.leftScrollButtonRef = React.createRef();\n    _this.scrollTimeout = null;\n    _this.countOverflowingElements = function (container) {\n      var elements = Array.from(container.children);\n      return elements.filter(function (element) {\n        return !isElementInView(container, element, false);\n      }).length;\n    };\n    _this.handleScrollButtons = function () {\n      var isOverflowHorizontal = _this.props.isOverflowHorizontal;\n      // add debounce to the scroll event\n      clearTimeout(_this.scrollTimeout);\n      _this.scrollTimeout = setTimeout(function () {\n        var container = _this.tabList.current;\n        var disableLeftScrollButton = true;\n        var disableRightScrollButton = true;\n        var enableScrollButtons = false;\n        var overflowingTabCount = 0;\n        if (container && !_this.props.isVertical && !isOverflowHorizontal) {\n          // get first element and check if it is in view\n          var overflowOnLeft = !isElementInView(container, container.firstChild, false);\n          // get last element and check if it is in view\n          var overflowOnRight = !isElementInView(container, container.lastChild, false);\n          enableScrollButtons = overflowOnLeft || overflowOnRight;\n          disableLeftScrollButton = !overflowOnLeft;\n          disableRightScrollButton = !overflowOnRight;\n        }\n        if (isOverflowHorizontal) {\n          overflowingTabCount = _this.countOverflowingElements(container);\n        }\n        _this.setState({\n          enableScrollButtons: enableScrollButtons,\n          disableLeftScrollButton: disableLeftScrollButton,\n          disableRightScrollButton: disableRightScrollButton,\n          overflowingTabCount: overflowingTabCount\n        });\n      }, 100);\n    };\n    _this.scrollLeft = function () {\n      // find first Element that is fully in view on the left, then scroll to the element before it\n      if (_this.tabList.current) {\n        var container = _this.tabList.current;\n        var childrenArr = Array.from(container.children);\n        var firstElementInView;\n        var lastElementOutOfView;\n        var i;\n        for (i = 0; i < childrenArr.length && !firstElementInView; i++) {\n          if (isElementInView(container, childrenArr[i], false)) {\n            firstElementInView = childrenArr[i];\n            lastElementOutOfView = childrenArr[i - 1];\n          }\n        }\n        if (lastElementOutOfView) {\n          container.scrollLeft -= lastElementOutOfView.scrollWidth;\n        }\n      }\n    };\n    _this.scrollRight = function () {\n      // find last Element that is fully in view on the right, then scroll to the element after it\n      if (_this.tabList.current) {\n        var container = _this.tabList.current;\n        var childrenArr = Array.from(container.children);\n        var lastElementInView;\n        var firstElementOutOfView;\n        for (var i = childrenArr.length - 1; i >= 0 && !lastElementInView; i--) {\n          if (isElementInView(container, childrenArr[i], false)) {\n            lastElementInView = childrenArr[i];\n            firstElementOutOfView = childrenArr[i + 1];\n          }\n        }\n        if (firstElementOutOfView) {\n          container.scrollLeft += firstElementOutOfView.scrollWidth;\n        }\n      }\n    };\n    _this.hideScrollButtons = function () {\n      var _this$state = _this.state,\n        enableScrollButtons = _this$state.enableScrollButtons,\n        renderScrollButtons = _this$state.renderScrollButtons,\n        showScrollButtons = _this$state.showScrollButtons;\n      if (!enableScrollButtons && !showScrollButtons && renderScrollButtons) {\n        _this.setState({\n          renderScrollButtons: false\n        });\n      }\n    };\n    _this.state = {\n      enableScrollButtons: false,\n      showScrollButtons: false,\n      renderScrollButtons: false,\n      disableLeftScrollButton: true,\n      disableRightScrollButton: true,\n      shownKeys: _this.props.defaultActiveKey !== undefined ? [_this.props.defaultActiveKey] : [_this.props.activeKey],\n      uncontrolledActiveKey: _this.props.defaultActiveKey,\n      uncontrolledIsExpandedLocal: _this.props.defaultIsExpanded,\n      ouiaStateId: getDefaultOUIAId(Tabs.displayName),\n      overflowingTabCount: 0\n    };\n    if (_this.props.isVertical && _this.props.expandable !== undefined) {\n      if (!_this.props.toggleAriaLabel && !_this.props.toggleText) {\n        // eslint-disable-next-line no-console\n        console.error('Tabs:', 'toggleAriaLabel or the toggleText prop is required to make the toggle button accessible');\n      }\n    }\n    return _this;\n  }\n  _createClass(Tabs, [{\n    key: \"handleTabClick\",\n    value: function handleTabClick(event, eventKey, tabContentRef) {\n      var shownKeys = this.state.shownKeys;\n      var _this$props = this.props,\n        onSelect = _this$props.onSelect,\n        defaultActiveKey = _this$props.defaultActiveKey;\n      // if defaultActiveKey Tabs are uncontrolled, set new active key internally\n      if (defaultActiveKey !== undefined) {\n        this.setState({\n          uncontrolledActiveKey: eventKey\n        });\n      } else {\n        onSelect(event, eventKey);\n      }\n      // process any tab content sections outside of the component\n      if (tabContentRef) {\n        React.Children.toArray(this.props.children).map(function (child) {\n          return child;\n        }).filter(function (child) {\n          return child.props && child.props.tabContentRef && child.props.tabContentRef.current;\n        }).forEach(function (child) {\n          return child.props.tabContentRef.current.hidden = true;\n        });\n        // most recently selected tabContent\n        if (tabContentRef.current) {\n          tabContentRef.current.hidden = false;\n        }\n      }\n      if (this.props.mountOnEnter) {\n        this.setState({\n          shownKeys: shownKeys.concat(eventKey)\n        });\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (!this.props.isVertical) {\n        if (canUseDOM) {\n          window.addEventListener('resize', this.handleScrollButtons, false);\n        }\n        // call the handle resize function to check if scroll buttons should be shown\n        this.handleScrollButtons();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var _a;\n      if (!this.props.isVertical) {\n        if (canUseDOM) {\n          window.removeEventListener('resize', this.handleScrollButtons, false);\n        }\n      }\n      clearTimeout(this.scrollTimeout);\n      (_a = this.leftScrollButtonRef.current) === null || _a === void 0 ? void 0 : _a.removeEventListener('transitionend', this.hideScrollButtons);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this2 = this;\n      var _this$props2 = this.props,\n        activeKey = _this$props2.activeKey,\n        mountOnEnter = _this$props2.mountOnEnter,\n        isOverflowHorizontal = _this$props2.isOverflowHorizontal,\n        children = _this$props2.children;\n      var _this$state2 = this.state,\n        shownKeys = _this$state2.shownKeys,\n        overflowingTabCount = _this$state2.overflowingTabCount,\n        enableScrollButtons = _this$state2.enableScrollButtons;\n      if (prevProps.activeKey !== activeKey && mountOnEnter && shownKeys.indexOf(activeKey) < 0) {\n        this.setState({\n          shownKeys: shownKeys.concat(activeKey)\n        });\n      }\n      if (prevProps.children && children && React.Children.toArray(prevProps.children).length !== React.Children.toArray(children).length) {\n        this.handleScrollButtons();\n      }\n      var currentOverflowingTabCount = this.countOverflowingElements(this.tabList.current);\n      if (isOverflowHorizontal && currentOverflowingTabCount) {\n        this.setState({\n          overflowingTabCount: currentOverflowingTabCount + overflowingTabCount\n        });\n      }\n      if (!prevState.enableScrollButtons && enableScrollButtons) {\n        this.setState({\n          renderScrollButtons: true\n        });\n        setTimeout(function () {\n          var _a;\n          (_a = _this2.leftScrollButtonRef.current) === null || _a === void 0 ? void 0 : _a.addEventListener('transitionend', _this2.hideScrollButtons);\n          _this2.setState({\n            showScrollButtons: true\n          });\n        }, 100);\n      } else if (prevState.enableScrollButtons && !enableScrollButtons) {\n        this.setState({\n          showScrollButtons: false\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n      var _a = this.props,\n        className = _a.className,\n        children = _a.children,\n        activeKey = _a.activeKey,\n        defaultActiveKey = _a.defaultActiveKey,\n        id = _a.id,\n        isFilled = _a.isFilled,\n        isSecondary = _a.isSecondary,\n        isVertical = _a.isVertical,\n        isBox = _a.isBox,\n        hasBorderBottom = _a.hasBorderBottom,\n        hasSecondaryBorderBottom = _a.hasSecondaryBorderBottom,\n        leftScrollAriaLabel = _a.leftScrollAriaLabel,\n        rightScrollAriaLabel = _a.rightScrollAriaLabel,\n        ariaLabel = _a['aria-label'],\n        component = _a.component,\n        ouiaId = _a.ouiaId,\n        ouiaSafe = _a.ouiaSafe,\n        mountOnEnter = _a.mountOnEnter,\n        unmountOnExit = _a.unmountOnExit,\n        usePageInsets = _a.usePageInsets,\n        inset = _a.inset,\n        variant = _a.variant,\n        expandable = _a.expandable,\n        isExpanded = _a.isExpanded,\n        defaultIsExpanded = _a.defaultIsExpanded,\n        toggleText = _a.toggleText,\n        toggleAriaLabel = _a.toggleAriaLabel,\n        addButtonAriaLabel = _a.addButtonAriaLabel,\n        onToggle = _a.onToggle,\n        onClose = _a.onClose,\n        onAdd = _a.onAdd,\n        isOverflowHorizontal = _a.isOverflowHorizontal,\n        props = __rest(_a, [\"className\", \"children\", \"activeKey\", \"defaultActiveKey\", \"id\", \"isFilled\", \"isSecondary\", \"isVertical\", \"isBox\", \"hasBorderBottom\", \"hasSecondaryBorderBottom\", \"leftScrollAriaLabel\", \"rightScrollAriaLabel\", 'aria-label', \"component\", \"ouiaId\", \"ouiaSafe\", \"mountOnEnter\", \"unmountOnExit\", \"usePageInsets\", \"inset\", \"variant\", \"expandable\", \"isExpanded\", \"defaultIsExpanded\", \"toggleText\", \"toggleAriaLabel\", \"addButtonAriaLabel\", \"onToggle\", \"onClose\", \"onAdd\", \"isOverflowHorizontal\"]);\n      var _this$state3 = this.state,\n        showScrollButtons = _this$state3.showScrollButtons,\n        renderScrollButtons = _this$state3.renderScrollButtons,\n        disableLeftScrollButton = _this$state3.disableLeftScrollButton,\n        disableRightScrollButton = _this$state3.disableRightScrollButton,\n        shownKeys = _this$state3.shownKeys,\n        uncontrolledActiveKey = _this$state3.uncontrolledActiveKey,\n        uncontrolledIsExpandedLocal = _this$state3.uncontrolledIsExpandedLocal,\n        overflowingTabCount = _this$state3.overflowingTabCount;\n      var filteredChildren = React.Children.toArray(children).filter(Boolean).filter(function (child) {\n        return !child.props.isHidden;\n      });\n      var filteredChildrenWithoutOverflow = filteredChildren.slice(0, filteredChildren.length - overflowingTabCount);\n      var filteredChildrenOverflowing = filteredChildren.slice(filteredChildren.length - overflowingTabCount);\n      var overflowingTabProps = filteredChildrenOverflowing.map(function (child) {\n        return child.props;\n      });\n      var uniqueId = id || getUniqueId();\n      var Component = component === TabsComponent.nav ? 'nav' : 'div';\n      var localActiveKey = defaultActiveKey !== undefined ? uncontrolledActiveKey : activeKey;\n      var isExpandedLocal = defaultIsExpanded !== undefined ? uncontrolledIsExpandedLocal : isExpanded;\n      /*  Uncontrolled expandable tabs */\n      var toggleTabs = function toggleTabs(newValue) {\n        if (isExpanded === undefined) {\n          _this3.setState({\n            uncontrolledIsExpandedLocal: newValue\n          });\n        } else {\n          onToggle(newValue);\n        }\n      };\n      var hasOverflowTab = isOverflowHorizontal && overflowingTabCount > 0;\n      var overflowObjectProps = typeof isOverflowHorizontal === 'object' ? Object.assign({}, isOverflowHorizontal) : {};\n      return React.createElement(TabsContextProvider, {\n        value: {\n          variant: variant,\n          mountOnEnter: mountOnEnter,\n          unmountOnExit: unmountOnExit,\n          localActiveKey: localActiveKey,\n          uniqueId: uniqueId,\n          handleTabClick: function handleTabClick() {\n            return _this3.handleTabClick.apply(_this3, arguments);\n          },\n          handleTabClose: onClose\n        }\n      }, React.createElement(Component, Object.assign({\n        \"aria-label\": ariaLabel,\n        className: css(styles.tabs, isFilled && styles.modifiers.fill, isSecondary && styles.modifiers.secondary, isVertical && styles.modifiers.vertical, isVertical && expandable && formatBreakpointMods(expandable, styles), isVertical && expandable && isExpandedLocal && styles.modifiers.expanded, isBox && styles.modifiers.box, showScrollButtons && styles.modifiers.scrollable, usePageInsets && styles.modifiers.pageInsets, !hasBorderBottom && styles.modifiers.noBorderBottom, hasSecondaryBorderBottom && styles.modifiers.borderBottom, formatBreakpointMods(inset, styles), variantStyle[variant], hasOverflowTab && styles.modifiers.overflow, className)\n      }, getOUIAProps(Tabs.displayName, ouiaId !== undefined ? ouiaId : this.state.ouiaStateId, ouiaSafe), {\n        id: id && id\n      }, props), expandable && isVertical && React.createElement(GenerateId, null, function (randomId) {\n        return React.createElement(\"div\", {\n          className: css(styles.tabsToggle)\n        }, React.createElement(\"div\", {\n          className: css(styles.tabsToggleButton)\n        }, React.createElement(Button, {\n          onClick: function onClick() {\n            return toggleTabs(!isExpandedLocal);\n          },\n          variant: \"plain\",\n          \"aria-label\": toggleAriaLabel,\n          \"aria-expanded\": isExpandedLocal,\n          id: \"\".concat(randomId, \"-button\"),\n          \"aria-labelledby\": \"\".concat(randomId, \"-text \").concat(randomId, \"-button\")\n        }, React.createElement(\"span\", {\n          className: css(styles.tabsToggleIcon)\n        }, React.createElement(AngleRightIcon, {\n          \"arian-hidden\": \"true\"\n        })), toggleText && React.createElement(\"span\", {\n          className: css('pf-c-tabs__toggle-text'),\n          id: \"\".concat(randomId, \"-text\")\n        }, toggleText))));\n      }), renderScrollButtons && React.createElement(\"button\", {\n        type: \"button\",\n        className: css(styles.tabsScrollButton, isSecondary && buttonStyles.modifiers.secondary),\n        \"aria-label\": leftScrollAriaLabel,\n        onClick: this.scrollLeft,\n        disabled: disableLeftScrollButton,\n        \"aria-hidden\": disableLeftScrollButton,\n        ref: this.leftScrollButtonRef\n      }, React.createElement(AngleLeftIcon, null)), React.createElement(\"ul\", {\n        className: css(styles.tabsList),\n        ref: this.tabList,\n        onScroll: this.handleScrollButtons,\n        role: \"tablist\"\n      }, isOverflowHorizontal ? filteredChildrenWithoutOverflow : filteredChildren, hasOverflowTab && React.createElement(OverflowTab, Object.assign({\n        overflowingTabs: overflowingTabProps\n      }, overflowObjectProps))), renderScrollButtons && React.createElement(\"button\", {\n        type: \"button\",\n        className: css(styles.tabsScrollButton, isSecondary && buttonStyles.modifiers.secondary),\n        \"aria-label\": rightScrollAriaLabel,\n        onClick: this.scrollRight,\n        disabled: disableRightScrollButton,\n        \"aria-hidden\": disableRightScrollButton\n      }, React.createElement(AngleRightIcon, null)), onAdd !== undefined && React.createElement(\"span\", {\n        className: css(styles.tabsAdd)\n      }, React.createElement(Button, {\n        variant: \"plain\",\n        \"aria-label\": addButtonAriaLabel || 'Add tab',\n        onClick: onAdd\n      }, React.createElement(PlusIcon, null)))), filteredChildren.filter(function (child) {\n        return child.props.children && !(unmountOnExit && child.props.eventKey !== localActiveKey) && !(mountOnEnter && shownKeys.indexOf(child.props.eventKey) === -1);\n      }).map(function (child) {\n        return React.createElement(TabContent, {\n          key: child.props.eventKey,\n          activeKey: localActiveKey,\n          child: child,\n          id: child.props.id || uniqueId,\n          ouiaId: child.props.ouiaId\n        });\n      }));\n    }\n  }]);\n  return Tabs;\n}(React.Component);\nTabs.displayName = 'Tabs';\nTabs.defaultProps = {\n  activeKey: 0,\n  onSelect: function onSelect() {\n    return undefined;\n  },\n  isFilled: false,\n  isSecondary: false,\n  isVertical: false,\n  isBox: false,\n  hasBorderBottom: true,\n  leftScrollAriaLabel: 'Scroll left',\n  rightScrollAriaLabel: 'Scroll right',\n  component: TabsComponent.div,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  ouiaSafe: true,\n  variant: 'default',\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  onToggle: function onToggle(isExpanded) {\n    return undefined;\n  }\n};","map":{"version":3,"names":["React","styles","buttonStyles","css","AngleLeftIcon","AngleRightIcon","PlusIcon","getUniqueId","isElementInView","formatBreakpointMods","TabContent","TabsContextProvider","OverflowTab","Button","getOUIAProps","getDefaultOUIAId","canUseDOM","GenerateId","TabsComponent","variantStyle","default","light300","modifiers","colorSchemeLight_300","Tabs","_React$Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","tabList","createRef","leftScrollButtonRef","scrollTimeout","countOverflowingElements","container","elements","Array","from","children","filter","element","length","handleScrollButtons","isOverflowHorizontal","clearTimeout","setTimeout","current","disableLeftScrollButton","disableRightScrollButton","enableScrollButtons","overflowingTabCount","isVertical","overflowOnLeft","firstChild","overflowOnRight","lastChild","setState","scrollLeft","childrenArr","firstElementInView","lastElementOutOfView","i","scrollWidth","scrollRight","lastElementInView","firstElementOutOfView","hideScrollButtons","_this$state","state","renderScrollButtons","showScrollButtons","shownKeys","defaultActiveKey","undefined","activeKey","uncontrolledActiveKey","uncontrolledIsExpandedLocal","defaultIsExpanded","ouiaStateId","displayName","expandable","toggleAriaLabel","toggleText","console","error","_createClass","key","value","handleTabClick","event","eventKey","tabContentRef","_this$props","onSelect","Children","toArray","map","child","forEach","hidden","mountOnEnter","concat","componentDidMount","window","addEventListener","componentWillUnmount","removeEventListener","_a","componentDidUpdate","prevProps","prevState","_this2","_this$props2","_this$state2","indexOf","currentOverflowingTabCount","render","_this3","className","id","isFilled","isSecondary","isBox","hasBorderBottom","hasSecondaryBorderBottom","leftScrollAriaLabel","rightScrollAriaLabel","ariaLabel","component","ouiaId","ouiaSafe","unmountOnExit","usePageInsets","inset","variant","isExpanded","addButtonAriaLabel","onToggle","onClose","onAdd","__rest","_this$state3","filteredChildren","Boolean","isHidden","filteredChildrenWithoutOverflow","slice","filteredChildrenOverflowing","overflowingTabProps","uniqueId","Component","nav","localActiveKey","isExpandedLocal","toggleTabs","newValue","hasOverflowTab","overflowObjectProps","Object","assign","createElement","apply","arguments","handleTabClose","tabs","fill","secondary","vertical","expanded","box","scrollable","pageInsets","noBorderBottom","borderBottom","overflow","randomId","tabsToggle","tabsToggleButton","onClick","tabsToggleIcon","type","tabsScrollButton","disabled","ref","tabsList","onScroll","role","overflowingTabs","tabsAdd","defaultProps","div"],"sources":["/data/stackhub-web/plugins/myapps/node_modules/@patternfly/react-core/src/components/Tabs/Tabs.tsx"],"sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Tabs/tabs';\nimport buttonStyles from '@patternfly/react-styles/css/components/Button/button';\nimport { css } from '@patternfly/react-styles';\nimport { PickOptional } from '../../helpers/typeUtils';\nimport AngleLeftIcon from '@patternfly/react-icons/dist/esm/icons/angle-left-icon';\nimport AngleRightIcon from '@patternfly/react-icons/dist/esm/icons/angle-right-icon';\nimport PlusIcon from '@patternfly/react-icons/dist/esm/icons/plus-icon';\nimport { getUniqueId, isElementInView, formatBreakpointMods } from '../../helpers/util';\nimport { TabContent } from './TabContent';\nimport { TabProps } from './Tab';\nimport { TabsContextProvider } from './TabsContext';\nimport { OverflowTab } from './OverflowTab';\nimport { Button } from '../Button';\nimport { getOUIAProps, OUIAProps, getDefaultOUIAId, canUseDOM } from '../../helpers';\nimport { GenerateId } from '../../helpers/GenerateId/GenerateId';\n\nexport enum TabsComponent {\n  div = 'div',\n  nav = 'nav'\n}\n\nexport interface HorizontalOverflowObject {\n  /** Flag which shows the count of overflowing tabs when enabled */\n  showTabCount?: boolean;\n  /** The text which displays when an overflowing tab isn't selected */\n  defaultTitleText?: string;\n  /** The aria label applied to the button which toggles the tab overflow menu */\n  toggleAriaLabel?: string;\n}\n\nexport interface TabsProps extends Omit<React.HTMLProps<HTMLElement | HTMLDivElement>, 'onSelect'>, OUIAProps {\n  /** Content rendered inside the tabs component. Must be React.ReactElement<TabProps>[] */\n  children: React.ReactNode;\n  /** Additional classes added to the tabs */\n  className?: string;\n  /** Tabs background color variant */\n  variant?: 'default' | 'light300';\n  /** The index of the active tab */\n  activeKey?: number | string;\n  /** The index of the default active tab. Set this for uncontrolled Tabs */\n  defaultActiveKey?: number | string;\n  /** Callback to handle tab selection */\n  onSelect?: (event: React.MouseEvent<HTMLElement, MouseEvent>, eventKey: number | string) => void;\n  /** Callback to handle tab closing and adds a basic close button to all tabs. This is overridden by the tab actions property. */\n  onClose?: (event: React.MouseEvent<HTMLElement, MouseEvent>, eventKey: number | string) => void;\n  /** Callback for the add button. Passing this property inserts the add button */\n  onAdd?: (event: React.MouseEvent<HTMLElement, MouseEvent>) => void;\n  /** Aria-label for the add button */\n  addButtonAriaLabel?: string;\n  /** Uniquely identifies the tabs */\n  id?: string;\n  /** Enables the filled tab list layout */\n  isFilled?: boolean;\n  /** Enables secondary tab styling */\n  isSecondary?: boolean;\n  /** Enables box styling to the tab component */\n  isBox?: boolean;\n  /** Enables vertical tab styling */\n  isVertical?: boolean;\n  /** Enables border bottom tab styling on tabs. Defaults to true. To remove the bottom border, set this prop to false. */\n  hasBorderBottom?: boolean;\n  /** Enables border bottom styling for secondary tabs */\n  hasSecondaryBorderBottom?: boolean;\n  /** Aria-label for the left scroll button */\n  leftScrollAriaLabel?: string;\n  /** Aria-label for the right scroll button */\n  rightScrollAriaLabel?: string;\n  /** Determines what tag is used around the tabs. Use \"nav\" to define the tabs inside a navigation region */\n  component?: 'div' | 'nav';\n  /** Provides an accessible label for the tabs. Labels should be unique for each set of tabs that are present on a page. When component is set to nav, this prop should be defined to differentiate the tabs from other navigation regions on the page. */\n  'aria-label'?: string;\n  /** Waits until the first \"enter\" transition to mount tab children (add them to the DOM) */\n  mountOnEnter?: boolean;\n  /** Unmounts tab children (removes them from the DOM) when they are no longer visible */\n  unmountOnExit?: boolean;\n  /** Flag indicates that the tabs should use page insets. */\n  usePageInsets?: boolean;\n  /** Insets at various breakpoints. */\n  inset?: {\n    default?: 'insetNone' | 'insetSm' | 'insetMd' | 'insetLg' | 'insetXl' | 'inset2xl';\n    sm?: 'insetNone' | 'insetSm' | 'insetMd' | 'insetLg' | 'insetXl' | 'inset2xl';\n    md?: 'insetNone' | 'insetSm' | 'insetMd' | 'insetLg' | 'insetXl' | 'inset2xl';\n    lg?: 'insetNone' | 'insetSm' | 'insetMd' | 'insetLg' | 'insetXl' | 'inset2xl';\n    xl?: 'insetNone' | 'insetSm' | 'insetMd' | 'insetLg' | 'insetXl' | 'inset2xl';\n    '2xl'?: 'insetNone' | 'insetSm' | 'insetMd' | 'insetLg' | 'insetXl' | 'inset2xl';\n  };\n  /** Enable expandable vertical tabs at various breakpoints. (isVertical should be set to true for this to work) */\n  expandable?: {\n    default?: 'expandable' | 'nonExpandable';\n    sm?: 'expandable' | 'nonExpandable';\n    md?: 'expandable' | 'nonExpandable';\n    lg?: 'expandable' | 'nonExpandable';\n    xl?: 'expandable' | 'nonExpandable';\n    '2xl'?: 'expandable' | 'nonExpandable';\n  };\n  /** Flag to indicate if the vertical tabs are expanded */\n  isExpanded?: boolean;\n  /** Flag indicating the default expanded state for uncontrolled expand/collapse of */\n  defaultIsExpanded?: boolean;\n  /** Text that appears in the expandable toggle */\n  toggleText?: string;\n  /** Aria-label for the expandable toggle */\n  toggleAriaLabel?: string;\n  /** Callback function to toggle the expandable tabs. */\n  onToggle?: (isExpanded: boolean) => void;\n  /** @beta Flag which places overflowing tabs into a menu triggered by the last tab. Additionally an object can be passed with custom settings for the overflow tab. */\n  isOverflowHorizontal?: boolean | HorizontalOverflowObject;\n  /** Value to overwrite the randomly generated data-ouia-component-id.*/\n  ouiaId?: number | string;\n  /** Set the value of data-ouia-safe. Only set to true when the component is in a static state, i.e. no animations are occurring. At all other times, this value must be false. */\n  ouiaSafe?: boolean;\n}\n\nconst variantStyle = {\n  default: '',\n  light300: styles.modifiers.colorSchemeLight_300\n};\n\ninterface TabsState {\n  /** Used to signal if the scroll buttons should be used  */\n  enableScrollButtons: boolean;\n  /** Used to control if the scroll buttons should be shown to the user via the pf-m-scrollable class */\n  showScrollButtons: boolean;\n  /** Used to control if the scroll buttons should be rendered. Rendering must occur before the scroll buttons are\n   * shown and rendering must be stopped after they stop being shown to preserve CSS transitions.\n   */\n  renderScrollButtons: boolean;\n  disableLeftScrollButton: boolean;\n  disableRightScrollButton: boolean;\n  shownKeys: (string | number)[];\n  uncontrolledActiveKey: number | string;\n  uncontrolledIsExpandedLocal: boolean;\n  ouiaStateId: string;\n  overflowingTabCount: number;\n}\n\nexport class Tabs extends React.Component<TabsProps, TabsState> {\n  static displayName = 'Tabs';\n  tabList = React.createRef<HTMLUListElement>();\n  leftScrollButtonRef = React.createRef<HTMLButtonElement>();\n  constructor(props: TabsProps) {\n    super(props);\n    this.state = {\n      enableScrollButtons: false,\n      showScrollButtons: false,\n      renderScrollButtons: false,\n      disableLeftScrollButton: true,\n      disableRightScrollButton: true,\n      shownKeys: this.props.defaultActiveKey !== undefined ? [this.props.defaultActiveKey] : [this.props.activeKey], // only for mountOnEnter case\n      uncontrolledActiveKey: this.props.defaultActiveKey,\n      uncontrolledIsExpandedLocal: this.props.defaultIsExpanded,\n      ouiaStateId: getDefaultOUIAId(Tabs.displayName),\n      overflowingTabCount: 0\n    };\n\n    if (this.props.isVertical && this.props.expandable !== undefined) {\n      if (!this.props.toggleAriaLabel && !this.props.toggleText) {\n        // eslint-disable-next-line no-console\n        console.error(\n          'Tabs:',\n          'toggleAriaLabel or the toggleText prop is required to make the toggle button accessible'\n        );\n      }\n    }\n  }\n\n  scrollTimeout: NodeJS.Timeout = null;\n\n  static defaultProps: PickOptional<TabsProps> = {\n    activeKey: 0,\n    onSelect: () => undefined as any,\n    isFilled: false,\n    isSecondary: false,\n    isVertical: false,\n    isBox: false,\n    hasBorderBottom: true,\n    leftScrollAriaLabel: 'Scroll left',\n    rightScrollAriaLabel: 'Scroll right',\n    component: TabsComponent.div,\n    mountOnEnter: false,\n    unmountOnExit: false,\n    ouiaSafe: true,\n    variant: 'default',\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    onToggle: (isExpanded): void => undefined\n  };\n\n  handleTabClick(\n    event: React.MouseEvent<HTMLElement, MouseEvent>,\n    eventKey: number | string,\n    tabContentRef: React.RefObject<any>\n  ) {\n    const { shownKeys } = this.state;\n    const { onSelect, defaultActiveKey } = this.props;\n    // if defaultActiveKey Tabs are uncontrolled, set new active key internally\n    if (defaultActiveKey !== undefined) {\n      this.setState({\n        uncontrolledActiveKey: eventKey\n      });\n    } else {\n      onSelect(event, eventKey);\n    }\n\n    // process any tab content sections outside of the component\n    if (tabContentRef) {\n      React.Children.toArray(this.props.children)\n        .map(child => child as React.ReactElement<TabProps>)\n        .filter(child => child.props && child.props.tabContentRef && child.props.tabContentRef.current)\n        .forEach(child => (child.props.tabContentRef.current.hidden = true));\n      // most recently selected tabContent\n      if (tabContentRef.current) {\n        tabContentRef.current.hidden = false;\n      }\n    }\n    if (this.props.mountOnEnter) {\n      this.setState({\n        shownKeys: shownKeys.concat(eventKey)\n      });\n    }\n  }\n\n  countOverflowingElements = (container: HTMLUListElement) => {\n    const elements = Array.from(container.children);\n    return elements.filter(element => !isElementInView(container, element as HTMLElement, false)).length;\n  };\n\n  handleScrollButtons = () => {\n    const { isOverflowHorizontal: isOverflowHorizontal } = this.props;\n    // add debounce to the scroll event\n    clearTimeout(this.scrollTimeout);\n    this.scrollTimeout = setTimeout(() => {\n      const container = this.tabList.current;\n      let disableLeftScrollButton = true;\n      let disableRightScrollButton = true;\n      let enableScrollButtons = false;\n      let overflowingTabCount = 0;\n\n      if (container && !this.props.isVertical && !isOverflowHorizontal) {\n        // get first element and check if it is in view\n        const overflowOnLeft = !isElementInView(container, container.firstChild as HTMLElement, false);\n\n        // get last element and check if it is in view\n        const overflowOnRight = !isElementInView(container, container.lastChild as HTMLElement, false);\n\n        enableScrollButtons = overflowOnLeft || overflowOnRight;\n\n        disableLeftScrollButton = !overflowOnLeft;\n        disableRightScrollButton = !overflowOnRight;\n      }\n\n      if (isOverflowHorizontal) {\n        overflowingTabCount = this.countOverflowingElements(container);\n      }\n\n      this.setState({\n        enableScrollButtons,\n        disableLeftScrollButton,\n        disableRightScrollButton,\n        overflowingTabCount\n      });\n    }, 100);\n  };\n\n  scrollLeft = () => {\n    // find first Element that is fully in view on the left, then scroll to the element before it\n    if (this.tabList.current) {\n      const container = this.tabList.current;\n      const childrenArr = Array.from(container.children);\n      let firstElementInView: any;\n      let lastElementOutOfView: any;\n      let i;\n      for (i = 0; i < childrenArr.length && !firstElementInView; i++) {\n        if (isElementInView(container, childrenArr[i] as HTMLElement, false)) {\n          firstElementInView = childrenArr[i];\n          lastElementOutOfView = childrenArr[i - 1];\n        }\n      }\n      if (lastElementOutOfView) {\n        container.scrollLeft -= lastElementOutOfView.scrollWidth;\n      }\n    }\n  };\n\n  scrollRight = () => {\n    // find last Element that is fully in view on the right, then scroll to the element after it\n    if (this.tabList.current) {\n      const container = this.tabList.current as any;\n      const childrenArr = Array.from(container.children);\n      let lastElementInView: any;\n      let firstElementOutOfView: any;\n      for (let i = childrenArr.length - 1; i >= 0 && !lastElementInView; i--) {\n        if (isElementInView(container, childrenArr[i] as HTMLElement, false)) {\n          lastElementInView = childrenArr[i];\n          firstElementOutOfView = childrenArr[i + 1];\n        }\n      }\n      if (firstElementOutOfView) {\n        container.scrollLeft += firstElementOutOfView.scrollWidth;\n      }\n    }\n  };\n\n  hideScrollButtons = () => {\n    const { enableScrollButtons, renderScrollButtons, showScrollButtons } = this.state;\n    if (!enableScrollButtons && !showScrollButtons && renderScrollButtons) {\n      this.setState({ renderScrollButtons: false });\n    }\n  };\n\n  componentDidMount() {\n    if (!this.props.isVertical) {\n      if (canUseDOM) {\n        window.addEventListener('resize', this.handleScrollButtons, false);\n      }\n      // call the handle resize function to check if scroll buttons should be shown\n      this.handleScrollButtons();\n    }\n  }\n\n  componentWillUnmount() {\n    if (!this.props.isVertical) {\n      if (canUseDOM) {\n        window.removeEventListener('resize', this.handleScrollButtons, false);\n      }\n    }\n    clearTimeout(this.scrollTimeout);\n    this.leftScrollButtonRef.current?.removeEventListener('transitionend', this.hideScrollButtons);\n  }\n\n  componentDidUpdate(prevProps: TabsProps, prevState: TabsState) {\n    const { activeKey, mountOnEnter, isOverflowHorizontal, children } = this.props;\n    const { shownKeys, overflowingTabCount, enableScrollButtons } = this.state;\n    if (prevProps.activeKey !== activeKey && mountOnEnter && shownKeys.indexOf(activeKey) < 0) {\n      this.setState({\n        shownKeys: shownKeys.concat(activeKey)\n      });\n    }\n\n    if (\n      prevProps.children &&\n      children &&\n      React.Children.toArray(prevProps.children).length !== React.Children.toArray(children).length\n    ) {\n      this.handleScrollButtons();\n    }\n\n    const currentOverflowingTabCount = this.countOverflowingElements(this.tabList.current);\n    if (isOverflowHorizontal && currentOverflowingTabCount) {\n      this.setState({ overflowingTabCount: currentOverflowingTabCount + overflowingTabCount });\n    }\n\n    if (!prevState.enableScrollButtons && enableScrollButtons) {\n      this.setState({ renderScrollButtons: true });\n      setTimeout(() => {\n        this.leftScrollButtonRef.current?.addEventListener('transitionend', this.hideScrollButtons);\n        this.setState({ showScrollButtons: true });\n      }, 100);\n    } else if (prevState.enableScrollButtons && !enableScrollButtons) {\n      this.setState({ showScrollButtons: false });\n    }\n  }\n\n  render() {\n    const {\n      className,\n      children,\n      activeKey,\n      defaultActiveKey,\n      id,\n      isFilled,\n      isSecondary,\n      isVertical,\n      isBox,\n      hasBorderBottom,\n      hasSecondaryBorderBottom,\n      leftScrollAriaLabel,\n      rightScrollAriaLabel,\n      'aria-label': ariaLabel,\n      component,\n      ouiaId,\n      ouiaSafe,\n      mountOnEnter,\n      unmountOnExit,\n      usePageInsets,\n      inset,\n      variant,\n      expandable,\n      isExpanded,\n      defaultIsExpanded,\n      toggleText,\n      toggleAriaLabel,\n      addButtonAriaLabel,\n      onToggle,\n      onClose,\n      onAdd,\n      isOverflowHorizontal: isOverflowHorizontal,\n      ...props\n    } = this.props;\n    const {\n      showScrollButtons,\n      renderScrollButtons,\n      disableLeftScrollButton,\n      disableRightScrollButton,\n      shownKeys,\n      uncontrolledActiveKey,\n      uncontrolledIsExpandedLocal,\n      overflowingTabCount\n    } = this.state;\n    const filteredChildren = (React.Children.toArray(children) as React.ReactElement<TabProps>[])\n      .filter(Boolean)\n      .filter(child => !child.props.isHidden);\n\n    const filteredChildrenWithoutOverflow = filteredChildren.slice(0, filteredChildren.length - overflowingTabCount);\n    const filteredChildrenOverflowing = filteredChildren.slice(filteredChildren.length - overflowingTabCount);\n    const overflowingTabProps = filteredChildrenOverflowing.map((child: React.ReactElement<TabProps>) => child.props);\n\n    const uniqueId = id || getUniqueId();\n    const Component: any = component === TabsComponent.nav ? 'nav' : 'div';\n    const localActiveKey = defaultActiveKey !== undefined ? uncontrolledActiveKey : activeKey;\n\n    const isExpandedLocal = defaultIsExpanded !== undefined ? uncontrolledIsExpandedLocal : isExpanded;\n    /*  Uncontrolled expandable tabs */\n    const toggleTabs = (newValue: boolean) => {\n      if (isExpanded === undefined) {\n        this.setState({ uncontrolledIsExpandedLocal: newValue });\n      } else {\n        onToggle(newValue);\n      }\n    };\n\n    const hasOverflowTab = isOverflowHorizontal && overflowingTabCount > 0;\n    const overflowObjectProps = typeof isOverflowHorizontal === 'object' ? { ...isOverflowHorizontal } : {};\n\n    return (\n      <TabsContextProvider\n        value={{\n          variant,\n          mountOnEnter,\n          unmountOnExit,\n          localActiveKey,\n          uniqueId,\n          handleTabClick: (...args) => this.handleTabClick(...args),\n          handleTabClose: onClose\n        }}\n      >\n        <Component\n          aria-label={ariaLabel}\n          className={css(\n            styles.tabs,\n            isFilled && styles.modifiers.fill,\n            isSecondary && styles.modifiers.secondary,\n            isVertical && styles.modifiers.vertical,\n            isVertical && expandable && formatBreakpointMods(expandable, styles),\n            isVertical && expandable && isExpandedLocal && styles.modifiers.expanded,\n            isBox && styles.modifiers.box,\n            showScrollButtons && styles.modifiers.scrollable,\n            usePageInsets && styles.modifiers.pageInsets,\n            !hasBorderBottom && styles.modifiers.noBorderBottom,\n            hasSecondaryBorderBottom && styles.modifiers.borderBottom,\n            formatBreakpointMods(inset, styles),\n            variantStyle[variant],\n            hasOverflowTab && styles.modifiers.overflow,\n            className\n          )}\n          {...getOUIAProps(Tabs.displayName, ouiaId !== undefined ? ouiaId : this.state.ouiaStateId, ouiaSafe)}\n          id={id && id}\n          {...props}\n        >\n          {expandable && isVertical && (\n            <GenerateId>\n              {randomId => (\n                <div className={css(styles.tabsToggle)}>\n                  <div className={css(styles.tabsToggleButton)}>\n                    <Button\n                      onClick={() => toggleTabs(!isExpandedLocal)}\n                      variant=\"plain\"\n                      aria-label={toggleAriaLabel}\n                      aria-expanded={isExpandedLocal}\n                      id={`${randomId}-button`}\n                      aria-labelledby={`${randomId}-text ${randomId}-button`}\n                    >\n                      <span className={css(styles.tabsToggleIcon)}>\n                        <AngleRightIcon arian-hidden=\"true\" />\n                      </span>\n                      {toggleText && (\n                        <span className={css('pf-c-tabs__toggle-text')} id={`${randomId}-text`}>\n                          {toggleText}\n                        </span>\n                      )}\n                    </Button>\n                  </div>\n                </div>\n              )}\n            </GenerateId>\n          )}\n          {renderScrollButtons && (\n            <button\n              type=\"button\"\n              className={css(styles.tabsScrollButton, isSecondary && buttonStyles.modifiers.secondary)}\n              aria-label={leftScrollAriaLabel}\n              onClick={this.scrollLeft}\n              disabled={disableLeftScrollButton}\n              aria-hidden={disableLeftScrollButton}\n              ref={this.leftScrollButtonRef}\n            >\n              <AngleLeftIcon />\n            </button>\n          )}\n          <ul className={css(styles.tabsList)} ref={this.tabList} onScroll={this.handleScrollButtons} role=\"tablist\">\n            {isOverflowHorizontal ? filteredChildrenWithoutOverflow : filteredChildren}\n            {hasOverflowTab && <OverflowTab overflowingTabs={overflowingTabProps} {...overflowObjectProps} />}\n          </ul>\n          {renderScrollButtons && (\n            <button\n              type=\"button\"\n              className={css(styles.tabsScrollButton, isSecondary && buttonStyles.modifiers.secondary)}\n              aria-label={rightScrollAriaLabel}\n              onClick={this.scrollRight}\n              disabled={disableRightScrollButton}\n              aria-hidden={disableRightScrollButton}\n            >\n              <AngleRightIcon />\n            </button>\n          )}\n          {onAdd !== undefined && (\n            <span className={css(styles.tabsAdd)}>\n              <Button variant=\"plain\" aria-label={addButtonAriaLabel || 'Add tab'} onClick={onAdd}>\n                <PlusIcon />\n              </Button>\n            </span>\n          )}\n        </Component>\n        {filteredChildren\n          .filter(\n            child =>\n              child.props.children &&\n              !(unmountOnExit && child.props.eventKey !== localActiveKey) &&\n              !(mountOnEnter && shownKeys.indexOf(child.props.eventKey) === -1)\n          )\n          .map(child => (\n            <TabContent\n              key={child.props.eventKey}\n              activeKey={localActiveKey}\n              child={child}\n              id={child.props.id || uniqueId}\n              ouiaId={child.props.ouiaId}\n            />\n          ))}\n      </TabsContextProvider>\n    );\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
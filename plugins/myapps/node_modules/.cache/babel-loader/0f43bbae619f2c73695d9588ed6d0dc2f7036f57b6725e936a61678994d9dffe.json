{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { InvariantError, invariant } from \"../../utilities/globals/index.js\";\nimport { Observable } from \"../../utilities/index.js\";\nimport { validateOperation, createOperation, transformOperation } from \"../utils/index.js\";\nfunction passthrough(op, forward) {\n  return forward ? forward(op) : Observable.of();\n}\nfunction toLink(handler) {\n  return typeof handler === 'function' ? new ApolloLink(handler) : handler;\n}\nfunction isTerminating(link) {\n  return link.request.length <= 1;\n}\nvar LinkError = function (_super) {\n  __extends(LinkError, _super);\n  function LinkError(message, link) {\n    var _this = _super.call(this, message) || this;\n    _this.link = link;\n    return _this;\n  }\n  return LinkError;\n}(Error);\nvar ApolloLink = function () {\n  function ApolloLink(request) {\n    if (request) this.request = request;\n  }\n  ApolloLink.empty = function () {\n    return new ApolloLink(function () {\n      return Observable.of();\n    });\n  };\n  ApolloLink.from = function (links) {\n    if (links.length === 0) return ApolloLink.empty();\n    return links.map(toLink).reduce(function (x, y) {\n      return x.concat(y);\n    });\n  };\n  ApolloLink.split = function (test, left, right) {\n    var leftLink = toLink(left);\n    var rightLink = toLink(right || new ApolloLink(passthrough));\n    if (isTerminating(leftLink) && isTerminating(rightLink)) {\n      return new ApolloLink(function (operation) {\n        return test(operation) ? leftLink.request(operation) || Observable.of() : rightLink.request(operation) || Observable.of();\n      });\n    } else {\n      return new ApolloLink(function (operation, forward) {\n        return test(operation) ? leftLink.request(operation, forward) || Observable.of() : rightLink.request(operation, forward) || Observable.of();\n      });\n    }\n  };\n  ApolloLink.execute = function (link, operation) {\n    return link.request(createOperation(operation.context, transformOperation(validateOperation(operation)))) || Observable.of();\n  };\n  ApolloLink.concat = function (first, second) {\n    var firstLink = toLink(first);\n    if (isTerminating(firstLink)) {\n      __DEV__ && invariant.warn(new LinkError(\"You are calling concat on a terminating link, which will have no effect\", firstLink));\n      return firstLink;\n    }\n    var nextLink = toLink(second);\n    if (isTerminating(nextLink)) {\n      return new ApolloLink(function (operation) {\n        return firstLink.request(operation, function (op) {\n          return nextLink.request(op) || Observable.of();\n        }) || Observable.of();\n      });\n    } else {\n      return new ApolloLink(function (operation, forward) {\n        return firstLink.request(operation, function (op) {\n          return nextLink.request(op, forward) || Observable.of();\n        }) || Observable.of();\n      });\n    }\n  };\n  ApolloLink.prototype.split = function (test, left, right) {\n    return this.concat(ApolloLink.split(test, left, right || new ApolloLink(passthrough)));\n  };\n  ApolloLink.prototype.concat = function (next) {\n    return ApolloLink.concat(this, next);\n  };\n  ApolloLink.prototype.request = function (operation, forward) {\n    throw __DEV__ ? new InvariantError('request is not implemented') : new InvariantError(22);\n  };\n  ApolloLink.prototype.onError = function (error, observer) {\n    if (observer && observer.error) {\n      observer.error(error);\n      return false;\n    }\n    throw error;\n  };\n  ApolloLink.prototype.setOnError = function (fn) {\n    this.onError = fn;\n    return this;\n  };\n  return ApolloLink;\n}();\nexport { ApolloLink };","map":{"version":3,"names":["InvariantError","invariant","Observable","validateOperation","createOperation","transformOperation","passthrough","op","forward","of","toLink","handler","ApolloLink","isTerminating","link","request","length","LinkError","_super","__extends","message","_this","call","Error","empty","from","links","map","reduce","x","y","concat","split","test","left","right","leftLink","rightLink","operation","execute","context","first","second","firstLink","__DEV__","warn","nextLink","prototype","next","onError","error","observer","setOnError","fn"],"sources":["/data/stackhub-web/plugins/myapps/node_modules/@apollo/src/link/core/ApolloLink.ts"],"sourcesContent":["import { InvariantError, invariant } from '../../utilities/globals';\n\nimport { Observable, Observer } from '../../utilities';\nimport {\n  NextLink,\n  Operation,\n  RequestHandler,\n  FetchResult,\n  GraphQLRequest\n} from './types';\nimport {\n  validateOperation,\n  createOperation,\n  transformOperation,\n} from '../utils';\n\nfunction passthrough(op: Operation, forward: NextLink) {\n  return (forward ? forward(op) : Observable.of()) as Observable<FetchResult>;\n}\n\nfunction toLink(handler: RequestHandler | ApolloLink) {\n  return typeof handler === 'function' ? new ApolloLink(handler) : handler;\n}\n\nfunction isTerminating(link: ApolloLink): boolean {\n  return link.request.length <= 1;\n}\n\nclass LinkError extends Error {\n  public link?: ApolloLink;\n  constructor(message?: string, link?: ApolloLink) {\n    super(message);\n    this.link = link;\n  }\n}\n\nexport class ApolloLink {\n  public static empty(): ApolloLink {\n    return new ApolloLink(() => Observable.of());\n  }\n\n  public static from(links: (ApolloLink | RequestHandler)[]): ApolloLink {\n    if (links.length === 0) return ApolloLink.empty();\n    return links.map(toLink).reduce((x, y) => x.concat(y)) as ApolloLink;\n  }\n\n  public static split(\n    test: (op: Operation) => boolean,\n    left: ApolloLink | RequestHandler,\n    right?: ApolloLink | RequestHandler,\n  ): ApolloLink {\n    const leftLink = toLink(left);\n    const rightLink = toLink(right || new ApolloLink(passthrough));\n\n    if (isTerminating(leftLink) && isTerminating(rightLink)) {\n      return new ApolloLink(operation => {\n        return test(operation)\n          ? leftLink.request(operation) || Observable.of()\n          : rightLink.request(operation) || Observable.of();\n      });\n    } else {\n      return new ApolloLink((operation, forward) => {\n        return test(operation)\n          ? leftLink.request(operation, forward) || Observable.of()\n          : rightLink.request(operation, forward) || Observable.of();\n      });\n    }\n  }\n\n  public static execute(\n    link: ApolloLink,\n    operation: GraphQLRequest,\n  ): Observable<FetchResult> {\n    return (\n      link.request(\n        createOperation(\n          operation.context,\n          transformOperation(validateOperation(operation)),\n        ),\n      ) || Observable.of()\n    );\n  }\n\n  public static concat(\n    first: ApolloLink | RequestHandler,\n    second: ApolloLink | RequestHandler,\n  ) {\n    const firstLink = toLink(first);\n    if (isTerminating(firstLink)) {\n      invariant.warn(\n        new LinkError(\n          `You are calling concat on a terminating link, which will have no effect`,\n          firstLink,\n        ),\n      );\n      return firstLink;\n    }\n    const nextLink = toLink(second);\n\n    if (isTerminating(nextLink)) {\n      return new ApolloLink(\n        operation =>\n          firstLink.request(\n            operation,\n            op => nextLink.request(op) || Observable.of(),\n          ) || Observable.of(),\n      );\n    } else {\n      return new ApolloLink((operation, forward) => {\n        return (\n          firstLink.request(operation, op => {\n            return nextLink.request(op, forward) || Observable.of();\n          }) || Observable.of()\n        );\n      });\n    }\n  }\n\n  constructor(request?: RequestHandler) {\n    if (request) this.request = request;\n  }\n\n  public split(\n    test: (op: Operation) => boolean,\n    left: ApolloLink | RequestHandler,\n    right?: ApolloLink | RequestHandler,\n  ): ApolloLink {\n    return this.concat(\n      ApolloLink.split(test, left, right || new ApolloLink(passthrough))\n    );\n  }\n\n  public concat(next: ApolloLink | RequestHandler): ApolloLink {\n    return ApolloLink.concat(this, next);\n  }\n\n  public request(\n    operation: Operation,\n    forward?: NextLink,\n  ): Observable<FetchResult> | null {\n    throw new InvariantError('request is not implemented');\n  }\n\n  protected onError(\n    error: any,\n    observer?: Observer<FetchResult>,\n  ): false | void {\n    if (observer && observer.error) {\n      observer.error(error);\n      // Returning false indicates that observer.error does not need to be\n      // called again, since it was already called (on the previous line).\n      // Calling observer.error again would not cause any real problems,\n      // since only the first call matters, but custom onError functions\n      // might have other reasons for wanting to prevent the default\n      // behavior by returning false.\n      return false;\n    }\n    // Throw errors will be passed to observer.error.\n    throw error;\n  }\n\n  public setOnError(fn: ApolloLink[\"onError\"]): this {\n    this.onError = fn;\n    return this;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import * as React from 'react';\nimport { ApplicationLauncherSeparator } from '../components/ApplicationLauncher/ApplicationLauncherSeparator';\nimport { Divider } from '../components/Divider/Divider';\n/**\n * This function is a helper for creating an array of renderable favorite items for the Application launcher or Select\n *\n * @param {object} items The items rendered in Select or Application aLauncher\n * @param {boolean} isGrouped Flag indicating if items are grouped\n * @param {any[]} favorites Array of ids of favorited items\n * @param {boolean} isEnterTriggersArrowDown Flag indicating if we should add isEnterTriggersArrowDown to favorited item\n */\nexport var createRenderableFavorites = function createRenderableFavorites(items, isGrouped, favorites, isEnterTriggersArrowDown) {\n  if (isGrouped) {\n    var favoriteItems = [];\n    items.forEach(function (group) {\n      if (favorites.length > 0) {\n        return group.props.children && group.props.children.filter(function (item) {\n          return favorites.includes(item.props.id);\n        }).map(function (item) {\n          if (isEnterTriggersArrowDown) {\n            return favoriteItems.push(React.cloneElement(item, {\n              isFavorite: true,\n              enterTriggersArrowDown: isEnterTriggersArrowDown,\n              id: \"favorite-\".concat(item.props.id)\n            }));\n          } else {\n            return favoriteItems.push(React.cloneElement(item, {\n              isFavorite: true,\n              id: \"favorite-\".concat(item.props.id)\n            }));\n          }\n        });\n      }\n    });\n    return favoriteItems;\n  }\n  return items.filter(function (item) {\n    return favorites.includes(item.props.id);\n  }).map(function (item) {\n    return React.cloneElement(item, {\n      isFavorite: true,\n      enterTriggersArrowDown: isEnterTriggersArrowDown\n    });\n  });\n};\n/**\n * This function is a helper for extending the array of renderable favorite with the select/application launcher items to  render in the Application launcher or Select\n *\n * @param {object} items The items rendered in Select or Application aLauncher\n * @param {boolean} isGrouped Flag indicating if items are grouped\n * @param {any[]} favorites Array of ids of favorited items\n */\nexport var extendItemsWithFavorite = function extendItemsWithFavorite(items, isGrouped, favorites) {\n  if (isGrouped) {\n    return items.map(function (group) {\n      return React.cloneElement(group, {\n        children: React.Children.map(group.props.children, function (item) {\n          if (item.type === ApplicationLauncherSeparator || item.type === Divider) {\n            return item;\n          }\n          return React.cloneElement(item, {\n            isFavorite: favorites.some(function (favoriteId) {\n              return favoriteId === item.props.id || \"favorite-\".concat(favoriteId) === item.props.id;\n            })\n          });\n        })\n      });\n    });\n  }\n  return items.map(function (item) {\n    return React.cloneElement(item, {\n      isFavorite: favorites.some(function (favoriteId) {\n        return favoriteId === item.props.id;\n      })\n    });\n  });\n};","map":{"version":3,"names":["React","ApplicationLauncherSeparator","Divider","createRenderableFavorites","items","isGrouped","favorites","isEnterTriggersArrowDown","favoriteItems","forEach","group","length","props","children","filter","item","includes","id","map","push","cloneElement","isFavorite","enterTriggersArrowDown","concat","extendItemsWithFavorite","Children","type","some","favoriteId"],"sources":["/data/stackhub-web/plugins/myapps/node_modules/@patternfly/react-core/src/helpers/favorites.ts"],"sourcesContent":["import * as React from 'react';\nimport { ApplicationLauncherSeparator } from '../components/ApplicationLauncher/ApplicationLauncherSeparator';\nimport { Divider } from '../components/Divider/Divider';\n\n/**\n * This function is a helper for creating an array of renderable favorite items for the Application launcher or Select\n *\n * @param {object} items The items rendered in Select or Application aLauncher\n * @param {boolean} isGrouped Flag indicating if items are grouped\n * @param {any[]} favorites Array of ids of favorited items\n * @param {boolean} isEnterTriggersArrowDown Flag indicating if we should add isEnterTriggersArrowDown to favorited item\n */\nexport const createRenderableFavorites = (\n  items: object,\n  isGrouped: boolean,\n  favorites: any[],\n  isEnterTriggersArrowDown?: boolean\n) => {\n  if (isGrouped) {\n    const favoriteItems: React.ReactNode[] = [];\n    (items as React.ReactElement[]).forEach(group => {\n      if (favorites.length > 0) {\n        return (\n          group.props.children &&\n          (group.props.children as React.ReactElement[])\n            .filter(item => favorites.includes(item.props.id))\n            .map(item => {\n              if (isEnterTriggersArrowDown) {\n                return favoriteItems.push(\n                  React.cloneElement(item, {\n                    isFavorite: true,\n                    enterTriggersArrowDown: isEnterTriggersArrowDown,\n                    id: `favorite-${item.props.id}`\n                  })\n                );\n              } else {\n                return favoriteItems.push(\n                  React.cloneElement(item, { isFavorite: true, id: `favorite-${item.props.id}` })\n                );\n              }\n            })\n        );\n      }\n    });\n    return favoriteItems;\n  }\n  return (items as React.ReactElement[])\n    .filter(item => favorites.includes(item.props.id))\n    .map(item => React.cloneElement(item, { isFavorite: true, enterTriggersArrowDown: isEnterTriggersArrowDown }));\n};\n\n/**\n * This function is a helper for extending the array of renderable favorite with the select/application launcher items to  render in the Application launcher or Select\n *\n * @param {object} items The items rendered in Select or Application aLauncher\n * @param {boolean} isGrouped Flag indicating if items are grouped\n * @param {any[]} favorites Array of ids of favorited items\n */\nexport const extendItemsWithFavorite = (items: object, isGrouped: boolean, favorites: any[]) => {\n  if (isGrouped) {\n    return (items as React.ReactElement[]).map(group =>\n      React.cloneElement(group, {\n        children: React.Children.map(group.props.children as React.ReactElement[], item => {\n          if (item.type === ApplicationLauncherSeparator || item.type === Divider) {\n            return item;\n          }\n          return React.cloneElement(item, {\n            isFavorite: favorites.some(\n              favoriteId => favoriteId === item.props.id || `favorite-${favoriteId}` === item.props.id\n            )\n          });\n        })\n      })\n    );\n  }\n  return (items as React.ReactElement[]).map(item =>\n    React.cloneElement(item, {\n      isFavorite: favorites.some(favoriteId => favoriteId === item.props.id)\n    })\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
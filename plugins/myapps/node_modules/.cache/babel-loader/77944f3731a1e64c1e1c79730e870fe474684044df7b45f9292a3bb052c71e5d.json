{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Masthead/masthead';\nimport { css } from '@patternfly/react-styles';\nimport { formatBreakpointMods } from '../../helpers/util';\nimport { PageContext } from '../Page/PageContext';\nexport var Masthead = function Masthead(_a) {\n  var children = _a.children,\n    className = _a.className,\n    _a$backgroundColor = _a.backgroundColor,\n    backgroundColor = _a$backgroundColor === void 0 ? 'dark' : _a$backgroundColor,\n    _a$display = _a.display,\n    display = _a$display === void 0 ? {\n      md: 'inline'\n    } : _a$display,\n    inset = _a.inset,\n    props = __rest(_a, [\"children\", \"className\", \"backgroundColor\", \"display\", \"inset\"]);\n  var _React$useContext = React.useContext(PageContext),\n    width = _React$useContext.width,\n    getBreakpoint = _React$useContext.getBreakpoint;\n  return React.createElement(\"header\", Object.assign({\n    className: css(styles.masthead, formatBreakpointMods(display, styles, 'display-', getBreakpoint(width)), formatBreakpointMods(inset, styles, '', getBreakpoint(width)), backgroundColor === 'light' && styles.modifiers.light, backgroundColor === 'light200' && styles.modifiers.light_200, className)\n  }, props), children);\n};\nMasthead.displayName = 'Masthead';","map":{"version":3,"names":["React","styles","css","formatBreakpointMods","PageContext","Masthead","_a","children","className","_a$backgroundColor","backgroundColor","_a$display","display","md","inset","props","__rest","_React$useContext","useContext","width","getBreakpoint","createElement","Object","assign","masthead","modifiers","light","light_200","displayName"],"sources":["/data/stackhub-web/plugins/myapps/node_modules/@patternfly/react-core/src/components/Masthead/Masthead.tsx"],"sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Masthead/masthead';\nimport { css } from '@patternfly/react-styles';\nimport { formatBreakpointMods } from '../../helpers/util';\nimport { PageContext } from '../Page/PageContext';\n\nexport interface MastheadProps extends React.DetailedHTMLProps<React.HTMLProps<HTMLDivElement>, HTMLDivElement> {\n  /** Content rendered inside of the masthead */\n  children?: React.ReactNode;\n  /** Additional classes added to the masthead */\n  className?: string;\n  /** Background theme color of the masthead */\n  backgroundColor?: 'dark' | 'light' | 'light200';\n  /** Display type at various breakpoints */\n  display?: {\n    default?: 'inline' | 'stack';\n    sm?: 'inline' | 'stack';\n    md?: 'inline' | 'stack';\n    lg?: 'inline' | 'stack';\n    xl?: 'inline' | 'stack';\n    '2xl'?: 'inline' | 'stack';\n  };\n  /** Insets at various breakpoints */\n  inset?: {\n    default?: 'insetNone' | 'insetXs' | 'insetSm' | 'insetMd' | 'insetLg' | 'insetXl' | 'inset2xl' | 'inset3xl';\n    sm?: 'insetNone' | 'insetXs' | 'insetSm' | 'insetMd' | 'insetLg' | 'insetXl' | 'inset2xl' | 'inset3xl';\n    md?: 'insetNone' | 'insetXs' | 'insetSm' | 'insetMd' | 'insetLg' | 'insetXl' | 'inset2xl' | 'inset3xl';\n    lg?: 'insetNone' | 'insetXs' | 'insetSm' | 'insetMd' | 'insetLg' | 'insetXl' | 'inset2xl' | 'inset3xl';\n    xl?: 'insetNone' | 'insetXs' | 'insetSm' | 'insetMd' | 'insetLg' | 'insetXl' | 'inset2xl' | 'inset3xl';\n    '2xl'?: 'insetNone' | 'insetXs' | 'insetSm' | 'insetMd' | 'insetLg' | 'insetXl' | 'inset2xl' | 'inset3xl';\n  };\n}\n\nexport const Masthead: React.FunctionComponent<MastheadProps> = ({\n  children,\n  className,\n  backgroundColor = 'dark',\n  display = {\n    md: 'inline'\n  },\n  inset,\n  ...props\n}: MastheadProps) => {\n  const { width, getBreakpoint } = React.useContext(PageContext);\n  return (\n    <header\n      className={css(\n        styles.masthead,\n        formatBreakpointMods(display, styles, 'display-', getBreakpoint(width)),\n        formatBreakpointMods(inset, styles, '', getBreakpoint(width)),\n        backgroundColor === 'light' && styles.modifiers.light,\n        backgroundColor === 'light200' && styles.modifiers.light_200,\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </header>\n  );\n};\nMasthead.displayName = 'Masthead';\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,MAAM,MAAM,2DAA2D;AAC9E,SAASC,GAAG,QAAQ,0BAA0B;AAC9C,SAASC,oBAAoB,QAAQ,oBAAoB;AACzD,SAASC,WAAW,QAAQ,qBAAqB;AA6BjD,OAAO,IAAMC,QAAQ,GAA2C,SAAnDA,QAAQA,CAA4CC,EASjD,EAAI;MARlBC,QAAQ,GAMHD,EAES,CARdC,QAAQ;IACRC,SAAS,GAKJF,EAES,CAPdE,SAAS;IAAAC,kBAAA,GAKJH,EAES,CANdI,eAAe;IAAfA,eAAe,GAAAD,kBAAA,cAAG,MAAM,GAAAA,kBAAA;IAAAE,UAAA,GAInBL,EAES,CALdM,OAAO;IAAPA,OAAO,GAAAD,UAAA,cAAG;MACRE,EAAE,EAAE;KACL,GAAAF,UAAA;IACDG,KAAK,GAAAR,EAES,CAFdQ,KAAK;IACFC,KAAK,GAAAC,MAAA,CAAAV,EAAA,EARuD,gEAShE,CADS;EAER,IAAAW,iBAAA,GAAiCjB,KAAK,CAACkB,UAAU,CAACd,WAAW,CAAC;IAAtDe,KAAK,GAAAF,iBAAA,CAALE,KAAK;IAAEC,aAAa,GAAAH,iBAAA,CAAbG,aAAa;EAC5B,OACEpB,KAAA,CAAAqB,aAAA,WAAAC,MAAA,CAAAC,MAAA;IACEf,SAAS,EAAEN,GAAG,CACZD,MAAM,CAACuB,QAAQ,EACfrB,oBAAoB,CAACS,OAAO,EAAEX,MAAM,EAAE,UAAU,EAAEmB,aAAa,CAACD,KAAK,CAAC,CAAC,EACvEhB,oBAAoB,CAACW,KAAK,EAAEb,MAAM,EAAE,EAAE,EAAEmB,aAAa,CAACD,KAAK,CAAC,CAAC,EAC7DT,eAAe,KAAK,OAAO,IAAIT,MAAM,CAACwB,SAAS,CAACC,KAAK,EACrDhB,eAAe,KAAK,UAAU,IAAIT,MAAM,CAACwB,SAAS,CAACE,SAAS,EAC5DnB,SAAS;EACV,GACGO,KAAK,GAERR,QAAQ,CACF;AAEb,CAAC;AACDF,QAAQ,CAACuB,WAAW,GAAG,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}
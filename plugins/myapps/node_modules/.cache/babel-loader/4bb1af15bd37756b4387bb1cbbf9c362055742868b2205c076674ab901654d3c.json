{"ast":null,"code":"import devAssert from \"../jsutils/devAssert.mjs\";\nimport { GraphQLError } from \"../error/GraphQLError.mjs\";\nvar NAME_RX = /^[_a-zA-Z][_a-zA-Z0-9]*$/;\n/**\n * Upholds the spec rules about naming.\n */\n\nexport function assertValidName(name) {\n  var error = isValidNameError(name);\n  if (error) {\n    throw error;\n  }\n  return name;\n}\n/**\n * Returns an Error if a name is invalid.\n */\n\nexport function isValidNameError(name) {\n  typeof name === 'string' || devAssert(0, 'Expected name to be a string.');\n  if (name.length > 1 && name[0] === '_' && name[1] === '_') {\n    return new GraphQLError(\"Name \\\"\".concat(name, \"\\\" must not begin with \\\"__\\\", which is reserved by GraphQL introspection.\"));\n  }\n  if (!NAME_RX.test(name)) {\n    return new GraphQLError(\"Names must match /^[_a-zA-Z][_a-zA-Z0-9]*$/ but \\\"\".concat(name, \"\\\" does not.\"));\n  }\n}","map":{"version":3,"names":["devAssert","GraphQLError","NAME_RX","assertValidName","name","error","isValidNameError","length","concat","test"],"sources":["/data/stackhub-web/plugins/myapps/node_modules/graphql/utilities/assertValidName.mjs"],"sourcesContent":["import devAssert from \"../jsutils/devAssert.mjs\";\nimport { GraphQLError } from \"../error/GraphQLError.mjs\";\nvar NAME_RX = /^[_a-zA-Z][_a-zA-Z0-9]*$/;\n/**\n * Upholds the spec rules about naming.\n */\n\nexport function assertValidName(name) {\n  var error = isValidNameError(name);\n\n  if (error) {\n    throw error;\n  }\n\n  return name;\n}\n/**\n * Returns an Error if a name is invalid.\n */\n\nexport function isValidNameError(name) {\n  typeof name === 'string' || devAssert(0, 'Expected name to be a string.');\n\n  if (name.length > 1 && name[0] === '_' && name[1] === '_') {\n    return new GraphQLError(\"Name \\\"\".concat(name, \"\\\" must not begin with \\\"__\\\", which is reserved by GraphQL introspection.\"));\n  }\n\n  if (!NAME_RX.test(name)) {\n    return new GraphQLError(\"Names must match /^[_a-zA-Z][_a-zA-Z0-9]*$/ but \\\"\".concat(name, \"\\\" does not.\"));\n  }\n}\n"],"mappings":"AAAA,OAAOA,SAAS,MAAM,0BAA0B;AAChD,SAASC,YAAY,QAAQ,2BAA2B;AACxD,IAAIC,OAAO,GAAG,0BAA0B;AACxC;AACA;AACA;;AAEA,OAAO,SAASC,eAAeA,CAACC,IAAI,EAAE;EACpC,IAAIC,KAAK,GAAGC,gBAAgB,CAACF,IAAI,CAAC;EAElC,IAAIC,KAAK,EAAE;IACT,MAAMA,KAAK;EACb;EAEA,OAAOD,IAAI;AACb;AACA;AACA;AACA;;AAEA,OAAO,SAASE,gBAAgBA,CAACF,IAAI,EAAE;EACrC,OAAOA,IAAI,KAAK,QAAQ,IAAIJ,SAAS,CAAC,CAAC,EAAE,+BAA+B,CAAC;EAEzE,IAAII,IAAI,CAACG,MAAM,GAAG,CAAC,IAAIH,IAAI,CAAC,CAAC,CAAC,KAAK,GAAG,IAAIA,IAAI,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;IACzD,OAAO,IAAIH,YAAY,CAAC,SAAS,CAACO,MAAM,CAACJ,IAAI,EAAE,4EAA4E,CAAC,CAAC;EAC/H;EAEA,IAAI,CAACF,OAAO,CAACO,IAAI,CAACL,IAAI,CAAC,EAAE;IACvB,OAAO,IAAIH,YAAY,CAAC,oDAAoD,CAACO,MAAM,CAACJ,IAAI,EAAE,cAAc,CAAC,CAAC;EAC5G;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}
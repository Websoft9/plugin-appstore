{"ast":null,"code":"import _toConsumableArray from \"/data/stackhub-web/plugins/myapps/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _slicedToArray from \"/data/stackhub-web/plugins/myapps/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { __rest } from \"tslib\";\nimport React, { useEffect } from 'react';\nimport { TextInput } from '../TextInput/TextInput';\nimport { Button } from '../Button/Button';\nimport { Select, SelectOption } from '../Select';\nimport { InputGroup } from '../InputGroup';\nimport AngleLeftIcon from '@patternfly/react-icons/dist/esm/icons/angle-left-icon';\nimport AngleRightIcon from '@patternfly/react-icons/dist/esm/icons/angle-right-icon';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/CalendarMonth/calendar-month';\nimport { getUniqueId } from '../../helpers/util';\nimport { isValidDate } from '../../helpers/datetimeUtils';\nexport var Weekday;\n(function (Weekday) {\n  Weekday[Weekday[\"Sunday\"] = 0] = \"Sunday\";\n  Weekday[Weekday[\"Monday\"] = 1] = \"Monday\";\n  Weekday[Weekday[\"Tuesday\"] = 2] = \"Tuesday\";\n  Weekday[Weekday[\"Wednesday\"] = 3] = \"Wednesday\";\n  Weekday[Weekday[\"Thursday\"] = 4] = \"Thursday\";\n  Weekday[Weekday[\"Friday\"] = 5] = \"Friday\";\n  Weekday[Weekday[\"Saturday\"] = 6] = \"Saturday\";\n})(Weekday || (Weekday = {}));\n// Must be numeric given current header design\nvar yearFormat = function yearFormat(date) {\n  return date.getFullYear();\n};\nvar buildCalendar = function buildCalendar(year, month, weekStart, validators) {\n  var defaultDate = new Date(year, month);\n  var firstDayOfWeek = new Date(defaultDate);\n  firstDayOfWeek.setDate(firstDayOfWeek.getDate() - firstDayOfWeek.getDay() + weekStart);\n  // We will show a maximum of 6 weeks like Google calendar\n  // Assume we just want the numbers for now...\n  var calendarWeeks = [];\n  if (firstDayOfWeek.getMonth() === defaultDate.getMonth() && firstDayOfWeek.getDate() !== 1) {\n    firstDayOfWeek.setDate(firstDayOfWeek.getDate() - 7);\n  }\n  for (var i = 0; i < 6; i++) {\n    var week = [];\n    var _loop = function _loop() {\n      var date = new Date(firstDayOfWeek);\n      week.push({\n        date: date,\n        isValid: validators.every(function (validator) {\n          return validator(date);\n        })\n      });\n      firstDayOfWeek.setDate(firstDayOfWeek.getDate() + 1);\n    };\n    for (var j = 0; j < 7; j++) {\n      _loop();\n    }\n    calendarWeeks.push(week);\n    if (firstDayOfWeek.getMonth() !== defaultDate.getMonth()) {\n      break;\n    }\n  }\n  return calendarWeeks;\n};\nvar isSameDate = function isSameDate(d1, d2) {\n  return d1.getFullYear() === d2.getFullYear() && d1.getMonth() === d2.getMonth() && d1.getDate() === d2.getDate();\n};\nvar today = new Date();\n/** The main calendar month component. */\nexport var CalendarMonth = function CalendarMonth(_a) {\n  var dateProp = _a.date,\n    _a$locale = _a.locale,\n    locale = _a$locale === void 0 ? undefined : _a$locale,\n    _a$monthFormat = _a.monthFormat,\n    monthFormat = _a$monthFormat === void 0 ? function (date) {\n      return date.toLocaleDateString(locale, {\n        month: 'long'\n      });\n    } : _a$monthFormat,\n    _a$weekdayFormat = _a.weekdayFormat,\n    weekdayFormat = _a$weekdayFormat === void 0 ? function (date) {\n      return date.toLocaleDateString(locale, {\n        weekday: 'narrow'\n      });\n    } : _a$weekdayFormat,\n    _a$longWeekdayFormat = _a.longWeekdayFormat,\n    longWeekdayFormat = _a$longWeekdayFormat === void 0 ? function (date) {\n      return date.toLocaleDateString(locale, {\n        weekday: 'long'\n      });\n    } : _a$longWeekdayFormat,\n    _a$dayFormat = _a.dayFormat,\n    dayFormat = _a$dayFormat === void 0 ? function (date) {\n      return date.getDate();\n    } : _a$dayFormat,\n    _a$weekStart = _a.weekStart,\n    weekStart = _a$weekStart === void 0 ? 0 : _a$weekStart,\n    _a$onChange = _a.onChange,\n    onChange = _a$onChange === void 0 ? function () {} : _a$onChange,\n    _a$validators = _a.validators,\n    validators = _a$validators === void 0 ? [function () {\n      return true;\n    }] : _a$validators,\n    className = _a.className,\n    _a$onSelectToggle = _a.onSelectToggle,\n    onSelectToggle = _a$onSelectToggle === void 0 ? function () {} : _a$onSelectToggle,\n    _a$onMonthChange = _a.onMonthChange,\n    onMonthChange = _a$onMonthChange === void 0 ? function () {} : _a$onMonthChange,\n    rangeStart = _a.rangeStart,\n    _a$prevMonthAriaLabel = _a.prevMonthAriaLabel,\n    prevMonthAriaLabel = _a$prevMonthAriaLabel === void 0 ? 'Previous month' : _a$prevMonthAriaLabel,\n    _a$nextMonthAriaLabel = _a.nextMonthAriaLabel,\n    nextMonthAriaLabel = _a$nextMonthAriaLabel === void 0 ? 'Next month' : _a$nextMonthAriaLabel,\n    _a$yearInputAriaLabel = _a.yearInputAriaLabel,\n    yearInputAriaLabel = _a$yearInputAriaLabel === void 0 ? 'Select year' : _a$yearInputAriaLabel,\n    cellAriaLabel = _a.cellAriaLabel,\n    _a$isDateFocused = _a.isDateFocused,\n    isDateFocused = _a$isDateFocused === void 0 ? false : _a$isDateFocused,\n    inlineProps = _a.inlineProps,\n    props = __rest(_a, [\"date\", \"locale\", \"monthFormat\", \"weekdayFormat\", \"longWeekdayFormat\", \"dayFormat\", \"weekStart\", \"onChange\", \"validators\", \"className\", \"onSelectToggle\", \"onMonthChange\", \"rangeStart\", \"prevMonthAriaLabel\", \"nextMonthAriaLabel\", \"yearInputAriaLabel\", \"cellAriaLabel\", \"isDateFocused\", \"inlineProps\"]);\n  var longMonths = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11].map(function (monthNum) {\n    return new Date(1990, monthNum);\n  }).map(monthFormat);\n  var _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    isSelectOpen = _React$useState2[0],\n    setIsSelectOpen = _React$useState2[1];\n  // eslint-disable-next-line prefer-const\n  var _React$useState3 = React.useState(function () {\n      var initDate = new Date(dateProp);\n      if (isValidDate(initDate)) {\n        return initDate;\n      } else {\n        if (isValidDate(rangeStart)) {\n          return rangeStart;\n        } else {\n          return today;\n        }\n      }\n    }),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    focusedDate = _React$useState4[0],\n    setFocusedDate = _React$useState4[1];\n  var _React$useState5 = React.useState(new Date(focusedDate)),\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\n    hoveredDate = _React$useState6[0],\n    setHoveredDate = _React$useState6[1];\n  var focusRef = React.useRef();\n  var _React$useState7 = React.useState(getUniqueId('hidden-month-span')),\n    _React$useState8 = _slicedToArray(_React$useState7, 1),\n    hiddenMonthId = _React$useState8[0];\n  var _React$useState9 = React.useState(false),\n    _React$useState10 = _slicedToArray(_React$useState9, 2),\n    shouldFocus = _React$useState10[0],\n    setShouldFocus = _React$useState10[1];\n  var isValidated = function isValidated(date) {\n    return validators.every(function (validator) {\n      return validator(date);\n    });\n  };\n  var focusedDateValidated = isValidated(focusedDate);\n  useEffect(function () {\n    if (isValidDate(dateProp) && !isSameDate(focusedDate, dateProp)) {\n      setFocusedDate(dateProp);\n    } else if (!dateProp) {\n      setFocusedDate(today);\n    }\n  }, [dateProp]);\n  useEffect(function () {\n    // Calendar month should not be focused on page load\n    // Datepicker should place focus in calendar month when opened\n    if ((shouldFocus || isDateFocused) && focusedDateValidated && focusRef.current) {\n      focusRef.current.focus();\n    } else {\n      setShouldFocus(true);\n    }\n  }, [focusedDate, isDateFocused, focusedDateValidated, focusRef]);\n  var onMonthClick = function onMonthClick(newDate, ev) {\n    setFocusedDate(newDate);\n    setHoveredDate(newDate);\n    setShouldFocus(false);\n    onMonthChange(newDate, ev);\n  };\n  var onKeyDown = function onKeyDown(ev) {\n    var newDate = new Date(focusedDate);\n    if (ev.key === 'ArrowUp') {\n      newDate.setDate(newDate.getDate() - 7);\n    } else if (ev.key === 'ArrowRight') {\n      newDate.setDate(newDate.getDate() + 1);\n    } else if (ev.key === 'ArrowDown') {\n      newDate.setDate(newDate.getDate() + 7);\n    } else if (ev.key === 'ArrowLeft') {\n      newDate.setDate(newDate.getDate() - 1);\n    }\n    if (newDate.getTime() !== focusedDate.getTime() && isValidated(newDate)) {\n      ev.preventDefault();\n      setFocusedDate(newDate);\n      setHoveredDate(newDate);\n      setShouldFocus(true);\n    }\n  };\n  var addMonth = function addMonth(toAdd) {\n    var newDate = new Date(focusedDate);\n    newDate.setMonth(newDate.getMonth() + toAdd);\n    return newDate;\n  };\n  var prevMonth = addMonth(-1);\n  var nextMonth = addMonth(1);\n  var focusedYear = focusedDate.getFullYear();\n  var focusedMonth = focusedDate.getMonth();\n  var calendar = React.useMemo(function () {\n    return buildCalendar(focusedYear, focusedMonth, weekStart, validators);\n  }, [focusedYear, focusedMonth, weekStart, validators]);\n  if (!focusedDateValidated) {\n    var toFocus = calendar.reduce(function (acc, cur) {\n      return [].concat(_toConsumableArray(acc), _toConsumableArray(cur));\n    }, []).filter(function (_ref) {\n      var date = _ref.date,\n        isValid = _ref.isValid;\n      return isValid && date.getMonth() === focusedMonth;\n    }).map(function (_ref2) {\n      var date = _ref2.date;\n      return {\n        date: date,\n        days: Math.abs(focusedDate.getTime() - date.getTime())\n      };\n    }).sort(function (o1, o2) {\n      return o1.days - o2.days;\n    }).map(function (_ref3) {\n      var date = _ref3.date;\n      return date;\n    })[0];\n    if (toFocus) {\n      setFocusedDate(toFocus);\n      setHoveredDate(toFocus);\n    }\n  }\n  var isHoveredDateValid = isValidated(hoveredDate);\n  var monthFormatted = monthFormat(focusedDate);\n  var yearFormatted = yearFormat(focusedDate);\n  var calendarToRender = React.createElement(\"div\", Object.assign({\n    className: css(styles.calendarMonth, className)\n  }, props), React.createElement(\"div\", {\n    className: styles.calendarMonthHeader\n  }, React.createElement(\"div\", {\n    className: css(styles.calendarMonthHeaderNavControl, styles.modifiers.prevMonth)\n  }, React.createElement(Button, {\n    variant: \"plain\",\n    \"aria-label\": prevMonthAriaLabel,\n    onClick: function onClick(ev) {\n      return onMonthClick(prevMonth, ev);\n    }\n  }, React.createElement(AngleLeftIcon, {\n    \"aria-hidden\": true\n  }))), React.createElement(InputGroup, null, React.createElement(\"div\", {\n    className: styles.calendarMonthHeaderMonth\n  }, React.createElement(\"span\", {\n    id: hiddenMonthId,\n    hidden: true\n  }, \"Month\"), React.createElement(Select\n  // Max width with \"September\"\n  , {\n    // Max width with \"September\"\n    width: \"140px\",\n    \"aria-labelledby\": hiddenMonthId,\n    isOpen: isSelectOpen,\n    onToggle: function onToggle() {\n      setIsSelectOpen(!isSelectOpen);\n      onSelectToggle(!isSelectOpen);\n    },\n    onSelect: function onSelect(ev, monthNum) {\n      // When we put CalendarMonth in a Popover we want the Popover's onDocumentClick\n      // to see the SelectOption as a child so it doesn't close the Popover.\n      setTimeout(function () {\n        setIsSelectOpen(false);\n        onSelectToggle(false);\n        var newDate = new Date(focusedDate);\n        newDate.setMonth(Number(monthNum));\n        setFocusedDate(newDate);\n        setHoveredDate(newDate);\n        setShouldFocus(false);\n        onMonthChange(newDate, ev);\n      }, 0);\n    },\n    variant: \"single\",\n    selections: monthFormatted\n  }, longMonths.map(function (longMonth, index) {\n    return React.createElement(SelectOption, {\n      key: index,\n      value: index,\n      isSelected: longMonth === monthFormatted\n    }, longMonth);\n  }))), React.createElement(\"div\", {\n    className: styles.calendarMonthHeaderYear\n  }, React.createElement(TextInput, {\n    \"aria-label\": yearInputAriaLabel,\n    type: \"number\",\n    value: yearFormatted,\n    onChange: function onChange(year, ev) {\n      var newDate = new Date(focusedDate);\n      newDate.setFullYear(+year);\n      setFocusedDate(newDate);\n      setHoveredDate(newDate);\n      setShouldFocus(false);\n      onMonthChange(newDate, ev);\n    }\n  }))), React.createElement(\"div\", {\n    className: css(styles.calendarMonthHeaderNavControl, styles.modifiers.nextMonth)\n  }, React.createElement(Button, {\n    variant: \"plain\",\n    \"aria-label\": nextMonthAriaLabel,\n    onClick: function onClick(ev) {\n      return onMonthClick(nextMonth, ev);\n    }\n  }, React.createElement(AngleRightIcon, {\n    \"aria-hidden\": true\n  })))), React.createElement(\"table\", {\n    className: styles.calendarMonthCalendar\n  }, React.createElement(\"thead\", {\n    className: styles.calendarMonthDays\n  }, React.createElement(\"tr\", null, calendar[0].map(function (_ref4, index) {\n    var date = _ref4.date;\n    return React.createElement(\"th\", {\n      key: index,\n      className: styles.calendarMonthDay,\n      scope: \"col\"\n    }, React.createElement(\"span\", {\n      className: \"pf-screen-reader\"\n    }, longWeekdayFormat(date)), React.createElement(\"span\", {\n      \"aria-hidden\": true\n    }, weekdayFormat(date)));\n  }))), React.createElement(\"tbody\", {\n    onKeyDown: onKeyDown\n  }, calendar.map(function (week, index) {\n    return React.createElement(\"tr\", {\n      key: index,\n      className: styles.calendarMonthDatesRow\n    }, week.map(function (_ref5, index) {\n      var date = _ref5.date,\n        isValid = _ref5.isValid;\n      var dayFormatted = dayFormat(date);\n      var isToday = isSameDate(date, today);\n      var isSelected = isValidDate(dateProp) && isSameDate(date, dateProp);\n      var isFocused = isSameDate(date, focusedDate);\n      var isAdjacentMonth = date.getMonth() !== focusedDate.getMonth();\n      var isRangeStart = isValidDate(rangeStart) && isSameDate(date, rangeStart);\n      var isInRange = false;\n      var isRangeEnd = false;\n      if (isValidDate(rangeStart) && isValidDate(dateProp)) {\n        isInRange = date > rangeStart && date < dateProp;\n        isRangeEnd = isSameDate(date, dateProp);\n      } else if (isValidDate(rangeStart) && isHoveredDateValid) {\n        if (hoveredDate > rangeStart || isSameDate(hoveredDate, rangeStart)) {\n          isInRange = date > rangeStart && date < hoveredDate;\n          isRangeEnd = isSameDate(date, hoveredDate);\n        }\n        // Don't handle focused dates before start dates for now.\n        // Core would likely need new styles\n      }\n\n      return React.createElement(\"td\", {\n        key: index,\n        className: css(styles.calendarMonthDatesCell, isAdjacentMonth && styles.modifiers.adjacentMonth, isToday && styles.modifiers.current, (isSelected || isRangeStart) && styles.modifiers.selected, !isValid && styles.modifiers.disabled, (isInRange || isRangeStart || isRangeEnd) && styles.modifiers.inRange, isRangeStart && styles.modifiers.startRange, isRangeEnd && styles.modifiers.endRange)\n      }, React.createElement(\"button\", Object.assign({\n        className: css(styles.calendarMonthDate, isRangeEnd && styles.modifiers.hover, !isValid && styles.modifiers.disabled),\n        type: \"button\",\n        onClick: function onClick() {\n          return onChange(date);\n        },\n        onMouseOver: function onMouseOver() {\n          return setHoveredDate(date);\n        },\n        tabIndex: isFocused ? 0 : -1,\n        disabled: !isValid,\n        \"aria-label\": cellAriaLabel ? cellAriaLabel(date) : \"\".concat(dayFormat(date), \" \").concat(monthFormat(date), \" \").concat(yearFormat(date))\n      }, isFocused && {\n        ref: focusRef\n      }), dayFormatted));\n    }));\n  }))));\n  if (inlineProps !== undefined) {\n    var Component = inlineProps.component ? inlineProps.component : 'article';\n    return React.createElement(Component, Object.assign({}, inlineProps.ariaLabelledby && {\n      'aria-labelledby': inlineProps.ariaLabelledby\n    }), inlineProps.title, calendarToRender);\n  }\n  return calendarToRender;\n};\nCalendarMonth.displayName = 'CalendarMonth';","map":{"version":3,"names":["React","useEffect","TextInput","Button","Select","SelectOption","InputGroup","AngleLeftIcon","AngleRightIcon","css","styles","getUniqueId","isValidDate","Weekday","yearFormat","date","getFullYear","buildCalendar","year","month","weekStart","validators","defaultDate","Date","firstDayOfWeek","setDate","getDate","getDay","calendarWeeks","getMonth","i","week","_loop","push","isValid","every","validator","j","isSameDate","d1","d2","today","CalendarMonth","_a","dateProp","_a$locale","locale","undefined","_a$monthFormat","monthFormat","toLocaleDateString","_a$weekdayFormat","weekdayFormat","weekday","_a$longWeekdayFormat","longWeekdayFormat","_a$dayFormat","dayFormat","_a$weekStart","_a$onChange","onChange","_a$validators","className","_a$onSelectToggle","onSelectToggle","_a$onMonthChange","onMonthChange","rangeStart","_a$prevMonthAriaLabel","prevMonthAriaLabel","_a$nextMonthAriaLabel","nextMonthAriaLabel","_a$yearInputAriaLabel","yearInputAriaLabel","cellAriaLabel","_a$isDateFocused","isDateFocused","inlineProps","props","__rest","longMonths","map","monthNum","_React$useState","useState","_React$useState2","_slicedToArray","isSelectOpen","setIsSelectOpen","_React$useState3","initDate","_React$useState4","focusedDate","setFocusedDate","_React$useState5","_React$useState6","hoveredDate","setHoveredDate","focusRef","useRef","_React$useState7","_React$useState8","hiddenMonthId","_React$useState9","_React$useState10","shouldFocus","setShouldFocus","isValidated","focusedDateValidated","current","focus","onMonthClick","newDate","ev","onKeyDown","key","getTime","preventDefault","addMonth","toAdd","setMonth","prevMonth","nextMonth","focusedYear","focusedMonth","calendar","useMemo","toFocus","reduce","acc","cur","concat","_toConsumableArray","filter","_ref","_ref2","days","Math","abs","sort","o1","o2","_ref3","isHoveredDateValid","monthFormatted","yearFormatted","calendarToRender","createElement","Object","assign","calendarMonth","calendarMonthHeader","calendarMonthHeaderNavControl","modifiers","variant","onClick","calendarMonthHeaderMonth","id","hidden","width","isOpen","onToggle","onSelect","setTimeout","Number","selections","longMonth","index","value","isSelected","calendarMonthHeaderYear","type","setFullYear","calendarMonthCalendar","calendarMonthDays","_ref4","calendarMonthDay","scope","calendarMonthDatesRow","_ref5","dayFormatted","isToday","isFocused","isAdjacentMonth","isRangeStart","isInRange","isRangeEnd","calendarMonthDatesCell","adjacentMonth","selected","disabled","inRange","startRange","endRange","calendarMonthDate","hover","onMouseOver","tabIndex","ref","Component","component","ariaLabelledby","title","displayName"],"sources":["/data/stackhub-web/plugins/myapps/node_modules/@patternfly/react-core/src/components/CalendarMonth/CalendarMonth.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { TextInput } from '../TextInput/TextInput';\nimport { Button } from '../Button/Button';\nimport { Select, SelectOption } from '../Select';\nimport { InputGroup } from '../InputGroup';\nimport AngleLeftIcon from '@patternfly/react-icons/dist/esm/icons/angle-left-icon';\nimport AngleRightIcon from '@patternfly/react-icons/dist/esm/icons/angle-right-icon';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/CalendarMonth/calendar-month';\nimport { getUniqueId } from '../../helpers/util';\nimport { isValidDate } from '../../helpers/datetimeUtils';\n\nexport enum Weekday {\n  Sunday = 0,\n  Monday,\n  Tuesday,\n  Wednesday,\n  Thursday,\n  Friday,\n  Saturday\n}\n\nexport interface CalendarMonthInlineProps {\n  /** Component wrapping the calendar month when used inline. Recommended to be 'article'. */\n  component?: keyof JSX.IntrinsicElements;\n  /** Title of the calendar rendered above the inline calendar month. Recommended to be a 'title' component. */\n  title?: React.ReactNode;\n  /** Id of the accessible label of the calendar month. Recommended to map to the title. */\n  ariaLabelledby?: string;\n}\n\n/** Additional properties that extend from and can be passed to the main component. These\n * properties allow customizing the calendar formatting and aria-labels.\n */\n\nexport interface CalendarFormat {\n  /** Accessible label for the date cells. */\n  cellAriaLabel?: (date: Date) => string;\n  /** How to format days in buttons in table cells. */\n  dayFormat?: (date: Date) => React.ReactNode;\n  /** If using the default formatters which locale to use. Undefined defaults to current locale.\n   * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl#Locale_identification_and_negotiation\n   */\n  locale?: string;\n  /** How to format days in header for screen readers. */\n  longWeekdayFormat?: (date: Date) => React.ReactNode;\n  /** How to format months in month select. */\n  monthFormat?: (date: Date) => React.ReactNode;\n  /** Accessible label for the previous month button. */\n  prevMonthAriaLabel?: string;\n  /** Accessible label for the next month button. */\n  nextMonthAriaLabel?: string;\n  /** Which date to start range styles from. */\n  rangeStart?: Date;\n  /** How to format week days in header. */\n  weekdayFormat?: (date: Date) => React.ReactNode;\n  /** Day of week that starts the week. 0 is Sunday, 6 is Saturday. */\n  weekStart?: 0 | 1 | 2 | 3 | 4 | 5 | 6 | Weekday;\n  /** Accessible label for the year input. */\n  yearInputAriaLabel?: string;\n  /** Props used to ensure accessibility when displaying the calendar month inline. */\n  inlineProps?: CalendarMonthInlineProps;\n}\n\nexport interface CalendarProps extends CalendarFormat, Omit<React.HTMLProps<HTMLDivElement>, 'onChange'> {\n  /** Additional classes to add to the outer div of the calendar month. */\n  className?: string;\n  /** Month/year to base other dates around. */\n  date?: Date;\n  /** Flag to set browser focus on the passed date. **/\n  isDateFocused?: boolean;\n  /** Callback when date is selected. */\n  onChange?: (date: Date) => void;\n  /** Callback when month or year is changed. */\n  onMonthChange?: (\n    newDate?: Date,\n    event?: React.MouseEvent | React.ChangeEvent | React.FormEvent<HTMLInputElement>\n  ) => void;\n  /** @hide Internal prop to allow pressing escape in select menu to not close popover. */\n  onSelectToggle?: (open: boolean) => void;\n  /** Functions that returns if a date is valid and selectable. */\n  validators?: ((date: Date) => boolean)[];\n}\n\n// Must be numeric given current header design\nconst yearFormat = (date: Date) => date.getFullYear();\n\nconst buildCalendar = (year: number, month: number, weekStart: number, validators: ((date: Date) => boolean)[]) => {\n  const defaultDate = new Date(year, month);\n\n  const firstDayOfWeek = new Date(defaultDate);\n  firstDayOfWeek.setDate(firstDayOfWeek.getDate() - firstDayOfWeek.getDay() + weekStart);\n\n  // We will show a maximum of 6 weeks like Google calendar\n  // Assume we just want the numbers for now...\n  const calendarWeeks = [];\n\n  if (firstDayOfWeek.getMonth() === defaultDate.getMonth() && firstDayOfWeek.getDate() !== 1) {\n    firstDayOfWeek.setDate(firstDayOfWeek.getDate() - 7);\n  }\n  for (let i = 0; i < 6; i++) {\n    const week = [];\n\n    for (let j = 0; j < 7; j++) {\n      const date = new Date(firstDayOfWeek);\n      week.push({\n        date,\n        isValid: validators.every(validator => validator(date))\n      });\n      firstDayOfWeek.setDate(firstDayOfWeek.getDate() + 1);\n    }\n    calendarWeeks.push(week);\n    if (firstDayOfWeek.getMonth() !== defaultDate.getMonth()) {\n      break;\n    }\n  }\n\n  return calendarWeeks;\n};\n\nconst isSameDate = (d1: Date, d2: Date) =>\n  d1.getFullYear() === d2.getFullYear() && d1.getMonth() === d2.getMonth() && d1.getDate() === d2.getDate();\n\nconst today = new Date();\n\n/** The main calendar month component. */\n\nexport const CalendarMonth = ({\n  date: dateProp,\n  locale = undefined,\n  monthFormat = date => date.toLocaleDateString(locale, { month: 'long' }),\n  weekdayFormat = date => date.toLocaleDateString(locale, { weekday: 'narrow' }),\n  longWeekdayFormat = date => date.toLocaleDateString(locale, { weekday: 'long' }),\n  dayFormat = date => date.getDate(),\n  weekStart = 0, // Use the American Sunday as a default\n  onChange = () => {},\n  validators = [() => true],\n  className,\n  onSelectToggle = () => {},\n  onMonthChange = () => {},\n  rangeStart,\n  prevMonthAriaLabel = 'Previous month',\n  nextMonthAriaLabel = 'Next month',\n  yearInputAriaLabel = 'Select year',\n  cellAriaLabel,\n  isDateFocused = false,\n  inlineProps,\n  ...props\n}: CalendarProps) => {\n  const longMonths = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11].map(monthNum => new Date(1990, monthNum)).map(monthFormat);\n  const [isSelectOpen, setIsSelectOpen] = React.useState(false);\n  // eslint-disable-next-line prefer-const\n  const [focusedDate, setFocusedDate] = React.useState(() => {\n    const initDate = new Date(dateProp);\n    if (isValidDate(initDate)) {\n      return initDate;\n    } else {\n      if (isValidDate(rangeStart)) {\n        return rangeStart;\n      } else {\n        return today;\n      }\n    }\n  });\n  const [hoveredDate, setHoveredDate] = React.useState(new Date(focusedDate));\n  const focusRef = React.useRef<HTMLButtonElement>();\n  const [hiddenMonthId] = React.useState(getUniqueId('hidden-month-span'));\n  const [shouldFocus, setShouldFocus] = React.useState(false);\n\n  const isValidated = (date: Date) => validators.every(validator => validator(date));\n  const focusedDateValidated = isValidated(focusedDate);\n  useEffect(() => {\n    if (isValidDate(dateProp) && !isSameDate(focusedDate, dateProp)) {\n      setFocusedDate(dateProp);\n    } else if (!dateProp) {\n      setFocusedDate(today);\n    }\n  }, [dateProp]);\n\n  useEffect(() => {\n    // Calendar month should not be focused on page load\n    // Datepicker should place focus in calendar month when opened\n    if ((shouldFocus || isDateFocused) && focusedDateValidated && focusRef.current) {\n      focusRef.current.focus();\n    } else {\n      setShouldFocus(true);\n    }\n  }, [focusedDate, isDateFocused, focusedDateValidated, focusRef]);\n\n  const onMonthClick = (newDate: Date, ev: React.MouseEvent) => {\n    setFocusedDate(newDate);\n    setHoveredDate(newDate);\n    setShouldFocus(false);\n    onMonthChange(newDate, ev);\n  };\n\n  const onKeyDown = (ev: React.KeyboardEvent<HTMLTableSectionElement>) => {\n    const newDate = new Date(focusedDate);\n    if (ev.key === 'ArrowUp') {\n      newDate.setDate(newDate.getDate() - 7);\n    } else if (ev.key === 'ArrowRight') {\n      newDate.setDate(newDate.getDate() + 1);\n    } else if (ev.key === 'ArrowDown') {\n      newDate.setDate(newDate.getDate() + 7);\n    } else if (ev.key === 'ArrowLeft') {\n      newDate.setDate(newDate.getDate() - 1);\n    }\n    if (newDate.getTime() !== focusedDate.getTime() && isValidated(newDate)) {\n      ev.preventDefault();\n      setFocusedDate(newDate);\n      setHoveredDate(newDate);\n      setShouldFocus(true);\n    }\n  };\n\n  const addMonth = (toAdd: -1 | 1) => {\n    const newDate = new Date(focusedDate);\n    newDate.setMonth(newDate.getMonth() + toAdd);\n    return newDate;\n  };\n\n  const prevMonth = addMonth(-1);\n  const nextMonth = addMonth(1);\n  const focusedYear = focusedDate.getFullYear();\n  const focusedMonth = focusedDate.getMonth();\n  const calendar = React.useMemo(() => buildCalendar(focusedYear, focusedMonth, weekStart, validators), [\n    focusedYear,\n    focusedMonth,\n    weekStart,\n    validators\n  ]);\n  if (!focusedDateValidated) {\n    const toFocus = calendar\n      .reduce((acc, cur) => [...acc, ...cur], [])\n      .filter(({ date, isValid }) => isValid && date.getMonth() === focusedMonth)\n      .map(({ date }) => ({ date, days: Math.abs(focusedDate.getTime() - date.getTime()) }))\n      .sort((o1, o2) => o1.days - o2.days)\n      .map(({ date }) => date)[0];\n    if (toFocus) {\n      setFocusedDate(toFocus);\n      setHoveredDate(toFocus);\n    }\n  }\n  const isHoveredDateValid = isValidated(hoveredDate);\n  const monthFormatted = monthFormat(focusedDate);\n  const yearFormatted = yearFormat(focusedDate);\n\n  const calendarToRender = (\n    <div className={css(styles.calendarMonth, className)} {...props}>\n      <div className={styles.calendarMonthHeader}>\n        <div className={css(styles.calendarMonthHeaderNavControl, styles.modifiers.prevMonth)}>\n          <Button\n            variant=\"plain\"\n            aria-label={prevMonthAriaLabel}\n            onClick={(ev: React.MouseEvent) => onMonthClick(prevMonth, ev)}\n          >\n            <AngleLeftIcon aria-hidden={true} />\n          </Button>\n        </div>\n        <InputGroup>\n          <div className={styles.calendarMonthHeaderMonth}>\n            <span id={hiddenMonthId} hidden>\n              Month\n            </span>\n            <Select\n              // Max width with \"September\"\n              width=\"140px\"\n              aria-labelledby={hiddenMonthId}\n              isOpen={isSelectOpen}\n              onToggle={() => {\n                setIsSelectOpen(!isSelectOpen);\n                onSelectToggle(!isSelectOpen);\n              }}\n              onSelect={(ev, monthNum) => {\n                // When we put CalendarMonth in a Popover we want the Popover's onDocumentClick\n                // to see the SelectOption as a child so it doesn't close the Popover.\n                setTimeout(() => {\n                  setIsSelectOpen(false);\n                  onSelectToggle(false);\n                  const newDate = new Date(focusedDate);\n                  newDate.setMonth(Number(monthNum as string));\n                  setFocusedDate(newDate);\n                  setHoveredDate(newDate);\n                  setShouldFocus(false);\n                  onMonthChange(newDate, ev);\n                }, 0);\n              }}\n              variant=\"single\"\n              selections={monthFormatted}\n            >\n              {longMonths.map((longMonth, index) => (\n                <SelectOption key={index} value={index} isSelected={longMonth === monthFormatted}>\n                  {longMonth}\n                </SelectOption>\n              ))}\n            </Select>\n          </div>\n          <div className={styles.calendarMonthHeaderYear}>\n            <TextInput\n              aria-label={yearInputAriaLabel}\n              type=\"number\"\n              value={yearFormatted}\n              onChange={(year: string, ev: React.FormEvent<HTMLInputElement>) => {\n                const newDate = new Date(focusedDate);\n                newDate.setFullYear(+year);\n                setFocusedDate(newDate);\n                setHoveredDate(newDate);\n                setShouldFocus(false);\n                onMonthChange(newDate, ev);\n              }}\n            />\n          </div>\n        </InputGroup>\n        <div className={css(styles.calendarMonthHeaderNavControl, styles.modifiers.nextMonth)}>\n          <Button\n            variant=\"plain\"\n            aria-label={nextMonthAriaLabel}\n            onClick={(ev: React.MouseEvent) => onMonthClick(nextMonth, ev)}\n          >\n            <AngleRightIcon aria-hidden={true} />\n          </Button>\n        </div>\n      </div>\n      <table className={styles.calendarMonthCalendar}>\n        <thead className={styles.calendarMonthDays}>\n          <tr>\n            {calendar[0].map(({ date }, index) => (\n              <th key={index} className={styles.calendarMonthDay} scope=\"col\">\n                <span className=\"pf-screen-reader\">{longWeekdayFormat(date)}</span>\n                <span aria-hidden>{weekdayFormat(date)}</span>\n              </th>\n            ))}\n          </tr>\n        </thead>\n        <tbody onKeyDown={onKeyDown}>\n          {calendar.map((week, index) => (\n            <tr key={index} className={styles.calendarMonthDatesRow}>\n              {week.map(({ date, isValid }, index) => {\n                const dayFormatted = dayFormat(date);\n                const isToday = isSameDate(date, today);\n                const isSelected = isValidDate(dateProp) && isSameDate(date, dateProp);\n                const isFocused = isSameDate(date, focusedDate);\n                const isAdjacentMonth = date.getMonth() !== focusedDate.getMonth();\n                const isRangeStart = isValidDate(rangeStart) && isSameDate(date, rangeStart);\n                let isInRange = false;\n                let isRangeEnd = false;\n                if (isValidDate(rangeStart) && isValidDate(dateProp)) {\n                  isInRange = date > rangeStart && date < dateProp;\n                  isRangeEnd = isSameDate(date, dateProp);\n                } else if (isValidDate(rangeStart) && isHoveredDateValid) {\n                  if (hoveredDate > rangeStart || isSameDate(hoveredDate, rangeStart)) {\n                    isInRange = date > rangeStart && date < hoveredDate;\n                    isRangeEnd = isSameDate(date, hoveredDate);\n                  }\n                  // Don't handle focused dates before start dates for now.\n                  // Core would likely need new styles\n                }\n\n                return (\n                  <td\n                    key={index}\n                    className={css(\n                      styles.calendarMonthDatesCell,\n                      isAdjacentMonth && styles.modifiers.adjacentMonth,\n                      isToday && styles.modifiers.current,\n                      (isSelected || isRangeStart) && styles.modifiers.selected,\n                      !isValid && styles.modifiers.disabled,\n                      (isInRange || isRangeStart || isRangeEnd) && styles.modifiers.inRange,\n                      isRangeStart && styles.modifiers.startRange,\n                      isRangeEnd && styles.modifiers.endRange\n                    )}\n                  >\n                    <button\n                      className={css(\n                        styles.calendarMonthDate,\n                        isRangeEnd && styles.modifiers.hover,\n                        !isValid && styles.modifiers.disabled\n                      )}\n                      type=\"button\"\n                      onClick={() => onChange(date)}\n                      onMouseOver={() => setHoveredDate(date)}\n                      tabIndex={isFocused ? 0 : -1}\n                      disabled={!isValid}\n                      aria-label={\n                        cellAriaLabel\n                          ? cellAriaLabel(date)\n                          : `${dayFormat(date)} ${monthFormat(date)} ${yearFormat(date)}`\n                      }\n                      {...(isFocused && { ref: focusRef })}\n                    >\n                      {dayFormatted}\n                    </button>\n                  </td>\n                );\n              })}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n\n  if (inlineProps !== undefined) {\n    const Component = (inlineProps.component ? inlineProps.component : 'article') as any;\n    return (\n      <Component {...(inlineProps.ariaLabelledby && { 'aria-labelledby': inlineProps.ariaLabelledby })}>\n        {inlineProps.title}\n        {calendarToRender}\n      </Component>\n    );\n  }\n  return calendarToRender;\n};\nCalendarMonth.displayName = 'CalendarMonth';\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import _slicedToArray from \"/data/stackhub-web/plugins/myapps/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { exactProp, HTMLElementType, unstable_useEnhancedEffect as useEnhancedEffect, unstable_useForkRef as useForkRef, unstable_setRef as setRef } from '@mui/utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction getContainer(container) {\n  return typeof container === 'function' ? container() : container;\n}\n\n/**\n * Portals provide a first-class way to render children into a DOM node\n * that exists outside the DOM hierarchy of the parent component.\n *\n * Demos:\n *\n * - [Portal](https://mui.com/base/react-portal/)\n *\n * API:\n *\n * - [Portal API](https://mui.com/base/react-portal/components-api/#portal)\n */\nvar Portal = /*#__PURE__*/React.forwardRef(function Portal(props, forwardedRef) {\n  var children = props.children,\n    container = props.container,\n    _props$disablePortal = props.disablePortal,\n    disablePortal = _props$disablePortal === void 0 ? false : _props$disablePortal;\n  var _React$useState = React.useState(null),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    mountNode = _React$useState2[0],\n    setMountNode = _React$useState2[1];\n  // @ts-expect-error TODO upstream fix\n  var handleRef = useForkRef( /*#__PURE__*/React.isValidElement(children) ? children.ref : null, forwardedRef);\n  useEnhancedEffect(function () {\n    if (!disablePortal) {\n      setMountNode(getContainer(container) || document.body);\n    }\n  }, [container, disablePortal]);\n  useEnhancedEffect(function () {\n    if (mountNode && !disablePortal) {\n      setRef(forwardedRef, mountNode);\n      return function () {\n        setRef(forwardedRef, null);\n      };\n    }\n    return undefined;\n  }, [forwardedRef, mountNode, disablePortal]);\n  if (disablePortal) {\n    if ( /*#__PURE__*/React.isValidElement(children)) {\n      var newProps = {\n        ref: handleRef\n      };\n      return /*#__PURE__*/React.cloneElement(children, newProps);\n    }\n    return /*#__PURE__*/_jsx(React.Fragment, {\n      children: children\n    });\n  }\n  return /*#__PURE__*/_jsx(React.Fragment, {\n    children: mountNode ? /*#__PURE__*/ReactDOM.createPortal(children, mountNode) : mountNode\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Portal.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The children to render into the `container`.\n   */\n  children: PropTypes.node,\n  /**\n   * An HTML element or function that returns one.\n   * The `container` will have the portal children appended to it.\n   *\n   * By default, it uses the body of the top-level document object,\n   * so it's simply `document.body` most of the time.\n   */\n  container: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([HTMLElementType, PropTypes.func]),\n  /**\n   * The `children` will be under the DOM hierarchy of the parent component.\n   * @default false\n   */\n  disablePortal: PropTypes.bool\n} : void 0;\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line\n  Portal['propTypes' + ''] = exactProp(Portal.propTypes);\n}\nexport default Portal;","map":{"version":3,"names":["React","ReactDOM","PropTypes","exactProp","HTMLElementType","unstable_useEnhancedEffect","useEnhancedEffect","unstable_useForkRef","useForkRef","unstable_setRef","setRef","jsx","_jsx","getContainer","container","Portal","forwardRef","props","forwardedRef","children","_props$disablePortal","disablePortal","_React$useState","useState","_React$useState2","_slicedToArray","mountNode","setMountNode","handleRef","isValidElement","ref","document","body","undefined","newProps","cloneElement","Fragment","createPortal","process","env","NODE_ENV","propTypes","node","oneOfType","func","bool"],"sources":["/data/stackhub-web/plugins/myapps/node_modules/@mui/base/Portal/Portal.js"],"sourcesContent":["import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { exactProp, HTMLElementType, unstable_useEnhancedEffect as useEnhancedEffect, unstable_useForkRef as useForkRef, unstable_setRef as setRef } from '@mui/utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction getContainer(container) {\n  return typeof container === 'function' ? container() : container;\n}\n\n/**\n * Portals provide a first-class way to render children into a DOM node\n * that exists outside the DOM hierarchy of the parent component.\n *\n * Demos:\n *\n * - [Portal](https://mui.com/base/react-portal/)\n *\n * API:\n *\n * - [Portal API](https://mui.com/base/react-portal/components-api/#portal)\n */\nconst Portal = /*#__PURE__*/React.forwardRef(function Portal(props, forwardedRef) {\n  const {\n    children,\n    container,\n    disablePortal = false\n  } = props;\n  const [mountNode, setMountNode] = React.useState(null);\n  // @ts-expect-error TODO upstream fix\n  const handleRef = useForkRef( /*#__PURE__*/React.isValidElement(children) ? children.ref : null, forwardedRef);\n  useEnhancedEffect(() => {\n    if (!disablePortal) {\n      setMountNode(getContainer(container) || document.body);\n    }\n  }, [container, disablePortal]);\n  useEnhancedEffect(() => {\n    if (mountNode && !disablePortal) {\n      setRef(forwardedRef, mountNode);\n      return () => {\n        setRef(forwardedRef, null);\n      };\n    }\n    return undefined;\n  }, [forwardedRef, mountNode, disablePortal]);\n  if (disablePortal) {\n    if ( /*#__PURE__*/React.isValidElement(children)) {\n      const newProps = {\n        ref: handleRef\n      };\n      return /*#__PURE__*/React.cloneElement(children, newProps);\n    }\n    return /*#__PURE__*/_jsx(React.Fragment, {\n      children: children\n    });\n  }\n  return /*#__PURE__*/_jsx(React.Fragment, {\n    children: mountNode ? /*#__PURE__*/ReactDOM.createPortal(children, mountNode) : mountNode\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Portal.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The children to render into the `container`.\n   */\n  children: PropTypes.node,\n  /**\n   * An HTML element or function that returns one.\n   * The `container` will have the portal children appended to it.\n   *\n   * By default, it uses the body of the top-level document object,\n   * so it's simply `document.body` most of the time.\n   */\n  container: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([HTMLElementType, PropTypes.func]),\n  /**\n   * The `children` will be under the DOM hierarchy of the parent component.\n   * @default false\n   */\n  disablePortal: PropTypes.bool\n} : void 0;\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line\n  Portal['propTypes' + ''] = exactProp(Portal.propTypes);\n}\nexport default Portal;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
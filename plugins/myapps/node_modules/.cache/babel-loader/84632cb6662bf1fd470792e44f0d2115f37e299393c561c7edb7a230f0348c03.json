{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport { formatMuiErrorMessage as _formatMuiErrorMessage } from \"@mui/utils\";\nvar _excluded = [\"mode\", \"contrastThreshold\", \"tonalOffset\"];\nimport { deepmerge } from '@mui/utils';\nimport { darken, getContrastRatio, lighten } from '@mui/system';\nimport common from '../colors/common';\nimport grey from '../colors/grey';\nimport purple from '../colors/purple';\nimport red from '../colors/red';\nimport orange from '../colors/orange';\nimport blue from '../colors/blue';\nimport lightBlue from '../colors/lightBlue';\nimport green from '../colors/green';\nexport var light = {\n  // The colors used to style the text.\n  text: {\n    // The most important text.\n    primary: 'rgba(0, 0, 0, 0.87)',\n    // Secondary text.\n    secondary: 'rgba(0, 0, 0, 0.6)',\n    // Disabled text have even lower visual prominence.\n    disabled: 'rgba(0, 0, 0, 0.38)'\n  },\n  // The color used to divide different elements.\n  divider: 'rgba(0, 0, 0, 0.12)',\n  // The background colors used to style the surfaces.\n  // Consistency between these values is important.\n  background: {\n    paper: common.white,\n    default: common.white\n  },\n  // The colors used to style the action elements.\n  action: {\n    // The color of an active action like an icon button.\n    active: 'rgba(0, 0, 0, 0.54)',\n    // The color of an hovered action.\n    hover: 'rgba(0, 0, 0, 0.04)',\n    hoverOpacity: 0.04,\n    // The color of a selected action.\n    selected: 'rgba(0, 0, 0, 0.08)',\n    selectedOpacity: 0.08,\n    // The color of a disabled action.\n    disabled: 'rgba(0, 0, 0, 0.26)',\n    // The background color of a disabled action.\n    disabledBackground: 'rgba(0, 0, 0, 0.12)',\n    disabledOpacity: 0.38,\n    focus: 'rgba(0, 0, 0, 0.12)',\n    focusOpacity: 0.12,\n    activatedOpacity: 0.12\n  }\n};\nexport var dark = {\n  text: {\n    primary: common.white,\n    secondary: 'rgba(255, 255, 255, 0.7)',\n    disabled: 'rgba(255, 255, 255, 0.5)',\n    icon: 'rgba(255, 255, 255, 0.5)'\n  },\n  divider: 'rgba(255, 255, 255, 0.12)',\n  background: {\n    paper: '#121212',\n    default: '#121212'\n  },\n  action: {\n    active: common.white,\n    hover: 'rgba(255, 255, 255, 0.08)',\n    hoverOpacity: 0.08,\n    selected: 'rgba(255, 255, 255, 0.16)',\n    selectedOpacity: 0.16,\n    disabled: 'rgba(255, 255, 255, 0.3)',\n    disabledBackground: 'rgba(255, 255, 255, 0.12)',\n    disabledOpacity: 0.38,\n    focus: 'rgba(255, 255, 255, 0.12)',\n    focusOpacity: 0.12,\n    activatedOpacity: 0.24\n  }\n};\nfunction addLightOrDark(intent, direction, shade, tonalOffset) {\n  var tonalOffsetLight = tonalOffset.light || tonalOffset;\n  var tonalOffsetDark = tonalOffset.dark || tonalOffset * 1.5;\n  if (!intent[direction]) {\n    if (intent.hasOwnProperty(shade)) {\n      intent[direction] = intent[shade];\n    } else if (direction === 'light') {\n      intent.light = lighten(intent.main, tonalOffsetLight);\n    } else if (direction === 'dark') {\n      intent.dark = darken(intent.main, tonalOffsetDark);\n    }\n  }\n}\nfunction getDefaultPrimary() {\n  var mode = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'light';\n  if (mode === 'dark') {\n    return {\n      main: blue[200],\n      light: blue[50],\n      dark: blue[400]\n    };\n  }\n  return {\n    main: blue[700],\n    light: blue[400],\n    dark: blue[800]\n  };\n}\nfunction getDefaultSecondary() {\n  var mode = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'light';\n  if (mode === 'dark') {\n    return {\n      main: purple[200],\n      light: purple[50],\n      dark: purple[400]\n    };\n  }\n  return {\n    main: purple[500],\n    light: purple[300],\n    dark: purple[700]\n  };\n}\nfunction getDefaultError() {\n  var mode = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'light';\n  if (mode === 'dark') {\n    return {\n      main: red[500],\n      light: red[300],\n      dark: red[700]\n    };\n  }\n  return {\n    main: red[700],\n    light: red[400],\n    dark: red[800]\n  };\n}\nfunction getDefaultInfo() {\n  var mode = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'light';\n  if (mode === 'dark') {\n    return {\n      main: lightBlue[400],\n      light: lightBlue[300],\n      dark: lightBlue[700]\n    };\n  }\n  return {\n    main: lightBlue[700],\n    light: lightBlue[500],\n    dark: lightBlue[900]\n  };\n}\nfunction getDefaultSuccess() {\n  var mode = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'light';\n  if (mode === 'dark') {\n    return {\n      main: green[400],\n      light: green[300],\n      dark: green[700]\n    };\n  }\n  return {\n    main: green[800],\n    light: green[500],\n    dark: green[900]\n  };\n}\nfunction getDefaultWarning() {\n  var mode = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'light';\n  if (mode === 'dark') {\n    return {\n      main: orange[400],\n      light: orange[300],\n      dark: orange[700]\n    };\n  }\n  return {\n    main: '#ed6c02',\n    // closest to orange[800] that pass 3:1.\n    light: orange[500],\n    dark: orange[900]\n  };\n}\nexport default function createPalette(palette) {\n  var _palette$mode = palette.mode,\n    mode = _palette$mode === void 0 ? 'light' : _palette$mode,\n    _palette$contrastThre = palette.contrastThreshold,\n    contrastThreshold = _palette$contrastThre === void 0 ? 3 : _palette$contrastThre,\n    _palette$tonalOffset = palette.tonalOffset,\n    tonalOffset = _palette$tonalOffset === void 0 ? 0.2 : _palette$tonalOffset,\n    other = _objectWithoutPropertiesLoose(palette, _excluded);\n  var primary = palette.primary || getDefaultPrimary(mode);\n  var secondary = palette.secondary || getDefaultSecondary(mode);\n  var error = palette.error || getDefaultError(mode);\n  var info = palette.info || getDefaultInfo(mode);\n  var success = palette.success || getDefaultSuccess(mode);\n  var warning = palette.warning || getDefaultWarning(mode);\n\n  // Use the same logic as\n  // Bootstrap: https://github.com/twbs/bootstrap/blob/1d6e3710dd447de1a200f29e8fa521f8a0908f70/scss/_functions.scss#L59\n  // and material-components-web https://github.com/material-components/material-components-web/blob/ac46b8863c4dab9fc22c4c662dc6bd1b65dd652f/packages/mdc-theme/_functions.scss#L54\n  function getContrastText(background) {\n    var contrastText = getContrastRatio(background, dark.text.primary) >= contrastThreshold ? dark.text.primary : light.text.primary;\n    if (process.env.NODE_ENV !== 'production') {\n      var contrast = getContrastRatio(background, contrastText);\n      if (contrast < 3) {\n        console.error([\"MUI: The contrast ratio of \".concat(contrast, \":1 for \").concat(contrastText, \" on \").concat(background), 'falls below the WCAG recommended absolute minimum contrast ratio of 3:1.', 'https://www.w3.org/TR/2008/REC-WCAG20-20081211/#visual-audio-contrast-contrast'].join('\\n'));\n      }\n    }\n    return contrastText;\n  }\n  var augmentColor = function augmentColor(_ref) {\n    var color = _ref.color,\n      name = _ref.name,\n      _ref$mainShade = _ref.mainShade,\n      mainShade = _ref$mainShade === void 0 ? 500 : _ref$mainShade,\n      _ref$lightShade = _ref.lightShade,\n      lightShade = _ref$lightShade === void 0 ? 300 : _ref$lightShade,\n      _ref$darkShade = _ref.darkShade,\n      darkShade = _ref$darkShade === void 0 ? 700 : _ref$darkShade;\n    color = _extends({}, color);\n    if (!color.main && color[mainShade]) {\n      color.main = color[mainShade];\n    }\n    if (!color.hasOwnProperty('main')) {\n      throw new Error(process.env.NODE_ENV !== \"production\" ? \"MUI: The color\".concat(name ? \" (\".concat(name, \")\") : '', \" provided to augmentColor(color) is invalid.\\nThe color object needs to have a `main` property or a `\").concat(mainShade, \"` property.\") : _formatMuiErrorMessage(11, name ? \" (\".concat(name, \")\") : '', mainShade));\n    }\n    if (typeof color.main !== 'string') {\n      throw new Error(process.env.NODE_ENV !== \"production\" ? \"MUI: The color\".concat(name ? \" (\".concat(name, \")\") : '', \" provided to augmentColor(color) is invalid.\\n`color.main` should be a string, but `\").concat(JSON.stringify(color.main), \"` was provided instead.\\n\\nDid you intend to use one of the following approaches?\\n\\nimport { green } from \\\"@mui/material/colors\\\";\\n\\nconst theme1 = createTheme({ palette: {\\n  primary: green,\\n} });\\n\\nconst theme2 = createTheme({ palette: {\\n  primary: { main: green[500] },\\n} });\") : _formatMuiErrorMessage(12, name ? \" (\".concat(name, \")\") : '', JSON.stringify(color.main)));\n    }\n    addLightOrDark(color, 'light', lightShade, tonalOffset);\n    addLightOrDark(color, 'dark', darkShade, tonalOffset);\n    if (!color.contrastText) {\n      color.contrastText = getContrastText(color.main);\n    }\n    return color;\n  };\n  var modes = {\n    dark: dark,\n    light: light\n  };\n  if (process.env.NODE_ENV !== 'production') {\n    if (!modes[mode]) {\n      console.error(\"MUI: The palette mode `\".concat(mode, \"` is not supported.\"));\n    }\n  }\n  var paletteOutput = deepmerge(_extends({\n    // A collection of common colors.\n    common: _extends({}, common),\n    // prevent mutable object.\n    // The palette mode, can be light or dark.\n    mode: mode,\n    // The colors used to represent primary interface elements for a user.\n    primary: augmentColor({\n      color: primary,\n      name: 'primary'\n    }),\n    // The colors used to represent secondary interface elements for a user.\n    secondary: augmentColor({\n      color: secondary,\n      name: 'secondary',\n      mainShade: 'A400',\n      lightShade: 'A200',\n      darkShade: 'A700'\n    }),\n    // The colors used to represent interface elements that the user should be made aware of.\n    error: augmentColor({\n      color: error,\n      name: 'error'\n    }),\n    // The colors used to represent potentially dangerous actions or important messages.\n    warning: augmentColor({\n      color: warning,\n      name: 'warning'\n    }),\n    // The colors used to present information to the user that is neutral and not necessarily important.\n    info: augmentColor({\n      color: info,\n      name: 'info'\n    }),\n    // The colors used to indicate the successful completion of an action that user triggered.\n    success: augmentColor({\n      color: success,\n      name: 'success'\n    }),\n    // The grey colors.\n    grey: grey,\n    // Used by `getContrastText()` to maximize the contrast between\n    // the background and the text.\n    contrastThreshold: contrastThreshold,\n    // Takes a background color and returns the text color that maximizes the contrast.\n    getContrastText: getContrastText,\n    // Generate a rich color object.\n    augmentColor: augmentColor,\n    // Used by the functions below to shift a color's luminance by approximately\n    // two indexes within its tonal palette.\n    // E.g., shift from Red 500 to Red 300 or Red 700.\n    tonalOffset: tonalOffset\n  }, modes[mode]), other);\n  return paletteOutput;\n}","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","formatMuiErrorMessage","_formatMuiErrorMessage","_excluded","deepmerge","darken","getContrastRatio","lighten","common","grey","purple","red","orange","blue","lightBlue","green","light","text","primary","secondary","disabled","divider","background","paper","white","default","action","active","hover","hoverOpacity","selected","selectedOpacity","disabledBackground","disabledOpacity","focus","focusOpacity","activatedOpacity","dark","icon","addLightOrDark","intent","direction","shade","tonalOffset","tonalOffsetLight","tonalOffsetDark","hasOwnProperty","main","getDefaultPrimary","mode","arguments","length","undefined","getDefaultSecondary","getDefaultError","getDefaultInfo","getDefaultSuccess","getDefaultWarning","createPalette","palette","_palette$mode","_palette$contrastThre","contrastThreshold","_palette$tonalOffset","other","error","info","success","warning","getContrastText","contrastText","process","env","NODE_ENV","contrast","console","concat","join","augmentColor","_ref","color","name","_ref$mainShade","mainShade","_ref$lightShade","lightShade","_ref$darkShade","darkShade","Error","JSON","stringify","modes","paletteOutput"],"sources":["/data/stackhub-web/plugins/myapps/node_modules/@mui/material/styles/createPalette.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport { formatMuiErrorMessage as _formatMuiErrorMessage } from \"@mui/utils\";\nconst _excluded = [\"mode\", \"contrastThreshold\", \"tonalOffset\"];\nimport { deepmerge } from '@mui/utils';\nimport { darken, getContrastRatio, lighten } from '@mui/system';\nimport common from '../colors/common';\nimport grey from '../colors/grey';\nimport purple from '../colors/purple';\nimport red from '../colors/red';\nimport orange from '../colors/orange';\nimport blue from '../colors/blue';\nimport lightBlue from '../colors/lightBlue';\nimport green from '../colors/green';\nexport const light = {\n  // The colors used to style the text.\n  text: {\n    // The most important text.\n    primary: 'rgba(0, 0, 0, 0.87)',\n    // Secondary text.\n    secondary: 'rgba(0, 0, 0, 0.6)',\n    // Disabled text have even lower visual prominence.\n    disabled: 'rgba(0, 0, 0, 0.38)'\n  },\n  // The color used to divide different elements.\n  divider: 'rgba(0, 0, 0, 0.12)',\n  // The background colors used to style the surfaces.\n  // Consistency between these values is important.\n  background: {\n    paper: common.white,\n    default: common.white\n  },\n  // The colors used to style the action elements.\n  action: {\n    // The color of an active action like an icon button.\n    active: 'rgba(0, 0, 0, 0.54)',\n    // The color of an hovered action.\n    hover: 'rgba(0, 0, 0, 0.04)',\n    hoverOpacity: 0.04,\n    // The color of a selected action.\n    selected: 'rgba(0, 0, 0, 0.08)',\n    selectedOpacity: 0.08,\n    // The color of a disabled action.\n    disabled: 'rgba(0, 0, 0, 0.26)',\n    // The background color of a disabled action.\n    disabledBackground: 'rgba(0, 0, 0, 0.12)',\n    disabledOpacity: 0.38,\n    focus: 'rgba(0, 0, 0, 0.12)',\n    focusOpacity: 0.12,\n    activatedOpacity: 0.12\n  }\n};\nexport const dark = {\n  text: {\n    primary: common.white,\n    secondary: 'rgba(255, 255, 255, 0.7)',\n    disabled: 'rgba(255, 255, 255, 0.5)',\n    icon: 'rgba(255, 255, 255, 0.5)'\n  },\n  divider: 'rgba(255, 255, 255, 0.12)',\n  background: {\n    paper: '#121212',\n    default: '#121212'\n  },\n  action: {\n    active: common.white,\n    hover: 'rgba(255, 255, 255, 0.08)',\n    hoverOpacity: 0.08,\n    selected: 'rgba(255, 255, 255, 0.16)',\n    selectedOpacity: 0.16,\n    disabled: 'rgba(255, 255, 255, 0.3)',\n    disabledBackground: 'rgba(255, 255, 255, 0.12)',\n    disabledOpacity: 0.38,\n    focus: 'rgba(255, 255, 255, 0.12)',\n    focusOpacity: 0.12,\n    activatedOpacity: 0.24\n  }\n};\nfunction addLightOrDark(intent, direction, shade, tonalOffset) {\n  const tonalOffsetLight = tonalOffset.light || tonalOffset;\n  const tonalOffsetDark = tonalOffset.dark || tonalOffset * 1.5;\n  if (!intent[direction]) {\n    if (intent.hasOwnProperty(shade)) {\n      intent[direction] = intent[shade];\n    } else if (direction === 'light') {\n      intent.light = lighten(intent.main, tonalOffsetLight);\n    } else if (direction === 'dark') {\n      intent.dark = darken(intent.main, tonalOffsetDark);\n    }\n  }\n}\nfunction getDefaultPrimary(mode = 'light') {\n  if (mode === 'dark') {\n    return {\n      main: blue[200],\n      light: blue[50],\n      dark: blue[400]\n    };\n  }\n  return {\n    main: blue[700],\n    light: blue[400],\n    dark: blue[800]\n  };\n}\nfunction getDefaultSecondary(mode = 'light') {\n  if (mode === 'dark') {\n    return {\n      main: purple[200],\n      light: purple[50],\n      dark: purple[400]\n    };\n  }\n  return {\n    main: purple[500],\n    light: purple[300],\n    dark: purple[700]\n  };\n}\nfunction getDefaultError(mode = 'light') {\n  if (mode === 'dark') {\n    return {\n      main: red[500],\n      light: red[300],\n      dark: red[700]\n    };\n  }\n  return {\n    main: red[700],\n    light: red[400],\n    dark: red[800]\n  };\n}\nfunction getDefaultInfo(mode = 'light') {\n  if (mode === 'dark') {\n    return {\n      main: lightBlue[400],\n      light: lightBlue[300],\n      dark: lightBlue[700]\n    };\n  }\n  return {\n    main: lightBlue[700],\n    light: lightBlue[500],\n    dark: lightBlue[900]\n  };\n}\nfunction getDefaultSuccess(mode = 'light') {\n  if (mode === 'dark') {\n    return {\n      main: green[400],\n      light: green[300],\n      dark: green[700]\n    };\n  }\n  return {\n    main: green[800],\n    light: green[500],\n    dark: green[900]\n  };\n}\nfunction getDefaultWarning(mode = 'light') {\n  if (mode === 'dark') {\n    return {\n      main: orange[400],\n      light: orange[300],\n      dark: orange[700]\n    };\n  }\n  return {\n    main: '#ed6c02',\n    // closest to orange[800] that pass 3:1.\n    light: orange[500],\n    dark: orange[900]\n  };\n}\nexport default function createPalette(palette) {\n  const {\n      mode = 'light',\n      contrastThreshold = 3,\n      tonalOffset = 0.2\n    } = palette,\n    other = _objectWithoutPropertiesLoose(palette, _excluded);\n  const primary = palette.primary || getDefaultPrimary(mode);\n  const secondary = palette.secondary || getDefaultSecondary(mode);\n  const error = palette.error || getDefaultError(mode);\n  const info = palette.info || getDefaultInfo(mode);\n  const success = palette.success || getDefaultSuccess(mode);\n  const warning = palette.warning || getDefaultWarning(mode);\n\n  // Use the same logic as\n  // Bootstrap: https://github.com/twbs/bootstrap/blob/1d6e3710dd447de1a200f29e8fa521f8a0908f70/scss/_functions.scss#L59\n  // and material-components-web https://github.com/material-components/material-components-web/blob/ac46b8863c4dab9fc22c4c662dc6bd1b65dd652f/packages/mdc-theme/_functions.scss#L54\n  function getContrastText(background) {\n    const contrastText = getContrastRatio(background, dark.text.primary) >= contrastThreshold ? dark.text.primary : light.text.primary;\n    if (process.env.NODE_ENV !== 'production') {\n      const contrast = getContrastRatio(background, contrastText);\n      if (contrast < 3) {\n        console.error([`MUI: The contrast ratio of ${contrast}:1 for ${contrastText} on ${background}`, 'falls below the WCAG recommended absolute minimum contrast ratio of 3:1.', 'https://www.w3.org/TR/2008/REC-WCAG20-20081211/#visual-audio-contrast-contrast'].join('\\n'));\n      }\n    }\n    return contrastText;\n  }\n  const augmentColor = ({\n    color,\n    name,\n    mainShade = 500,\n    lightShade = 300,\n    darkShade = 700\n  }) => {\n    color = _extends({}, color);\n    if (!color.main && color[mainShade]) {\n      color.main = color[mainShade];\n    }\n    if (!color.hasOwnProperty('main')) {\n      throw new Error(process.env.NODE_ENV !== \"production\" ? `MUI: The color${name ? ` (${name})` : ''} provided to augmentColor(color) is invalid.\nThe color object needs to have a \\`main\\` property or a \\`${mainShade}\\` property.` : _formatMuiErrorMessage(11, name ? ` (${name})` : '', mainShade));\n    }\n    if (typeof color.main !== 'string') {\n      throw new Error(process.env.NODE_ENV !== \"production\" ? `MUI: The color${name ? ` (${name})` : ''} provided to augmentColor(color) is invalid.\n\\`color.main\\` should be a string, but \\`${JSON.stringify(color.main)}\\` was provided instead.\n\nDid you intend to use one of the following approaches?\n\nimport { green } from \"@mui/material/colors\";\n\nconst theme1 = createTheme({ palette: {\n  primary: green,\n} });\n\nconst theme2 = createTheme({ palette: {\n  primary: { main: green[500] },\n} });` : _formatMuiErrorMessage(12, name ? ` (${name})` : '', JSON.stringify(color.main)));\n    }\n    addLightOrDark(color, 'light', lightShade, tonalOffset);\n    addLightOrDark(color, 'dark', darkShade, tonalOffset);\n    if (!color.contrastText) {\n      color.contrastText = getContrastText(color.main);\n    }\n    return color;\n  };\n  const modes = {\n    dark,\n    light\n  };\n  if (process.env.NODE_ENV !== 'production') {\n    if (!modes[mode]) {\n      console.error(`MUI: The palette mode \\`${mode}\\` is not supported.`);\n    }\n  }\n  const paletteOutput = deepmerge(_extends({\n    // A collection of common colors.\n    common: _extends({}, common),\n    // prevent mutable object.\n    // The palette mode, can be light or dark.\n    mode,\n    // The colors used to represent primary interface elements for a user.\n    primary: augmentColor({\n      color: primary,\n      name: 'primary'\n    }),\n    // The colors used to represent secondary interface elements for a user.\n    secondary: augmentColor({\n      color: secondary,\n      name: 'secondary',\n      mainShade: 'A400',\n      lightShade: 'A200',\n      darkShade: 'A700'\n    }),\n    // The colors used to represent interface elements that the user should be made aware of.\n    error: augmentColor({\n      color: error,\n      name: 'error'\n    }),\n    // The colors used to represent potentially dangerous actions or important messages.\n    warning: augmentColor({\n      color: warning,\n      name: 'warning'\n    }),\n    // The colors used to present information to the user that is neutral and not necessarily important.\n    info: augmentColor({\n      color: info,\n      name: 'info'\n    }),\n    // The colors used to indicate the successful completion of an action that user triggered.\n    success: augmentColor({\n      color: success,\n      name: 'success'\n    }),\n    // The grey colors.\n    grey,\n    // Used by `getContrastText()` to maximize the contrast between\n    // the background and the text.\n    contrastThreshold,\n    // Takes a background color and returns the text color that maximizes the contrast.\n    getContrastText,\n    // Generate a rich color object.\n    augmentColor,\n    // Used by the functions below to shift a color's luminance by approximately\n    // two indexes within its tonal palette.\n    // E.g., shift from Red 500 to Red 300 or Red 700.\n    tonalOffset\n  }, modes[mode]), other);\n  return paletteOutput;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
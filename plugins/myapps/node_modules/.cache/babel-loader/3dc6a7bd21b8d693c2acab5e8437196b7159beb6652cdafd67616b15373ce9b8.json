{"ast":null,"code":"import _regeneratorRuntime from\"/data/stackhub-web/plugins/myapps/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/data/stackhub-web/plugins/myapps/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/data/stackhub-web/plugins/myapps/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import axios from'axios';import cockpit from\"cockpit\";import React,{useEffect,useState}from'react';import{Badge,Button,Card,Col,Row,Table}from'react-bootstrap';import{useNavigate}from'react-router-dom';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var _=cockpit.gettext;var AppContainer=function AppContainer(props){var navigate=useNavigate();//用于页面跳转\nvar _useState=useState([]),_useState2=_slicedToArray(_useState,2),containersInfo=_useState2[0],setContainersInfo=_useState2[1];var customer_name=props.data.customer_name;var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),endpointsId=_useState4[0],setEndpointsId=_useState4[1];//通过Portainer的接口获取容器数据\nvar getContainersData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var jwt,response,config,PORTAINER_USERNAME,PORTAINER_PASSWORD,PORTAINER_AUTH_URL,PORTAINER_HOME_PAGE,authResponse,endpointsData,id,containersData;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.prev=0;jwt=window.localStorage.getItem(\"portainer.JWT2\");//获取存储在本地的JWT数据 \n//如果获取不到jwt，则模拟登录并写入新的jwt\nif(!(jwt===null)){_context.next=18;break;}_context.next=5;return axios.get('./config.json');case 5:response=_context.sent;if(!(response.status===200)){_context.next=15;break;}config=response.data.PORTAINER;PORTAINER_USERNAME=config.PORTAINER_USERNAME,PORTAINER_PASSWORD=config.PORTAINER_PASSWORD,PORTAINER_AUTH_URL=config.PORTAINER_AUTH_URL,PORTAINER_HOME_PAGE=config.PORTAINER_HOME_PAGE;//调用portainer的登录API，模拟登录\n_context.next=11;return axios.post(PORTAINER_AUTH_URL,{username:PORTAINER_USERNAME,password:PORTAINER_PASSWORD});case 11:authResponse=_context.sent;if(authResponse.status===200){//jwt = \"\\\"\" + authResponse.data.jwt + \"\\\"\";\njwt=authResponse.data.jwt;//let jwt_localStorage = \"\\\"\" + authResponse.data.jwt + \"\\\"\";\nwindow.localStorage.setItem('portainer\\.JWT2',jwt);//关键是将通过API登录后获取的jwt，存储到本地localStorage\n}else{console.error('Error:',authResponse);}_context.next=16;break;case 15:console.error('Error:',response);case 16:_context.next=19;break;case 18:jwt=jwt.replace(/\"/g,'');case 19:_context.next=21;return axios.get('/portainer/api/endpoints',{headers:{'Authorization':'Bearer '+jwt}});case 21:endpointsData=_context.sent;if(!(endpointsData.status===200)){_context.next=31;break;}//应该可能会返回“远程”的endpoint，这里只获取“本地”endpoint,条件为URL包含'/var/run/docker.sock'\nid=endpointsData.data.find(function(_ref2){var URL=_ref2.URL;return URL.includes('/var/run/docker.sock');}).Id;setEndpointsId(id);//调用接口获取\n_context.next=27;return axios.get(\"/portainer/api/endpoints/\".concat(id,\"/docker/containers/json\"),{headers:{'Authorization':'Bearer '+jwt},params:{all:true,filters:JSON.stringify({\"label\":[\"com.docker.compose.project=\".concat(customer_name)]})}});case 27:containersData=_context.sent;if(containersData.status===200){setContainersInfo(containersData.data);}else{console.error('Error:',containersData);}_context.next=32;break;case 31:console.error('Error:',endpointsData);case 32:_context.next=37;break;case 34:_context.prev=34;_context.t0=_context[\"catch\"](0);console.error('Error:',_context.t0);//navigate(\"/error-500\");\ncase 37:case\"end\":return _context.stop();}},_callee,null,[[0,34]]);}));return function getContainersData(){return _ref.apply(this,arguments);};}();useEffect(function(){getContainersData();},[]);return/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsx(Col,{xs:12,children:/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(Card.Header,{children:/*#__PURE__*/_jsxs(Row,{className:\"align-items-center\",children:[/*#__PURE__*/_jsxs(Col,{xs:12,md:10,children:[/*#__PURE__*/_jsx(\"label\",{className:\"me-2 fs-5 d-block\",children:_(\"Container\")}),/*#__PURE__*/_jsxs(\"span\",{className:\"me-2 fs-6\",children:[\"\\u672C\\u5E94\\u7528\\u7531\\u5982\\u4E0B\\u5BB9\\u5668\\u7EC4\\u6210\\uFF0C\\u540D\\u79F0\\u4E3A \",customer_name,\" \\u7684\\u4E3A\\u4E3B\\u5BB9\\u5668  \"]})]}),/*#__PURE__*/_jsx(Col,{xs:12,md:2,children:/*#__PURE__*/_jsx(\"a\",{href:\"/portainer/#!/\".concat(endpointsId,\"/docker/stacks/\").concat(customer_name,\"?type=2&regular=false&external=true&orphaned=false\"),target:\"_blank\",className:\"me-2\",children:/*#__PURE__*/_jsx(Button,{variant:\"primary\",size:\"sm\",className:\"float-end\",children:_(\"More\")})})})]})}),/*#__PURE__*/_jsx(Card.Body,{children:/*#__PURE__*/_jsxs(Table,{className:\"mb-0\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Name\"}),/*#__PURE__*/_jsx(\"th\",{children:\"State\"}),/*#__PURE__*/_jsx(\"th\",{style:{textAlign:'center'},children:\"Actions\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Image\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Created\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Ip Address\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Published Ports\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:containersInfo.map(function(container,index){var _container$Names,_container$Names$,_container$Ports$find,_container$Ports$find2;return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:(_container$Names=container.Names)===null||_container$Names===void 0?void 0:(_container$Names$=_container$Names[0])===null||_container$Names$===void 0?void 0:_container$Names$.replace(/^\\/|\\/$/g,'')}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(Badge,{className:\"\".concat(container.State==='running'?'bg-success':container.State==='exited'?'bg-danger':'info'),children:container.State})}),/*#__PURE__*/_jsxs(\"td\",{style:{textAlign:'center'},children:[/*#__PURE__*/_jsxs(\"a\",{href:\"/portainer/#!/\".concat(endpointsId,\"/docker/containers/\").concat(container.Id,\"/logs\"),target:\"_blank\",title:\"Logs\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"dripicons-document-remove noti-icon\"}),' ']}),container.State===\"running\"&&/*#__PURE__*/_jsxs(\"a\",{href:\"/portainer/#!/\".concat(endpointsId,\"/docker/containers/\").concat(container.Id,\"/stats\"),target:\"_blank\",title:\"Stats\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"dripicons-pulse noti-icon\"}),' ']})]}),/*#__PURE__*/_jsx(\"td\",{children:container.Image}),/*#__PURE__*/_jsx(\"td\",{children:new Date(container.Created*1000).toLocaleString()}),/*#__PURE__*/_jsx(\"td\",{children:container.NetworkSettings.Networks[container.HostConfig.NetworkMode].IPAddress}),/*#__PURE__*/_jsxs(\"td\",{children:[(_container$Ports$find=container.Ports.find(function(port){return port.IP&&/^(\\d{1,3}\\.){3}\\d{1,3}$/.test(port.IP);}))===null||_container$Ports$find===void 0?void 0:_container$Ports$find.PublicPort,\":\",(_container$Ports$find2=container.Ports.find(function(port){return port.IP&&/^(\\d{1,3}\\.){3}\\d{1,3}$/.test(port.IP);}))===null||_container$Ports$find2===void 0?void 0:_container$Ports$find2.PrivatePort]})]},index);})})]})})]})})});};export default AppContainer;","map":{"version":3,"names":["axios","cockpit","React","useEffect","useState","Badge","Button","Card","Col","Row","Table","useNavigate","jsx","_jsx","jsxs","_jsxs","_","gettext","AppContainer","props","navigate","_useState","_useState2","_slicedToArray","containersInfo","setContainersInfo","customer_name","data","_useState3","_useState4","endpointsId","setEndpointsId","getContainersData","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","jwt","response","config","PORTAINER_USERNAME","PORTAINER_PASSWORD","PORTAINER_AUTH_URL","PORTAINER_HOME_PAGE","authResponse","endpointsData","id","containersData","wrap","_callee$","_context","prev","next","window","localStorage","getItem","get","sent","status","PORTAINER","post","username","password","setItem","console","error","replace","headers","find","_ref2","URL","includes","Id","concat","params","all","filters","JSON","stringify","t0","stop","apply","arguments","children","xs","Header","className","md","href","target","variant","size","Body","style","textAlign","map","container","index","_container$Names","_container$Names$","_container$Ports$find","_container$Ports$find2","Names","State","title","Image","Date","Created","toLocaleString","NetworkSettings","Networks","HostConfig","NetworkMode","IPAddress","Ports","port","IP","test","PublicPort","PrivatePort"],"sources":["/data/stackhub-web/plugins/myapps/src/pages/appdetailtabs/appcontainer.js"],"sourcesContent":["import axios from 'axios';\nimport cockpit from \"cockpit\";\nimport React, { useEffect, useState } from 'react';\nimport { Badge, Button, Card, Col, Row, Table } from 'react-bootstrap';\nimport { useNavigate } from 'react-router-dom';\n\nconst _ = cockpit.gettext;\n\nconst AppContainer = (props): React$Element<React$FragmentType> => {\n    const navigate = useNavigate(); //用于页面跳转\n    const [containersInfo, setContainersInfo] = useState([]);\n    const customer_name = props.data.customer_name;\n    const [endpointsId, setEndpointsId] = useState(null);\n\n    //通过Portainer的接口获取容器数据\n    const getContainersData = async () => {\n        try {\n            let jwt = window.localStorage.getItem(\"portainer.JWT2\"); //获取存储在本地的JWT数据 \n\n            //如果获取不到jwt，则模拟登录并写入新的jwt\n            if (jwt === null) {\n                const response = await axios.get('./config.json'); //从项目下读取配置文件\n                if (response.status === 200) {\n                    let config = response.data.PORTAINER;\n                    const { PORTAINER_USERNAME, PORTAINER_PASSWORD, PORTAINER_AUTH_URL, PORTAINER_HOME_PAGE } = config;\n\n                    //调用portainer的登录API，模拟登录\n                    const authResponse = await axios.post(PORTAINER_AUTH_URL, {\n                        username: PORTAINER_USERNAME,\n                        password: PORTAINER_PASSWORD\n                    });\n                    if (authResponse.status === 200) {\n                        //jwt = \"\\\"\" + authResponse.data.jwt + \"\\\"\";\n                        jwt = authResponse.data.jwt\n                        //let jwt_localStorage = \"\\\"\" + authResponse.data.jwt + \"\\\"\";\n                        window.localStorage.setItem('portainer\\.JWT2', jwt); //关键是将通过API登录后获取的jwt，存储到本地localStorage\n                    } else {\n                        console.error('Error:', authResponse);\n                    }\n                }\n                else {\n                    console.error('Error:', response);\n                }\n            }\n            else {\n                jwt = jwt.replace(/\"/g, '')\n            }\n\n            //从portainer接口获取endpoints\n            const endpointsData = await axios.get('/portainer/api/endpoints', {\n                headers: {\n                    'Authorization': 'Bearer ' + jwt\n                }\n            });\n            if (endpointsData.status === 200) {\n                //应该可能会返回“远程”的endpoint，这里只获取“本地”endpoint,条件为URL包含'/var/run/docker.sock'\n                const id = endpointsData.data.find(({ URL }) => URL.includes('/var/run/docker.sock')).Id;\n                setEndpointsId(id)\n                //调用接口获取\n                const containersData = await axios.get(`/portainer/api/endpoints/${id}/docker/containers/json`, {\n                    headers: {\n                        'Authorization': 'Bearer ' + jwt\n                    },\n                    params: {\n                        all: true,\n                        filters: JSON.stringify({ \"label\": [`com.docker.compose.project=${customer_name}`] })\n                    }\n                })\n                if (containersData.status === 200) {\n                    setContainersInfo(containersData.data);\n                }\n                else {\n                    console.error('Error:', containersData);\n                }\n            }\n            else {\n                console.error('Error:', endpointsData);\n            }\n        }\n        catch (error) {\n            console.error('Error:', error);\n            //navigate(\"/error-500\");\n        }\n    }\n\n    useEffect(() => {\n        getContainersData();\n    }, []);\n\n    return (\n        <Row>\n            <Col xs={12}>\n                <Card>\n                    <Card.Header>\n                        <Row className=\"align-items-center\">\n                            <Col xs={12} md={10}>\n                                <label className=\"me-2 fs-5 d-block\">{_(\"Container\")}</label>\n                                <span className=\"me-2 fs-6\">本应用由如下容器组成，名称为 {customer_name} 的为主容器  </span>\n                            </Col>\n                            <Col xs={12} md={2}>\n                                <a href={`/portainer/#!/${endpointsId}/docker/stacks/${customer_name}?type=2&regular=false&external=true&orphaned=false`}\n                                    target=\"_blank\" className=\"me-2\">\n                                    <Button variant=\"primary\" size=\"sm\" className=\"float-end\">{_(\"More\")}</Button>\n                                </a>\n                            </Col>\n                        </Row>\n                    </Card.Header>\n                    <Card.Body>\n                        <Table className=\"mb-0\">\n                            <thead>\n                                <tr>\n                                    <th>Name</th>\n                                    <th>State</th>\n                                    <th style={{ textAlign: 'center' }}>Actions</th>\n                                    <th>Image</th>\n                                    <th>Created</th>\n                                    <th>Ip Address</th>\n                                    <th>Published Ports</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {containersInfo.map((container, index) => {\n                                    return (\n                                        <tr key={index}>\n                                            <td>{container.Names?.[0]?.replace(/^\\/|\\/$/g, '')}</td>\n                                            <td>\n                                                <Badge className={`${container.State === 'running' ? 'bg-success' : container.State === 'exited' ? 'bg-danger' : 'info'}`}>\n                                                    {container.State}\n                                                </Badge>\n                                            </td>\n                                            <td style={{ textAlign: 'center' }}>\n                                                <a href={`/portainer/#!/${endpointsId}/docker/containers/${container.Id}/logs`}\n                                                    target=\"_blank\" title='Logs'>\n                                                    <i className=\"dripicons-document-remove noti-icon\"></i>{' '}\n                                                </a>\n                                                {\n                                                    container.State === \"running\" && (\n                                                        <a href={`/portainer/#!/${endpointsId}/docker/containers/${container.Id}/stats`}\n                                                            target=\"_blank\" title='Stats'>\n                                                            <i className=\"dripicons-pulse noti-icon\"></i>{' '}\n                                                        </a>\n                                                    )\n                                                }\n\n                                            </td>\n                                            <td>{container.Image}</td>\n                                            <td>{new Date(container.Created * 1000).toLocaleString()}</td>\n                                            <td>{container.NetworkSettings.Networks[container.HostConfig.NetworkMode].IPAddress}</td>\n                                            <td>{container.Ports.find(port => port.IP && /^(\\d{1,3}\\.){3}\\d{1,3}$/.test(port.IP))?.PublicPort}:{container.Ports.find(port => port.IP && /^(\\d{1,3}\\.){3}\\d{1,3}$/.test(port.IP))?.PrivatePort}</td>\n                                        </tr>\n                                    );\n                                })}\n                            </tbody>\n                        </Table>\n                    </Card.Body>\n                </Card>\n            </Col>\n        </Row >\n    );\n}\n\nexport default AppContainer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
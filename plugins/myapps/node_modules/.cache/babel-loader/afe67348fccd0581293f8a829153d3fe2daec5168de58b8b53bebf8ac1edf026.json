{"ast":null,"code":"import _classCallCheck from \"/data/stackhub-web/plugins/myapps/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/data/stackhub-web/plugins/myapps/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/data/stackhub-web/plugins/myapps/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/data/stackhub-web/plugins/myapps/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Page/page';\nimport { css } from '@patternfly/react-styles';\nimport globalBreakpointXl from '@patternfly/react-tokens/dist/esm/global_breakpoint_xl';\nimport { debounce, canUseDOM } from '../../helpers/util';\nimport { Drawer, DrawerContent, DrawerContentBody, DrawerPanelContent } from '../Drawer';\nimport { PageGroup } from './PageGroup';\nimport { getResizeObserver } from '../../helpers/resizeObserver';\nimport { formatBreakpointMods, getBreakpoint, getVerticalBreakpoint } from '../../helpers/util';\nimport { PageContextProvider } from './PageContext';\nexport var PageLayouts;\n(function (PageLayouts) {\n  PageLayouts[\"vertical\"] = \"vertical\";\n  PageLayouts[\"horizontal\"] = \"horizontal\";\n})(PageLayouts || (PageLayouts = {}));\nexport var Page = /*#__PURE__*/function (_React$Component) {\n  _inherits(Page, _React$Component);\n  var _super = _createSuper(Page);\n  function Page(props) {\n    var _this;\n    _classCallCheck(this, Page);\n    _this = _super.call(this, props);\n    _this.mainRef = React.createRef();\n    _this.pageRef = React.createRef();\n    _this.observer = function () {};\n    _this.getWindowWidth = function () {\n      if (canUseDOM) {\n        return _this.pageRef.current ? _this.pageRef.current.clientWidth : window.innerWidth;\n      } else {\n        return 1200;\n      }\n    };\n    _this.isMobile = function () {\n      return (\n        // eslint-disable-next-line radix\n        _this.getWindowWidth() < Number.parseInt(globalBreakpointXl.value, 10)\n      );\n    };\n    _this.resize = function () {\n      var _a;\n      var onPageResize = _this.props.onPageResize;\n      var mobileView = _this.isMobile();\n      if (onPageResize) {\n        onPageResize({\n          mobileView: mobileView,\n          windowSize: _this.getWindowWidth()\n        });\n      }\n      if (mobileView !== _this.state.mobileView) {\n        _this.setState({\n          mobileView: mobileView\n        });\n      }\n      if ((_a = _this.pageRef) === null || _a === void 0 ? void 0 : _a.current) {\n        var currentWidth = _this.pageRef.current.clientWidth;\n        var currentHeight = _this.pageRef.current.clientHeight;\n        if (_this.state.width !== currentWidth) {\n          _this.setState({\n            width: currentWidth\n          });\n        }\n        if (_this.state.height !== currentHeight) {\n          _this.setState({\n            height: currentHeight\n          });\n        }\n      }\n    };\n    _this.handleResize = debounce(_this.resize, 250);\n    _this.handleMainClick = function () {\n      if (_this.isMobile() && _this.state.mobileIsNavOpen && _this.mainRef.current) {\n        _this.setState({\n          mobileIsNavOpen: false\n        });\n      }\n    };\n    _this.onNavToggleMobile = function () {\n      _this.setState(function (prevState) {\n        return {\n          mobileIsNavOpen: !prevState.mobileIsNavOpen\n        };\n      });\n    };\n    _this.onNavToggleDesktop = function () {\n      _this.setState(function (prevState) {\n        return {\n          desktopIsNavOpen: !prevState.desktopIsNavOpen\n        };\n      });\n    };\n    var isManagedSidebar = props.isManagedSidebar,\n      defaultManagedSidebarIsOpen = props.defaultManagedSidebarIsOpen;\n    var managedSidebarOpen = !isManagedSidebar ? true : defaultManagedSidebarIsOpen;\n    _this.state = {\n      desktopIsNavOpen: managedSidebarOpen,\n      mobileIsNavOpen: false,\n      mobileView: false,\n      width: null,\n      height: null\n    };\n    return _this;\n  }\n  _createClass(Page, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props = this.props,\n        isManagedSidebar = _this$props.isManagedSidebar,\n        onPageResize = _this$props.onPageResize;\n      if (isManagedSidebar || onPageResize) {\n        this.observer = getResizeObserver(this.pageRef.current, this.handleResize);\n        var currentRef = this.mainRef.current;\n        if (currentRef) {\n          currentRef.addEventListener('mousedown', this.handleMainClick);\n          currentRef.addEventListener('touchstart', this.handleMainClick);\n        }\n        // Initial check if should be shown\n        this.resize();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var _this$props2 = this.props,\n        isManagedSidebar = _this$props2.isManagedSidebar,\n        onPageResize = _this$props2.onPageResize;\n      if (isManagedSidebar || onPageResize) {\n        this.observer();\n        var currentRef = this.mainRef.current;\n        if (currentRef) {\n          currentRef.removeEventListener('mousedown', this.handleMainClick);\n          currentRef.removeEventListener('touchstart', this.handleMainClick);\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _a = this.props,\n        breadcrumb = _a.breadcrumb,\n        isBreadcrumbWidthLimited = _a.isBreadcrumbWidthLimited,\n        className = _a.className,\n        children = _a.children,\n        header = _a.header,\n        sidebar = _a.sidebar,\n        notificationDrawer = _a.notificationDrawer,\n        isNotificationDrawerExpanded = _a.isNotificationDrawerExpanded,\n        onNotificationDrawerExpand = _a.onNotificationDrawerExpand,\n        isTertiaryNavWidthLimited = _a.isTertiaryNavWidthLimited,\n        skipToContent = _a.skipToContent,\n        role = _a.role,\n        mainContainerId = _a.mainContainerId,\n        isManagedSidebar = _a.isManagedSidebar,\n        defaultManagedSidebarIsOpen = _a.defaultManagedSidebarIsOpen,\n        onPageResize = _a.onPageResize,\n        getBreakpoint = _a.getBreakpoint,\n        getVerticalBreakpoint = _a.getVerticalBreakpoint,\n        mainAriaLabel = _a.mainAriaLabel,\n        mainTabIndex = _a.mainTabIndex,\n        tertiaryNav = _a.tertiaryNav,\n        isTertiaryNavGrouped = _a.isTertiaryNavGrouped,\n        isBreadcrumbGrouped = _a.isBreadcrumbGrouped,\n        additionalGroupedContent = _a.additionalGroupedContent,\n        groupProps = _a.groupProps,\n        breadcrumbProps = _a.breadcrumbProps,\n        rest = __rest(_a, [\"breadcrumb\", \"isBreadcrumbWidthLimited\", \"className\", \"children\", \"header\", \"sidebar\", \"notificationDrawer\", \"isNotificationDrawerExpanded\", \"onNotificationDrawerExpand\", \"isTertiaryNavWidthLimited\", \"skipToContent\", \"role\", \"mainContainerId\", \"isManagedSidebar\", \"defaultManagedSidebarIsOpen\", \"onPageResize\", \"getBreakpoint\", \"getVerticalBreakpoint\", \"mainAriaLabel\", \"mainTabIndex\", \"tertiaryNav\", \"isTertiaryNavGrouped\", \"isBreadcrumbGrouped\", \"additionalGroupedContent\", \"groupProps\", \"breadcrumbProps\"]);\n      var _this$state = this.state,\n        mobileView = _this$state.mobileView,\n        mobileIsNavOpen = _this$state.mobileIsNavOpen,\n        desktopIsNavOpen = _this$state.desktopIsNavOpen,\n        width = _this$state.width,\n        height = _this$state.height;\n      var context = {\n        isManagedSidebar: isManagedSidebar,\n        onNavToggle: mobileView ? this.onNavToggleMobile : this.onNavToggleDesktop,\n        isNavOpen: mobileView ? mobileIsNavOpen : desktopIsNavOpen,\n        width: width,\n        height: height,\n        getBreakpoint: getBreakpoint,\n        getVerticalBreakpoint: getVerticalBreakpoint\n      };\n      var nav = null;\n      if (tertiaryNav && isTertiaryNavWidthLimited) {\n        nav = React.createElement(\"div\", {\n          className: css(styles.pageMainNav, styles.modifiers.limitWidth)\n        }, React.createElement(\"div\", {\n          className: css(styles.pageMainBody)\n        }, tertiaryNav));\n      } else if (tertiaryNav) {\n        nav = React.createElement(\"div\", {\n          className: css(styles.pageMainNav)\n        }, tertiaryNav);\n      }\n      var crumb = breadcrumb ? React.createElement(\"section\", {\n        className: css(styles.pageMainBreadcrumb, isBreadcrumbWidthLimited && styles.modifiers.limitWidth, formatBreakpointMods(breadcrumbProps === null || breadcrumbProps === void 0 ? void 0 : breadcrumbProps.stickyOnBreakpoint, styles, 'sticky-', getVerticalBreakpoint(height), true))\n      }, isBreadcrumbWidthLimited ? React.createElement(\"div\", {\n        className: css(styles.pageMainBody)\n      }, breadcrumb) : breadcrumb) : null;\n      var isGrouped = isTertiaryNavGrouped || isBreadcrumbGrouped || additionalGroupedContent;\n      var group = isGrouped ? React.createElement(PageGroup, Object.assign({}, groupProps), isTertiaryNavGrouped && nav, isBreadcrumbGrouped && crumb, additionalGroupedContent) : null;\n      var main = React.createElement(\"main\", {\n        ref: this.mainRef,\n        role: role,\n        id: mainContainerId,\n        className: css(styles.pageMain),\n        tabIndex: mainTabIndex,\n        \"aria-label\": mainAriaLabel\n      }, group, !isTertiaryNavGrouped && nav, !isBreadcrumbGrouped && crumb, children);\n      var panelContent = React.createElement(DrawerPanelContent, null, notificationDrawer);\n      return React.createElement(PageContextProvider, {\n        value: context\n      }, React.createElement(\"div\", Object.assign({\n        ref: this.pageRef\n      }, rest, {\n        className: css(styles.page, width !== null && height !== null && 'pf-m-resize-observer', width !== null && \"pf-m-breakpoint-\".concat(getBreakpoint(width)), height !== null && \"pf-m-height-breakpoint-\".concat(getVerticalBreakpoint(height)), className)\n      }), skipToContent, header, sidebar, notificationDrawer && React.createElement(\"div\", {\n        className: css(styles.pageDrawer)\n      }, React.createElement(Drawer, {\n        isExpanded: isNotificationDrawerExpanded,\n        onExpand: onNotificationDrawerExpand\n      }, React.createElement(DrawerContent, {\n        panelContent: panelContent\n      }, React.createElement(DrawerContentBody, null, main)))), !notificationDrawer && main));\n    }\n  }]);\n  return Page;\n}(React.Component);\nPage.displayName = 'Page';\nPage.defaultProps = {\n  isManagedSidebar: false,\n  isBreadcrumbWidthLimited: false,\n  defaultManagedSidebarIsOpen: true,\n  onPageResize: function onPageResize() {\n    return null;\n  },\n  mainTabIndex: -1,\n  isNotificationDrawerExpanded: false,\n  onNotificationDrawerExpand: function onNotificationDrawerExpand() {\n    return null;\n  },\n  getBreakpoint: getBreakpoint,\n  getVerticalBreakpoint: getVerticalBreakpoint\n};","map":{"version":3,"names":["React","styles","css","globalBreakpointXl","debounce","canUseDOM","Drawer","DrawerContent","DrawerContentBody","DrawerPanelContent","PageGroup","getResizeObserver","formatBreakpointMods","getBreakpoint","getVerticalBreakpoint","PageContextProvider","PageLayouts","Page","_React$Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","mainRef","createRef","pageRef","observer","getWindowWidth","current","clientWidth","window","innerWidth","isMobile","Number","parseInt","value","resize","onPageResize","mobileView","windowSize","state","setState","_a","currentWidth","currentHeight","clientHeight","width","height","handleResize","handleMainClick","mobileIsNavOpen","onNavToggleMobile","prevState","onNavToggleDesktop","desktopIsNavOpen","isManagedSidebar","defaultManagedSidebarIsOpen","managedSidebarOpen","_createClass","key","componentDidMount","_this$props","currentRef","addEventListener","componentWillUnmount","_this$props2","removeEventListener","render","breadcrumb","isBreadcrumbWidthLimited","className","children","header","sidebar","notificationDrawer","isNotificationDrawerExpanded","onNotificationDrawerExpand","isTertiaryNavWidthLimited","skipToContent","role","mainContainerId","mainAriaLabel","mainTabIndex","tertiaryNav","isTertiaryNavGrouped","isBreadcrumbGrouped","additionalGroupedContent","groupProps","breadcrumbProps","rest","__rest","_this$state","context","onNavToggle","isNavOpen","nav","createElement","pageMainNav","modifiers","limitWidth","pageMainBody","crumb","pageMainBreadcrumb","stickyOnBreakpoint","isGrouped","group","Object","assign","main","ref","id","pageMain","tabIndex","panelContent","page","concat","pageDrawer","isExpanded","onExpand","Component","displayName","defaultProps"],"sources":["/data/stackhub-web/plugins/myapps/node_modules/@patternfly/react-core/src/components/Page/Page.tsx"],"sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Page/page';\nimport { css } from '@patternfly/react-styles';\nimport globalBreakpointXl from '@patternfly/react-tokens/dist/esm/global_breakpoint_xl';\nimport { debounce, canUseDOM } from '../../helpers/util';\nimport { Drawer, DrawerContent, DrawerContentBody, DrawerPanelContent } from '../Drawer';\nimport { PageBreadcrumbProps } from './PageBreadcrumb';\nimport { PageGroup, PageGroupProps } from './PageGroup';\nimport { getResizeObserver } from '../../helpers/resizeObserver';\nimport { formatBreakpointMods, getBreakpoint, getVerticalBreakpoint } from '../../helpers/util';\nimport { PageContextProvider } from './PageContext';\n\nexport enum PageLayouts {\n  vertical = 'vertical',\n  horizontal = 'horizontal'\n}\nexport interface PageProps extends React.HTMLProps<HTMLDivElement> {\n  /** Content rendered inside the main section of the page layout (e.g. <PageSection />) */\n  children?: React.ReactNode;\n  /** Additional classes added to the page layout */\n  className?: string;\n  /** Header component (e.g. <PageHeader />) */\n  header?: React.ReactNode;\n  /** Sidebar component for a side nav (e.g. <PageSidebar />) */\n  sidebar?: React.ReactNode;\n  /** Notification drawer component for an optional notification drawer (e.g. <NotificationDrawer />) */\n  notificationDrawer?: React.ReactNode;\n  /** Flag indicating Notification drawer in expanded */\n  isNotificationDrawerExpanded?: boolean;\n  /** Flag indicating if breadcrumb width should be limited */\n  isBreadcrumbWidthLimited?: boolean;\n  /** Callback when notification drawer panel is finished expanding. */\n  onNotificationDrawerExpand?: () => void;\n  /** Skip to content component for the page */\n  skipToContent?: React.ReactElement;\n  /** Sets the value for role on the <main> element */\n  role?: string;\n  /** an id to use for the [role=\"main\"] element */\n  mainContainerId?: string;\n  /** tabIndex to use for the [role=\"main\"] element, null to unset it */\n  mainTabIndex?: number | null;\n  /**\n   * If true, manages the sidebar open/close state and there is no need to pass the isNavOpen boolean into\n   * the sidebar component or add a callback onNavToggle function into the PageHeader component\n   */\n  isManagedSidebar?: boolean;\n  /** Flag indicating if tertiary nav width should be limited */\n  isTertiaryNavWidthLimited?: boolean;\n  /**\n   * If true, the managed sidebar is initially open for desktop view\n   */\n  defaultManagedSidebarIsOpen?: boolean;\n  /**\n   * Can add callback to be notified when resize occurs, for example to set the sidebar isNav prop to false for a width < 768px\n   * Returns object { mobileView: boolean, windowSize: number }\n   */\n  onPageResize?: ((object: any) => void) | null;\n  /**\n   * The page resize observer uses the breakpoints returned from this function when adding the pf-m-breakpoint-[default|sm|md|lg|xl|2xl] class\n   * You can override the default getBreakpoint function to return breakpoints at different sizes than the default\n   * You can view the default getBreakpoint function here:\n   * https://github.com/patternfly/patternfly-react/blob/main/packages/react-core/src/helpers/util.ts\n   */\n  getBreakpoint?: (width: number | null) => 'default' | 'sm' | 'md' | 'lg' | 'xl' | '2xl';\n  /**\n   * The page resize observer uses the breakpoints returned from this function when adding the pf-m-breakpoint-[default|sm|md|lg|xl|2xl] class\n   * You can override the default getVerticalBreakpoint function to return breakpoints at different sizes than the default\n   * You can view the default getVerticalBreakpoint function here:\n   * https://github.com/patternfly/patternfly-react/blob/main/packages/react-core/src/helpers/util.ts\n   */\n  getVerticalBreakpoint?: (height: number | null) => 'default' | 'sm' | 'md' | 'lg' | 'xl' | '2xl';\n  /** Breadcrumb component for the page */\n  breadcrumb?: React.ReactNode;\n  /** Tertiary nav component for the page */\n  tertiaryNav?: React.ReactNode;\n  /** Accessible label, can be used to name main section */\n  mainAriaLabel?: string;\n  /** Flag indicating if the tertiaryNav should be in a group */\n  isTertiaryNavGrouped?: boolean;\n  /** Flag indicating if the breadcrumb should be in a group */\n  isBreadcrumbGrouped?: boolean;\n  /** Additional content of the group */\n  additionalGroupedContent?: React.ReactNode;\n  /** Additional props of the group */\n  groupProps?: PageGroupProps;\n  /** Additional props of the breadcrumb */\n  breadcrumbProps?: PageBreadcrumbProps;\n}\n\nexport interface PageState {\n  desktopIsNavOpen: boolean;\n  mobileIsNavOpen: boolean;\n  mobileView: boolean;\n  width: number;\n  height: number;\n}\n\nexport class Page extends React.Component<PageProps, PageState> {\n  static displayName = 'Page';\n  static defaultProps: PageProps = {\n    isManagedSidebar: false,\n    isBreadcrumbWidthLimited: false,\n    defaultManagedSidebarIsOpen: true,\n    onPageResize: (): void => null,\n    mainTabIndex: -1,\n    isNotificationDrawerExpanded: false,\n    onNotificationDrawerExpand: () => null,\n    getBreakpoint,\n    getVerticalBreakpoint\n  };\n  mainRef = React.createRef<HTMLDivElement>();\n  pageRef = React.createRef<HTMLDivElement>();\n  observer: any = () => {};\n\n  constructor(props: PageProps) {\n    super(props);\n\n    const { isManagedSidebar, defaultManagedSidebarIsOpen } = props;\n    const managedSidebarOpen = !isManagedSidebar ? true : defaultManagedSidebarIsOpen;\n    this.state = {\n      desktopIsNavOpen: managedSidebarOpen,\n      mobileIsNavOpen: false,\n      mobileView: false,\n      width: null,\n      height: null\n    };\n  }\n\n  componentDidMount() {\n    const { isManagedSidebar, onPageResize } = this.props;\n    if (isManagedSidebar || onPageResize) {\n      this.observer = getResizeObserver(this.pageRef.current, this.handleResize);\n      const currentRef = this.mainRef.current;\n      if (currentRef) {\n        currentRef.addEventListener('mousedown', this.handleMainClick);\n        currentRef.addEventListener('touchstart', this.handleMainClick);\n      }\n      // Initial check if should be shown\n      this.resize();\n    }\n  }\n\n  componentWillUnmount() {\n    const { isManagedSidebar, onPageResize } = this.props;\n    if (isManagedSidebar || onPageResize) {\n      this.observer();\n      const currentRef = this.mainRef.current;\n      if (currentRef) {\n        currentRef.removeEventListener('mousedown', this.handleMainClick);\n        currentRef.removeEventListener('touchstart', this.handleMainClick);\n      }\n    }\n  }\n\n  getWindowWidth = () => {\n    if (canUseDOM) {\n      return this.pageRef.current ? this.pageRef.current.clientWidth : window.innerWidth;\n    } else {\n      return 1200;\n    }\n  };\n\n  isMobile = () =>\n    // eslint-disable-next-line radix\n    this.getWindowWidth() < Number.parseInt(globalBreakpointXl.value, 10);\n\n  resize = () => {\n    const { onPageResize } = this.props;\n    const mobileView = this.isMobile();\n    if (onPageResize) {\n      onPageResize({ mobileView, windowSize: this.getWindowWidth() });\n    }\n    if (mobileView !== this.state.mobileView) {\n      this.setState({ mobileView });\n    }\n    if (this.pageRef?.current) {\n      const currentWidth = this.pageRef.current.clientWidth;\n      const currentHeight = this.pageRef.current.clientHeight;\n\n      if (this.state.width !== currentWidth) {\n        this.setState({ width: currentWidth });\n      }\n      if (this.state.height !== currentHeight) {\n        this.setState({ height: currentHeight });\n      }\n    }\n  };\n\n  handleResize = debounce(this.resize, 250);\n\n  handleMainClick = () => {\n    if (this.isMobile() && this.state.mobileIsNavOpen && this.mainRef.current) {\n      this.setState({ mobileIsNavOpen: false });\n    }\n  };\n\n  onNavToggleMobile = () => {\n    this.setState(prevState => ({\n      mobileIsNavOpen: !prevState.mobileIsNavOpen\n    }));\n  };\n\n  onNavToggleDesktop = () => {\n    this.setState(prevState => ({\n      desktopIsNavOpen: !prevState.desktopIsNavOpen\n    }));\n  };\n\n  render() {\n    const {\n      breadcrumb,\n      isBreadcrumbWidthLimited,\n      className,\n      children,\n      header,\n      sidebar,\n      notificationDrawer,\n      isNotificationDrawerExpanded,\n      onNotificationDrawerExpand,\n      isTertiaryNavWidthLimited,\n      skipToContent,\n      role,\n      mainContainerId,\n      isManagedSidebar,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      defaultManagedSidebarIsOpen,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      onPageResize,\n      getBreakpoint,\n      getVerticalBreakpoint,\n      mainAriaLabel,\n      mainTabIndex,\n      tertiaryNav,\n      isTertiaryNavGrouped,\n      isBreadcrumbGrouped,\n      additionalGroupedContent,\n      groupProps,\n      breadcrumbProps,\n      ...rest\n    } = this.props;\n    const { mobileView, mobileIsNavOpen, desktopIsNavOpen, width, height } = this.state;\n\n    const context = {\n      isManagedSidebar,\n      onNavToggle: mobileView ? this.onNavToggleMobile : this.onNavToggleDesktop,\n      isNavOpen: mobileView ? mobileIsNavOpen : desktopIsNavOpen,\n      width,\n      height,\n      getBreakpoint,\n      getVerticalBreakpoint\n    };\n\n    let nav = null;\n    if (tertiaryNav && isTertiaryNavWidthLimited) {\n      nav = (\n        <div className={css(styles.pageMainNav, styles.modifiers.limitWidth)}>\n          <div className={css(styles.pageMainBody)}>{tertiaryNav}</div>\n        </div>\n      );\n    } else if (tertiaryNav) {\n      nav = <div className={css(styles.pageMainNav)}>{tertiaryNav}</div>;\n    }\n\n    const crumb = breadcrumb ? (\n      <section\n        className={css(\n          styles.pageMainBreadcrumb,\n          isBreadcrumbWidthLimited && styles.modifiers.limitWidth,\n          formatBreakpointMods(\n            breadcrumbProps?.stickyOnBreakpoint,\n            styles,\n            'sticky-',\n            getVerticalBreakpoint(height),\n            true\n          )\n        )}\n      >\n        {isBreadcrumbWidthLimited ? <div className={css(styles.pageMainBody)}>{breadcrumb}</div> : breadcrumb}\n      </section>\n    ) : null;\n\n    const isGrouped = isTertiaryNavGrouped || isBreadcrumbGrouped || additionalGroupedContent;\n\n    const group = isGrouped ? (\n      <PageGroup {...groupProps}>\n        {isTertiaryNavGrouped && nav}\n        {isBreadcrumbGrouped && crumb}\n        {additionalGroupedContent}\n      </PageGroup>\n    ) : null;\n\n    const main = (\n      <main\n        ref={this.mainRef}\n        role={role}\n        id={mainContainerId}\n        className={css(styles.pageMain)}\n        tabIndex={mainTabIndex}\n        aria-label={mainAriaLabel}\n      >\n        {group}\n        {!isTertiaryNavGrouped && nav}\n        {!isBreadcrumbGrouped && crumb}\n        {children}\n      </main>\n    );\n\n    const panelContent = <DrawerPanelContent>{notificationDrawer}</DrawerPanelContent>;\n\n    return (\n      <PageContextProvider value={context}>\n        <div\n          ref={this.pageRef}\n          {...rest}\n          className={css(\n            styles.page,\n            width !== null && height !== null && 'pf-m-resize-observer',\n            width !== null && `pf-m-breakpoint-${getBreakpoint(width)}`,\n            height !== null && `pf-m-height-breakpoint-${getVerticalBreakpoint(height)}`,\n            className\n          )}\n        >\n          {skipToContent}\n          {header}\n          {sidebar}\n          {notificationDrawer && (\n            <div className={css(styles.pageDrawer)}>\n              <Drawer isExpanded={isNotificationDrawerExpanded} onExpand={onNotificationDrawerExpand}>\n                <DrawerContent panelContent={panelContent}>\n                  <DrawerContentBody>{main}</DrawerContentBody>\n                </DrawerContent>\n              </Drawer>\n            </div>\n          )}\n          {!notificationDrawer && main}\n        </div>\n      </PageContextProvider>\n    );\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import inspect from \"../jsutils/inspect.mjs\";\nimport { GraphQLError } from \"./GraphQLError.mjs\";\n/**\n * Given an arbitrary value, presumably thrown while attempting to execute a\n * GraphQL operation, produce a new GraphQLError aware of the location in the\n * document responsible for the original Error.\n */\n\nexport function locatedError(rawOriginalError, nodes, path) {\n  var _nodes;\n\n  // Sometimes a non-error is thrown, wrap it as an Error instance to ensure a consistent Error interface.\n  var originalError = rawOriginalError instanceof Error ? rawOriginalError : new Error('Unexpected error value: ' + inspect(rawOriginalError)); // Note: this uses a brand-check to support GraphQL errors originating from other contexts.\n\n  if (Array.isArray(originalError.path)) {\n    return originalError;\n  }\n  return new GraphQLError(originalError.message, (_nodes = originalError.nodes) !== null && _nodes !== void 0 ? _nodes : nodes, originalError.source, originalError.positions, path, originalError);\n}","map":{"version":3,"names":["inspect","GraphQLError","locatedError","rawOriginalError","nodes","path","_nodes","originalError","Error","Array","isArray","message","source","positions"],"sources":["/data/stackhub-web/plugins/myapps/node_modules/graphql/error/locatedError.mjs"],"sourcesContent":["import inspect from \"../jsutils/inspect.mjs\";\nimport { GraphQLError } from \"./GraphQLError.mjs\";\n/**\n * Given an arbitrary value, presumably thrown while attempting to execute a\n * GraphQL operation, produce a new GraphQLError aware of the location in the\n * document responsible for the original Error.\n */\n\nexport function locatedError(rawOriginalError, nodes, path) {\n  var _nodes;\n\n  // Sometimes a non-error is thrown, wrap it as an Error instance to ensure a consistent Error interface.\n  var originalError = rawOriginalError instanceof Error ? rawOriginalError : new Error('Unexpected error value: ' + inspect(rawOriginalError)); // Note: this uses a brand-check to support GraphQL errors originating from other contexts.\n\n  if (Array.isArray(originalError.path)) {\n    return originalError;\n  }\n\n  return new GraphQLError(originalError.message, (_nodes = originalError.nodes) !== null && _nodes !== void 0 ? _nodes : nodes, originalError.source, originalError.positions, path, originalError);\n}\n"],"mappings":"AAAA,OAAOA,OAAO,MAAM,wBAAwB;AAC5C,SAASC,YAAY,QAAQ,oBAAoB;AACjD;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASC,YAAYA,CAACC,gBAAgB,EAAEC,KAAK,EAAEC,IAAI,EAAE;EAC1D,IAAIC,MAAM;;EAEV;EACA,IAAIC,aAAa,GAAGJ,gBAAgB,YAAYK,KAAK,GAAGL,gBAAgB,GAAG,IAAIK,KAAK,CAAC,0BAA0B,GAAGR,OAAO,CAACG,gBAAgB,CAAC,CAAC,CAAC,CAAC;;EAE9I,IAAIM,KAAK,CAACC,OAAO,CAACH,aAAa,CAACF,IAAI,CAAC,EAAE;IACrC,OAAOE,aAAa;EACtB;EAEA,OAAO,IAAIN,YAAY,CAACM,aAAa,CAACI,OAAO,EAAE,CAACL,MAAM,GAAGC,aAAa,CAACH,KAAK,MAAM,IAAI,IAAIE,MAAM,KAAK,KAAK,CAAC,GAAGA,MAAM,GAAGF,KAAK,EAAEG,aAAa,CAACK,MAAM,EAAEL,aAAa,CAACM,SAAS,EAAER,IAAI,EAAEE,aAAa,CAAC;AACnM"},"metadata":{},"sourceType":"module","externalDependencies":[]}
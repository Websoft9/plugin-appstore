{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Card/card';\nimport { CardContext } from './Card';\nexport var CardTitle = function CardTitle(_a) {\n  var _a$children = _a.children,\n    children = _a$children === void 0 ? null : _a$children,\n    _a$className = _a.className,\n    className = _a$className === void 0 ? '' : _a$className,\n    _a$component = _a.component,\n    component = _a$component === void 0 ? 'div' : _a$component,\n    props = __rest(_a, [\"children\", \"className\", \"component\"]);\n  var _React$useContext = React.useContext(CardContext),\n    cardId = _React$useContext.cardId,\n    registerTitleId = _React$useContext.registerTitleId;\n  var Component = component;\n  var titleId = cardId ? \"\".concat(cardId, \"-title\") : '';\n  React.useEffect(function () {\n    registerTitleId(titleId);\n    return function () {\n      return registerTitleId('');\n    };\n  }, [registerTitleId, titleId]);\n  return React.createElement(Component, Object.assign({\n    className: css(styles.cardTitle, className),\n    id: titleId || undefined\n  }, props), children);\n};\nCardTitle.displayName = 'CardTitle';","map":{"version":3,"names":["React","css","styles","CardContext","CardTitle","_a","children","_a$children","_a$className","className","_a$component","component","props","__rest","_React$useContext","useContext","cardId","registerTitleId","Component","titleId","concat","useEffect","createElement","Object","assign","cardTitle","id","undefined","displayName"],"sources":["/data/stackhub-web/plugins/myapps/node_modules/@patternfly/react-core/src/components/Card/CardTitle.tsx"],"sourcesContent":["import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Card/card';\nimport { CardContext } from './Card';\n\nexport interface CardTitleProps extends React.HTMLProps<HTMLDivElement> {\n  /** Content rendered inside the CardTitle */\n  children?: React.ReactNode;\n  /** Additional classes added to the CardTitle */\n  className?: string;\n  /** Sets the base component to render. defaults to div */\n  component?: keyof JSX.IntrinsicElements;\n}\n\nexport const CardTitle: React.FunctionComponent<CardTitleProps> = ({\n  children = null,\n  className = '',\n  component = 'div',\n  ...props\n}: CardTitleProps) => {\n  const { cardId, registerTitleId } = React.useContext(CardContext);\n  const Component = component as any;\n  const titleId = cardId ? `${cardId}-title` : '';\n\n  React.useEffect(() => {\n    registerTitleId(titleId);\n\n    return () => registerTitleId('');\n  }, [registerTitleId, titleId]);\n\n  return (\n    <Component className={css(styles.cardTitle, className)} id={titleId || undefined} {...props}>\n      {children}\n    </Component>\n  );\n};\nCardTitle.displayName = 'CardTitle';\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,GAAG,QAAQ,0BAA0B;AAC9C,OAAOC,MAAM,MAAM,mDAAmD;AACtE,SAASC,WAAW,QAAQ,QAAQ;AAWpC,OAAO,IAAMC,SAAS,GAA4C,SAArDA,SAASA,CAA6CC,EAKlD,EAAI;oBAFFA,EAEF,CAJfC,QAAQ;IAARA,QAAQ,GAAAC,WAAA,cAAG,IAAI,GAAAA,WAAA;IAAAC,YAAA,GAEEH,EAEF,CAHfI,SAAS;IAATA,SAAS,GAAAD,YAAA,cAAG,EAAE,GAAAA,YAAA;IAAAE,YAAA,GACGL,EAEF,CAFfM,SAAS;IAATA,SAAS,GAAAD,YAAA,cAAG,KAAK,GAAAA,YAAA;IACdE,KAAK,GAAAC,MAAA,CAAAR,EAAA,EAJyD,sCAKlE,CADS;EAER,IAAAS,iBAAA,GAAoCd,KAAK,CAACe,UAAU,CAACZ,WAAW,CAAC;IAAzDa,MAAM,GAAAF,iBAAA,CAANE,MAAM;IAAEC,eAAe,GAAAH,iBAAA,CAAfG,eAAe;EAC/B,IAAMC,SAAS,GAAGP,SAAgB;EAClC,IAAMQ,OAAO,GAAGH,MAAM,MAAAI,MAAA,CAAMJ,MAAM,cAAW,EAAE;EAE/ChB,KAAK,CAACqB,SAAS,CAAC,YAAK;IACnBJ,eAAe,CAACE,OAAO,CAAC;IAExB,OAAO;MAAA,OAAMF,eAAe,CAAC,EAAE,CAAC;IAAA;EAClC,CAAC,EAAE,CAACA,eAAe,EAAEE,OAAO,CAAC,CAAC;EAE9B,OACEnB,KAAA,CAAAsB,aAAA,CAACJ,SAAS,EAAAK,MAAA,CAAAC,MAAA;IAACf,SAAS,EAAER,GAAG,CAACC,MAAM,CAACuB,SAAS,EAAEhB,SAAS,CAAC;IAAEiB,EAAE,EAAEP,OAAO,IAAIQ;EAAS,GAAMf,KAAK,GACxFN,QAAQ,CACC;AAEhB,CAAC;AACDF,SAAS,CAACwB,WAAW,GAAG,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}
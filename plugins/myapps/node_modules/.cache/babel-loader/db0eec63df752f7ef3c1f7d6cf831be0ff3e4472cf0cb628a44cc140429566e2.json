{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Popover/popover';\nimport { Title, TitleSizes } from '../Title';\nimport { PopoverHeaderIcon } from './PopoverHeaderIcon';\nimport { PopoverHeaderText } from './PopoverHeaderText';\nexport var PopoverHeader = function PopoverHeader(_a) {\n  var children = _a.children,\n    icon = _a.icon,\n    className = _a.className,\n    _a$titleHeadingLevel = _a.titleHeadingLevel,\n    titleHeadingLevel = _a$titleHeadingLevel === void 0 ? 'h6' : _a$titleHeadingLevel,\n    alertSeverityVariant = _a.alertSeverityVariant,\n    id = _a.id,\n    alertSeverityScreenReaderText = _a.alertSeverityScreenReaderText,\n    props = __rest(_a, [\"children\", \"icon\", \"className\", \"titleHeadingLevel\", \"alertSeverityVariant\", \"id\", \"alertSeverityScreenReaderText\"]);\n  var HeadingLevel = titleHeadingLevel;\n  return icon || alertSeverityVariant ? React.createElement(\"header\", Object.assign({\n    className: css('pf-c-popover__header', className),\n    id: id\n  }, props), React.createElement(HeadingLevel, {\n    className: css(styles.popoverTitle, icon && styles.modifiers.icon)\n  }, icon && React.createElement(PopoverHeaderIcon, null, icon), alertSeverityVariant && alertSeverityScreenReaderText && React.createElement(\"span\", {\n    className: \"pf-u-screen-reader\"\n  }, alertSeverityScreenReaderText), React.createElement(PopoverHeaderText, null, children))) : React.createElement(Title, Object.assign({\n    headingLevel: titleHeadingLevel,\n    size: TitleSizes.md,\n    id: id,\n    className: className\n  }, props), children);\n};\nPopoverHeader.displayName = 'PopoverHeader';","map":{"version":3,"names":["React","css","styles","Title","TitleSizes","PopoverHeaderIcon","PopoverHeaderText","PopoverHeader","_a","children","icon","className","_a$titleHeadingLevel","titleHeadingLevel","alertSeverityVariant","id","alertSeverityScreenReaderText","props","__rest","HeadingLevel","createElement","Object","assign","popoverTitle","modifiers","headingLevel","size","md","displayName"],"sources":["/data/stackhub-web/plugins/myapps/node_modules/@patternfly/react-core/src/components/Popover/PopoverHeader.tsx"],"sourcesContent":["import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Popover/popover';\nimport { Title, TitleSizes } from '../Title';\nimport { PopoverHeaderIcon } from './PopoverHeaderIcon';\nimport { PopoverHeaderText } from './PopoverHeaderText';\n\nexport interface PopoverHeaderProps extends Omit<React.HTMLProps<HTMLHeadingElement>, 'size'> {\n  /** Content of the popover header. */\n  children: React.ReactNode;\n  /** Indicates the header contains an icon. */\n  icon?: React.ReactNode;\n  /** Class to be applied to the header. */\n  className?: string;\n  /** Heading level of the header title */\n  titleHeadingLevel?: 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6';\n  /** Severity variants for an alert popover. This modifies the color of the header to match the severity. */\n  alertSeverityVariant?: 'default' | 'info' | 'warning' | 'success' | 'danger';\n  /** Id of the header */\n  id?: string;\n  /** Text announced by screen reader when alert severity variant is set to indicate severity level */\n  alertSeverityScreenReaderText?: string;\n}\n\nexport const PopoverHeader: React.FunctionComponent<PopoverHeaderProps> = ({\n  children,\n  icon,\n  className,\n  titleHeadingLevel = 'h6',\n  alertSeverityVariant,\n  id,\n  alertSeverityScreenReaderText,\n  ...props\n}: PopoverHeaderProps) => {\n  const HeadingLevel = titleHeadingLevel;\n\n  return icon || alertSeverityVariant ? (\n    <header className={css('pf-c-popover__header', className)} id={id} {...props}>\n      <HeadingLevel className={css(styles.popoverTitle, icon && styles.modifiers.icon)}>\n        {icon && <PopoverHeaderIcon>{icon}</PopoverHeaderIcon>}\n        {alertSeverityVariant && alertSeverityScreenReaderText && (\n          <span className=\"pf-u-screen-reader\">{alertSeverityScreenReaderText}</span>\n        )}\n        <PopoverHeaderText>{children}</PopoverHeaderText>\n      </HeadingLevel>\n    </header>\n  ) : (\n    <Title headingLevel={titleHeadingLevel} size={TitleSizes.md} id={id} className={className} {...props}>\n      {children}\n    </Title>\n  );\n};\nPopoverHeader.displayName = 'PopoverHeader';\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,GAAG,QAAQ,0BAA0B;AAC9C,OAAOC,MAAM,MAAM,yDAAyD;AAC5E,SAASC,KAAK,EAAEC,UAAU,QAAQ,UAAU;AAC5C,SAASC,iBAAiB,QAAQ,qBAAqB;AACvD,SAASC,iBAAiB,QAAQ,qBAAqB;AAmBvD,OAAO,IAAMC,aAAa,GAAgD,SAA7DA,aAAaA,CAAiDC,EAStD,EAAI;MARvBC,QAAQ,GAMqBD,EAEV,CARnBC,QAAQ;IACRC,IAAI,GAKyBF,EAEV,CAPnBE,IAAI;IACJC,SAAS,GAIoBH,EAEV,CANnBG,SAAS;IAAAC,oBAAA,GAIoBJ,EAEV,CALnBK,iBAAiB;IAAjBA,iBAAiB,GAAAD,oBAAA,cAAG,IAAI,GAAAA,oBAAA;IACxBE,oBAAoB,GAESN,EAEV,CAJnBM,oBAAoB;IACpBC,EAAE,GAC2BP,EAEV,CAHnBO,EAAE;IACFC,6BAA6B,GAAAR,EAEV,CAFnBQ,6BAA6B;IAC1BC,KAAK,GAAAC,MAAA,CAAAV,EAAA,EARiE,qHAS1E,CADS;EAER,IAAMW,YAAY,GAAGN,iBAAiB;EAEtC,OAAOH,IAAI,IAAII,oBAAoB,GACjCd,KAAA,CAAAoB,aAAA,WAAAC,MAAA,CAAAC,MAAA;IAAQX,SAAS,EAAEV,GAAG,CAAC,sBAAsB,EAAEU,SAAS,CAAC;IAAEI,EAAE,EAAEA;EAAE,GAAME,KAAK,GAC1EjB,KAAA,CAAAoB,aAAA,CAACD,YAAY;IAACR,SAAS,EAAEV,GAAG,CAACC,MAAM,CAACqB,YAAY,EAAEb,IAAI,IAAIR,MAAM,CAACsB,SAAS,CAACd,IAAI;EAAC,GAC7EA,IAAI,IAAIV,KAAA,CAAAoB,aAAA,CAACf,iBAAiB,QAAEK,IAAI,CAAqB,EACrDI,oBAAoB,IAAIE,6BAA6B,IACpDhB,KAAA,CAAAoB,aAAA;IAAMT,SAAS,EAAC;EAAoB,GAAEK,6BAA6B,CACpE,EACDhB,KAAA,CAAAoB,aAAA,CAACd,iBAAiB,QAAEG,QAAQ,CAAqB,CACpC,CACR,GAETT,KAAA,CAAAoB,aAAA,CAACjB,KAAK,EAAAkB,MAAA,CAAAC,MAAA;IAACG,YAAY,EAAEZ,iBAAiB;IAAEa,IAAI,EAAEtB,UAAU,CAACuB,EAAE;IAAEZ,EAAE,EAAEA,EAAE;IAAEJ,SAAS,EAAEA;EAAS,GAAMM,KAAK,GACjGR,QAAQ,CAEZ;AACH,CAAC;AACDF,aAAa,CAACqB,WAAW,GAAG,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}
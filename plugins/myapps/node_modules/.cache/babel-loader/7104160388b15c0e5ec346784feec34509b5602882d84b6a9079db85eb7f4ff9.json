{"ast":null,"code":"import _classCallCheck from \"/data/stackhub-web/plugins/myapps/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/data/stackhub-web/plugins/myapps/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/data/stackhub-web/plugins/myapps/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/data/stackhub-web/plugins/myapps/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Toolbar/toolbar';\nimport { css } from '@patternfly/react-styles';\nimport { formatBreakpointMods, toCamel } from '../../helpers/util';\nimport { PageContext } from '../Page/PageContext';\nexport var ToolbarGroupVariant;\n(function (ToolbarGroupVariant) {\n  ToolbarGroupVariant[\"filter-group\"] = \"filter-group\";\n  ToolbarGroupVariant[\"icon-button-group\"] = \"icon-button-group\";\n  ToolbarGroupVariant[\"button-group\"] = \"button-group\";\n})(ToolbarGroupVariant || (ToolbarGroupVariant = {}));\nvar ToolbarGroupWithRef = /*#__PURE__*/function (_React$Component) {\n  _inherits(ToolbarGroupWithRef, _React$Component);\n  var _super = _createSuper(ToolbarGroupWithRef);\n  function ToolbarGroupWithRef() {\n    _classCallCheck(this, ToolbarGroupWithRef);\n    return _super.apply(this, arguments);\n  }\n  _createClass(ToolbarGroupWithRef, [{\n    key: \"render\",\n    value: function render() {\n      var _a = this.props,\n        visibility = _a.visibility,\n        visiblity = _a.visiblity,\n        alignment = _a.alignment,\n        spacer = _a.spacer,\n        spaceItems = _a.spaceItems,\n        className = _a.className,\n        variant = _a.variant,\n        children = _a.children,\n        innerRef = _a.innerRef,\n        props = __rest(_a, [\"visibility\", \"visiblity\", \"alignment\", \"spacer\", \"spaceItems\", \"className\", \"variant\", \"children\", \"innerRef\"]);\n      if (visiblity !== undefined) {\n        // eslint-disable-next-line no-console\n        console.warn('The ToolbarGroup visiblity prop has been deprecated. ' + 'Please use the correctly spelled visibility prop instead.');\n      }\n      return React.createElement(PageContext.Consumer, null, function (_ref) {\n        var width = _ref.width,\n          getBreakpoint = _ref.getBreakpoint;\n        return React.createElement(\"div\", Object.assign({\n          className: css(styles.toolbarGroup, variant && styles.modifiers[toCamel(variant)], formatBreakpointMods(visibility || visiblity, styles, '', getBreakpoint(width)), formatBreakpointMods(alignment, styles, '', getBreakpoint(width)), formatBreakpointMods(spacer, styles, '', getBreakpoint(width)), formatBreakpointMods(spaceItems, styles, '', getBreakpoint(width)), className)\n        }, props, {\n          ref: innerRef\n        }), children);\n      });\n    }\n  }]);\n  return ToolbarGroupWithRef;\n}(React.Component);\nexport var ToolbarGroup = React.forwardRef(function (props, ref) {\n  return React.createElement(ToolbarGroupWithRef, Object.assign({}, props, {\n    innerRef: ref\n  }));\n});","map":{"version":3,"names":["React","styles","css","formatBreakpointMods","toCamel","PageContext","ToolbarGroupVariant","ToolbarGroupWithRef","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","render","_a","props","visibility","visiblity","alignment","spacer","spaceItems","className","variant","children","innerRef","__rest","undefined","console","warn","createElement","Consumer","_ref","width","getBreakpoint","Object","assign","toolbarGroup","modifiers","ref","Component","ToolbarGroup","forwardRef"],"sources":["/data/stackhub-web/plugins/myapps/node_modules/@patternfly/react-core/src/components/Toolbar/ToolbarGroup.tsx"],"sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Toolbar/toolbar';\nimport { css } from '@patternfly/react-styles';\nimport { formatBreakpointMods, toCamel } from '../../helpers/util';\nimport { PageContext } from '../Page/PageContext';\n\nexport enum ToolbarGroupVariant {\n  'filter-group' = 'filter-group',\n  'icon-button-group' = 'icon-button-group',\n  'button-group' = 'button-group'\n}\n\nexport interface ToolbarGroupProps extends Omit<React.HTMLProps<HTMLDivElement>, 'ref'> {\n  /** Classes applied to root element of the data toolbar group */\n  className?: string;\n  /** A type modifier which modifies spacing specifically depending on the type of group */\n  variant?: ToolbarGroupVariant | 'filter-group' | 'icon-button-group' | 'button-group';\n  /** Visibility at various breakpoints. */\n  visibility?: {\n    default?: 'hidden' | 'visible';\n    md?: 'hidden' | 'visible';\n    lg?: 'hidden' | 'visible';\n    xl?: 'hidden' | 'visible';\n    '2xl'?: 'hidden' | 'visible';\n  };\n  /** @deprecated prop misspelled */\n  visiblity?: {\n    default?: 'hidden' | 'visible';\n    md?: 'hidden' | 'visible';\n    lg?: 'hidden' | 'visible';\n    xl?: 'hidden' | 'visible';\n    '2xl'?: 'hidden' | 'visible';\n  };\n  /** Alignment at various breakpoints. */\n  alignment?: {\n    default?: 'alignRight' | 'alignLeft';\n    md?: 'alignRight' | 'alignLeft';\n    lg?: 'alignRight' | 'alignLeft';\n    xl?: 'alignRight' | 'alignLeft';\n    '2xl'?: 'alignRight' | 'alignLeft';\n  };\n  /** Spacers at various breakpoints. */\n  spacer?: {\n    default?: 'spacerNone' | 'spacerSm' | 'spacerMd' | 'spacerLg';\n    md?: 'spacerNone' | 'spacerSm' | 'spacerMd' | 'spacerLg';\n    lg?: 'spacerNone' | 'spacerSm' | 'spacerMd' | 'spacerLg';\n    xl?: 'spacerNone' | 'spacerSm' | 'spacerMd' | 'spacerLg';\n    '2xl'?: 'spacerNone' | 'spacerSm' | 'spacerMd' | 'spacerLg';\n  };\n  /** Space items at various breakpoints. */\n  spaceItems?: {\n    default?: 'spaceItemsNone' | 'spaceItemsSm' | 'spaceItemsMd' | 'spaceItemsLg';\n    md?: 'spaceItemsNone' | 'spaceItemsSm' | 'spaceItemsMd' | 'spaceItemsLg';\n    lg?: 'spaceItemsNone' | 'spaceItemsSm' | 'spaceItemsMd' | 'spaceItemsLg';\n    xl?: 'spaceItemsNone' | 'spaceItemsSm' | 'spaceItemsMd' | 'spaceItemsLg';\n    '2xl'?: 'spaceItemsNone' | 'spaceItemsSm' | 'spaceItemsMd' | 'spaceItemsLg';\n  };\n  /** Content to be rendered inside the data toolbar group */\n  children?: React.ReactNode;\n  /** Reference to pass to this group if it has .pf-m-chip-container modifier */\n  innerRef?: React.RefObject<any>;\n}\n\nclass ToolbarGroupWithRef extends React.Component<ToolbarGroupProps> {\n  render() {\n    const {\n      visibility,\n      visiblity,\n      alignment,\n      spacer,\n      spaceItems,\n      className,\n      variant,\n      children,\n      innerRef,\n      ...props\n    } = this.props;\n\n    if (visiblity !== undefined) {\n      // eslint-disable-next-line no-console\n      console.warn(\n        'The ToolbarGroup visiblity prop has been deprecated. ' +\n          'Please use the correctly spelled visibility prop instead.'\n      );\n    }\n\n    return (\n      <PageContext.Consumer>\n        {({ width, getBreakpoint }) => (\n          <div\n            className={css(\n              styles.toolbarGroup,\n              variant && styles.modifiers[toCamel(variant) as 'filterGroup' | 'iconButtonGroup' | 'buttonGroup'],\n              formatBreakpointMods(visibility || visiblity, styles, '', getBreakpoint(width)),\n              formatBreakpointMods(alignment, styles, '', getBreakpoint(width)),\n              formatBreakpointMods(spacer, styles, '', getBreakpoint(width)),\n              formatBreakpointMods(spaceItems, styles, '', getBreakpoint(width)),\n              className\n            )}\n            {...props}\n            ref={innerRef}\n          >\n            {children}\n          </div>\n        )}\n      </PageContext.Consumer>\n    );\n  }\n}\n\nexport const ToolbarGroup = React.forwardRef((props: ToolbarGroupProps, ref: any) => (\n  <ToolbarGroupWithRef {...props} innerRef={ref} />\n));\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import _slicedToArray from \"/data/stackhub-web/plugins/myapps/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { useState } from 'react';\nimport styles from '@patternfly/react-styles/css/components/Label/label';\nimport labelGrpStyles from '@patternfly/react-styles/css/components/LabelGroup/label-group';\nimport { Button } from '../Button';\nimport { Tooltip } from '../Tooltip';\nimport { css } from '@patternfly/react-styles';\nimport TimesIcon from '@patternfly/react-icons/dist/esm/icons/times-icon';\nimport { useIsomorphicLayoutEffect } from '../../helpers';\nvar colorStyles = {\n  blue: styles.modifiers.blue,\n  cyan: styles.modifiers.cyan,\n  green: styles.modifiers.green,\n  orange: styles.modifiers.orange,\n  purple: styles.modifiers.purple,\n  red: styles.modifiers.red,\n  gold: styles.modifiers.gold,\n  grey: ''\n};\nexport var Label = function Label(_a) {\n  var children = _a.children,\n    _a$className = _a.className,\n    className = _a$className === void 0 ? '' : _a$className,\n    _a$color = _a.color,\n    color = _a$color === void 0 ? 'grey' : _a$color,\n    _a$variant = _a.variant,\n    variant = _a$variant === void 0 ? 'filled' : _a$variant,\n    _a$isCompact = _a.isCompact,\n    isCompact = _a$isCompact === void 0 ? false : _a$isCompact,\n    _a$isEditable = _a.isEditable,\n    isEditable = _a$isEditable === void 0 ? false : _a$isEditable,\n    editableProps = _a.editableProps,\n    _a$isTruncated = _a.isTruncated,\n    isTruncated = _a$isTruncated === void 0 ? false : _a$isTruncated,\n    tooltipPosition = _a.tooltipPosition,\n    icon = _a.icon,\n    onClose = _a.onClose,\n    onEditCancel = _a.onEditCancel,\n    onEditComplete = _a.onEditComplete,\n    closeBtn = _a.closeBtn,\n    closeBtnAriaLabel = _a.closeBtnAriaLabel,\n    closeBtnProps = _a.closeBtnProps,\n    href = _a.href,\n    isOverflowLabel = _a.isOverflowLabel,\n    render = _a.render,\n    props = __rest(_a, [\"children\", \"className\", \"color\", \"variant\", \"isCompact\", \"isEditable\", \"editableProps\", \"isTruncated\", \"tooltipPosition\", \"icon\", \"onClose\", \"onEditCancel\", \"onEditComplete\", \"closeBtn\", \"closeBtnAriaLabel\", \"closeBtnProps\", \"href\", \"isOverflowLabel\", \"render\"]);\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isEditableActive = _useState2[0],\n    setIsEditableActive = _useState2[1];\n  var _useState3 = useState(children),\n    _useState4 = _slicedToArray(_useState3, 2),\n    currValue = _useState4[0],\n    setCurrValue = _useState4[1];\n  var editableButtonRef = React.useRef();\n  var editableInputRef = React.useRef();\n  React.useEffect(function () {\n    document.addEventListener('mousedown', onDocMouseDown);\n    document.addEventListener('keydown', onKeyDown);\n    return function () {\n      document.removeEventListener('mousedown', onDocMouseDown);\n      document.removeEventListener('keydown', onKeyDown);\n    };\n  });\n  var onDocMouseDown = function onDocMouseDown(event) {\n    if (isEditableActive && editableInputRef && editableInputRef.current && !editableInputRef.current.contains(event.target)) {\n      if (editableInputRef.current.value) {\n        onEditComplete && onEditComplete(event, editableInputRef.current.value);\n      }\n      setIsEditableActive(false);\n    }\n  };\n  var onKeyDown = function onKeyDown(event) {\n    var _a, _b;\n    var key = event.key;\n    if (!isEditableActive && (!editableButtonRef || !editableButtonRef.current || !editableButtonRef.current.contains(event.target)) || isEditableActive && (!editableInputRef || !editableInputRef.current || !editableInputRef.current.contains(event.target))) {\n      return;\n    }\n    if (isEditableActive && (key === 'Enter' || key === 'Tab')) {\n      event.preventDefault();\n      event.stopImmediatePropagation();\n      if (editableInputRef.current.value) {\n        onEditComplete && onEditComplete(event, editableInputRef.current.value);\n      }\n      setIsEditableActive(false);\n      (_a = editableButtonRef === null || editableButtonRef === void 0 ? void 0 : editableButtonRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    if (isEditableActive && key === 'Escape') {\n      event.preventDefault();\n      event.stopImmediatePropagation();\n      // Reset div text to initial children prop - pre-edit\n      if (editableInputRef.current.value) {\n        editableInputRef.current.value = children;\n        onEditCancel && onEditCancel(event, children);\n      }\n      setIsEditableActive(false);\n      (_b = editableButtonRef === null || editableButtonRef === void 0 ? void 0 : editableButtonRef.current) === null || _b === void 0 ? void 0 : _b.focus();\n    }\n    if (!isEditableActive && key === 'Enter') {\n      event.preventDefault();\n      event.stopImmediatePropagation();\n      setIsEditableActive(true);\n      // Set cursor position to end of text\n      var el = event.target;\n      var range = document.createRange();\n      var sel = window.getSelection();\n      range.selectNodeContents(el);\n      range.collapse(false);\n      sel.removeAllRanges();\n      sel.addRange(range);\n    }\n  };\n  var LabelComponent = isOverflowLabel ? 'button' : 'span';\n  var button = closeBtn ? closeBtn : React.createElement(Button, Object.assign({\n    type: \"button\",\n    variant: \"plain\",\n    onClick: onClose,\n    \"aria-label\": closeBtnAriaLabel || \"Close \".concat(children)\n  }, closeBtnProps), React.createElement(TimesIcon, null));\n  var textRef = React.createRef();\n  // ref to apply tooltip when rendered is used\n  var componentRef = React.useRef();\n  var _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    isTooltipVisible = _React$useState2[0],\n    setIsTooltipVisible = _React$useState2[1];\n  useIsomorphicLayoutEffect(function () {\n    var currTextRef = isEditable ? editableButtonRef : textRef;\n    if (!isEditableActive) {\n      setIsTooltipVisible(currTextRef.current && currTextRef.current.offsetWidth < currTextRef.current.scrollWidth);\n    }\n  }, [isEditableActive]);\n  var content = React.createElement(React.Fragment, null, icon && React.createElement(\"span\", {\n    className: css(styles.labelIcon)\n  }, icon), isTruncated && React.createElement(\"span\", {\n    ref: textRef,\n    className: css(styles.labelText)\n  }, children), !isTruncated && children);\n  React.useEffect(function () {\n    if (isEditableActive && editableInputRef) {\n      editableInputRef.current && editableInputRef.current.focus();\n    }\n  }, [editableInputRef, isEditableActive]);\n  var updateVal = function updateVal() {\n    setCurrValue(editableInputRef.current.value);\n  };\n  var labelComponentChild = React.createElement(\"span\", {\n    className: css(styles.labelContent)\n  }, content);\n  if (href) {\n    labelComponentChild = React.createElement(\"a\", {\n      className: css(styles.labelContent),\n      href: href\n    }, content);\n  } else if (isEditable) {\n    labelComponentChild = React.createElement(\"button\", Object.assign({\n      ref: editableButtonRef,\n      className: css(styles.labelContent),\n      onClick: function onClick(e) {\n        setIsEditableActive(true);\n        e.stopPropagation();\n      }\n    }, editableProps), content);\n  }\n  if (render) {\n    labelComponentChild = React.createElement(React.Fragment, null, isTooltipVisible && React.createElement(Tooltip, {\n      reference: componentRef,\n      content: children,\n      position: tooltipPosition\n    }), render({\n      className: styles.labelContent,\n      content: content,\n      componentRef: componentRef\n    }));\n  } else if (isTooltipVisible) {\n    labelComponentChild = React.createElement(Tooltip, {\n      content: children,\n      position: tooltipPosition\n    }, labelComponentChild);\n  }\n  return React.createElement(LabelComponent, Object.assign({}, props, {\n    className: css(styles.label, colorStyles[color], variant === 'outline' && styles.modifiers.outline, isOverflowLabel && styles.modifiers.overflow, isCompact && styles.modifiers.compact, isEditable && labelGrpStyles.modifiers.editable, isEditableActive && styles.modifiers.editableActive, className)\n  }), !isEditableActive && labelComponentChild, !isEditableActive && onClose && button, isEditableActive && React.createElement(\"input\", Object.assign({\n    className: css(styles.labelContent),\n    type: \"text\",\n    id: \"editable-input\",\n    ref: editableInputRef,\n    value: currValue,\n    onChange: updateVal\n  }, editableProps)));\n};\nLabel.displayName = 'Label';","map":{"version":3,"names":["React","useState","styles","labelGrpStyles","Button","Tooltip","css","TimesIcon","useIsomorphicLayoutEffect","colorStyles","blue","modifiers","cyan","green","orange","purple","red","gold","grey","Label","_a","children","_a$className","className","_a$color","color","_a$variant","variant","_a$isCompact","isCompact","_a$isEditable","isEditable","editableProps","_a$isTruncated","isTruncated","tooltipPosition","icon","onClose","onEditCancel","onEditComplete","closeBtn","closeBtnAriaLabel","closeBtnProps","href","isOverflowLabel","render","props","__rest","_useState","_useState2","_slicedToArray","isEditableActive","setIsEditableActive","_useState3","_useState4","currValue","setCurrValue","editableButtonRef","useRef","editableInputRef","useEffect","document","addEventListener","onDocMouseDown","onKeyDown","removeEventListener","event","current","contains","target","value","key","preventDefault","stopImmediatePropagation","focus","_b","el","range","createRange","sel","window","getSelection","selectNodeContents","collapse","removeAllRanges","addRange","LabelComponent","button","createElement","Object","assign","type","onClick","concat","textRef","createRef","componentRef","_React$useState","_React$useState2","isTooltipVisible","setIsTooltipVisible","currTextRef","offsetWidth","scrollWidth","content","Fragment","labelIcon","ref","labelText","updateVal","labelComponentChild","labelContent","e","stopPropagation","reference","position","label","outline","overflow","compact","editable","editableActive","id","onChange","displayName"],"sources":["/data/stackhub-web/plugins/myapps/node_modules/@patternfly/react-core/src/components/Label/Label.tsx"],"sourcesContent":["import * as React from 'react';\nimport { useState } from 'react';\nimport styles from '@patternfly/react-styles/css/components/Label/label';\nimport labelGrpStyles from '@patternfly/react-styles/css/components/LabelGroup/label-group';\nimport { Button } from '../Button';\nimport { Tooltip, TooltipPosition } from '../Tooltip';\nimport { css } from '@patternfly/react-styles';\nimport TimesIcon from '@patternfly/react-icons/dist/esm/icons/times-icon';\nimport { useIsomorphicLayoutEffect } from '../../helpers';\n\nexport interface LabelProps extends React.HTMLProps<HTMLSpanElement> {\n  /** Content rendered inside the label. */\n  children?: React.ReactNode;\n  /** Additional classes added to the label. */\n  className?: string;\n  /** Color of the label. */\n  color?: 'blue' | 'cyan' | 'green' | 'orange' | 'purple' | 'red' | 'grey' | 'gold';\n  /** Variant of the label. */\n  variant?: 'outline' | 'filled';\n  /** Flag indicating the label is compact. */\n  isCompact?: boolean;\n  /** @beta Flag indicating the label is editable. */\n  isEditable?: boolean;\n  /** @beta Additional props passed to the editable label text div. Optionally passing onInput and onBlur callbacks will allow finer custom text input control. */\n  editableProps?: any;\n  /** @beta Callback when an editable label completes an edit. */\n  onEditComplete?: (event: MouseEvent | KeyboardEvent, newText: string) => void;\n  /** @beta Callback when an editable label cancels an edit. */\n  onEditCancel?: (event: KeyboardEvent, previousText: string) => void;\n  /** Flag indicating the label text should be truncated. */\n  isTruncated?: boolean;\n  /** Position of the tooltip which is displayed if text is truncated */\n  tooltipPosition?:\n    | TooltipPosition\n    | 'auto'\n    | 'top'\n    | 'bottom'\n    | 'left'\n    | 'right'\n    | 'top-start'\n    | 'top-end'\n    | 'bottom-start'\n    | 'bottom-end'\n    | 'left-start'\n    | 'left-end'\n    | 'right-start'\n    | 'right-end';\n  /** Icon added to the left of the label text. */\n  icon?: React.ReactNode;\n  /** Close click callback for removable labels. If present, label will have a close button. */\n  onClose?: (event: React.MouseEvent) => void;\n  /** Node for custom close button. */\n  closeBtn?: React.ReactNode;\n  /** Aria label for close button */\n  closeBtnAriaLabel?: string;\n  /** Additional properties for the default close button. */\n  closeBtnProps?: any;\n  /** Href for a label that is a link. If present, the label will change to an anchor element. */\n  href?: string;\n  /** Flag indicating if the label is an overflow label */\n  isOverflowLabel?: boolean;\n  /** Forwards the label content and className to rendered function.  Use this prop for react router support.*/\n  render?: ({\n    className,\n    content,\n    componentRef\n  }: {\n    className: string;\n    content: React.ReactNode;\n    componentRef: any;\n  }) => React.ReactNode;\n}\n\nconst colorStyles = {\n  blue: styles.modifiers.blue,\n  cyan: styles.modifiers.cyan,\n  green: styles.modifiers.green,\n  orange: styles.modifiers.orange,\n  purple: styles.modifiers.purple,\n  red: styles.modifiers.red,\n  gold: styles.modifiers.gold,\n  grey: ''\n};\n\nexport const Label: React.FunctionComponent<LabelProps> = ({\n  children,\n  className = '',\n  color = 'grey',\n  variant = 'filled',\n  isCompact = false,\n  isEditable = false,\n  editableProps,\n  isTruncated = false,\n  tooltipPosition,\n  icon,\n  onClose,\n  onEditCancel,\n  onEditComplete,\n  closeBtn,\n  closeBtnAriaLabel,\n  closeBtnProps,\n  href,\n  isOverflowLabel,\n  render,\n  ...props\n}: LabelProps) => {\n  const [isEditableActive, setIsEditableActive] = useState<boolean>(false);\n  const [currValue, setCurrValue] = useState(children);\n  const editableButtonRef = React.useRef<HTMLButtonElement>();\n  const editableInputRef = React.useRef<HTMLInputElement>();\n\n  React.useEffect(() => {\n    document.addEventListener('mousedown', onDocMouseDown);\n    document.addEventListener('keydown', onKeyDown);\n    return () => {\n      document.removeEventListener('mousedown', onDocMouseDown);\n      document.removeEventListener('keydown', onKeyDown);\n    };\n  });\n\n  const onDocMouseDown = (event: MouseEvent) => {\n    if (\n      isEditableActive &&\n      editableInputRef &&\n      editableInputRef.current &&\n      !editableInputRef.current.contains(event.target as Node)\n    ) {\n      if (editableInputRef.current.value) {\n        onEditComplete && onEditComplete(event, editableInputRef.current.value);\n      }\n      setIsEditableActive(false);\n    }\n  };\n\n  const onKeyDown = (event: KeyboardEvent) => {\n    const key = event.key;\n    if (\n      (!isEditableActive &&\n        (!editableButtonRef ||\n          !editableButtonRef.current ||\n          !editableButtonRef.current.contains(event.target as Node))) ||\n      (isEditableActive &&\n        (!editableInputRef || !editableInputRef.current || !editableInputRef.current.contains(event.target as Node)))\n    ) {\n      return;\n    }\n    if (isEditableActive && (key === 'Enter' || key === 'Tab')) {\n      event.preventDefault();\n      event.stopImmediatePropagation();\n      if (editableInputRef.current.value) {\n        onEditComplete && onEditComplete(event, editableInputRef.current.value);\n      }\n      setIsEditableActive(false);\n      editableButtonRef?.current?.focus();\n    }\n    if (isEditableActive && key === 'Escape') {\n      event.preventDefault();\n      event.stopImmediatePropagation();\n      // Reset div text to initial children prop - pre-edit\n      if (editableInputRef.current.value) {\n        editableInputRef.current.value = children as string;\n        onEditCancel && onEditCancel(event, children as string);\n      }\n      setIsEditableActive(false);\n      editableButtonRef?.current?.focus();\n    }\n    if (!isEditableActive && key === 'Enter') {\n      event.preventDefault();\n      event.stopImmediatePropagation();\n      setIsEditableActive(true);\n\n      // Set cursor position to end of text\n      const el = event.target as HTMLElement;\n      const range = document.createRange();\n      const sel = window.getSelection();\n      range.selectNodeContents(el);\n      range.collapse(false);\n      sel.removeAllRanges();\n      sel.addRange(range);\n    }\n  };\n\n  const LabelComponent = (isOverflowLabel ? 'button' : 'span') as any;\n\n  const button = closeBtn ? (\n    closeBtn\n  ) : (\n    <Button\n      type=\"button\"\n      variant=\"plain\"\n      onClick={onClose}\n      aria-label={closeBtnAriaLabel || `Close ${children}`}\n      {...closeBtnProps}\n    >\n      <TimesIcon />\n    </Button>\n  );\n  const textRef = React.createRef<any>();\n  // ref to apply tooltip when rendered is used\n  const componentRef = React.useRef();\n  const [isTooltipVisible, setIsTooltipVisible] = React.useState(false);\n  useIsomorphicLayoutEffect(() => {\n    const currTextRef = isEditable ? editableButtonRef : textRef;\n    if (!isEditableActive) {\n      setIsTooltipVisible(currTextRef.current && currTextRef.current.offsetWidth < currTextRef.current.scrollWidth);\n    }\n  }, [isEditableActive]);\n  const content = (\n    <React.Fragment>\n      {icon && <span className={css(styles.labelIcon)}>{icon}</span>}\n      {isTruncated && (\n        <span ref={textRef} className={css(styles.labelText)}>\n          {children}\n        </span>\n      )}\n      {!isTruncated && children}\n    </React.Fragment>\n  );\n\n  React.useEffect(() => {\n    if (isEditableActive && editableInputRef) {\n      editableInputRef.current && editableInputRef.current.focus();\n    }\n  }, [editableInputRef, isEditableActive]);\n\n  const updateVal = () => {\n    setCurrValue(editableInputRef.current.value);\n  };\n\n  let labelComponentChild = <span className={css(styles.labelContent)}>{content}</span>;\n\n  if (href) {\n    labelComponentChild = (\n      <a className={css(styles.labelContent)} href={href}>\n        {content}\n      </a>\n    );\n  } else if (isEditable) {\n    labelComponentChild = (\n      <button\n        ref={editableButtonRef}\n        className={css(styles.labelContent)}\n        onClick={(e: React.MouseEvent) => {\n          setIsEditableActive(true);\n          e.stopPropagation();\n        }}\n        {...editableProps}\n      >\n        {content}\n      </button>\n    );\n  }\n\n  if (render) {\n    labelComponentChild = (\n      <React.Fragment>\n        {isTooltipVisible && <Tooltip reference={componentRef} content={children} position={tooltipPosition} />}\n        {render({\n          className: styles.labelContent,\n          content,\n          componentRef\n        })}\n      </React.Fragment>\n    );\n  } else if (isTooltipVisible) {\n    labelComponentChild = (\n      <Tooltip content={children} position={tooltipPosition}>\n        {labelComponentChild}\n      </Tooltip>\n    );\n  }\n\n  return (\n    <LabelComponent\n      {...props}\n      className={css(\n        styles.label,\n        colorStyles[color],\n        variant === 'outline' && styles.modifiers.outline,\n        isOverflowLabel && styles.modifiers.overflow,\n        isCompact && styles.modifiers.compact,\n        isEditable && labelGrpStyles.modifiers.editable,\n        isEditableActive && styles.modifiers.editableActive,\n        className\n      )}\n    >\n      {!isEditableActive && labelComponentChild}\n      {!isEditableActive && onClose && button}\n      {isEditableActive && (\n        <input\n          className={css(styles.labelContent)}\n          type=\"text\"\n          id=\"editable-input\"\n          ref={editableInputRef}\n          value={currValue}\n          onChange={updateVal}\n          {...editableProps}\n        />\n      )}\n    </LabelComponent>\n  );\n};\nLabel.displayName = 'Label';\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { canUseAsyncIteratorSymbol } from \"../../../utilities/index.js\";\nexport default function nodeStreamIterator(stream) {\n  var _cleanup = null;\n  var error = null;\n  var done = false;\n  var data = [];\n  var waiting = [];\n  function onData(chunk) {\n    if (error) return;\n    if (waiting.length) {\n      var shiftedArr = waiting.shift();\n      if (Array.isArray(shiftedArr) && shiftedArr[0]) {\n        return shiftedArr[0]({\n          value: chunk,\n          done: false\n        });\n      }\n    }\n    data.push(chunk);\n  }\n  function onError(err) {\n    error = err;\n    var all = waiting.slice();\n    all.forEach(function (pair) {\n      pair[1](err);\n    });\n    !_cleanup || _cleanup();\n  }\n  function onEnd() {\n    done = true;\n    var all = waiting.slice();\n    all.forEach(function (pair) {\n      pair[0]({\n        value: undefined,\n        done: true\n      });\n    });\n    !_cleanup || _cleanup();\n  }\n  _cleanup = function cleanup() {\n    _cleanup = null;\n    stream.removeListener(\"data\", onData);\n    stream.removeListener(\"error\", onError);\n    stream.removeListener(\"end\", onEnd);\n    stream.removeListener(\"finish\", onEnd);\n    stream.removeListener(\"close\", onEnd);\n  };\n  stream.on(\"data\", onData);\n  stream.on(\"error\", onError);\n  stream.on(\"end\", onEnd);\n  stream.on(\"finish\", onEnd);\n  stream.on(\"close\", onEnd);\n  function getNext() {\n    return new Promise(function (resolve, reject) {\n      if (error) return reject(error);\n      if (data.length) return resolve({\n        value: data.shift(),\n        done: false\n      });\n      if (done) return resolve({\n        value: undefined,\n        done: true\n      });\n      waiting.push([resolve, reject]);\n    });\n  }\n  var iterator = {\n    next: function next() {\n      return getNext();\n    }\n  };\n  if (canUseAsyncIteratorSymbol) {\n    iterator[Symbol.asyncIterator] = function () {\n      return this;\n    };\n  }\n  return iterator;\n}","map":{"version":3,"names":["canUseAsyncIteratorSymbol","nodeStreamIterator","stream","cleanup","error","done","data","waiting","onData","chunk","length","shiftedArr","shift","Array","isArray","value","push","onError","err","all","slice","forEach","pair","onEnd","undefined","removeListener","on","getNext","Promise","resolve","reject","iterator","next","Symbol","asyncIterator"],"sources":["/data/stackhub-web/plugins/myapps/node_modules/@apollo/src/link/http/iterators/nodeStream.ts"],"sourcesContent":["/**\n * Original source:\n * https://github.com/kmalakoff/response-iterator/blob/master/src/iterators/nodeStream.ts\n */\n\nimport { Readable as NodeReadableStream } from \"stream\";\nimport { canUseAsyncIteratorSymbol } from \"../../../utilities\";\n\ninterface NodeStreamIterator<T> {\n  next(): Promise<IteratorResult<T, boolean | undefined>>;\n  [Symbol.asyncIterator]?(): AsyncIterator<T>;\n}\n\nexport default function nodeStreamIterator<T>(\n  stream: NodeReadableStream\n): AsyncIterableIterator<T> {\n  let cleanup: (() => void) | null = null;\n  let error: Error | null = null;\n  let done = false;\n  const data: unknown[] = [];\n\n  const waiting: [\n    (\n      value:\n        | IteratorResult<T, boolean | undefined>\n        | PromiseLike<IteratorResult<T, boolean | undefined>>\n    ) => void,\n    (reason?: any) => void\n  ][] = [];\n\n  function onData(chunk: any) {\n    if (error) return;\n    if (waiting.length) {\n      const shiftedArr = waiting.shift();\n      if (Array.isArray(shiftedArr) && shiftedArr[0]) {\n        return shiftedArr[0]({ value: chunk, done: false });\n      }\n    }\n    data.push(chunk);\n  }\n  function onError(err: Error) {\n    error = err;\n    const all = waiting.slice();\n    all.forEach(function (pair) {\n      pair[1](err);\n    });\n    !cleanup || cleanup();\n  }\n  function onEnd() {\n    done = true;\n    const all = waiting.slice();\n    all.forEach(function (pair) {\n      pair[0]({ value: undefined, done: true });\n    });\n    !cleanup || cleanup();\n  }\n\n  cleanup = function () {\n    cleanup = null;\n    stream.removeListener(\"data\", onData);\n    stream.removeListener(\"error\", onError);\n    stream.removeListener(\"end\", onEnd);\n    stream.removeListener(\"finish\", onEnd);\n    stream.removeListener(\"close\", onEnd);\n  };\n  stream.on(\"data\", onData);\n  stream.on(\"error\", onError);\n  stream.on(\"end\", onEnd);\n  stream.on(\"finish\", onEnd);\n  stream.on(\"close\", onEnd);\n\n  function getNext(): Promise<IteratorResult<T, boolean | undefined>> {\n    return new Promise(function (resolve, reject) {\n      if (error) return reject(error);\n      if (data.length) return resolve({ value: data.shift() as T, done: false });\n      if (done) return resolve({ value: undefined, done: true });\n      waiting.push([resolve, reject]);\n    });\n  }\n\n  const iterator: NodeStreamIterator<T> = {\n    next(): Promise<IteratorResult<T, boolean | undefined>> {\n      return getNext();\n    },\n  };\n\n  if (canUseAsyncIteratorSymbol) {\n    iterator[Symbol.asyncIterator] = function (): AsyncIterator<T> {\n      return this;\n    };\n  }\n\n  return iterator as AsyncIterableIterator<T>;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import _createForOfIteratorHelper from \"/data/stackhub-web/plugins/myapps/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Wizard/wizard';\nimport AngleRightIcon from '@patternfly/react-icons/dist/esm/icons/angle-right-icon';\nimport CaretDownIcon from '@patternfly/react-icons/dist/esm/icons/caret-down-icon';\nimport { WizardBody } from './WizardBody';\nexport var WizardToggle = function WizardToggle(_ref) {\n  var isNavOpen = _ref.isNavOpen,\n    onNavToggle = _ref.onNavToggle,\n    nav = _ref.nav,\n    steps = _ref.steps,\n    activeStep = _ref.activeStep,\n    children = _ref.children,\n    _ref$hasNoBodyPadding = _ref.hasNoBodyPadding,\n    hasNoBodyPadding = _ref$hasNoBodyPadding === void 0 ? false : _ref$hasNoBodyPadding,\n    _ref$ariaLabel = _ref['aria-label'],\n    ariaLabel = _ref$ariaLabel === void 0 ? 'Wizard Toggle' : _ref$ariaLabel,\n    _ref$mainAriaLabelled = _ref.mainAriaLabelledBy,\n    mainAriaLabelledBy = _ref$mainAriaLabelled === void 0 ? null : _ref$mainAriaLabelled,\n    _ref$mainAriaLabel = _ref.mainAriaLabel,\n    mainAriaLabel = _ref$mainAriaLabel === void 0 ? null : _ref$mainAriaLabel,\n    _ref$isInPage = _ref.isInPage,\n    isInPage = _ref$isInPage === void 0 ? true : _ref$isInPage,\n    hasDrawer = _ref.hasDrawer,\n    isDrawerExpanded = _ref.isDrawerExpanded,\n    onExpandDrawer = _ref.onExpandDrawer;\n  var activeStepIndex;\n  var activeStepName;\n  var activeStepSubName;\n  for (var i = 0; i < steps.length; i++) {\n    if (activeStep.id && steps[i].id === activeStep.id || steps[i].name === activeStep.name) {\n      activeStepIndex = i + 1;\n      activeStepName = steps[i].name;\n      break;\n    } else if (steps[i].steps) {\n      var _iterator = _createForOfIteratorHelper(steps[i].steps),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var step = _step.value;\n          if (activeStep.id && step.id === activeStep.id || step.name === activeStep.name) {\n            activeStepIndex = i + 1;\n            activeStepName = steps[i].name;\n            activeStepSubName = step.name;\n            break;\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n  }\n  return React.createElement(React.Fragment, null, React.createElement(\"button\", {\n    onClick: function onClick() {\n      return onNavToggle(!isNavOpen);\n    },\n    className: css(styles.wizardToggle, isNavOpen && 'pf-m-expanded'),\n    \"aria-label\": ariaLabel,\n    \"aria-expanded\": isNavOpen\n  }, React.createElement(\"span\", {\n    className: css(styles.wizardToggleList)\n  }, React.createElement(\"span\", {\n    className: css(styles.wizardToggleListItem)\n  }, React.createElement(\"span\", {\n    className: css(styles.wizardToggleNum)\n  }, activeStepIndex), \" \", activeStepName, activeStepSubName && React.createElement(AngleRightIcon, {\n    className: css(styles.wizardToggleSeparator),\n    \"aria-hidden\": \"true\"\n  })), activeStepSubName && React.createElement(\"span\", {\n    className: css(styles.wizardToggleListItem)\n  }, activeStepSubName)), React.createElement(\"span\", {\n    className: css(styles.wizardToggleIcon)\n  }, React.createElement(CaretDownIcon, {\n    \"aria-hidden\": \"true\"\n  }))), React.createElement(\"div\", {\n    className: css(styles.wizardOuterWrap)\n  }, React.createElement(\"div\", {\n    className: css(styles.wizardInnerWrap)\n  }, nav(isNavOpen), React.createElement(WizardBody, {\n    mainComponent: isInPage ? 'div' : 'main',\n    \"aria-label\": mainAriaLabel,\n    \"aria-labelledby\": mainAriaLabelledBy,\n    hasNoBodyPadding: hasNoBodyPadding,\n    activeStep: activeStep,\n    isDrawerExpanded: isDrawerExpanded,\n    onExpandDrawer: onExpandDrawer,\n    hasDrawer: hasDrawer\n  }, hasDrawer && !isDrawerExpanded && activeStep.drawerToggleButton, activeStep.component)), children));\n};\nWizardToggle.displayName = 'WizardToggle';","map":{"version":3,"names":["React","css","styles","AngleRightIcon","CaretDownIcon","WizardBody","WizardToggle","_ref","isNavOpen","onNavToggle","nav","steps","activeStep","children","_ref$hasNoBodyPadding","hasNoBodyPadding","_ref$ariaLabel","ariaLabel","_ref$mainAriaLabelled","mainAriaLabelledBy","_ref$mainAriaLabel","mainAriaLabel","_ref$isInPage","isInPage","hasDrawer","isDrawerExpanded","onExpandDrawer","activeStepIndex","activeStepName","activeStepSubName","i","length","id","name","_iterator","_createForOfIteratorHelper","_step","s","n","done","step","value","err","e","f","createElement","Fragment","onClick","className","wizardToggle","wizardToggleList","wizardToggleListItem","wizardToggleNum","wizardToggleSeparator","wizardToggleIcon","wizardOuterWrap","wizardInnerWrap","mainComponent","drawerToggleButton","component","displayName"],"sources":["/data/stackhub-web/plugins/myapps/node_modules/@patternfly/react-core/src/components/Wizard/WizardToggle.tsx"],"sourcesContent":["import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Wizard/wizard';\nimport AngleRightIcon from '@patternfly/react-icons/dist/esm/icons/angle-right-icon';\nimport CaretDownIcon from '@patternfly/react-icons/dist/esm/icons/caret-down-icon';\nimport { WizardStep } from './Wizard';\nimport { WizardBody } from './WizardBody';\n\nexport interface WizardToggleProps {\n  /** Function that returns the WizardNav component */\n  nav: (isWizardNavOpen: boolean) => React.ReactElement;\n  /** The wizard steps */\n  steps: WizardStep[];\n  /** The currently active WizardStep */\n  activeStep: WizardStep;\n  /** The WizardFooter */\n  children?: React.ReactNode;\n  /** Set to true to remove body padding */\n  hasNoBodyPadding: boolean;\n  /** If the nav is open */\n  isNavOpen: boolean;\n  /** Callback function for when the nav is toggled */\n  onNavToggle: (isOpen: boolean) => void;\n  /** The button's aria-label */\n  'aria-label'?: string;\n  /** Sets aria-labelledby on the main element */\n  mainAriaLabelledBy?: string;\n  /** The main's aria-label */\n  mainAriaLabel?: string;\n  /** If the wizard is in-page */\n  isInPage?: boolean;\n  /** Flag indicating the wizard has a drawer for at least one of the wizard steps */\n  hasDrawer?: boolean;\n  /** Flag indicating the wizard drawer is expanded */\n  isDrawerExpanded?: boolean;\n  /** Callback function for when the drawer is toggled */\n  onExpandDrawer?: () => void;\n}\n\nexport const WizardToggle: React.FunctionComponent<WizardToggleProps> = ({\n  isNavOpen,\n  onNavToggle,\n  nav,\n  steps,\n  activeStep,\n  children,\n  hasNoBodyPadding = false,\n  'aria-label': ariaLabel = 'Wizard Toggle',\n  mainAriaLabelledBy = null,\n  mainAriaLabel = null,\n  isInPage = true,\n  hasDrawer,\n  isDrawerExpanded,\n  onExpandDrawer\n}: WizardToggleProps) => {\n  let activeStepIndex;\n  let activeStepName;\n  let activeStepSubName;\n  for (let i = 0; i < steps.length; i++) {\n    if ((activeStep.id && steps[i].id === activeStep.id) || steps[i].name === activeStep.name) {\n      activeStepIndex = i + 1;\n      activeStepName = steps[i].name;\n      break;\n    } else if (steps[i].steps) {\n      for (const step of steps[i].steps) {\n        if ((activeStep.id && step.id === activeStep.id) || step.name === activeStep.name) {\n          activeStepIndex = i + 1;\n          activeStepName = steps[i].name;\n          activeStepSubName = step.name;\n          break;\n        }\n      }\n    }\n  }\n\n  return (\n    <React.Fragment>\n      <button\n        onClick={() => onNavToggle(!isNavOpen)}\n        className={css(styles.wizardToggle, isNavOpen && 'pf-m-expanded')}\n        aria-label={ariaLabel}\n        aria-expanded={isNavOpen}\n      >\n        <span className={css(styles.wizardToggleList)}>\n          <span className={css(styles.wizardToggleListItem)}>\n            <span className={css(styles.wizardToggleNum)}>{activeStepIndex}</span> {activeStepName}\n            {activeStepSubName && <AngleRightIcon className={css(styles.wizardToggleSeparator)} aria-hidden=\"true\" />}\n          </span>\n          {activeStepSubName && <span className={css(styles.wizardToggleListItem)}>{activeStepSubName}</span>}\n        </span>\n        <span className={css(styles.wizardToggleIcon)}>\n          <CaretDownIcon aria-hidden=\"true\" />\n        </span>\n      </button>\n      <div className={css(styles.wizardOuterWrap)}>\n        <div className={css(styles.wizardInnerWrap)}>\n          {nav(isNavOpen)}\n          <WizardBody\n            mainComponent={isInPage ? 'div' : 'main'}\n            aria-label={mainAriaLabel}\n            aria-labelledby={mainAriaLabelledBy}\n            hasNoBodyPadding={hasNoBodyPadding}\n            activeStep={activeStep}\n            isDrawerExpanded={isDrawerExpanded}\n            onExpandDrawer={onExpandDrawer}\n            hasDrawer={hasDrawer}\n          >\n            {hasDrawer && !isDrawerExpanded && activeStep.drawerToggleButton}\n            {activeStep.component}\n          </WizardBody>\n        </div>\n        {children}\n      </div>\n    </React.Fragment>\n  );\n};\nWizardToggle.displayName = 'WizardToggle';\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
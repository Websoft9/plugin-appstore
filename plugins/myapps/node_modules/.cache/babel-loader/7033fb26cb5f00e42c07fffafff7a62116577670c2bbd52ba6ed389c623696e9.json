{"ast":null,"code":"import _slicedToArray from \"/data/stackhub-web/plugins/myapps/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { useState } from 'react';\nimport { InternalFormFieldGroup } from './InternalFormFieldGroup';\nexport var FormFieldGroupExpandable = function FormFieldGroupExpandable(_a) {\n  var children = _a.children,\n    className = _a.className,\n    header = _a.header,\n    _a$isExpanded = _a.isExpanded,\n    isExpanded = _a$isExpanded === void 0 ? false : _a$isExpanded,\n    toggleAriaLabel = _a.toggleAriaLabel,\n    props = __rest(_a, [\"children\", \"className\", \"header\", \"isExpanded\", \"toggleAriaLabel\"]);\n  var _useState = useState(isExpanded),\n    _useState2 = _slicedToArray(_useState, 2),\n    localIsExpanded = _useState2[0],\n    setIsExpanded = _useState2[1];\n  return React.createElement(InternalFormFieldGroup, Object.assign({\n    className: className,\n    header: header,\n    isExpandable: true,\n    isExpanded: localIsExpanded,\n    toggleAriaLabel: toggleAriaLabel,\n    onToggle: function onToggle() {\n      return setIsExpanded(!localIsExpanded);\n    }\n  }, props), children);\n};\nFormFieldGroupExpandable.displayName = 'FormFieldGroupExpandable';","map":{"version":3,"names":["React","useState","InternalFormFieldGroup","FormFieldGroupExpandable","_a","children","className","header","_a$isExpanded","isExpanded","toggleAriaLabel","props","__rest","_useState","_useState2","_slicedToArray","localIsExpanded","setIsExpanded","createElement","Object","assign","isExpandable","onToggle","displayName"],"sources":["/data/stackhub-web/plugins/myapps/node_modules/@patternfly/react-core/src/components/Form/FormFieldGroupExpandable.tsx"],"sourcesContent":["import * as React from 'react';\nimport { useState } from 'react';\nimport { InternalFormFieldGroup } from './InternalFormFieldGroup';\n\nexport interface FormFieldGroupExpandableProps extends React.HTMLProps<HTMLDivElement> {\n  /** Anything that can be rendered as form field group content. */\n  children?: React.ReactNode;\n  /** Additional classes added to the form field group. */\n  className?: string;\n  /** Form field group header */\n  header?: React.ReactNode;\n  /** Flag indicating if the form field group is initially expanded */\n  isExpanded?: boolean;\n  /** Aria-label to use on the form field group toggle button */\n  toggleAriaLabel?: string;\n}\n\nexport const FormFieldGroupExpandable: React.FunctionComponent<FormFieldGroupExpandableProps> = ({\n  children,\n  className,\n  header,\n  isExpanded = false,\n  toggleAriaLabel,\n  ...props\n}: FormFieldGroupExpandableProps) => {\n  const [localIsExpanded, setIsExpanded] = useState(isExpanded);\n\n  return (\n    <InternalFormFieldGroup\n      className={className}\n      header={header}\n      isExpandable\n      isExpanded={localIsExpanded}\n      toggleAriaLabel={toggleAriaLabel}\n      onToggle={() => setIsExpanded(!localIsExpanded)}\n      {...props}\n    >\n      {children}\n    </InternalFormFieldGroup>\n  );\n};\nFormFieldGroupExpandable.displayName = 'FormFieldGroupExpandable';\n"],"mappings":";;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,sBAAsB,QAAQ,0BAA0B;AAejE,OAAO,IAAMC,wBAAwB,GAA2D,SAAnFA,wBAAwBA,CAA4DC,EAOjE,EAAI;MANlCC,QAAQ,GAIOD,EAEe,CAN9BC,QAAQ;IACRC,SAAS,GAGMF,EAEe,CAL9BE,SAAS;IACTC,MAAM,GAESH,EAEe,CAJ9BG,MAAM;IAAAC,aAAA,GAESJ,EAEe,CAH9BK,UAAU;IAAVA,UAAU,GAAAD,aAAA,cAAG,KAAK,GAAAA,aAAA;IAClBE,eAAe,GAAAN,EAEe,CAF9BM,eAAe;IACZC,KAAK,GAAAC,MAAA,CAAAR,EAAA,EANuF,oEAOhG,CADS;EAER,IAAAS,SAAA,GAAyCZ,QAAQ,CAACQ,UAAU,CAAC;IAAAK,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAtDG,eAAe,GAAAF,UAAA;IAAEG,aAAa,GAAAH,UAAA;EAErC,OACEd,KAAA,CAAAkB,aAAA,CAAChB,sBAAsB,EAAAiB,MAAA,CAAAC,MAAA;IACrBd,SAAS,EAAEA,SAAS;IACpBC,MAAM,EAAEA,MAAM;IACdc,YAAY;IACZZ,UAAU,EAAEO,eAAe;IAC3BN,eAAe,EAAEA,eAAe;IAChCY,QAAQ,EAAE,SAAAA,SAAA;MAAA,OAAML,aAAa,CAAC,CAACD,eAAe,CAAC;IAAA;EAAA,GAC3CL,KAAK,GAERN,QAAQ,CACc;AAE7B,CAAC;AACDF,wBAAwB,CAACoB,WAAW,GAAG,0BAA0B"},"metadata":{},"sourceType":"module","externalDependencies":[]}
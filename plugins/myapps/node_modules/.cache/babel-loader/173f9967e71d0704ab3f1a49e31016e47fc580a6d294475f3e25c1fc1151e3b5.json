{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/DataList/data-list';\nimport { formatBreakpointMods } from '../../helpers/util';\nexport var DataListAction = function DataListAction(_a) {\n  var children = _a.children,\n    className = _a.className,\n    visibility = _a.visibility,\n    id = _a.id,\n    ariaLabel = _a['aria-label'],\n    ariaLabelledBy = _a['aria-labelledby'],\n    isPlainButtonAction = _a.isPlainButtonAction,\n    props = __rest(_a, [\"children\", \"className\", \"visibility\", \"id\", 'aria-label', 'aria-labelledby', \"isPlainButtonAction\"]);\n  return React.createElement(\"div\", Object.assign({\n    className: css(styles.dataListItemAction, formatBreakpointMods(visibility, styles), className)\n  }, props), isPlainButtonAction ? React.createElement(\"div\", {\n    className: css(styles.dataListAction)\n  }, children) : children);\n};\nDataListAction.displayName = 'DataListAction';","map":{"version":3,"names":["React","css","styles","formatBreakpointMods","DataListAction","_a","children","className","visibility","id","ariaLabel","ariaLabelledBy","isPlainButtonAction","props","__rest","createElement","Object","assign","dataListItemAction","dataListAction","displayName"],"sources":["/data/stackhub-web/plugins/myapps/node_modules/@patternfly/react-core/src/components/DataList/DataListAction.tsx"],"sourcesContent":["import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/DataList/data-list';\nimport { formatBreakpointMods } from '../../helpers/util';\n\nexport interface DataListActionProps extends Omit<React.HTMLProps<HTMLDivElement>, 'children'> {\n  /** Content rendered as DataList Action  (e.g <Button> or <Dropdown>) */\n  children: React.ReactNode;\n  /** Additional classes added to the DataList Action */\n  className?: string;\n  /** Identify the DataList toggle number */\n  id: string;\n  /** Adds accessible text to the DataList Action */\n  'aria-labelledby': string;\n  /** Adds accessible text to the DataList Action */\n  'aria-label': string;\n  /** What breakpoints to hide/show the data list action */\n  visibility?: {\n    default?: 'hidden' | 'visible';\n    sm?: 'hidden' | 'visible';\n    md?: 'hidden' | 'visible';\n    lg?: 'hidden' | 'visible';\n    xl?: 'hidden' | 'visible';\n    '2xl'?: 'hidden' | 'visible';\n  };\n  /** Flag to indicate that the action is a plain button (e.g. kebab dropdown toggle) so that styling is applied to align the button */\n  isPlainButtonAction?: boolean;\n}\n\nexport const DataListAction: React.FunctionComponent<DataListActionProps> = ({\n  children,\n  className,\n  visibility,\n  /* eslint-disable @typescript-eslint/no-unused-vars */\n  id,\n  'aria-label': ariaLabel,\n  'aria-labelledby': ariaLabelledBy,\n  isPlainButtonAction,\n  /* eslint-enable @typescript-eslint/no-unused-vars */\n  ...props\n}: DataListActionProps) => (\n  <div className={css(styles.dataListItemAction, formatBreakpointMods(visibility, styles), className)} {...props}>\n    {isPlainButtonAction ? <div className={css(styles.dataListAction)}>{children}</div> : children}\n  </div>\n);\nDataListAction.displayName = 'DataListAction';\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,GAAG,QAAQ,0BAA0B;AAC9C,OAAOC,MAAM,MAAM,4DAA4D;AAC/E,SAASC,oBAAoB,QAAQ,oBAAoB;AA0BzD,OAAO,IAAMC,cAAc,GAAiD,SAA/DA,cAAcA,CAAkDC,EAWvD,EAAI;MAVxBC,QAAQ,GAOWD,EAGC,CAVpBC,QAAQ;IACRC,SAAS,GAMUF,EAGC,CATpBE,SAAS;IACTC,UAAU,GAKSH,EAGC,CARpBG,UAAU;IAEVC,EAAE,GAGiBJ,EAGC,CANpBI,EAAE;IACYC,SAAS,GAEJL,EAGC,CALpB,YAAY;IACOM,cAAc,GACdN,EAGC,CAJpB,iBAAiB;IACjBO,mBAAmB,GAAAP,EAGC,CAHpBO,mBAAmB;IAEhBC,KAAK,GAAAC,MAAA,CAAAT,EAAA,EAVmE,qGAW5E,CADS;EACiB,OACzBL,KAAA,CAAAe,aAAA,QAAAC,MAAA,CAAAC,MAAA;IAAKV,SAAS,EAAEN,GAAG,CAACC,MAAM,CAACgB,kBAAkB,EAAEf,oBAAoB,CAACK,UAAU,EAAEN,MAAM,CAAC,EAAEK,SAAS;EAAC,GAAMM,KAAK,GAC3GD,mBAAmB,GAAGZ,KAAA,CAAAe,aAAA;IAAKR,SAAS,EAAEN,GAAG,CAACC,MAAM,CAACiB,cAAc;EAAC,GAAGb,QAAQ,CAAO,GAAGA,QAAQ,CAC1F;CACP;AACDF,cAAc,CAACgB,WAAW,GAAG,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/ExpandableSection/expandable-section';\nimport { css } from '@patternfly/react-styles';\nimport AngleRightIcon from '@patternfly/react-icons/dist/esm/icons/angle-right-icon';\nexport var ExpandableSectionToggle = function ExpandableSectionToggle(_a) {\n  var children = _a.children,\n    _a$className = _a.className,\n    className = _a$className === void 0 ? '' : _a$className,\n    _a$isExpanded = _a.isExpanded,\n    isExpanded = _a$isExpanded === void 0 ? false : _a$isExpanded,\n    onToggle = _a.onToggle,\n    contentId = _a.contentId,\n    _a$direction = _a.direction,\n    direction = _a$direction === void 0 ? 'down' : _a$direction,\n    _a$hasTruncatedConten = _a.hasTruncatedContent,\n    hasTruncatedContent = _a$hasTruncatedConten === void 0 ? false : _a$hasTruncatedConten,\n    props = __rest(_a, [\"children\", \"className\", \"isExpanded\", \"onToggle\", \"contentId\", \"direction\", \"hasTruncatedContent\"]);\n  return React.createElement(\"div\", Object.assign({\n    className: css(styles.expandableSection, isExpanded && styles.modifiers.expanded, styles.modifiers.detached, hasTruncatedContent && styles.modifiers.truncate, className)\n  }, props), React.createElement(\"button\", {\n    className: css(styles.expandableSectionToggle),\n    type: \"button\",\n    \"aria-expanded\": isExpanded,\n    \"aria-controls\": contentId,\n    onClick: function onClick() {\n      return onToggle(!isExpanded);\n    }\n  }, !hasTruncatedContent && React.createElement(\"span\", {\n    className: css(styles.expandableSectionToggleIcon, isExpanded && direction === 'up' && styles.modifiers.expandTop)\n  }, React.createElement(AngleRightIcon, {\n    \"aria-hidden\": true\n  })), React.createElement(\"span\", {\n    className: css(styles.expandableSectionToggleText)\n  }, children)));\n};\nExpandableSectionToggle.displayName = 'ExpandableSectionToggle';","map":{"version":3,"names":["React","styles","css","AngleRightIcon","ExpandableSectionToggle","_a","children","_a$className","className","_a$isExpanded","isExpanded","onToggle","contentId","_a$direction","direction","_a$hasTruncatedConten","hasTruncatedContent","props","__rest","createElement","Object","assign","expandableSection","modifiers","expanded","detached","truncate","expandableSectionToggle","type","onClick","expandableSectionToggleIcon","expandTop","expandableSectionToggleText","displayName"],"sources":["/data/stackhub-web/plugins/myapps/node_modules/@patternfly/react-core/src/components/ExpandableSection/ExpandableSectionToggle.tsx"],"sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/ExpandableSection/expandable-section';\nimport { css } from '@patternfly/react-styles';\nimport AngleRightIcon from '@patternfly/react-icons/dist/esm/icons/angle-right-icon';\n\n/** Acts as the toggle sub-component when the main expandable section component has the isDetached\n * property passed in. Allows for more custom control over the expandable section's toggle.\n */\n\nexport interface ExpandableSectionToggleProps extends React.HTMLProps<HTMLDivElement> {\n  /** Content rendered inside the expandable toggle. */\n  children?: React.ReactNode;\n  /** Additional classes added to the expandable toggle. */\n  className?: string;\n  /** Id of the toggle's respective expandable section content. The value passed into this\n   * property should match the contentId property of the main expandable section component.\n   */\n  contentId?: string;\n  /** Direction the toggle arrow should point when the expandable section is expanded. */\n  direction?: 'up' | 'down';\n  /** @beta Flag to determine toggle styling when the expandable content is truncated. */\n  hasTruncatedContent?: boolean;\n  /** Flag indicating if the expandable section is expanded. */\n  isExpanded?: boolean;\n  /** Callback function to toggle the expandable content. */\n  onToggle?: (isExpanded: boolean) => void;\n}\n\nexport const ExpandableSectionToggle: React.FunctionComponent<ExpandableSectionToggleProps> = ({\n  children,\n  className = '',\n  isExpanded = false,\n  onToggle,\n  contentId,\n  direction = 'down',\n  hasTruncatedContent = false,\n  ...props\n}: ExpandableSectionToggleProps) => (\n  <div\n    className={css(\n      styles.expandableSection,\n      isExpanded && styles.modifiers.expanded,\n      styles.modifiers.detached,\n      hasTruncatedContent && styles.modifiers.truncate,\n      className\n    )}\n    {...props}\n  >\n    <button\n      className={css(styles.expandableSectionToggle)}\n      type=\"button\"\n      aria-expanded={isExpanded}\n      aria-controls={contentId}\n      onClick={() => onToggle(!isExpanded)}\n    >\n      {!hasTruncatedContent && (\n        <span\n          className={css(\n            styles.expandableSectionToggleIcon,\n            isExpanded && direction === 'up' && styles.modifiers.expandTop\n          )}\n        >\n          <AngleRightIcon aria-hidden />\n        </span>\n      )}\n      <span className={css(styles.expandableSectionToggleText)}>{children}</span>\n    </button>\n  </div>\n);\n\nExpandableSectionToggle.displayName = 'ExpandableSectionToggle';\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,MAAM,MAAM,8EAA8E;AACjG,SAASC,GAAG,QAAQ,0BAA0B;AAC9C,OAAOC,cAAc,MAAM,yDAAyD;AAyBpF,OAAO,IAAMC,uBAAuB,GAA0D,SAAjFA,uBAAuBA,CAA2DC,EAShE,EAAI;MARjCC,QAAQ,GAMmBD,EAEE,CAR7BC,QAAQ;IAAAC,YAAA,GAMmBF,EAEE,CAP7BG,SAAS;IAATA,SAAS,GAAAD,YAAA,cAAG,EAAE,GAAAA,YAAA;IAAAE,aAAA,GAKaJ,EAEE,CAN7BK,UAAU;IAAVA,UAAU,GAAAD,aAAA,cAAG,KAAK,GAAAA,aAAA;IAClBE,QAAQ,GAGmBN,EAEE,CAL7BM,QAAQ;IACRC,SAAS,GAEkBP,EAEE,CAJ7BO,SAAS;IAAAC,YAAA,GAEkBR,EAEE,CAH7BS,SAAS;IAATA,SAAS,GAAAD,YAAA,cAAG,MAAM,GAAAA,YAAA;IAAAE,qBAAA,GACSV,EAEE,CAF7BW,mBAAmB;IAAnBA,mBAAmB,GAAAD,qBAAA,cAAG,KAAK,GAAAA,qBAAA;IACxBE,KAAK,GAAAC,MAAA,CAAAb,EAAA,EARqF,oGAS9F,CADS;EAC0B,OAClCL,KAAA,CAAAmB,aAAA,QAAAC,MAAA,CAAAC,MAAA;IACEb,SAAS,EAAEN,GAAG,CACZD,MAAM,CAACqB,iBAAiB,EACxBZ,UAAU,IAAIT,MAAM,CAACsB,SAAS,CAACC,QAAQ,EACvCvB,MAAM,CAACsB,SAAS,CAACE,QAAQ,EACzBT,mBAAmB,IAAIf,MAAM,CAACsB,SAAS,CAACG,QAAQ,EAChDlB,SAAS;EACV,GACGS,KAAK,GAETjB,KAAA,CAAAmB,aAAA;IACEX,SAAS,EAAEN,GAAG,CAACD,MAAM,CAAC0B,uBAAuB,CAAC;IAC9CC,IAAI,EAAC,QAAQ;IAAA,iBACElB,UAAU;IAAA,iBACVE,SAAS;IACxBiB,OAAO,EAAE,SAAAA,QAAA;MAAA,OAAMlB,QAAQ,CAAC,CAACD,UAAU,CAAC;IAAA;EAAA,GAEnC,CAACM,mBAAmB,IACnBhB,KAAA,CAAAmB,aAAA;IACEX,SAAS,EAAEN,GAAG,CACZD,MAAM,CAAC6B,2BAA2B,EAClCpB,UAAU,IAAII,SAAS,KAAK,IAAI,IAAIb,MAAM,CAACsB,SAAS,CAACQ,SAAS;EAC/D,GAED/B,KAAA,CAAAmB,aAAA,CAAChB,cAAc;IAAA;EAAA,EAAe,CAEjC,EACDH,KAAA,CAAAmB,aAAA;IAAMX,SAAS,EAAEN,GAAG,CAACD,MAAM,CAAC+B,2BAA2B;EAAC,GAAG1B,QAAQ,CAAQ,CACpE,CACL;CACP;AAEDF,uBAAuB,CAAC6B,WAAW,GAAG,yBAAyB"},"metadata":{},"sourceType":"module","externalDependencies":[]}
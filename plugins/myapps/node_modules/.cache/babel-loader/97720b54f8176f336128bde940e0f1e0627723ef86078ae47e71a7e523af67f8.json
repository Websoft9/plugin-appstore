{"ast":null,"code":"var groupByFields=function groupByFields(array,f){/*\n    params description :\n        f : function which returnf the array of fields \n        e.g. :  (item) => {\n            return [itemField1, itemField2];\n        }\n        array : array of data to group e.g. : [{...}, {...}]       \n    */var groups={};array.forEach(function(o){var group=JSON.stringify(f(o));groups[group]=groups[group]||[];groups[group].push(o);});return Object.keys(groups).map(function(group){return groups[group];});};export{groupByFields};","map":{"version":3,"names":["groupByFields","array","f","groups","forEach","o","group","JSON","stringify","push","Object","keys","map"],"sources":["/data/stackhub-web/plugins/myapps/src/utils/array.js"],"sourcesContent":["// @flow\nconst groupByFields = (array: Array<any>, f: any): Array<any> => {\n    /*\n    params description :\n        f : function which returnf the array of fields \n        e.g. :  (item) => {\n            return [itemField1, itemField2];\n        }\n        array : array of data to group e.g. : [{...}, {...}]       \n    */\n    var groups = {};\n    array.forEach((o) => {\n        var group = JSON.stringify(f(o));\n        groups[group] = groups[group] || [];\n        groups[group].push(o);\n    });\n    return Object.keys(groups).map((group) => {\n        return groups[group];\n    });\n};\n\nexport { groupByFields };\n"],"mappings":"AACA,GAAM,CAAAA,aAAa,CAAG,QAAhB,CAAAA,aAAaA,CAAIC,KAAiB,CAAEC,CAAM,CAAiB,CAC7D;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,MACI,GAAI,CAAAC,MAAM,CAAG,CAAC,CAAC,CACfF,KAAK,CAACG,OAAO,CAAC,SAACC,CAAC,CAAK,CACjB,GAAI,CAAAC,KAAK,CAAGC,IAAI,CAACC,SAAS,CAACN,CAAC,CAACG,CAAC,CAAC,CAAC,CAChCF,MAAM,CAACG,KAAK,CAAC,CAAGH,MAAM,CAACG,KAAK,CAAC,EAAI,EAAE,CACnCH,MAAM,CAACG,KAAK,CAAC,CAACG,IAAI,CAACJ,CAAC,CAAC,CACzB,CAAC,CAAC,CACF,MAAO,CAAAK,MAAM,CAACC,IAAI,CAACR,MAAM,CAAC,CAACS,GAAG,CAAC,SAACN,KAAK,CAAK,CACtC,MAAO,CAAAH,MAAM,CAACG,KAAK,CAAC,CACxB,CAAC,CAAC,CACN,CAAC,CAED,OAASN,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { Button, ButtonVariant } from '../Button';\nimport { AlertContext } from './AlertContext';\nimport AngleRightIcon from '@patternfly/react-icons/dist/esm/icons/angle-right-icon';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Alert/alert';\nexport var AlertToggleExpandButton = function AlertToggleExpandButton(_a) {\n  var _a$ariaLabel = _a['aria-label'],\n    ariaLabel = _a$ariaLabel === void 0 ? '' : _a$ariaLabel,\n    variantLabel = _a.variantLabel,\n    onToggleExpand = _a.onToggleExpand,\n    _a$isExpanded = _a.isExpanded,\n    isExpanded = _a$isExpanded === void 0 ? false : _a$isExpanded,\n    props = __rest(_a, ['aria-label', \"variantLabel\", \"onToggleExpand\", \"isExpanded\"]);\n  var _React$useContext = React.useContext(AlertContext),\n    title = _React$useContext.title,\n    alertVariantLabel = _React$useContext.variantLabel;\n  return React.createElement(Button, Object.assign({\n    variant: ButtonVariant.plain,\n    onClick: onToggleExpand,\n    \"aria-expanded\": isExpanded,\n    \"aria-label\": ariaLabel === '' ? \"Toggle \".concat(variantLabel || alertVariantLabel, \" alert: \").concat(title) : ariaLabel\n  }, props), React.createElement(\"span\", {\n    className: css(styles.alertToggleIcon)\n  }, React.createElement(AngleRightIcon, {\n    \"aria-hidden\": \"true\"\n  })));\n};\nAlertToggleExpandButton.displayName = 'AlertToggleExpandButton';","map":{"version":3,"names":["React","Button","ButtonVariant","AlertContext","AngleRightIcon","css","styles","AlertToggleExpandButton","_a","ariaLabel","_a$ariaLabel","variantLabel","onToggleExpand","_a$isExpanded","isExpanded","props","__rest","_React$useContext","useContext","title","alertVariantLabel","createElement","Object","assign","variant","plain","onClick","concat","className","alertToggleIcon","displayName"],"sources":["/data/stackhub-web/plugins/myapps/node_modules/@patternfly/react-core/src/components/Alert/AlertToggleExpandButton.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Button, ButtonProps, ButtonVariant } from '../Button';\nimport { AlertContext } from './AlertContext';\nimport AngleRightIcon from '@patternfly/react-icons/dist/esm/icons/angle-right-icon';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Alert/alert';\n\nexport interface AlertToggleExpandButtonProps extends ButtonProps {\n  /** Accessible label for the toggle button. */\n  'aria-label'?: string;\n  /** Flag to indicate if the content is expanded. */\n  isExpanded?: boolean;\n  /** A callback for when the toggle button is clicked. */\n  onToggleExpand?: () => void;\n  /** Variant label for the toggle button. */\n  variantLabel?: string;\n}\n\nexport const AlertToggleExpandButton: React.FunctionComponent<AlertToggleExpandButtonProps> = ({\n  'aria-label': ariaLabel = '',\n  variantLabel,\n  onToggleExpand,\n  isExpanded = false,\n  ...props\n}: AlertToggleExpandButtonProps) => {\n  const { title, variantLabel: alertVariantLabel } = React.useContext(AlertContext);\n  return (\n    <Button\n      variant={ButtonVariant.plain}\n      onClick={onToggleExpand}\n      aria-expanded={isExpanded}\n      aria-label={ariaLabel === '' ? `Toggle ${variantLabel || alertVariantLabel} alert: ${title}` : ariaLabel}\n      {...props}\n    >\n      <span className={css(styles.alertToggleIcon)}>\n        <AngleRightIcon aria-hidden=\"true\" />\n      </span>\n    </Button>\n  );\n};\nAlertToggleExpandButton.displayName = 'AlertToggleExpandButton';\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,MAAM,EAAeC,aAAa,QAAQ,WAAW;AAC9D,SAASC,YAAY,QAAQ,gBAAgB;AAC7C,OAAOC,cAAc,MAAM,yDAAyD;AACpF,SAASC,GAAG,QAAQ,0BAA0B;AAC9C,OAAOC,MAAM,MAAM,qDAAqD;AAaxE,OAAO,IAAMC,uBAAuB,GAA0D,SAAjFA,uBAAuBA,CAA2DC,EAMhE,EAAI;qBAFfA,EAEW,CAL7B,YAAY;IAAEC,SAAS,GAAAC,YAAA,cAAG,EAAE,GAAAA,YAAA;IAC5BC,YAAY,GAEMH,EAEW,CAJ7BG,YAAY;IACZC,cAAc,GACIJ,EAEW,CAH7BI,cAAc;IAAAC,aAAA,GACIL,EAEW,CAF7BM,UAAU;IAAVA,UAAU,GAAAD,aAAA,cAAG,KAAK,GAAAA,aAAA;IACfE,KAAK,GAAAC,MAAA,CAAAR,EAAA,EALqF,8DAM9F,CADS;EAER,IAAAS,iBAAA,GAAmDjB,KAAK,CAACkB,UAAU,CAACf,YAAY,CAAC;IAAzEgB,KAAK,GAAAF,iBAAA,CAALE,KAAK;IAAgBC,iBAAiB,GAAAH,iBAAA,CAA/BN,YAAY;EAC3B,OACEX,KAAA,CAAAqB,aAAA,CAACpB,MAAM,EAAAqB,MAAA,CAAAC,MAAA;IACLC,OAAO,EAAEtB,aAAa,CAACuB,KAAK;IAC5BC,OAAO,EAAEd,cAAc;IAAA,iBACRE,UAAU;IAAA,cACbL,SAAS,KAAK,EAAE,aAAAkB,MAAA,CAAahB,YAAY,IAAIS,iBAAiB,cAAAO,MAAA,CAAWR,KAAK,IAAKV;EAAS,GACpGM,KAAK,GAETf,KAAA,CAAAqB,aAAA;IAAMO,SAAS,EAAEvB,GAAG,CAACC,MAAM,CAACuB,eAAe;EAAC,GAC1C7B,KAAA,CAAAqB,aAAA,CAACjB,cAAc;IAAA,eAAa;EAAM,EAAG,CAChC,CACA;AAEb,CAAC;AACDG,uBAAuB,CAACuB,WAAW,GAAG,yBAAyB"},"metadata":{},"sourceType":"module","externalDependencies":[]}
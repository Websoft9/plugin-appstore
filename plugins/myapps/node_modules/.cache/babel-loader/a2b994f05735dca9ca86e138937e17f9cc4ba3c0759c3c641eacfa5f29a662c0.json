{"ast":null,"code":"import { __awaiter, __generator, __read, __spread } from \"tslib\";\nimport { toFileWithPath } from './file';\nvar FILES_TO_IGNORE = [\n// Thumbnail cache files for macOS and Windows\n'.DS_Store', 'Thumbs.db' // Windows\n];\n/**\n * Convert a DragEvent's DataTrasfer object to a list of File objects\n * NOTE: If some of the items are folders,\n * everything will be flattened and placed in the same list but the paths will be kept as a {path} property.\n * @param evt\n */\nexport function fromEvent(evt) {\n  return __awaiter(this, void 0, void 0, function () {\n    return __generator(this, function (_a) {\n      return [2 /*return*/, isDragEvt(evt) && evt.dataTransfer ? getDataTransferFiles(evt.dataTransfer, evt.type) : getInputFiles(evt)];\n    });\n  });\n}\nfunction isDragEvt(value) {\n  return !!value.dataTransfer;\n}\nfunction getInputFiles(evt) {\n  var files = isInput(evt.target) ? evt.target.files ? fromList(evt.target.files) : [] : [];\n  return files.map(function (file) {\n    return toFileWithPath(file);\n  });\n}\nfunction isInput(value) {\n  return value !== null;\n}\nfunction getDataTransferFiles(dt, type) {\n  return __awaiter(this, void 0, void 0, function () {\n    var items, files;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (!dt.items) return [3 /*break*/, 2];\n          items = fromList(dt.items).filter(function (item) {\n            return item.kind === 'file';\n          });\n          // According to https://html.spec.whatwg.org/multipage/dnd.html#dndevents,\n          // only 'dragstart' and 'drop' has access to the data (source node)\n          if (type !== 'drop') {\n            return [2 /*return*/, items];\n          }\n          return [4 /*yield*/, Promise.all(items.map(toFilePromises))];\n        case 1:\n          files = _a.sent();\n          return [2 /*return*/, noIgnoredFiles(flatten(files))];\n        case 2:\n          return [2 /*return*/, noIgnoredFiles(fromList(dt.files).map(function (file) {\n            return toFileWithPath(file);\n          }))];\n      }\n    });\n  });\n}\nfunction noIgnoredFiles(files) {\n  return files.filter(function (file) {\n    return FILES_TO_IGNORE.indexOf(file.name) === -1;\n  });\n}\n// IE11 does not support Array.from()\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/from#Browser_compatibility\n// https://developer.mozilla.org/en-US/docs/Web/API/FileList\n// https://developer.mozilla.org/en-US/docs/Web/API/DataTransferItemList\nfunction fromList(items) {\n  var files = [];\n  // tslint:disable: prefer-for-of\n  for (var i = 0; i < items.length; i++) {\n    var file = items[i];\n    files.push(file);\n  }\n  return files;\n}\n// https://developer.mozilla.org/en-US/docs/Web/API/DataTransferItem\nfunction toFilePromises(item) {\n  if (typeof item.webkitGetAsEntry !== 'function') {\n    return fromDataTransferItem(item);\n  }\n  var entry = item.webkitGetAsEntry();\n  // Safari supports dropping an image node from a different window and can be retrieved using\n  // the DataTransferItem.getAsFile() API\n  // NOTE: FileSystemEntry.file() throws if trying to get the file\n  if (entry && entry.isDirectory) {\n    return fromDirEntry(entry);\n  }\n  return fromDataTransferItem(item);\n}\nfunction flatten(items) {\n  return items.reduce(function (acc, files) {\n    return __spread(acc, Array.isArray(files) ? flatten(files) : [files]);\n  }, []);\n}\nfunction fromDataTransferItem(item) {\n  var file = item.getAsFile();\n  if (!file) {\n    return Promise.reject(item + \" is not a File\");\n  }\n  var fwp = toFileWithPath(file);\n  return Promise.resolve(fwp);\n}\n// https://developer.mozilla.org/en-US/docs/Web/API/FileSystemEntry\nfunction fromEntry(entry) {\n  return __awaiter(this, void 0, void 0, function () {\n    return __generator(this, function (_a) {\n      return [2 /*return*/, entry.isDirectory ? fromDirEntry(entry) : fromFileEntry(entry)];\n    });\n  });\n}\n// https://developer.mozilla.org/en-US/docs/Web/API/FileSystemDirectoryEntry\nfunction fromDirEntry(entry) {\n  var reader = entry.createReader();\n  return new Promise(function (resolve, reject) {\n    var entries = [];\n    function readEntries() {\n      var _this = this;\n      // https://developer.mozilla.org/en-US/docs/Web/API/FileSystemDirectoryEntry/createReader\n      // https://developer.mozilla.org/en-US/docs/Web/API/FileSystemDirectoryReader/readEntries\n      reader.readEntries(function (batch) {\n        return __awaiter(_this, void 0, void 0, function () {\n          var files, err_1, items;\n          return __generator(this, function (_a) {\n            switch (_a.label) {\n              case 0:\n                if (!!batch.length) return [3 /*break*/, 5];\n                _a.label = 1;\n              case 1:\n                _a.trys.push([1, 3,, 4]);\n                return [4 /*yield*/, Promise.all(entries)];\n              case 2:\n                files = _a.sent();\n                resolve(files);\n                return [3 /*break*/, 4];\n              case 3:\n                err_1 = _a.sent();\n                reject(err_1);\n                return [3 /*break*/, 4];\n              case 4:\n                return [3 /*break*/, 6];\n              case 5:\n                items = Promise.all(batch.map(fromEntry));\n                entries.push(items);\n                // Continue reading\n                readEntries();\n                _a.label = 6;\n              case 6:\n                return [2 /*return*/];\n            }\n          });\n        });\n      }, function (err) {\n        reject(err);\n      });\n    }\n    readEntries();\n  });\n}\n// https://developer.mozilla.org/en-US/docs/Web/API/FileSystemFileEntry\nfunction fromFileEntry(entry) {\n  return __awaiter(this, void 0, void 0, function () {\n    return __generator(this, function (_a) {\n      return [2 /*return*/, new Promise(function (resolve, reject) {\n        entry.file(function (file) {\n          var fwp = toFileWithPath(file, entry.fullPath);\n          resolve(fwp);\n        }, function (err) {\n          reject(err);\n        });\n      })];\n    });\n  });\n}","map":{"version":3,"names":["toFileWithPath","FILES_TO_IGNORE","fromEvent","evt","isDragEvt","dataTransfer","getDataTransferFiles","type","getInputFiles","value","files","isInput","target","fromList","map","file","dt","items","filter","item","kind","Promise","all","toFilePromises","_a","sent","noIgnoredFiles","flatten","indexOf","name","i","length","push","webkitGetAsEntry","fromDataTransferItem","entry","isDirectory","fromDirEntry","reduce","acc","__spread","Array","isArray","getAsFile","reject","fwp","resolve","fromEntry","fromFileEntry","reader","createReader","entries","readEntries","_this","batch","__awaiter","err_1","err","fullPath"],"sources":["/data/stackhub-web/plugins/myapps/node_modules/file-selector/src/file-selector.ts"],"sourcesContent":["import {FileWithPath, toFileWithPath} from './file';\n\n\nconst FILES_TO_IGNORE = [\n    // Thumbnail cache files for macOS and Windows\n    '.DS_Store', // macOs\n    'Thumbs.db'  // Windows\n];\n\n\n/**\n * Convert a DragEvent's DataTrasfer object to a list of File objects\n * NOTE: If some of the items are folders,\n * everything will be flattened and placed in the same list but the paths will be kept as a {path} property.\n * @param evt\n */\nexport async function fromEvent(evt: Event): Promise<(FileWithPath | DataTransferItem)[]> {\n    return isDragEvt(evt) && evt.dataTransfer\n        ? getDataTransferFiles(evt.dataTransfer, evt.type)\n        : getInputFiles(evt);\n}\n\nfunction isDragEvt(value: any): value is DragEvent {\n    return !!value.dataTransfer;\n}\n\nfunction getInputFiles(evt: Event) {\n    const files = isInput(evt.target)\n        ? evt.target.files\n            ? fromList<FileWithPath>(evt.target.files)\n            : []\n        : [];\n    return files.map(file => toFileWithPath(file));\n}\n\nfunction isInput(value: EventTarget | null): value is HTMLInputElement {\n    return value !== null;\n}\n\nasync function getDataTransferFiles(dt: DataTransfer, type: string) {\n    // IE11 does not support dataTransfer.items\n    // See https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer/items#Browser_compatibility\n    if (dt.items) {\n        const items = fromList<DataTransferItem>(dt.items)\n            .filter(item => item.kind === 'file');\n        // According to https://html.spec.whatwg.org/multipage/dnd.html#dndevents,\n        // only 'dragstart' and 'drop' has access to the data (source node)\n        if (type !== 'drop') {\n            return items;\n        }\n        const files = await Promise.all(items.map(toFilePromises));\n        return noIgnoredFiles(flatten<FileWithPath>(files));\n    }\n\n    return noIgnoredFiles(fromList<FileWithPath>(dt.files)\n        .map(file => toFileWithPath(file)));\n}\n\nfunction noIgnoredFiles(files: FileWithPath[]) {\n    return files.filter(file => FILES_TO_IGNORE.indexOf(file.name) === -1);\n}\n\n// IE11 does not support Array.from()\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/from#Browser_compatibility\n// https://developer.mozilla.org/en-US/docs/Web/API/FileList\n// https://developer.mozilla.org/en-US/docs/Web/API/DataTransferItemList\nfunction fromList<T>(items: DataTransferItemList | FileList): T[] {\n    const files = [];\n\n    // tslint:disable: prefer-for-of\n    for (let i = 0; i < items.length; i++) {\n        const file = items[i];\n        files.push(file);\n    }\n\n    return files as any;\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/API/DataTransferItem\nfunction toFilePromises(item: DataTransferItem) {\n    if (typeof item.webkitGetAsEntry !== 'function') {\n        return fromDataTransferItem(item);\n    }\n\n    const entry = item.webkitGetAsEntry();\n\n    // Safari supports dropping an image node from a different window and can be retrieved using\n    // the DataTransferItem.getAsFile() API\n    // NOTE: FileSystemEntry.file() throws if trying to get the file\n    if (entry && entry.isDirectory) {\n        return fromDirEntry(entry) as any;\n    }\n\n    return fromDataTransferItem(item);\n}\n\nfunction flatten<T>(items: any[]): T[] {\n    return items.reduce((acc, files) => [\n        ...acc,\n        ...(Array.isArray(files) ? flatten(files) : [files])\n    ], []);\n}\n\nfunction fromDataTransferItem(item: DataTransferItem) {\n    const file = item.getAsFile();\n    if (!file) {\n        return Promise.reject(`${item} is not a File`);\n    }\n    const fwp = toFileWithPath(file);\n    return Promise.resolve(fwp);\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/API/FileSystemEntry\nasync function fromEntry(entry: any) {\n    return entry.isDirectory ? fromDirEntry(entry) : fromFileEntry(entry);\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/API/FileSystemDirectoryEntry\nfunction fromDirEntry(entry: any) {\n    const reader = entry.createReader();\n\n    return new Promise<FileArray[]>((resolve, reject) => {\n        const entries: Promise<FileValue[]>[] = [];\n\n        function readEntries() {\n            // https://developer.mozilla.org/en-US/docs/Web/API/FileSystemDirectoryEntry/createReader\n            // https://developer.mozilla.org/en-US/docs/Web/API/FileSystemDirectoryReader/readEntries\n            reader.readEntries(async (batch: any[]) => {\n                if (!batch.length) {\n                    // Done reading directory\n                    try {\n                        const files = await Promise.all(entries);\n                        resolve(files);\n                    } catch (err) {\n                        reject(err);\n                    }\n                } else {\n                    const items = Promise.all(batch.map(fromEntry));\n                    entries.push(items);\n\n                    // Continue reading\n                    readEntries();\n                }\n            }, (err: any) => {\n                reject(err);\n            });\n        }\n\n        readEntries();\n    });\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/API/FileSystemFileEntry\nasync function fromFileEntry(entry: any) {\n    return new Promise<FileWithPath>((resolve, reject) => {\n        entry.file((file: FileWithPath) => {\n            const fwp = toFileWithPath(file, entry.fullPath);\n            resolve(fwp);\n        }, (err: any) => {\n            reject(err);\n        });\n    });\n}\n\n// Infinite type recursion\n// https://github.com/Microsoft/TypeScript/issues/3496#issuecomment-128553540\ninterface FileArray extends Array<FileValue> {}\ntype FileValue = FileWithPath\n    | FileArray[];\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
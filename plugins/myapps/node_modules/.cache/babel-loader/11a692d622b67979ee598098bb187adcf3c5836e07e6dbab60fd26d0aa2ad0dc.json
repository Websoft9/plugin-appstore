{"ast":null,"code":"import _classCallCheck from \"/data/stackhub-web/plugins/myapps/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/data/stackhub-web/plugins/myapps/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/data/stackhub-web/plugins/myapps/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/data/stackhub-web/plugins/myapps/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\n/**\n * This component wraps any ReactNode and finds its ref\n * It has to be a class for findDOMNode to work\n * Ideally, all components used as triggers/toggles are either:\n * - class based components we can assign our own ref to\n * - functional components that have forwardRef implemented\n * However, there is no guarantee that is what will get passed in as trigger/toggle in the case of tooltips and popovers\n */\nexport var FindRefWrapper = /*#__PURE__*/function (_React$Component) {\n  _inherits(FindRefWrapper, _React$Component);\n  var _super = _createSuper(FindRefWrapper);\n  function FindRefWrapper() {\n    _classCallCheck(this, FindRefWrapper);\n    return _super.apply(this, arguments);\n  }\n  _createClass(FindRefWrapper, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // eslint-disable-next-line react/no-find-dom-node\n      var root = ReactDOM.findDOMNode(this);\n      this.props.onFoundRef(root);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return this.props.children || null;\n    }\n  }]);\n  return FindRefWrapper;\n}(React.Component);\nFindRefWrapper.displayName = 'FindRefWrapper';","map":{"version":3,"names":["React","ReactDOM","FindRefWrapper","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","componentDidMount","root","findDOMNode","props","onFoundRef","render","children","Component","displayName"],"sources":["/data/stackhub-web/plugins/myapps/node_modules/@patternfly/react-core/src/helpers/Popper/FindRefWrapper.tsx"],"sourcesContent":["import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\n\ninterface FindRefWrapperProps {\n  children: React.ReactNode;\n  onFoundRef: any;\n}\n\n/**\n * This component wraps any ReactNode and finds its ref\n * It has to be a class for findDOMNode to work\n * Ideally, all components used as triggers/toggles are either:\n * - class based components we can assign our own ref to\n * - functional components that have forwardRef implemented\n * However, there is no guarantee that is what will get passed in as trigger/toggle in the case of tooltips and popovers\n */\nexport class FindRefWrapper extends React.Component<FindRefWrapperProps> {\n  static displayName = 'FindRefWrapper';\n  componentDidMount() {\n    // eslint-disable-next-line react/no-find-dom-node\n    const root = ReactDOM.findDOMNode(this);\n    this.props.onFoundRef(root);\n  }\n\n  render() {\n    return this.props.children || null;\n  }\n}\n"],"mappings":";;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAO,KAAKC,QAAQ,MAAM,WAAW;AAOrC;;;;;;;;AAQA,WAAaC,cAAe,0BAAAC,gBAAA;EAAAC,SAAA,CAAAF,cAAA,EAAAC,gBAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,cAAA;EAAA,SAAAA,eAAA;IAAAK,eAAA,OAAAL,cAAA;IAAA,OAAAG,MAAA,CAAAG,KAAA,OAAAC,SAAA;EAAA;EAAAC,YAAA,CAAAR,cAAA;IAAAS,GAAA;IAAAC,KAAA,EAE1B,SAAAC,kBAAA,EAAiB;MACf;MACA,IAAMC,IAAI,GAAGb,QAAQ,CAACc,WAAW,CAAC,IAAI,CAAC;MACvC,IAAI,CAACC,KAAK,CAACC,UAAU,CAACH,IAAI,CAAC;IAC7B;EAAC;IAAAH,GAAA;IAAAC,KAAA,EAED,SAAAM,OAAA,EAAM;MACJ,OAAO,IAAI,CAACF,KAAK,CAACG,QAAQ,IAAI,IAAI;IACpC;EAAC;EAAA,OAAAjB,cAAA;AAAA,EAViCF,KAAK,CAACoB,SAA8B;AAC/DlB,cAAA,CAAAmB,WAAW,GAAG,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}
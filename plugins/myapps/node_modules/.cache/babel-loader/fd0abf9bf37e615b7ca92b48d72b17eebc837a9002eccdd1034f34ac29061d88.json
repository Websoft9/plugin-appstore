{"ast":null,"code":"export {\n// Predicate\nisSchema // Assertion\n, assertSchema // GraphQL Schema definition\n, GraphQLSchema } from \"./schema.mjs\";\nexport {\n// Predicates\nisType, isScalarType, isObjectType, isInterfaceType, isUnionType, isEnumType, isInputObjectType, isListType, isNonNullType, isInputType, isOutputType, isLeafType, isCompositeType, isAbstractType, isWrappingType, isNullableType, isNamedType, isRequiredArgument, isRequiredInputField // Assertions\n, assertType, assertScalarType, assertObjectType, assertInterfaceType, assertUnionType, assertEnumType, assertInputObjectType, assertListType, assertNonNullType, assertInputType, assertOutputType, assertLeafType, assertCompositeType, assertAbstractType, assertWrappingType, assertNullableType, assertNamedType // Un-modifiers\n, getNullableType, getNamedType // Definitions\n, GraphQLScalarType, GraphQLObjectType, GraphQLInterfaceType, GraphQLUnionType, GraphQLEnumType, GraphQLInputObjectType // Type Wrappers\n, GraphQLList, GraphQLNonNull } from \"./definition.mjs\";\nexport {\n// Predicate\nisDirective // Assertion\n, assertDirective // Directives Definition\n, GraphQLDirective // Built-in Directives defined by the Spec\n, isSpecifiedDirective, specifiedDirectives, GraphQLIncludeDirective, GraphQLSkipDirective, GraphQLDeprecatedDirective, GraphQLSpecifiedByDirective // Constant Deprecation Reason\n, DEFAULT_DEPRECATION_REASON } from \"./directives.mjs\";\n// Common built-in scalar instances.\nexport {\n// Predicate\nisSpecifiedScalarType // Standard GraphQL Scalars\n, specifiedScalarTypes, GraphQLInt, GraphQLFloat, GraphQLString, GraphQLBoolean, GraphQLID } from \"./scalars.mjs\";\nexport {\n// Predicate\nisIntrospectionType // GraphQL Types for introspection.\n, introspectionTypes, __Schema, __Directive, __DirectiveLocation, __Type, __Field, __InputValue, __EnumValue, __TypeKind // \"Enum\" of Type Kinds\n, TypeKind // Meta-field definitions.\n, SchemaMetaFieldDef, TypeMetaFieldDef, TypeNameMetaFieldDef } from \"./introspection.mjs\";\n// Validate GraphQL schema.\nexport { validateSchema, assertValidSchema } from \"./validate.mjs\";","map":{"version":3,"names":["isSchema","assertSchema","GraphQLSchema","isType","isScalarType","isObjectType","isInterfaceType","isUnionType","isEnumType","isInputObjectType","isListType","isNonNullType","isInputType","isOutputType","isLeafType","isCompositeType","isAbstractType","isWrappingType","isNullableType","isNamedType","isRequiredArgument","isRequiredInputField","assertType","assertScalarType","assertObjectType","assertInterfaceType","assertUnionType","assertEnumType","assertInputObjectType","assertListType","assertNonNullType","assertInputType","assertOutputType","assertLeafType","assertCompositeType","assertAbstractType","assertWrappingType","assertNullableType","assertNamedType","getNullableType","getNamedType","GraphQLScalarType","GraphQLObjectType","GraphQLInterfaceType","GraphQLUnionType","GraphQLEnumType","GraphQLInputObjectType","GraphQLList","GraphQLNonNull","isDirective","assertDirective","GraphQLDirective","isSpecifiedDirective","specifiedDirectives","GraphQLIncludeDirective","GraphQLSkipDirective","GraphQLDeprecatedDirective","GraphQLSpecifiedByDirective","DEFAULT_DEPRECATION_REASON","isSpecifiedScalarType","specifiedScalarTypes","GraphQLInt","GraphQLFloat","GraphQLString","GraphQLBoolean","GraphQLID","isIntrospectionType","introspectionTypes","__Schema","__Directive","__DirectiveLocation","__Type","__Field","__InputValue","__EnumValue","__TypeKind","TypeKind","SchemaMetaFieldDef","TypeMetaFieldDef","TypeNameMetaFieldDef","validateSchema","assertValidSchema"],"sources":["/data/stackhub-web/plugins/myapps/node_modules/graphql/type/index.mjs"],"sourcesContent":["export { // Predicate\nisSchema // Assertion\n, assertSchema // GraphQL Schema definition\n, GraphQLSchema } from \"./schema.mjs\";\nexport { // Predicates\nisType, isScalarType, isObjectType, isInterfaceType, isUnionType, isEnumType, isInputObjectType, isListType, isNonNullType, isInputType, isOutputType, isLeafType, isCompositeType, isAbstractType, isWrappingType, isNullableType, isNamedType, isRequiredArgument, isRequiredInputField // Assertions\n, assertType, assertScalarType, assertObjectType, assertInterfaceType, assertUnionType, assertEnumType, assertInputObjectType, assertListType, assertNonNullType, assertInputType, assertOutputType, assertLeafType, assertCompositeType, assertAbstractType, assertWrappingType, assertNullableType, assertNamedType // Un-modifiers\n, getNullableType, getNamedType // Definitions\n, GraphQLScalarType, GraphQLObjectType, GraphQLInterfaceType, GraphQLUnionType, GraphQLEnumType, GraphQLInputObjectType // Type Wrappers\n, GraphQLList, GraphQLNonNull } from \"./definition.mjs\";\nexport { // Predicate\nisDirective // Assertion\n, assertDirective // Directives Definition\n, GraphQLDirective // Built-in Directives defined by the Spec\n, isSpecifiedDirective, specifiedDirectives, GraphQLIncludeDirective, GraphQLSkipDirective, GraphQLDeprecatedDirective, GraphQLSpecifiedByDirective // Constant Deprecation Reason\n, DEFAULT_DEPRECATION_REASON } from \"./directives.mjs\";\n// Common built-in scalar instances.\nexport { // Predicate\nisSpecifiedScalarType // Standard GraphQL Scalars\n, specifiedScalarTypes, GraphQLInt, GraphQLFloat, GraphQLString, GraphQLBoolean, GraphQLID } from \"./scalars.mjs\";\nexport { // Predicate\nisIntrospectionType // GraphQL Types for introspection.\n, introspectionTypes, __Schema, __Directive, __DirectiveLocation, __Type, __Field, __InputValue, __EnumValue, __TypeKind // \"Enum\" of Type Kinds\n, TypeKind // Meta-field definitions.\n, SchemaMetaFieldDef, TypeMetaFieldDef, TypeNameMetaFieldDef } from \"./introspection.mjs\";\n// Validate GraphQL schema.\nexport { validateSchema, assertValidSchema } from \"./validate.mjs\";\n"],"mappings":"AAAA;AAAS;AACTA,QAAQ,CAAC;AAAA,EACPC,YAAY,CAAC;AAAA,EACbC,aAAa,QAAQ,cAAc;AACrC;AAAS;AACTC,MAAM,EAAEC,YAAY,EAAEC,YAAY,EAAEC,eAAe,EAAEC,WAAW,EAAEC,UAAU,EAAEC,iBAAiB,EAAEC,UAAU,EAAEC,aAAa,EAAEC,WAAW,EAAEC,YAAY,EAAEC,UAAU,EAAEC,eAAe,EAAEC,cAAc,EAAEC,cAAc,EAAEC,cAAc,EAAEC,WAAW,EAAEC,kBAAkB,EAAEC,oBAAoB,CAAC;AAAA,EACxRC,UAAU,EAAEC,gBAAgB,EAAEC,gBAAgB,EAAEC,mBAAmB,EAAEC,eAAe,EAAEC,cAAc,EAAEC,qBAAqB,EAAEC,cAAc,EAAEC,iBAAiB,EAAEC,eAAe,EAAEC,gBAAgB,EAAEC,cAAc,EAAEC,mBAAmB,EAAEC,kBAAkB,EAAEC,kBAAkB,EAAEC,kBAAkB,EAAEC,eAAe,CAAC;AAAA,EACpTC,eAAe,EAAEC,YAAY,CAAC;AAAA,EAC9BC,iBAAiB,EAAEC,iBAAiB,EAAEC,oBAAoB,EAAEC,gBAAgB,EAAEC,eAAe,EAAEC,sBAAsB,CAAC;AAAA,EACtHC,WAAW,EAAEC,cAAc,QAAQ,kBAAkB;AACvD;AAAS;AACTC,WAAW,CAAC;AAAA,EACVC,eAAe,CAAC;AAAA,EAChBC,gBAAgB,CAAC;AAAA,EACjBC,oBAAoB,EAAEC,mBAAmB,EAAEC,uBAAuB,EAAEC,oBAAoB,EAAEC,0BAA0B,EAAEC,2BAA2B,CAAC;AAAA,EAClJC,0BAA0B,QAAQ,kBAAkB;AACtD;AACA;AAAS;AACTC,qBAAqB,CAAC;AAAA,EACpBC,oBAAoB,EAAEC,UAAU,EAAEC,YAAY,EAAEC,aAAa,EAAEC,cAAc,EAAEC,SAAS,QAAQ,eAAe;AACjH;AAAS;AACTC,mBAAmB,CAAC;AAAA,EAClBC,kBAAkB,EAAEC,QAAQ,EAAEC,WAAW,EAAEC,mBAAmB,EAAEC,MAAM,EAAEC,OAAO,EAAEC,YAAY,EAAEC,WAAW,EAAEC,UAAU,CAAC;AAAA,EACvHC,QAAQ,CAAC;AAAA,EACTC,kBAAkB,EAAEC,gBAAgB,EAAEC,oBAAoB,QAAQ,qBAAqB;AACzF;AACA,SAASC,cAAc,EAAEC,iBAAiB,QAAQ,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}
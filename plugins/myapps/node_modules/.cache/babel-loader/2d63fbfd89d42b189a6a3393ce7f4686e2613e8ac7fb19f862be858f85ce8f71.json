{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport Dropzone from 'react-dropzone';\nimport styles from '@patternfly/react-styles/css/components/MultipleFileUpload/multiple-file-upload';\nimport { css } from '@patternfly/react-styles';\nexport var MultipleFileUploadContext = React.createContext({\n  open: function open() {}\n});\nexport var MultipleFileUpload = function MultipleFileUpload(_a) {\n  var className = _a.className,\n    children = _a.children,\n    _a$dropzoneProps = _a.dropzoneProps,\n    dropzoneProps = _a$dropzoneProps === void 0 ? {} : _a$dropzoneProps,\n    isHorizontal = _a.isHorizontal,\n    _a$onFileDrop = _a.onFileDrop,\n    onFileDrop = _a$onFileDrop === void 0 ? function () {} : _a$onFileDrop,\n    props = __rest(_a, [\"className\", \"children\", \"dropzoneProps\", \"isHorizontal\", \"onFileDrop\"]);\n  var onDropAccepted = function onDropAccepted(acceptedFiles, event) {\n    onFileDrop(acceptedFiles);\n    // allow users to set a custom drop accepted handler rather than using on data change\n    dropzoneProps.onDropAccepted && dropzoneProps.onDropAccepted(acceptedFiles, event);\n  };\n  var onDropRejected = function onDropRejected(rejectedFiles, event) {\n    dropzoneProps.onDropRejected && (dropzoneProps === null || dropzoneProps === void 0 ? void 0 : dropzoneProps.onDropRejected(rejectedFiles, event));\n  };\n  return React.createElement(Dropzone, Object.assign({\n    multiple: true\n  }, dropzoneProps, {\n    onDropAccepted: onDropAccepted,\n    onDropRejected: onDropRejected\n  }), function (_ref) {\n    var getRootProps = _ref.getRootProps,\n      getInputProps = _ref.getInputProps,\n      isDragActive = _ref.isDragActive,\n      open = _ref.open;\n    var rootProps = getRootProps(Object.assign(Object.assign({}, props), {\n      onClick: function onClick(event) {\n        return event.preventDefault();\n      } // Prevents clicking TextArea from opening file dialog\n    }));\n\n    var inputProps = getInputProps();\n    return React.createElement(MultipleFileUploadContext.Provider, {\n      value: {\n        open: open\n      }\n    }, React.createElement(\"div\", Object.assign({\n      className: css(styles.multipleFileUpload, isDragActive && styles.modifiers.dragOver, isHorizontal && styles.modifiers.horizontal, className)\n    }, rootProps, props), React.createElement(\"input\", Object.assign({}, inputProps)), children));\n  });\n};\nMultipleFileUpload.displayName = 'MultipleFileUpload';","map":{"version":3,"names":["React","Dropzone","styles","css","MultipleFileUploadContext","createContext","open","MultipleFileUpload","_a","className","children","_a$dropzoneProps","dropzoneProps","isHorizontal","_a$onFileDrop","onFileDrop","props","__rest","onDropAccepted","acceptedFiles","event","onDropRejected","rejectedFiles","createElement","Object","assign","multiple","_ref","getRootProps","getInputProps","isDragActive","rootProps","onClick","preventDefault","inputProps","Provider","value","multipleFileUpload","modifiers","dragOver","horizontal","displayName"],"sources":["/data/stackhub-web/plugins/myapps/node_modules/@patternfly/react-core/src/components/MultipleFileUpload/MultipleFileUpload.tsx"],"sourcesContent":["import * as React from 'react';\nimport Dropzone, { DropzoneProps, DropFileEventHandler } from 'react-dropzone';\nimport styles from '@patternfly/react-styles/css/components/MultipleFileUpload/multiple-file-upload';\nimport { css } from '@patternfly/react-styles';\n\n/** Acts as a container for all other MultipleFileUpload sub-components. This sub-component\n * also provides the functionality for file uploads, and access to the uploaded files via\n * a callback.\n */\n\nexport interface MultipleFileUploadProps extends Omit<React.HTMLProps<HTMLDivElement>, 'value'> {\n  /** Content rendered inside the multi upload field */\n  children?: React.ReactNode;\n  /** Class to add to outer div */\n  className?: string;\n  /** Optional extra props to customize react-dropzone. */\n  dropzoneProps?: DropzoneProps;\n  /** Flag setting the component to horizontal styling mode */\n  isHorizontal?: boolean;\n  /** When files are dropped or uploaded this callback will be called with all accepted files */\n  onFileDrop?: (data: File[]) => void;\n}\n\nexport const MultipleFileUploadContext = React.createContext({\n  open: () => {}\n});\n\nexport const MultipleFileUpload: React.FunctionComponent<MultipleFileUploadProps> = ({\n  className,\n  children,\n  dropzoneProps = {},\n  isHorizontal,\n  onFileDrop = () => {},\n  ...props\n}: MultipleFileUploadProps) => {\n  const onDropAccepted: DropFileEventHandler = (acceptedFiles: File[], event) => {\n    onFileDrop(acceptedFiles);\n    // allow users to set a custom drop accepted handler rather than using on data change\n    dropzoneProps.onDropAccepted && dropzoneProps.onDropAccepted(acceptedFiles, event);\n  };\n\n  const onDropRejected: DropFileEventHandler = (rejectedFiles, event) => {\n    dropzoneProps.onDropRejected && dropzoneProps?.onDropRejected(rejectedFiles, event);\n  };\n\n  return (\n    <Dropzone multiple={true} {...dropzoneProps} onDropAccepted={onDropAccepted} onDropRejected={onDropRejected}>\n      {({ getRootProps, getInputProps, isDragActive, open }) => {\n        const rootProps = getRootProps({\n          ...props,\n          onClick: event => event.preventDefault() // Prevents clicking TextArea from opening file dialog\n        });\n        const inputProps = getInputProps();\n\n        return (\n          <MultipleFileUploadContext.Provider value={{ open }}>\n            <div\n              className={css(\n                styles.multipleFileUpload,\n                isDragActive && styles.modifiers.dragOver,\n                isHorizontal && styles.modifiers.horizontal,\n                className\n              )}\n              {...rootProps}\n              {...props}\n            >\n              <input\n                /* hidden, necessary for react-dropzone */\n                {...inputProps}\n              />\n              {children}\n            </div>\n          </MultipleFileUploadContext.Provider>\n        );\n      }}\n    </Dropzone>\n  );\n};\n\nMultipleFileUpload.displayName = 'MultipleFileUpload';\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,QAAiD,MAAM,gBAAgB;AAC9E,OAAOC,MAAM,MAAM,iFAAiF;AACpG,SAASC,GAAG,QAAQ,0BAA0B;AAoB9C,OAAO,IAAMC,yBAAyB,GAAGJ,KAAK,CAACK,aAAa,CAAC;EAC3DC,IAAI,EAAE,SAAAA,KAAA,EAAK,CAAE;CACd,CAAC;AAEF,OAAO,IAAMC,kBAAkB,GAAqD,SAAvEA,kBAAkBA,CAAsDC,EAO3D,EAAI;MAN5BC,SAAS,GAIYD,EAEG,CANxBC,SAAS;IACTC,QAAQ,GAGaF,EAEG,CALxBE,QAAQ;IAAAC,gBAAA,GAGaH,EAEG,CAJxBI,aAAa;IAAbA,aAAa,GAAAD,gBAAA,cAAG,EAAE,GAAAA,gBAAA;IAClBE,YAAY,GACSL,EAEG,CAHxBK,YAAY;IAAAC,aAAA,GACSN,EAEG,CAFxBO,UAAU;IAAVA,UAAU,GAAAD,aAAA,cAAG,YAAK,CAAE,CAAC,GAAAA,aAAA;IAClBE,KAAK,GAAAC,MAAA,CAAAT,EAAA,EAN2E,wEAOpF,CADS;EAER,IAAMU,cAAc,GAAyB,SAAvCA,cAAcA,CAA0BC,aAAqB,EAAEC,KAAK,EAAI;IAC5EL,UAAU,CAACI,aAAa,CAAC;IACzB;IACAP,aAAa,CAACM,cAAc,IAAIN,aAAa,CAACM,cAAc,CAACC,aAAa,EAAEC,KAAK,CAAC;EACpF,CAAC;EAED,IAAMC,cAAc,GAAyB,SAAvCA,cAAcA,CAA0BC,aAAa,EAAEF,KAAK,EAAI;IACpER,aAAa,CAACS,cAAc,KAAIT,aAAa,aAAbA,aAAa,uBAAbA,aAAa,CAAES,cAAc,CAACC,aAAa,EAAEF,KAAK,CAAC;EACrF,CAAC;EAED,OACEpB,KAAA,CAAAuB,aAAA,CAACtB,QAAQ,EAAAuB,MAAA,CAAAC,MAAA;IAACC,QAAQ,EAAE;EAAI,GAAMd,aAAa;IAAEM,cAAc,EAAEA,cAAc;IAAEG,cAAc,EAAEA;EAAc,IACxG,UAAAM,IAAA,EAAwD;IAAA,IAArDC,YAAY,GAAAD,IAAA,CAAZC,YAAY;MAAEC,aAAa,GAAAF,IAAA,CAAbE,aAAa;MAAEC,YAAY,GAAAH,IAAA,CAAZG,YAAY;MAAExB,IAAI,GAAAqB,IAAA,CAAJrB,IAAI;IACjD,IAAMyB,SAAS,GAAGH,YAAY,CAAAJ,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KACzBT,KAAK;MACRgB,OAAO,EAAE,SAAAA,QAAAZ,KAAK;QAAA,OAAIA,KAAK,CAACa,cAAc,EAAE;MAAA,EAAC;OACzC;;IACF,IAAMC,UAAU,GAAGL,aAAa,EAAE;IAElC,OACE7B,KAAA,CAAAuB,aAAA,CAACnB,yBAAyB,CAAC+B,QAAQ;MAACC,KAAK,EAAE;QAAE9B,IAAI,EAAJA;MAAI;IAAE,GACjDN,KAAA,CAAAuB,aAAA,QAAAC,MAAA,CAAAC,MAAA;MACEhB,SAAS,EAAEN,GAAG,CACZD,MAAM,CAACmC,kBAAkB,EACzBP,YAAY,IAAI5B,MAAM,CAACoC,SAAS,CAACC,QAAQ,EACzC1B,YAAY,IAAIX,MAAM,CAACoC,SAAS,CAACE,UAAU,EAC3C/B,SAAS;IACV,GACGsB,SAAS,EACTf,KAAK,GAEThB,KAAA,CAAAuB,aAAA,UAAAC,MAAA,CAAAC,MAAA,KAEMS,UAAU,EACd,EACDxB,QAAQ,CACL,CAC6B;EAEzC,CAAC,CACQ;AAEf,CAAC;AAEDH,kBAAkB,CAACkC,WAAW,GAAG,oBAAoB"},"metadata":{},"sourceType":"module","externalDependencies":[]}
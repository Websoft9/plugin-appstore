{"ast":null,"code":"import _classCallCheck from \"/data/stackhub-web/plugins/myapps/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/data/stackhub-web/plugins/myapps/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/data/stackhub-web/plugins/myapps/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/data/stackhub-web/plugins/myapps/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport { Button } from '../Button';\nimport { Tooltip } from '../Tooltip';\nimport TimesIcon from '@patternfly/react-icons/dist/esm/icons/times-icon';\nimport styles from '@patternfly/react-styles/css/components/Chip/chip';\nimport { GenerateId } from '../../helpers/GenerateId/GenerateId';\nimport { getOUIAProps, getDefaultOUIAId } from '../../helpers';\nexport var Chip = /*#__PURE__*/function (_React$Component) {\n  _inherits(Chip, _React$Component);\n  var _super = _createSuper(Chip);\n  function Chip(props) {\n    var _this;\n    _classCallCheck(this, Chip);\n    _this = _super.call(this, props);\n    _this.span = React.createRef();\n    _this.setChipStyle = function () {\n      return {\n        '--pf-c-chip__text--MaxWidth': _this.props.textMaxWidth\n      };\n    };\n    _this.renderOverflowChip = function () {\n      var _a = _this.props,\n        children = _a.children,\n        className = _a.className,\n        onClick = _a.onClick,\n        ouiaId = _a.ouiaId,\n        textMaxWidth = _a.textMaxWidth,\n        style = _a.style,\n        component = _a.component,\n        tooltipPosition = _a.tooltipPosition,\n        isOverflowChip = _a.isOverflowChip,\n        closeBtnAriaLabel = _a.closeBtnAriaLabel,\n        isReadOnly = _a.isReadOnly,\n        props = __rest(_a, [\"children\", \"className\", \"onClick\", \"ouiaId\", \"textMaxWidth\", \"style\", \"component\", \"tooltipPosition\", \"isOverflowChip\", \"closeBtnAriaLabel\", \"isReadOnly\"]);\n      var Component = component;\n      return React.createElement(Component, Object.assign({\n        onClick: onClick\n      }, textMaxWidth && Object.assign({\n        style: _this.setChipStyle()\n      }, style), {\n        className: css(styles.chip, styles.modifiers.overflow, className)\n      }, component === 'button' ? {\n        type: 'button'\n      } : {}, getOUIAProps('OverflowChip', ouiaId !== undefined ? ouiaId : _this.state.ouiaStateId), props), React.createElement(\"span\", {\n        className: css(styles.chipText)\n      }, children));\n    };\n    _this.renderChip = function (randomId) {\n      var _this$props = _this.props,\n        children = _this$props.children,\n        tooltipPosition = _this$props.tooltipPosition;\n      if (_this.state.isTooltipVisible) {\n        return React.createElement(Tooltip, {\n          position: tooltipPosition,\n          content: children\n        }, _this.renderInnerChip(randomId));\n      }\n      return _this.renderInnerChip(randomId);\n    };\n    _this.state = {\n      isTooltipVisible: false,\n      ouiaStateId: getDefaultOUIAId(Chip.displayName)\n    };\n    return _this;\n  }\n  _createClass(Chip, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        isTooltipVisible: Boolean(this.span.current && this.span.current.offsetWidth < this.span.current.scrollWidth)\n      });\n    }\n  }, {\n    key: \"renderInnerChip\",\n    value: function renderInnerChip(id) {\n      var _a = this.props,\n        children = _a.children,\n        className = _a.className,\n        onClick = _a.onClick,\n        closeBtnAriaLabel = _a.closeBtnAriaLabel,\n        isReadOnly = _a.isReadOnly,\n        isOverflowChip = _a.isOverflowChip,\n        tooltipPosition = _a.tooltipPosition,\n        component = _a.component,\n        ouiaId = _a.ouiaId,\n        props = __rest(_a, [\"children\", \"className\", \"onClick\", \"closeBtnAriaLabel\", \"isReadOnly\", \"isOverflowChip\", \"tooltipPosition\", \"component\", \"ouiaId\"]);\n      var Component = component;\n      return React.createElement(Component, Object.assign({}, this.props.textMaxWidth && {\n        style: this.setChipStyle()\n      }, {\n        className: css(styles.chip, className)\n      }, this.state.isTooltipVisible && {\n        tabIndex: 0\n      }, getOUIAProps(Chip.displayName, ouiaId !== undefined ? ouiaId : this.state.ouiaStateId), props), React.createElement(\"span\", {\n        ref: this.span,\n        className: css(styles.chipText),\n        id: id\n      }, children), !isReadOnly && React.createElement(Button, {\n        onClick: onClick,\n        variant: \"plain\",\n        \"aria-label\": closeBtnAriaLabel,\n        id: \"remove_\".concat(id),\n        \"aria-labelledby\": \"remove_\".concat(id, \" \").concat(id),\n        ouiaId: ouiaId || closeBtnAriaLabel\n      }, React.createElement(TimesIcon, {\n        \"aria-hidden\": \"true\"\n      })));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      var isOverflowChip = this.props.isOverflowChip;\n      return React.createElement(GenerateId, null, function (randomId) {\n        return isOverflowChip ? _this2.renderOverflowChip() : _this2.renderChip(_this2.props.id || randomId);\n      });\n    }\n  }]);\n  return Chip;\n}(React.Component);\nChip.displayName = 'Chip';\nChip.defaultProps = {\n  closeBtnAriaLabel: 'close',\n  className: '',\n  isOverflowChip: false,\n  isReadOnly: false,\n  tooltipPosition: 'top',\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  onClick: function onClick(_e) {\n    return undefined;\n  },\n  component: 'div'\n};","map":{"version":3,"names":["React","css","Button","Tooltip","TimesIcon","styles","GenerateId","getOUIAProps","getDefaultOUIAId","Chip","_React$Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","span","createRef","setChipStyle","textMaxWidth","renderOverflowChip","_a","children","className","onClick","ouiaId","style","component","tooltipPosition","isOverflowChip","closeBtnAriaLabel","isReadOnly","__rest","Component","createElement","Object","assign","chip","modifiers","overflow","type","undefined","state","ouiaStateId","chipText","renderChip","randomId","_this$props","isTooltipVisible","position","content","renderInnerChip","displayName","_createClass","key","value","componentDidMount","setState","Boolean","current","offsetWidth","scrollWidth","id","tabIndex","ref","variant","concat","render","_this2","defaultProps","_e"],"sources":["/data/stackhub-web/plugins/myapps/node_modules/@patternfly/react-core/src/components/Chip/Chip.tsx"],"sourcesContent":["import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport { Button } from '../Button';\nimport { Tooltip, TooltipPosition } from '../Tooltip';\nimport TimesIcon from '@patternfly/react-icons/dist/esm/icons/times-icon';\nimport styles from '@patternfly/react-styles/css/components/Chip/chip';\nimport { GenerateId } from '../../helpers/GenerateId/GenerateId';\nimport { getOUIAProps, OUIAProps, getDefaultOUIAId } from '../../helpers';\n\nexport interface ChipProps extends React.HTMLProps<HTMLDivElement>, OUIAProps {\n  /** Content rendered inside the chip text */\n  children?: React.ReactNode;\n  /** Aria Label for close button */\n  closeBtnAriaLabel?: string;\n  /** Additional classes added to the chip item */\n  className?: string;\n  /** Flag indicating if the chip is an overflow chip */\n  isOverflowChip?: boolean;\n  /** Flag indicating if chip is read only */\n  isReadOnly?: boolean;\n  /** Function that is called when clicking on the chip close button */\n  onClick?: (event: React.MouseEvent) => void;\n  /** Component that will be used for chip. It is recommended that <button> or <li>  are used when the chip is an overflow chip. */\n  component?: React.ReactNode;\n  /** Position of the tooltip which is displayed if text is longer */\n  tooltipPosition?:\n    | TooltipPosition\n    | 'auto'\n    | 'top'\n    | 'bottom'\n    | 'left'\n    | 'right'\n    | 'top-start'\n    | 'top-end'\n    | 'bottom-start'\n    | 'bottom-end'\n    | 'left-start'\n    | 'left-end'\n    | 'right-start'\n    | 'right-end';\n\n  /** Css property expressed in percentage or any css unit that overrides the default value of the max-width of the chip's text */\n  textMaxWidth?: string;\n  /** Value to overwrite the randomly generated data-ouia-component-id.*/\n  ouiaId?: number | string;\n}\n\ninterface ChipState {\n  isTooltipVisible: boolean;\n  ouiaStateId: string;\n}\n\nexport class Chip extends React.Component<ChipProps, ChipState> {\n  static displayName = 'Chip';\n  constructor(props: ChipProps) {\n    super(props);\n    this.state = {\n      isTooltipVisible: false,\n      ouiaStateId: getDefaultOUIAId(Chip.displayName)\n    };\n  }\n  span = React.createRef<HTMLSpanElement>();\n\n  static defaultProps: ChipProps = {\n    closeBtnAriaLabel: 'close',\n    className: '',\n    isOverflowChip: false,\n    isReadOnly: false,\n    tooltipPosition: 'top' as 'auto' | 'top' | 'bottom' | 'left' | 'right',\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    onClick: (_e: React.MouseEvent) => undefined as any,\n    component: 'div' as React.ReactNode\n  };\n\n  componentDidMount() {\n    this.setState({\n      isTooltipVisible: Boolean(this.span.current && this.span.current.offsetWidth < this.span.current.scrollWidth)\n    });\n  }\n\n  setChipStyle = () => ({\n    '--pf-c-chip__text--MaxWidth': this.props.textMaxWidth\n  });\n\n  renderOverflowChip = () => {\n    const {\n      children,\n      className,\n      onClick,\n      ouiaId,\n      textMaxWidth,\n      style,\n      component,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      tooltipPosition,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      isOverflowChip,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      closeBtnAriaLabel,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      isReadOnly,\n      ...props\n    } = this.props;\n    const Component = component as any;\n    return (\n      <Component\n        onClick={onClick}\n        {...(textMaxWidth && {\n          style: this.setChipStyle(),\n          ...style\n        })}\n        className={css(styles.chip, styles.modifiers.overflow, className)}\n        {...(component === 'button' ? { type: 'button' } : {})}\n        {...getOUIAProps('OverflowChip', ouiaId !== undefined ? ouiaId : this.state.ouiaStateId)}\n        {...props}\n      >\n        <span className={css(styles.chipText)}>{children}</span>\n      </Component>\n    );\n  };\n\n  renderInnerChip(id: string) {\n    const {\n      children,\n      className,\n      onClick,\n      closeBtnAriaLabel,\n      isReadOnly,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      isOverflowChip,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      tooltipPosition,\n      component,\n      ouiaId,\n      ...props\n    } = this.props;\n    const Component = component as any;\n    return (\n      <Component\n        {...(this.props.textMaxWidth && {\n          style: this.setChipStyle()\n        })}\n        className={css(styles.chip, className)}\n        {...(this.state.isTooltipVisible && { tabIndex: 0 })}\n        {...getOUIAProps(Chip.displayName, ouiaId !== undefined ? ouiaId : this.state.ouiaStateId)}\n        {...props}\n      >\n        <span ref={this.span} className={css(styles.chipText)} id={id}>\n          {children}\n        </span>\n        {!isReadOnly && (\n          <Button\n            onClick={onClick}\n            variant=\"plain\"\n            aria-label={closeBtnAriaLabel}\n            id={`remove_${id}`}\n            aria-labelledby={`remove_${id} ${id}`}\n            ouiaId={ouiaId || closeBtnAriaLabel}\n          >\n            <TimesIcon aria-hidden=\"true\" />\n          </Button>\n        )}\n      </Component>\n    );\n  }\n\n  renderChip = (randomId: string) => {\n    const { children, tooltipPosition } = this.props;\n    if (this.state.isTooltipVisible) {\n      return (\n        <Tooltip position={tooltipPosition} content={children}>\n          {this.renderInnerChip(randomId)}\n        </Tooltip>\n      );\n    }\n    return this.renderInnerChip(randomId);\n  };\n\n  render() {\n    const { isOverflowChip } = this.props;\n    return (\n      <GenerateId>\n        {randomId => (isOverflowChip ? this.renderOverflowChip() : this.renderChip(this.props.id || randomId))}\n      </GenerateId>\n    );\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
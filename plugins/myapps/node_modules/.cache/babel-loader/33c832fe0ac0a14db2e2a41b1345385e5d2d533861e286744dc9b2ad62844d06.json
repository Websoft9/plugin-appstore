{"ast":null,"code":"function ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport objectValues from \"../polyfills/objectValues.mjs\";\nimport keyMap from \"../jsutils/keyMap.mjs\";\nimport inspect from \"../jsutils/inspect.mjs\";\nimport invariant from \"../jsutils/invariant.mjs\";\nimport naturalCompare from \"../jsutils/naturalCompare.mjs\";\nimport { print } from \"../language/printer.mjs\";\nimport { visit } from \"../language/visitor.mjs\";\nimport { isSpecifiedScalarType } from \"../type/scalars.mjs\";\nimport { isScalarType, isObjectType, isInterfaceType, isUnionType, isEnumType, isInputObjectType, isNonNullType, isListType, isNamedType, isRequiredArgument, isRequiredInputField } from \"../type/definition.mjs\";\nimport { astFromValue } from \"./astFromValue.mjs\";\nexport var BreakingChangeType = Object.freeze({\n  TYPE_REMOVED: 'TYPE_REMOVED',\n  TYPE_CHANGED_KIND: 'TYPE_CHANGED_KIND',\n  TYPE_REMOVED_FROM_UNION: 'TYPE_REMOVED_FROM_UNION',\n  VALUE_REMOVED_FROM_ENUM: 'VALUE_REMOVED_FROM_ENUM',\n  REQUIRED_INPUT_FIELD_ADDED: 'REQUIRED_INPUT_FIELD_ADDED',\n  IMPLEMENTED_INTERFACE_REMOVED: 'IMPLEMENTED_INTERFACE_REMOVED',\n  FIELD_REMOVED: 'FIELD_REMOVED',\n  FIELD_CHANGED_KIND: 'FIELD_CHANGED_KIND',\n  REQUIRED_ARG_ADDED: 'REQUIRED_ARG_ADDED',\n  ARG_REMOVED: 'ARG_REMOVED',\n  ARG_CHANGED_KIND: 'ARG_CHANGED_KIND',\n  DIRECTIVE_REMOVED: 'DIRECTIVE_REMOVED',\n  DIRECTIVE_ARG_REMOVED: 'DIRECTIVE_ARG_REMOVED',\n  REQUIRED_DIRECTIVE_ARG_ADDED: 'REQUIRED_DIRECTIVE_ARG_ADDED',\n  DIRECTIVE_REPEATABLE_REMOVED: 'DIRECTIVE_REPEATABLE_REMOVED',\n  DIRECTIVE_LOCATION_REMOVED: 'DIRECTIVE_LOCATION_REMOVED'\n});\nexport var DangerousChangeType = Object.freeze({\n  VALUE_ADDED_TO_ENUM: 'VALUE_ADDED_TO_ENUM',\n  TYPE_ADDED_TO_UNION: 'TYPE_ADDED_TO_UNION',\n  OPTIONAL_INPUT_FIELD_ADDED: 'OPTIONAL_INPUT_FIELD_ADDED',\n  OPTIONAL_ARG_ADDED: 'OPTIONAL_ARG_ADDED',\n  IMPLEMENTED_INTERFACE_ADDED: 'IMPLEMENTED_INTERFACE_ADDED',\n  ARG_DEFAULT_VALUE_CHANGE: 'ARG_DEFAULT_VALUE_CHANGE'\n});\n\n/**\n * Given two schemas, returns an Array containing descriptions of all the types\n * of breaking changes covered by the other functions down below.\n */\nexport function findBreakingChanges(oldSchema, newSchema) {\n  var breakingChanges = findSchemaChanges(oldSchema, newSchema).filter(function (change) {\n    return change.type in BreakingChangeType;\n  });\n  return breakingChanges;\n}\n/**\n * Given two schemas, returns an Array containing descriptions of all the types\n * of potentially dangerous changes covered by the other functions down below.\n */\n\nexport function findDangerousChanges(oldSchema, newSchema) {\n  var dangerousChanges = findSchemaChanges(oldSchema, newSchema).filter(function (change) {\n    return change.type in DangerousChangeType;\n  });\n  return dangerousChanges;\n}\nfunction findSchemaChanges(oldSchema, newSchema) {\n  return [].concat(findTypeChanges(oldSchema, newSchema), findDirectiveChanges(oldSchema, newSchema));\n}\nfunction findDirectiveChanges(oldSchema, newSchema) {\n  var schemaChanges = [];\n  var directivesDiff = diff(oldSchema.getDirectives(), newSchema.getDirectives());\n  for (var _i2 = 0, _directivesDiff$remov2 = directivesDiff.removed; _i2 < _directivesDiff$remov2.length; _i2++) {\n    var oldDirective = _directivesDiff$remov2[_i2];\n    schemaChanges.push({\n      type: BreakingChangeType.DIRECTIVE_REMOVED,\n      description: \"\".concat(oldDirective.name, \" was removed.\")\n    });\n  }\n  for (var _i4 = 0, _directivesDiff$persi2 = directivesDiff.persisted; _i4 < _directivesDiff$persi2.length; _i4++) {\n    var _ref2 = _directivesDiff$persi2[_i4];\n    var _oldDirective = _ref2[0];\n    var newDirective = _ref2[1];\n    var argsDiff = diff(_oldDirective.args, newDirective.args);\n    for (var _i6 = 0, _argsDiff$added2 = argsDiff.added; _i6 < _argsDiff$added2.length; _i6++) {\n      var newArg = _argsDiff$added2[_i6];\n      if (isRequiredArgument(newArg)) {\n        schemaChanges.push({\n          type: BreakingChangeType.REQUIRED_DIRECTIVE_ARG_ADDED,\n          description: \"A required arg \".concat(newArg.name, \" on directive \").concat(_oldDirective.name, \" was added.\")\n        });\n      }\n    }\n    for (var _i8 = 0, _argsDiff$removed2 = argsDiff.removed; _i8 < _argsDiff$removed2.length; _i8++) {\n      var oldArg = _argsDiff$removed2[_i8];\n      schemaChanges.push({\n        type: BreakingChangeType.DIRECTIVE_ARG_REMOVED,\n        description: \"\".concat(oldArg.name, \" was removed from \").concat(_oldDirective.name, \".\")\n      });\n    }\n    if (_oldDirective.isRepeatable && !newDirective.isRepeatable) {\n      schemaChanges.push({\n        type: BreakingChangeType.DIRECTIVE_REPEATABLE_REMOVED,\n        description: \"Repeatable flag was removed from \".concat(_oldDirective.name, \".\")\n      });\n    }\n    for (var _i10 = 0, _oldDirective$locatio2 = _oldDirective.locations; _i10 < _oldDirective$locatio2.length; _i10++) {\n      var location = _oldDirective$locatio2[_i10];\n      if (newDirective.locations.indexOf(location) === -1) {\n        schemaChanges.push({\n          type: BreakingChangeType.DIRECTIVE_LOCATION_REMOVED,\n          description: \"\".concat(location, \" was removed from \").concat(_oldDirective.name, \".\")\n        });\n      }\n    }\n  }\n  return schemaChanges;\n}\nfunction findTypeChanges(oldSchema, newSchema) {\n  var schemaChanges = [];\n  var typesDiff = diff(objectValues(oldSchema.getTypeMap()), objectValues(newSchema.getTypeMap()));\n  for (var _i12 = 0, _typesDiff$removed2 = typesDiff.removed; _i12 < _typesDiff$removed2.length; _i12++) {\n    var oldType = _typesDiff$removed2[_i12];\n    schemaChanges.push({\n      type: BreakingChangeType.TYPE_REMOVED,\n      description: isSpecifiedScalarType(oldType) ? \"Standard scalar \".concat(oldType.name, \" was removed because it is not referenced anymore.\") : \"\".concat(oldType.name, \" was removed.\")\n    });\n  }\n  for (var _i14 = 0, _typesDiff$persisted2 = typesDiff.persisted; _i14 < _typesDiff$persisted2.length; _i14++) {\n    var _ref4 = _typesDiff$persisted2[_i14];\n    var _oldType = _ref4[0];\n    var newType = _ref4[1];\n    if (isEnumType(_oldType) && isEnumType(newType)) {\n      schemaChanges.push.apply(schemaChanges, findEnumTypeChanges(_oldType, newType));\n    } else if (isUnionType(_oldType) && isUnionType(newType)) {\n      schemaChanges.push.apply(schemaChanges, findUnionTypeChanges(_oldType, newType));\n    } else if (isInputObjectType(_oldType) && isInputObjectType(newType)) {\n      schemaChanges.push.apply(schemaChanges, findInputObjectTypeChanges(_oldType, newType));\n    } else if (isObjectType(_oldType) && isObjectType(newType)) {\n      schemaChanges.push.apply(schemaChanges, findFieldChanges(_oldType, newType).concat(findImplementedInterfacesChanges(_oldType, newType)));\n    } else if (isInterfaceType(_oldType) && isInterfaceType(newType)) {\n      schemaChanges.push.apply(schemaChanges, findFieldChanges(_oldType, newType).concat(findImplementedInterfacesChanges(_oldType, newType)));\n    } else if (_oldType.constructor !== newType.constructor) {\n      schemaChanges.push({\n        type: BreakingChangeType.TYPE_CHANGED_KIND,\n        description: \"\".concat(_oldType.name, \" changed from \") + \"\".concat(typeKindName(_oldType), \" to \").concat(typeKindName(newType), \".\")\n      });\n    }\n  }\n  return schemaChanges;\n}\nfunction findInputObjectTypeChanges(oldType, newType) {\n  var schemaChanges = [];\n  var fieldsDiff = diff(objectValues(oldType.getFields()), objectValues(newType.getFields()));\n  for (var _i16 = 0, _fieldsDiff$added2 = fieldsDiff.added; _i16 < _fieldsDiff$added2.length; _i16++) {\n    var newField = _fieldsDiff$added2[_i16];\n    if (isRequiredInputField(newField)) {\n      schemaChanges.push({\n        type: BreakingChangeType.REQUIRED_INPUT_FIELD_ADDED,\n        description: \"A required field \".concat(newField.name, \" on input type \").concat(oldType.name, \" was added.\")\n      });\n    } else {\n      schemaChanges.push({\n        type: DangerousChangeType.OPTIONAL_INPUT_FIELD_ADDED,\n        description: \"An optional field \".concat(newField.name, \" on input type \").concat(oldType.name, \" was added.\")\n      });\n    }\n  }\n  for (var _i18 = 0, _fieldsDiff$removed2 = fieldsDiff.removed; _i18 < _fieldsDiff$removed2.length; _i18++) {\n    var oldField = _fieldsDiff$removed2[_i18];\n    schemaChanges.push({\n      type: BreakingChangeType.FIELD_REMOVED,\n      description: \"\".concat(oldType.name, \".\").concat(oldField.name, \" was removed.\")\n    });\n  }\n  for (var _i20 = 0, _fieldsDiff$persisted2 = fieldsDiff.persisted; _i20 < _fieldsDiff$persisted2.length; _i20++) {\n    var _ref6 = _fieldsDiff$persisted2[_i20];\n    var _oldField = _ref6[0];\n    var _newField = _ref6[1];\n    var isSafe = isChangeSafeForInputObjectFieldOrFieldArg(_oldField.type, _newField.type);\n    if (!isSafe) {\n      schemaChanges.push({\n        type: BreakingChangeType.FIELD_CHANGED_KIND,\n        description: \"\".concat(oldType.name, \".\").concat(_oldField.name, \" changed type from \") + \"\".concat(String(_oldField.type), \" to \").concat(String(_newField.type), \".\")\n      });\n    }\n  }\n  return schemaChanges;\n}\nfunction findUnionTypeChanges(oldType, newType) {\n  var schemaChanges = [];\n  var possibleTypesDiff = diff(oldType.getTypes(), newType.getTypes());\n  for (var _i22 = 0, _possibleTypesDiff$ad2 = possibleTypesDiff.added; _i22 < _possibleTypesDiff$ad2.length; _i22++) {\n    var newPossibleType = _possibleTypesDiff$ad2[_i22];\n    schemaChanges.push({\n      type: DangerousChangeType.TYPE_ADDED_TO_UNION,\n      description: \"\".concat(newPossibleType.name, \" was added to union type \").concat(oldType.name, \".\")\n    });\n  }\n  for (var _i24 = 0, _possibleTypesDiff$re2 = possibleTypesDiff.removed; _i24 < _possibleTypesDiff$re2.length; _i24++) {\n    var oldPossibleType = _possibleTypesDiff$re2[_i24];\n    schemaChanges.push({\n      type: BreakingChangeType.TYPE_REMOVED_FROM_UNION,\n      description: \"\".concat(oldPossibleType.name, \" was removed from union type \").concat(oldType.name, \".\")\n    });\n  }\n  return schemaChanges;\n}\nfunction findEnumTypeChanges(oldType, newType) {\n  var schemaChanges = [];\n  var valuesDiff = diff(oldType.getValues(), newType.getValues());\n  for (var _i26 = 0, _valuesDiff$added2 = valuesDiff.added; _i26 < _valuesDiff$added2.length; _i26++) {\n    var newValue = _valuesDiff$added2[_i26];\n    schemaChanges.push({\n      type: DangerousChangeType.VALUE_ADDED_TO_ENUM,\n      description: \"\".concat(newValue.name, \" was added to enum type \").concat(oldType.name, \".\")\n    });\n  }\n  for (var _i28 = 0, _valuesDiff$removed2 = valuesDiff.removed; _i28 < _valuesDiff$removed2.length; _i28++) {\n    var oldValue = _valuesDiff$removed2[_i28];\n    schemaChanges.push({\n      type: BreakingChangeType.VALUE_REMOVED_FROM_ENUM,\n      description: \"\".concat(oldValue.name, \" was removed from enum type \").concat(oldType.name, \".\")\n    });\n  }\n  return schemaChanges;\n}\nfunction findImplementedInterfacesChanges(oldType, newType) {\n  var schemaChanges = [];\n  var interfacesDiff = diff(oldType.getInterfaces(), newType.getInterfaces());\n  for (var _i30 = 0, _interfacesDiff$added2 = interfacesDiff.added; _i30 < _interfacesDiff$added2.length; _i30++) {\n    var newInterface = _interfacesDiff$added2[_i30];\n    schemaChanges.push({\n      type: DangerousChangeType.IMPLEMENTED_INTERFACE_ADDED,\n      description: \"\".concat(newInterface.name, \" added to interfaces implemented by \").concat(oldType.name, \".\")\n    });\n  }\n  for (var _i32 = 0, _interfacesDiff$remov2 = interfacesDiff.removed; _i32 < _interfacesDiff$remov2.length; _i32++) {\n    var oldInterface = _interfacesDiff$remov2[_i32];\n    schemaChanges.push({\n      type: BreakingChangeType.IMPLEMENTED_INTERFACE_REMOVED,\n      description: \"\".concat(oldType.name, \" no longer implements interface \").concat(oldInterface.name, \".\")\n    });\n  }\n  return schemaChanges;\n}\nfunction findFieldChanges(oldType, newType) {\n  var schemaChanges = [];\n  var fieldsDiff = diff(objectValues(oldType.getFields()), objectValues(newType.getFields()));\n  for (var _i34 = 0, _fieldsDiff$removed4 = fieldsDiff.removed; _i34 < _fieldsDiff$removed4.length; _i34++) {\n    var oldField = _fieldsDiff$removed4[_i34];\n    schemaChanges.push({\n      type: BreakingChangeType.FIELD_REMOVED,\n      description: \"\".concat(oldType.name, \".\").concat(oldField.name, \" was removed.\")\n    });\n  }\n  for (var _i36 = 0, _fieldsDiff$persisted4 = fieldsDiff.persisted; _i36 < _fieldsDiff$persisted4.length; _i36++) {\n    var _ref8 = _fieldsDiff$persisted4[_i36];\n    var _oldField2 = _ref8[0];\n    var newField = _ref8[1];\n    schemaChanges.push.apply(schemaChanges, findArgChanges(oldType, _oldField2, newField));\n    var isSafe = isChangeSafeForObjectOrInterfaceField(_oldField2.type, newField.type);\n    if (!isSafe) {\n      schemaChanges.push({\n        type: BreakingChangeType.FIELD_CHANGED_KIND,\n        description: \"\".concat(oldType.name, \".\").concat(_oldField2.name, \" changed type from \") + \"\".concat(String(_oldField2.type), \" to \").concat(String(newField.type), \".\")\n      });\n    }\n  }\n  return schemaChanges;\n}\nfunction findArgChanges(oldType, oldField, newField) {\n  var schemaChanges = [];\n  var argsDiff = diff(oldField.args, newField.args);\n  for (var _i38 = 0, _argsDiff$removed4 = argsDiff.removed; _i38 < _argsDiff$removed4.length; _i38++) {\n    var oldArg = _argsDiff$removed4[_i38];\n    schemaChanges.push({\n      type: BreakingChangeType.ARG_REMOVED,\n      description: \"\".concat(oldType.name, \".\").concat(oldField.name, \" arg \").concat(oldArg.name, \" was removed.\")\n    });\n  }\n  for (var _i40 = 0, _argsDiff$persisted2 = argsDiff.persisted; _i40 < _argsDiff$persisted2.length; _i40++) {\n    var _ref10 = _argsDiff$persisted2[_i40];\n    var _oldArg = _ref10[0];\n    var newArg = _ref10[1];\n    var isSafe = isChangeSafeForInputObjectFieldOrFieldArg(_oldArg.type, newArg.type);\n    if (!isSafe) {\n      schemaChanges.push({\n        type: BreakingChangeType.ARG_CHANGED_KIND,\n        description: \"\".concat(oldType.name, \".\").concat(oldField.name, \" arg \").concat(_oldArg.name, \" has changed type from \") + \"\".concat(String(_oldArg.type), \" to \").concat(String(newArg.type), \".\")\n      });\n    } else if (_oldArg.defaultValue !== undefined) {\n      if (newArg.defaultValue === undefined) {\n        schemaChanges.push({\n          type: DangerousChangeType.ARG_DEFAULT_VALUE_CHANGE,\n          description: \"\".concat(oldType.name, \".\").concat(oldField.name, \" arg \").concat(_oldArg.name, \" defaultValue was removed.\")\n        });\n      } else {\n        // Since we looking only for client's observable changes we should\n        // compare default values in the same representation as they are\n        // represented inside introspection.\n        var oldValueStr = stringifyValue(_oldArg.defaultValue, _oldArg.type);\n        var newValueStr = stringifyValue(newArg.defaultValue, newArg.type);\n        if (oldValueStr !== newValueStr) {\n          schemaChanges.push({\n            type: DangerousChangeType.ARG_DEFAULT_VALUE_CHANGE,\n            description: \"\".concat(oldType.name, \".\").concat(oldField.name, \" arg \").concat(_oldArg.name, \" has changed defaultValue from \").concat(oldValueStr, \" to \").concat(newValueStr, \".\")\n          });\n        }\n      }\n    }\n  }\n  for (var _i42 = 0, _argsDiff$added4 = argsDiff.added; _i42 < _argsDiff$added4.length; _i42++) {\n    var _newArg = _argsDiff$added4[_i42];\n    if (isRequiredArgument(_newArg)) {\n      schemaChanges.push({\n        type: BreakingChangeType.REQUIRED_ARG_ADDED,\n        description: \"A required arg \".concat(_newArg.name, \" on \").concat(oldType.name, \".\").concat(oldField.name, \" was added.\")\n      });\n    } else {\n      schemaChanges.push({\n        type: DangerousChangeType.OPTIONAL_ARG_ADDED,\n        description: \"An optional arg \".concat(_newArg.name, \" on \").concat(oldType.name, \".\").concat(oldField.name, \" was added.\")\n      });\n    }\n  }\n  return schemaChanges;\n}\nfunction isChangeSafeForObjectOrInterfaceField(oldType, newType) {\n  if (isListType(oldType)) {\n    return (\n      // if they're both lists, make sure the underlying types are compatible\n      isListType(newType) && isChangeSafeForObjectOrInterfaceField(oldType.ofType, newType.ofType) ||\n      // moving from nullable to non-null of the same underlying type is safe\n      isNonNullType(newType) && isChangeSafeForObjectOrInterfaceField(oldType, newType.ofType)\n    );\n  }\n  if (isNonNullType(oldType)) {\n    // if they're both non-null, make sure the underlying types are compatible\n    return isNonNullType(newType) && isChangeSafeForObjectOrInterfaceField(oldType.ofType, newType.ofType);\n  }\n  return (\n    // if they're both named types, see if their names are equivalent\n    isNamedType(newType) && oldType.name === newType.name ||\n    // moving from nullable to non-null of the same underlying type is safe\n    isNonNullType(newType) && isChangeSafeForObjectOrInterfaceField(oldType, newType.ofType)\n  );\n}\nfunction isChangeSafeForInputObjectFieldOrFieldArg(oldType, newType) {\n  if (isListType(oldType)) {\n    // if they're both lists, make sure the underlying types are compatible\n    return isListType(newType) && isChangeSafeForInputObjectFieldOrFieldArg(oldType.ofType, newType.ofType);\n  }\n  if (isNonNullType(oldType)) {\n    return (\n      // if they're both non-null, make sure the underlying types are\n      // compatible\n      isNonNullType(newType) && isChangeSafeForInputObjectFieldOrFieldArg(oldType.ofType, newType.ofType) ||\n      // moving from non-null to nullable of the same underlying type is safe\n      !isNonNullType(newType) && isChangeSafeForInputObjectFieldOrFieldArg(oldType.ofType, newType)\n    );\n  } // if they're both named types, see if their names are equivalent\n\n  return isNamedType(newType) && oldType.name === newType.name;\n}\nfunction typeKindName(type) {\n  if (isScalarType(type)) {\n    return 'a Scalar type';\n  }\n  if (isObjectType(type)) {\n    return 'an Object type';\n  }\n  if (isInterfaceType(type)) {\n    return 'an Interface type';\n  }\n  if (isUnionType(type)) {\n    return 'a Union type';\n  }\n  if (isEnumType(type)) {\n    return 'an Enum type';\n  } // istanbul ignore else (See: 'https://github.com/graphql/graphql-js/issues/2618')\n\n  if (isInputObjectType(type)) {\n    return 'an Input type';\n  } // istanbul ignore next (Not reachable. All possible named types have been considered)\n\n  false || invariant(0, 'Unexpected type: ' + inspect(type));\n}\nfunction stringifyValue(value, type) {\n  var ast = astFromValue(value, type);\n  ast != null || invariant(0);\n  var sortedAST = visit(ast, {\n    ObjectValue: function ObjectValue(objectNode) {\n      // Make a copy since sort mutates array\n      var fields = [].concat(objectNode.fields);\n      fields.sort(function (fieldA, fieldB) {\n        return naturalCompare(fieldA.name.value, fieldB.name.value);\n      });\n      return _objectSpread(_objectSpread({}, objectNode), {}, {\n        fields: fields\n      });\n    }\n  });\n  return print(sortedAST);\n}\nfunction diff(oldArray, newArray) {\n  var added = [];\n  var removed = [];\n  var persisted = [];\n  var oldMap = keyMap(oldArray, function (_ref11) {\n    var name = _ref11.name;\n    return name;\n  });\n  var newMap = keyMap(newArray, function (_ref12) {\n    var name = _ref12.name;\n    return name;\n  });\n  for (var _i44 = 0; _i44 < oldArray.length; _i44++) {\n    var oldItem = oldArray[_i44];\n    var newItem = newMap[oldItem.name];\n    if (newItem === undefined) {\n      removed.push(oldItem);\n    } else {\n      persisted.push([oldItem, newItem]);\n    }\n  }\n  for (var _i46 = 0; _i46 < newArray.length; _i46++) {\n    var _newItem = newArray[_i46];\n    if (oldMap[_newItem.name] === undefined) {\n      added.push(_newItem);\n    }\n  }\n  return {\n    added: added,\n    persisted: persisted,\n    removed: removed\n  };\n}","map":{"version":3,"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","objectValues","keyMap","inspect","invariant","naturalCompare","print","visit","isSpecifiedScalarType","isScalarType","isObjectType","isInterfaceType","isUnionType","isEnumType","isInputObjectType","isNonNullType","isListType","isNamedType","isRequiredArgument","isRequiredInputField","astFromValue","BreakingChangeType","freeze","TYPE_REMOVED","TYPE_CHANGED_KIND","TYPE_REMOVED_FROM_UNION","VALUE_REMOVED_FROM_ENUM","REQUIRED_INPUT_FIELD_ADDED","IMPLEMENTED_INTERFACE_REMOVED","FIELD_REMOVED","FIELD_CHANGED_KIND","REQUIRED_ARG_ADDED","ARG_REMOVED","ARG_CHANGED_KIND","DIRECTIVE_REMOVED","DIRECTIVE_ARG_REMOVED","REQUIRED_DIRECTIVE_ARG_ADDED","DIRECTIVE_REPEATABLE_REMOVED","DIRECTIVE_LOCATION_REMOVED","DangerousChangeType","VALUE_ADDED_TO_ENUM","TYPE_ADDED_TO_UNION","OPTIONAL_INPUT_FIELD_ADDED","OPTIONAL_ARG_ADDED","IMPLEMENTED_INTERFACE_ADDED","ARG_DEFAULT_VALUE_CHANGE","findBreakingChanges","oldSchema","newSchema","breakingChanges","findSchemaChanges","change","type","findDangerousChanges","dangerousChanges","concat","findTypeChanges","findDirectiveChanges","schemaChanges","directivesDiff","diff","getDirectives","_i2","_directivesDiff$remov2","removed","oldDirective","description","name","_i4","_directivesDiff$persi2","persisted","_ref2","_oldDirective","newDirective","argsDiff","args","_i6","_argsDiff$added2","added","newArg","_i8","_argsDiff$removed2","oldArg","isRepeatable","_i10","_oldDirective$locatio2","locations","location","indexOf","typesDiff","getTypeMap","_i12","_typesDiff$removed2","oldType","_i14","_typesDiff$persisted2","_ref4","_oldType","newType","findEnumTypeChanges","findUnionTypeChanges","findInputObjectTypeChanges","findFieldChanges","findImplementedInterfacesChanges","constructor","typeKindName","fieldsDiff","getFields","_i16","_fieldsDiff$added2","newField","_i18","_fieldsDiff$removed2","oldField","_i20","_fieldsDiff$persisted2","_ref6","_oldField","_newField","isSafe","isChangeSafeForInputObjectFieldOrFieldArg","String","possibleTypesDiff","getTypes","_i22","_possibleTypesDiff$ad2","newPossibleType","_i24","_possibleTypesDiff$re2","oldPossibleType","valuesDiff","getValues","_i26","_valuesDiff$added2","newValue","_i28","_valuesDiff$removed2","oldValue","interfacesDiff","getInterfaces","_i30","_interfacesDiff$added2","newInterface","_i32","_interfacesDiff$remov2","oldInterface","_i34","_fieldsDiff$removed4","_i36","_fieldsDiff$persisted4","_ref8","_oldField2","findArgChanges","isChangeSafeForObjectOrInterfaceField","_i38","_argsDiff$removed4","_i40","_argsDiff$persisted2","_ref10","_oldArg","defaultValue","undefined","oldValueStr","stringifyValue","newValueStr","_i42","_argsDiff$added4","_newArg","ofType","ast","sortedAST","ObjectValue","objectNode","fields","sort","fieldA","fieldB","oldArray","newArray","oldMap","_ref11","newMap","_ref12","_i44","oldItem","newItem","_i46","_newItem"],"sources":["/data/stackhub-web/plugins/myapps/node_modules/graphql/utilities/findBreakingChanges.mjs"],"sourcesContent":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport objectValues from \"../polyfills/objectValues.mjs\";\nimport keyMap from \"../jsutils/keyMap.mjs\";\nimport inspect from \"../jsutils/inspect.mjs\";\nimport invariant from \"../jsutils/invariant.mjs\";\nimport naturalCompare from \"../jsutils/naturalCompare.mjs\";\nimport { print } from \"../language/printer.mjs\";\nimport { visit } from \"../language/visitor.mjs\";\nimport { isSpecifiedScalarType } from \"../type/scalars.mjs\";\nimport { isScalarType, isObjectType, isInterfaceType, isUnionType, isEnumType, isInputObjectType, isNonNullType, isListType, isNamedType, isRequiredArgument, isRequiredInputField } from \"../type/definition.mjs\";\nimport { astFromValue } from \"./astFromValue.mjs\";\nexport var BreakingChangeType = Object.freeze({\n  TYPE_REMOVED: 'TYPE_REMOVED',\n  TYPE_CHANGED_KIND: 'TYPE_CHANGED_KIND',\n  TYPE_REMOVED_FROM_UNION: 'TYPE_REMOVED_FROM_UNION',\n  VALUE_REMOVED_FROM_ENUM: 'VALUE_REMOVED_FROM_ENUM',\n  REQUIRED_INPUT_FIELD_ADDED: 'REQUIRED_INPUT_FIELD_ADDED',\n  IMPLEMENTED_INTERFACE_REMOVED: 'IMPLEMENTED_INTERFACE_REMOVED',\n  FIELD_REMOVED: 'FIELD_REMOVED',\n  FIELD_CHANGED_KIND: 'FIELD_CHANGED_KIND',\n  REQUIRED_ARG_ADDED: 'REQUIRED_ARG_ADDED',\n  ARG_REMOVED: 'ARG_REMOVED',\n  ARG_CHANGED_KIND: 'ARG_CHANGED_KIND',\n  DIRECTIVE_REMOVED: 'DIRECTIVE_REMOVED',\n  DIRECTIVE_ARG_REMOVED: 'DIRECTIVE_ARG_REMOVED',\n  REQUIRED_DIRECTIVE_ARG_ADDED: 'REQUIRED_DIRECTIVE_ARG_ADDED',\n  DIRECTIVE_REPEATABLE_REMOVED: 'DIRECTIVE_REPEATABLE_REMOVED',\n  DIRECTIVE_LOCATION_REMOVED: 'DIRECTIVE_LOCATION_REMOVED'\n});\nexport var DangerousChangeType = Object.freeze({\n  VALUE_ADDED_TO_ENUM: 'VALUE_ADDED_TO_ENUM',\n  TYPE_ADDED_TO_UNION: 'TYPE_ADDED_TO_UNION',\n  OPTIONAL_INPUT_FIELD_ADDED: 'OPTIONAL_INPUT_FIELD_ADDED',\n  OPTIONAL_ARG_ADDED: 'OPTIONAL_ARG_ADDED',\n  IMPLEMENTED_INTERFACE_ADDED: 'IMPLEMENTED_INTERFACE_ADDED',\n  ARG_DEFAULT_VALUE_CHANGE: 'ARG_DEFAULT_VALUE_CHANGE'\n});\n\n/**\n * Given two schemas, returns an Array containing descriptions of all the types\n * of breaking changes covered by the other functions down below.\n */\nexport function findBreakingChanges(oldSchema, newSchema) {\n  var breakingChanges = findSchemaChanges(oldSchema, newSchema).filter(function (change) {\n    return change.type in BreakingChangeType;\n  });\n  return breakingChanges;\n}\n/**\n * Given two schemas, returns an Array containing descriptions of all the types\n * of potentially dangerous changes covered by the other functions down below.\n */\n\nexport function findDangerousChanges(oldSchema, newSchema) {\n  var dangerousChanges = findSchemaChanges(oldSchema, newSchema).filter(function (change) {\n    return change.type in DangerousChangeType;\n  });\n  return dangerousChanges;\n}\n\nfunction findSchemaChanges(oldSchema, newSchema) {\n  return [].concat(findTypeChanges(oldSchema, newSchema), findDirectiveChanges(oldSchema, newSchema));\n}\n\nfunction findDirectiveChanges(oldSchema, newSchema) {\n  var schemaChanges = [];\n  var directivesDiff = diff(oldSchema.getDirectives(), newSchema.getDirectives());\n\n  for (var _i2 = 0, _directivesDiff$remov2 = directivesDiff.removed; _i2 < _directivesDiff$remov2.length; _i2++) {\n    var oldDirective = _directivesDiff$remov2[_i2];\n    schemaChanges.push({\n      type: BreakingChangeType.DIRECTIVE_REMOVED,\n      description: \"\".concat(oldDirective.name, \" was removed.\")\n    });\n  }\n\n  for (var _i4 = 0, _directivesDiff$persi2 = directivesDiff.persisted; _i4 < _directivesDiff$persi2.length; _i4++) {\n    var _ref2 = _directivesDiff$persi2[_i4];\n    var _oldDirective = _ref2[0];\n    var newDirective = _ref2[1];\n    var argsDiff = diff(_oldDirective.args, newDirective.args);\n\n    for (var _i6 = 0, _argsDiff$added2 = argsDiff.added; _i6 < _argsDiff$added2.length; _i6++) {\n      var newArg = _argsDiff$added2[_i6];\n\n      if (isRequiredArgument(newArg)) {\n        schemaChanges.push({\n          type: BreakingChangeType.REQUIRED_DIRECTIVE_ARG_ADDED,\n          description: \"A required arg \".concat(newArg.name, \" on directive \").concat(_oldDirective.name, \" was added.\")\n        });\n      }\n    }\n\n    for (var _i8 = 0, _argsDiff$removed2 = argsDiff.removed; _i8 < _argsDiff$removed2.length; _i8++) {\n      var oldArg = _argsDiff$removed2[_i8];\n      schemaChanges.push({\n        type: BreakingChangeType.DIRECTIVE_ARG_REMOVED,\n        description: \"\".concat(oldArg.name, \" was removed from \").concat(_oldDirective.name, \".\")\n      });\n    }\n\n    if (_oldDirective.isRepeatable && !newDirective.isRepeatable) {\n      schemaChanges.push({\n        type: BreakingChangeType.DIRECTIVE_REPEATABLE_REMOVED,\n        description: \"Repeatable flag was removed from \".concat(_oldDirective.name, \".\")\n      });\n    }\n\n    for (var _i10 = 0, _oldDirective$locatio2 = _oldDirective.locations; _i10 < _oldDirective$locatio2.length; _i10++) {\n      var location = _oldDirective$locatio2[_i10];\n\n      if (newDirective.locations.indexOf(location) === -1) {\n        schemaChanges.push({\n          type: BreakingChangeType.DIRECTIVE_LOCATION_REMOVED,\n          description: \"\".concat(location, \" was removed from \").concat(_oldDirective.name, \".\")\n        });\n      }\n    }\n  }\n\n  return schemaChanges;\n}\n\nfunction findTypeChanges(oldSchema, newSchema) {\n  var schemaChanges = [];\n  var typesDiff = diff(objectValues(oldSchema.getTypeMap()), objectValues(newSchema.getTypeMap()));\n\n  for (var _i12 = 0, _typesDiff$removed2 = typesDiff.removed; _i12 < _typesDiff$removed2.length; _i12++) {\n    var oldType = _typesDiff$removed2[_i12];\n    schemaChanges.push({\n      type: BreakingChangeType.TYPE_REMOVED,\n      description: isSpecifiedScalarType(oldType) ? \"Standard scalar \".concat(oldType.name, \" was removed because it is not referenced anymore.\") : \"\".concat(oldType.name, \" was removed.\")\n    });\n  }\n\n  for (var _i14 = 0, _typesDiff$persisted2 = typesDiff.persisted; _i14 < _typesDiff$persisted2.length; _i14++) {\n    var _ref4 = _typesDiff$persisted2[_i14];\n    var _oldType = _ref4[0];\n    var newType = _ref4[1];\n\n    if (isEnumType(_oldType) && isEnumType(newType)) {\n      schemaChanges.push.apply(schemaChanges, findEnumTypeChanges(_oldType, newType));\n    } else if (isUnionType(_oldType) && isUnionType(newType)) {\n      schemaChanges.push.apply(schemaChanges, findUnionTypeChanges(_oldType, newType));\n    } else if (isInputObjectType(_oldType) && isInputObjectType(newType)) {\n      schemaChanges.push.apply(schemaChanges, findInputObjectTypeChanges(_oldType, newType));\n    } else if (isObjectType(_oldType) && isObjectType(newType)) {\n      schemaChanges.push.apply(schemaChanges, findFieldChanges(_oldType, newType).concat(findImplementedInterfacesChanges(_oldType, newType)));\n    } else if (isInterfaceType(_oldType) && isInterfaceType(newType)) {\n      schemaChanges.push.apply(schemaChanges, findFieldChanges(_oldType, newType).concat(findImplementedInterfacesChanges(_oldType, newType)));\n    } else if (_oldType.constructor !== newType.constructor) {\n      schemaChanges.push({\n        type: BreakingChangeType.TYPE_CHANGED_KIND,\n        description: \"\".concat(_oldType.name, \" changed from \") + \"\".concat(typeKindName(_oldType), \" to \").concat(typeKindName(newType), \".\")\n      });\n    }\n  }\n\n  return schemaChanges;\n}\n\nfunction findInputObjectTypeChanges(oldType, newType) {\n  var schemaChanges = [];\n  var fieldsDiff = diff(objectValues(oldType.getFields()), objectValues(newType.getFields()));\n\n  for (var _i16 = 0, _fieldsDiff$added2 = fieldsDiff.added; _i16 < _fieldsDiff$added2.length; _i16++) {\n    var newField = _fieldsDiff$added2[_i16];\n\n    if (isRequiredInputField(newField)) {\n      schemaChanges.push({\n        type: BreakingChangeType.REQUIRED_INPUT_FIELD_ADDED,\n        description: \"A required field \".concat(newField.name, \" on input type \").concat(oldType.name, \" was added.\")\n      });\n    } else {\n      schemaChanges.push({\n        type: DangerousChangeType.OPTIONAL_INPUT_FIELD_ADDED,\n        description: \"An optional field \".concat(newField.name, \" on input type \").concat(oldType.name, \" was added.\")\n      });\n    }\n  }\n\n  for (var _i18 = 0, _fieldsDiff$removed2 = fieldsDiff.removed; _i18 < _fieldsDiff$removed2.length; _i18++) {\n    var oldField = _fieldsDiff$removed2[_i18];\n    schemaChanges.push({\n      type: BreakingChangeType.FIELD_REMOVED,\n      description: \"\".concat(oldType.name, \".\").concat(oldField.name, \" was removed.\")\n    });\n  }\n\n  for (var _i20 = 0, _fieldsDiff$persisted2 = fieldsDiff.persisted; _i20 < _fieldsDiff$persisted2.length; _i20++) {\n    var _ref6 = _fieldsDiff$persisted2[_i20];\n    var _oldField = _ref6[0];\n    var _newField = _ref6[1];\n    var isSafe = isChangeSafeForInputObjectFieldOrFieldArg(_oldField.type, _newField.type);\n\n    if (!isSafe) {\n      schemaChanges.push({\n        type: BreakingChangeType.FIELD_CHANGED_KIND,\n        description: \"\".concat(oldType.name, \".\").concat(_oldField.name, \" changed type from \") + \"\".concat(String(_oldField.type), \" to \").concat(String(_newField.type), \".\")\n      });\n    }\n  }\n\n  return schemaChanges;\n}\n\nfunction findUnionTypeChanges(oldType, newType) {\n  var schemaChanges = [];\n  var possibleTypesDiff = diff(oldType.getTypes(), newType.getTypes());\n\n  for (var _i22 = 0, _possibleTypesDiff$ad2 = possibleTypesDiff.added; _i22 < _possibleTypesDiff$ad2.length; _i22++) {\n    var newPossibleType = _possibleTypesDiff$ad2[_i22];\n    schemaChanges.push({\n      type: DangerousChangeType.TYPE_ADDED_TO_UNION,\n      description: \"\".concat(newPossibleType.name, \" was added to union type \").concat(oldType.name, \".\")\n    });\n  }\n\n  for (var _i24 = 0, _possibleTypesDiff$re2 = possibleTypesDiff.removed; _i24 < _possibleTypesDiff$re2.length; _i24++) {\n    var oldPossibleType = _possibleTypesDiff$re2[_i24];\n    schemaChanges.push({\n      type: BreakingChangeType.TYPE_REMOVED_FROM_UNION,\n      description: \"\".concat(oldPossibleType.name, \" was removed from union type \").concat(oldType.name, \".\")\n    });\n  }\n\n  return schemaChanges;\n}\n\nfunction findEnumTypeChanges(oldType, newType) {\n  var schemaChanges = [];\n  var valuesDiff = diff(oldType.getValues(), newType.getValues());\n\n  for (var _i26 = 0, _valuesDiff$added2 = valuesDiff.added; _i26 < _valuesDiff$added2.length; _i26++) {\n    var newValue = _valuesDiff$added2[_i26];\n    schemaChanges.push({\n      type: DangerousChangeType.VALUE_ADDED_TO_ENUM,\n      description: \"\".concat(newValue.name, \" was added to enum type \").concat(oldType.name, \".\")\n    });\n  }\n\n  for (var _i28 = 0, _valuesDiff$removed2 = valuesDiff.removed; _i28 < _valuesDiff$removed2.length; _i28++) {\n    var oldValue = _valuesDiff$removed2[_i28];\n    schemaChanges.push({\n      type: BreakingChangeType.VALUE_REMOVED_FROM_ENUM,\n      description: \"\".concat(oldValue.name, \" was removed from enum type \").concat(oldType.name, \".\")\n    });\n  }\n\n  return schemaChanges;\n}\n\nfunction findImplementedInterfacesChanges(oldType, newType) {\n  var schemaChanges = [];\n  var interfacesDiff = diff(oldType.getInterfaces(), newType.getInterfaces());\n\n  for (var _i30 = 0, _interfacesDiff$added2 = interfacesDiff.added; _i30 < _interfacesDiff$added2.length; _i30++) {\n    var newInterface = _interfacesDiff$added2[_i30];\n    schemaChanges.push({\n      type: DangerousChangeType.IMPLEMENTED_INTERFACE_ADDED,\n      description: \"\".concat(newInterface.name, \" added to interfaces implemented by \").concat(oldType.name, \".\")\n    });\n  }\n\n  for (var _i32 = 0, _interfacesDiff$remov2 = interfacesDiff.removed; _i32 < _interfacesDiff$remov2.length; _i32++) {\n    var oldInterface = _interfacesDiff$remov2[_i32];\n    schemaChanges.push({\n      type: BreakingChangeType.IMPLEMENTED_INTERFACE_REMOVED,\n      description: \"\".concat(oldType.name, \" no longer implements interface \").concat(oldInterface.name, \".\")\n    });\n  }\n\n  return schemaChanges;\n}\n\nfunction findFieldChanges(oldType, newType) {\n  var schemaChanges = [];\n  var fieldsDiff = diff(objectValues(oldType.getFields()), objectValues(newType.getFields()));\n\n  for (var _i34 = 0, _fieldsDiff$removed4 = fieldsDiff.removed; _i34 < _fieldsDiff$removed4.length; _i34++) {\n    var oldField = _fieldsDiff$removed4[_i34];\n    schemaChanges.push({\n      type: BreakingChangeType.FIELD_REMOVED,\n      description: \"\".concat(oldType.name, \".\").concat(oldField.name, \" was removed.\")\n    });\n  }\n\n  for (var _i36 = 0, _fieldsDiff$persisted4 = fieldsDiff.persisted; _i36 < _fieldsDiff$persisted4.length; _i36++) {\n    var _ref8 = _fieldsDiff$persisted4[_i36];\n    var _oldField2 = _ref8[0];\n    var newField = _ref8[1];\n    schemaChanges.push.apply(schemaChanges, findArgChanges(oldType, _oldField2, newField));\n    var isSafe = isChangeSafeForObjectOrInterfaceField(_oldField2.type, newField.type);\n\n    if (!isSafe) {\n      schemaChanges.push({\n        type: BreakingChangeType.FIELD_CHANGED_KIND,\n        description: \"\".concat(oldType.name, \".\").concat(_oldField2.name, \" changed type from \") + \"\".concat(String(_oldField2.type), \" to \").concat(String(newField.type), \".\")\n      });\n    }\n  }\n\n  return schemaChanges;\n}\n\nfunction findArgChanges(oldType, oldField, newField) {\n  var schemaChanges = [];\n  var argsDiff = diff(oldField.args, newField.args);\n\n  for (var _i38 = 0, _argsDiff$removed4 = argsDiff.removed; _i38 < _argsDiff$removed4.length; _i38++) {\n    var oldArg = _argsDiff$removed4[_i38];\n    schemaChanges.push({\n      type: BreakingChangeType.ARG_REMOVED,\n      description: \"\".concat(oldType.name, \".\").concat(oldField.name, \" arg \").concat(oldArg.name, \" was removed.\")\n    });\n  }\n\n  for (var _i40 = 0, _argsDiff$persisted2 = argsDiff.persisted; _i40 < _argsDiff$persisted2.length; _i40++) {\n    var _ref10 = _argsDiff$persisted2[_i40];\n    var _oldArg = _ref10[0];\n    var newArg = _ref10[1];\n    var isSafe = isChangeSafeForInputObjectFieldOrFieldArg(_oldArg.type, newArg.type);\n\n    if (!isSafe) {\n      schemaChanges.push({\n        type: BreakingChangeType.ARG_CHANGED_KIND,\n        description: \"\".concat(oldType.name, \".\").concat(oldField.name, \" arg \").concat(_oldArg.name, \" has changed type from \") + \"\".concat(String(_oldArg.type), \" to \").concat(String(newArg.type), \".\")\n      });\n    } else if (_oldArg.defaultValue !== undefined) {\n      if (newArg.defaultValue === undefined) {\n        schemaChanges.push({\n          type: DangerousChangeType.ARG_DEFAULT_VALUE_CHANGE,\n          description: \"\".concat(oldType.name, \".\").concat(oldField.name, \" arg \").concat(_oldArg.name, \" defaultValue was removed.\")\n        });\n      } else {\n        // Since we looking only for client's observable changes we should\n        // compare default values in the same representation as they are\n        // represented inside introspection.\n        var oldValueStr = stringifyValue(_oldArg.defaultValue, _oldArg.type);\n        var newValueStr = stringifyValue(newArg.defaultValue, newArg.type);\n\n        if (oldValueStr !== newValueStr) {\n          schemaChanges.push({\n            type: DangerousChangeType.ARG_DEFAULT_VALUE_CHANGE,\n            description: \"\".concat(oldType.name, \".\").concat(oldField.name, \" arg \").concat(_oldArg.name, \" has changed defaultValue from \").concat(oldValueStr, \" to \").concat(newValueStr, \".\")\n          });\n        }\n      }\n    }\n  }\n\n  for (var _i42 = 0, _argsDiff$added4 = argsDiff.added; _i42 < _argsDiff$added4.length; _i42++) {\n    var _newArg = _argsDiff$added4[_i42];\n\n    if (isRequiredArgument(_newArg)) {\n      schemaChanges.push({\n        type: BreakingChangeType.REQUIRED_ARG_ADDED,\n        description: \"A required arg \".concat(_newArg.name, \" on \").concat(oldType.name, \".\").concat(oldField.name, \" was added.\")\n      });\n    } else {\n      schemaChanges.push({\n        type: DangerousChangeType.OPTIONAL_ARG_ADDED,\n        description: \"An optional arg \".concat(_newArg.name, \" on \").concat(oldType.name, \".\").concat(oldField.name, \" was added.\")\n      });\n    }\n  }\n\n  return schemaChanges;\n}\n\nfunction isChangeSafeForObjectOrInterfaceField(oldType, newType) {\n  if (isListType(oldType)) {\n    return (// if they're both lists, make sure the underlying types are compatible\n      isListType(newType) && isChangeSafeForObjectOrInterfaceField(oldType.ofType, newType.ofType) || // moving from nullable to non-null of the same underlying type is safe\n      isNonNullType(newType) && isChangeSafeForObjectOrInterfaceField(oldType, newType.ofType)\n    );\n  }\n\n  if (isNonNullType(oldType)) {\n    // if they're both non-null, make sure the underlying types are compatible\n    return isNonNullType(newType) && isChangeSafeForObjectOrInterfaceField(oldType.ofType, newType.ofType);\n  }\n\n  return (// if they're both named types, see if their names are equivalent\n    isNamedType(newType) && oldType.name === newType.name || // moving from nullable to non-null of the same underlying type is safe\n    isNonNullType(newType) && isChangeSafeForObjectOrInterfaceField(oldType, newType.ofType)\n  );\n}\n\nfunction isChangeSafeForInputObjectFieldOrFieldArg(oldType, newType) {\n  if (isListType(oldType)) {\n    // if they're both lists, make sure the underlying types are compatible\n    return isListType(newType) && isChangeSafeForInputObjectFieldOrFieldArg(oldType.ofType, newType.ofType);\n  }\n\n  if (isNonNullType(oldType)) {\n    return (// if they're both non-null, make sure the underlying types are\n      // compatible\n      isNonNullType(newType) && isChangeSafeForInputObjectFieldOrFieldArg(oldType.ofType, newType.ofType) || // moving from non-null to nullable of the same underlying type is safe\n      !isNonNullType(newType) && isChangeSafeForInputObjectFieldOrFieldArg(oldType.ofType, newType)\n    );\n  } // if they're both named types, see if their names are equivalent\n\n\n  return isNamedType(newType) && oldType.name === newType.name;\n}\n\nfunction typeKindName(type) {\n  if (isScalarType(type)) {\n    return 'a Scalar type';\n  }\n\n  if (isObjectType(type)) {\n    return 'an Object type';\n  }\n\n  if (isInterfaceType(type)) {\n    return 'an Interface type';\n  }\n\n  if (isUnionType(type)) {\n    return 'a Union type';\n  }\n\n  if (isEnumType(type)) {\n    return 'an Enum type';\n  } // istanbul ignore else (See: 'https://github.com/graphql/graphql-js/issues/2618')\n\n\n  if (isInputObjectType(type)) {\n    return 'an Input type';\n  } // istanbul ignore next (Not reachable. All possible named types have been considered)\n\n\n  false || invariant(0, 'Unexpected type: ' + inspect(type));\n}\n\nfunction stringifyValue(value, type) {\n  var ast = astFromValue(value, type);\n  ast != null || invariant(0);\n  var sortedAST = visit(ast, {\n    ObjectValue: function ObjectValue(objectNode) {\n      // Make a copy since sort mutates array\n      var fields = [].concat(objectNode.fields);\n      fields.sort(function (fieldA, fieldB) {\n        return naturalCompare(fieldA.name.value, fieldB.name.value);\n      });\n      return _objectSpread(_objectSpread({}, objectNode), {}, {\n        fields: fields\n      });\n    }\n  });\n  return print(sortedAST);\n}\n\nfunction diff(oldArray, newArray) {\n  var added = [];\n  var removed = [];\n  var persisted = [];\n  var oldMap = keyMap(oldArray, function (_ref11) {\n    var name = _ref11.name;\n    return name;\n  });\n  var newMap = keyMap(newArray, function (_ref12) {\n    var name = _ref12.name;\n    return name;\n  });\n\n  for (var _i44 = 0; _i44 < oldArray.length; _i44++) {\n    var oldItem = oldArray[_i44];\n    var newItem = newMap[oldItem.name];\n\n    if (newItem === undefined) {\n      removed.push(oldItem);\n    } else {\n      persisted.push([oldItem, newItem]);\n    }\n  }\n\n  for (var _i46 = 0; _i46 < newArray.length; _i46++) {\n    var _newItem = newArray[_i46];\n\n    if (oldMap[_newItem.name] === undefined) {\n      added.push(_newItem);\n    }\n  }\n\n  return {\n    added: added,\n    persisted: persisted,\n    removed: removed\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
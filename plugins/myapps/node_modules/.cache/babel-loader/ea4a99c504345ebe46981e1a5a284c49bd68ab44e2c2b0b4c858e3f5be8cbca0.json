{"ast":null,"code":"function debug(){var _window$debugging;if(window.debugging==\"all\"||(_window$debugging=window.debugging)!==null&&_window$debugging!==void 0&&_window$debugging.includes(\"style\")){console.debug([\"cockpit-dark-theme: \".concat(document.documentElement.id,\":\")].concat(Array.prototype.slice.call(arguments)).join(\" \"));}}function changeDarkThemeClass(documentElement,dark_mode){debug(\"Setting cockpit theme to \".concat(dark_mode?\"dark\":\"light\"));if(dark_mode){documentElement.classList.add('pf-theme-dark');}else{documentElement.classList.remove('pf-theme-dark');}}function _setDarkMode(_style){var _window$matchMedia,_window;var style=_style||localStorage.getItem('shell:style')||'auto';var dark_mode;// If a user set's an explicit theme, ignore system changes.\nif((_window$matchMedia=(_window=window).matchMedia)!==null&&_window$matchMedia!==void 0&&_window$matchMedia.call(_window,'(prefers-color-scheme: dark)').matches&&style===\"auto\"||style===\"dark\"){dark_mode=true;}else{dark_mode=false;}changeDarkThemeClass(document.documentElement,dark_mode);}window.addEventListener(\"storage\",function(event){if(event.key===\"shell:style\"){debug(\"Storage element 'shell:style' changed from  \".concat(event.oldValue,\" to \").concat(event.newValue));_setDarkMode();}});// When changing the theme from the shell switcher the localstorage change will not fire for the same page (aka shell)\n// so we need to listen for the event on the window object.\nwindow.addEventListener(\"cockpit-style\",function(event){var style=event.detail.style;debug(\"Event received from shell with 'cockpit-style'  \".concat(style));_setDarkMode(style);});window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change',function(){var _window$matchMedia2,_window2;debug(\"Operating system theme preference changed to \".concat((_window$matchMedia2=(_window2=window).matchMedia)!==null&&_window$matchMedia2!==void 0&&_window$matchMedia2.call(_window2,'(prefers-color-scheme: dark)').matches?\"dark\":\"light\"));_setDarkMode();});_setDarkMode();","map":{"version":3,"names":["debug","_window$debugging","window","debugging","includes","console","concat","document","documentElement","id","Array","prototype","slice","call","arguments","join","changeDarkThemeClass","dark_mode","classList","add","remove","_setDarkMode","_style","_window$matchMedia","_window","style","localStorage","getItem","matchMedia","matches","addEventListener","event","key","oldValue","newValue","detail","_window$matchMedia2","_window2"],"sources":["/data/stackhub-web/plugins/myapps/src/lib/cockpit-dark-theme.js"],"sourcesContent":["function debug() {\n    if (window.debugging == \"all\" || window.debugging?.includes(\"style\")) {\n        console.debug([`cockpit-dark-theme: ${document.documentElement.id}:`, ...arguments].join(\" \"));\n    }\n}\n\nfunction changeDarkThemeClass(documentElement, dark_mode) {\n    debug(`Setting cockpit theme to ${dark_mode ? \"dark\" : \"light\"}`);\n\n    if (dark_mode) {\n        documentElement.classList.add('pf-theme-dark');\n    } else {\n        documentElement.classList.remove('pf-theme-dark');\n    }\n}\n\nfunction _setDarkMode(_style) {\n    const style = _style || localStorage.getItem('shell:style') || 'auto';\n    let dark_mode;\n    // If a user set's an explicit theme, ignore system changes.\n    if ((window.matchMedia?.('(prefers-color-scheme: dark)').matches && style === \"auto\") || style === \"dark\") {\n        dark_mode = true;\n    } else {\n        dark_mode = false;\n    }\n    changeDarkThemeClass(document.documentElement, dark_mode);\n}\n\nwindow.addEventListener(\"storage\", event => {\n    if (event.key === \"shell:style\") {\n        debug(`Storage element 'shell:style' changed from  ${event.oldValue} to ${event.newValue}`);\n\n        _setDarkMode();\n    }\n});\n\n// When changing the theme from the shell switcher the localstorage change will not fire for the same page (aka shell)\n// so we need to listen for the event on the window object.\nwindow.addEventListener(\"cockpit-style\", event => {\n    const style = event.detail.style;\n    debug(`Event received from shell with 'cockpit-style'  ${style}`);\n\n    _setDarkMode(style);\n});\n\nwindow.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', () => {\n    debug(`Operating system theme preference changed to ${window.matchMedia?.('(prefers-color-scheme: dark)').matches ? \"dark\" : \"light\"}`);\n    _setDarkMode();\n});\n\n_setDarkMode();"],"mappings":"AAAA,QAAS,CAAAA,KAAKA,CAAA,CAAG,KAAAC,iBAAA,CACb,GAAIC,MAAM,CAACC,SAAS,EAAI,KAAK,GAAAF,iBAAA,CAAIC,MAAM,CAACC,SAAS,UAAAF,iBAAA,WAAhBA,iBAAA,CAAkBG,QAAQ,CAAC,OAAO,CAAC,CAAE,CAClEC,OAAO,CAACL,KAAK,CAAC,wBAAAM,MAAA,CAAwBC,QAAQ,CAACC,eAAe,CAACC,EAAE,OAAAH,MAAA,CAAAI,KAAA,CAAAC,SAAA,CAAAC,KAAA,CAAAC,IAAA,CAAQC,SAAS,GAAEC,IAAI,CAAC,GAAG,CAAC,CAAC,CAClG,CACJ,CAEA,QAAS,CAAAC,oBAAoBA,CAACR,eAAe,CAAES,SAAS,CAAE,CACtDjB,KAAK,6BAAAM,MAAA,CAA6BW,SAAS,CAAG,MAAM,CAAG,OAAO,CAAE,CAAC,CAEjE,GAAIA,SAAS,CAAE,CACXT,eAAe,CAACU,SAAS,CAACC,GAAG,CAAC,eAAe,CAAC,CAClD,CAAC,IAAM,CACHX,eAAe,CAACU,SAAS,CAACE,MAAM,CAAC,eAAe,CAAC,CACrD,CACJ,CAEA,QAAS,CAAAC,YAAYA,CAACC,MAAM,CAAE,KAAAC,kBAAA,CAAAC,OAAA,CAC1B,GAAM,CAAAC,KAAK,CAAGH,MAAM,EAAII,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,EAAI,MAAM,CACrE,GAAI,CAAAV,SAAS,CACb;AACA,GAAK,CAAAM,kBAAA,EAAAC,OAAA,CAAAtB,MAAM,EAAC0B,UAAU,UAAAL,kBAAA,WAAjBA,kBAAA,CAAAV,IAAA,CAAAW,OAAA,CAAoB,8BAA8B,CAAC,CAACK,OAAO,EAAIJ,KAAK,GAAK,MAAM,EAAKA,KAAK,GAAK,MAAM,CAAE,CACvGR,SAAS,CAAG,IAAI,CACpB,CAAC,IAAM,CACHA,SAAS,CAAG,KAAK,CACrB,CACAD,oBAAoB,CAACT,QAAQ,CAACC,eAAe,CAAES,SAAS,CAAC,CAC7D,CAEAf,MAAM,CAAC4B,gBAAgB,CAAC,SAAS,CAAE,SAAAC,KAAK,CAAI,CACxC,GAAIA,KAAK,CAACC,GAAG,GAAK,aAAa,CAAE,CAC7BhC,KAAK,gDAAAM,MAAA,CAAgDyB,KAAK,CAACE,QAAQ,SAAA3B,MAAA,CAAOyB,KAAK,CAACG,QAAQ,CAAE,CAAC,CAE3Fb,YAAY,CAAC,CAAC,CAClB,CACJ,CAAC,CAAC,CAEF;AACA;AACAnB,MAAM,CAAC4B,gBAAgB,CAAC,eAAe,CAAE,SAAAC,KAAK,CAAI,CAC9C,GAAM,CAAAN,KAAK,CAAGM,KAAK,CAACI,MAAM,CAACV,KAAK,CAChCzB,KAAK,oDAAAM,MAAA,CAAoDmB,KAAK,CAAE,CAAC,CAEjEJ,YAAY,CAACI,KAAK,CAAC,CACvB,CAAC,CAAC,CAEFvB,MAAM,CAAC0B,UAAU,CAAC,8BAA8B,CAAC,CAACE,gBAAgB,CAAC,QAAQ,CAAE,UAAM,KAAAM,mBAAA,CAAAC,QAAA,CAC/ErC,KAAK,iDAAAM,MAAA,CAAiD,CAAA8B,mBAAA,EAAAC,QAAA,CAAAnC,MAAM,EAAC0B,UAAU,UAAAQ,mBAAA,WAAjBA,mBAAA,CAAAvB,IAAA,CAAAwB,QAAA,CAAoB,8BAA8B,CAAC,CAACR,OAAO,CAAG,MAAM,CAAG,OAAO,CAAE,CAAC,CACvIR,YAAY,CAAC,CAAC,CAClB,CAAC,CAAC,CAEFA,YAAY,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
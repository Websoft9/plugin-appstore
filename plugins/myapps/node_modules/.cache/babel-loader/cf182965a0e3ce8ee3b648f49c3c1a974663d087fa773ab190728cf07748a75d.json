{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Brand/brand';\nimport { setBreakpointCssVars } from '../../helpers';\nexport var Brand = function Brand(_a) {\n  var _a$className = _a.className,\n    className = _a$className === void 0 ? '' : _a$className,\n    _a$src = _a.src,\n    src = _a$src === void 0 ? '' : _a$src,\n    alt = _a.alt,\n    children = _a.children,\n    widths = _a.widths,\n    heights = _a.heights,\n    style = _a.style,\n    props = __rest(_a, [\"className\", \"src\", \"alt\", \"children\", \"widths\", \"heights\", \"style\"]);\n  if (children !== undefined && widths !== undefined) {\n    style = Object.assign(Object.assign({}, style), setBreakpointCssVars(widths, '--pf-c-brand--Width'));\n  }\n  if (children !== undefined && heights !== undefined) {\n    style = Object.assign(Object.assign({}, style), setBreakpointCssVars(heights, '--pf-c-brand--Height'));\n  }\n  return (/** the brand component currently contains no styling the 'pf-c-brand' string will be used for the className */\n    children !== undefined ? React.createElement(\"picture\", Object.assign({\n      className: css(styles.brand, styles.modifiers.picture, className),\n      style: style\n    }, props), children, React.createElement(\"img\", {\n      src: src,\n      alt: alt\n    })) : React.createElement(\"img\", Object.assign({}, props, {\n      className: css(styles.brand, className),\n      src: src,\n      alt: alt\n    }))\n  );\n};\nBrand.displayName = 'Brand';","map":{"version":3,"names":["React","css","styles","setBreakpointCssVars","Brand","_a","className","_a$className","_a$src","src","alt","children","widths","heights","style","props","__rest","undefined","Object","assign","createElement","brand","modifiers","picture","displayName"],"sources":["/data/stackhub-web/plugins/myapps/node_modules/@patternfly/react-core/src/components/Brand/Brand.tsx"],"sourcesContent":["import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Brand/brand';\nimport { setBreakpointCssVars } from '../../helpers';\nexport interface BrandProps\n  extends React.DetailedHTMLProps<React.ImgHTMLAttributes<HTMLImageElement>, HTMLImageElement> {\n  /** Transforms the Brand into a <picture> element from an <img> element. Container for <source> child elements. */\n  children?: React.ReactNode;\n  /** Additional classes added to the either type of Brand. */\n  className?: string;\n  /** Attribute that specifies the URL of a <img> Brand. For a <picture> Brand this specifies the fallback <img> URL. */\n  src?: string;\n  /** Attribute that specifies the alt text of a <img> Brand. For a <picture> Brand this specifies the fallback <img> alt text. */\n  alt: string;\n  /** Widths at various breakpoints for a <picture> Brand. */\n  widths?: {\n    default?: string;\n    sm?: string;\n    md?: string;\n    lg?: string;\n    xl?: string;\n    '2xl'?: string;\n  };\n  /** Heights at various breakpoints for a <picture> Brand. */\n  heights?: {\n    default?: string;\n    sm?: string;\n    md?: string;\n    lg?: string;\n    xl?: string;\n    '2xl'?: string;\n  };\n}\n\nexport const Brand: React.FunctionComponent<BrandProps> = ({\n  className = '',\n  src = '',\n  alt,\n  children,\n  widths,\n  heights,\n  style,\n  ...props\n}: BrandProps) => {\n  if (children !== undefined && widths !== undefined) {\n    style = {\n      ...style,\n      ...setBreakpointCssVars(widths, '--pf-c-brand--Width')\n    };\n  }\n\n  if (children !== undefined && heights !== undefined) {\n    style = {\n      ...style,\n      ...setBreakpointCssVars(heights, '--pf-c-brand--Height')\n    };\n  }\n\n  return (\n    /** the brand component currently contains no styling the 'pf-c-brand' string will be used for the className */\n    children !== undefined ? (\n      <picture className={css(styles.brand, styles.modifiers.picture, className)} style={style} {...props}>\n        {children}\n        <img src={src} alt={alt} />\n      </picture>\n    ) : (\n      <img {...props} className={css(styles.brand, className)} src={src} alt={alt} />\n    )\n  );\n};\nBrand.displayName = 'Brand';\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,GAAG,QAAQ,0BAA0B;AAC9C,OAAOC,MAAM,MAAM,qDAAqD;AACxE,SAASC,oBAAoB,QAAQ,eAAe;AA+BpD,OAAO,IAAMC,KAAK,GAAwC,SAA7CA,KAAKA,CAAyCC,EAS9C,EAAI;qBAFVA,EAEM,CARXC,SAAS;IAATA,SAAS,GAAAC,YAAA,cAAG,EAAE,GAAAA,YAAA;IAAAC,MAAA,GAMTH,EAEM,CAPXI,GAAG;IAAHA,GAAG,GAAAD,MAAA,cAAG,EAAE,GAAAA,MAAA;IACRE,GAAG,GAIEL,EAEM,CANXK,GAAG;IACHC,QAAQ,GAGHN,EAEM,CALXM,QAAQ;IACRC,MAAM,GAEDP,EAEM,CAJXO,MAAM;IACNC,OAAO,GACFR,EAEM,CAHXQ,OAAO;IACPC,KAAK,GAAAT,EAEM,CAFXS,KAAK;IACFC,KAAK,GAAAC,MAAA,CAAAX,EAAA,EARiD,qEAS1D,CADS;EAER,IAAIM,QAAQ,KAAKM,SAAS,IAAIL,MAAM,KAAKK,SAAS,EAAE;IAClDH,KAAK,GAAAI,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KACAL,KAAK,GACLX,oBAAoB,CAACS,MAAM,EAAE,qBAAqB,CAAC,CACvD;;EAGH,IAAID,QAAQ,KAAKM,SAAS,IAAIJ,OAAO,KAAKI,SAAS,EAAE;IACnDH,KAAK,GAAAI,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KACAL,KAAK,GACLX,oBAAoB,CAACU,OAAO,EAAE,sBAAsB,CAAC,CACzD;;EAGH,OACE;IACAF,QAAQ,KAAKM,SAAS,GACpBjB,KAAA,CAAAoB,aAAA,YAAAF,MAAA,CAAAC,MAAA;MAASb,SAAS,EAAEL,GAAG,CAACC,MAAM,CAACmB,KAAK,EAAEnB,MAAM,CAACoB,SAAS,CAACC,OAAO,EAAEjB,SAAS,CAAC;MAAEQ,KAAK,EAAEA;IAAK,GAAMC,KAAK,GAChGJ,QAAQ,EACTX,KAAA,CAAAoB,aAAA;MAAKX,GAAG,EAAEA,GAAG;MAAEC,GAAG,EAAEA;IAAG,EAAI,CACnB,GAEVV,KAAA,CAAAoB,aAAA,QAAAF,MAAA,CAAAC,MAAA,KAASJ,KAAK;MAAET,SAAS,EAAEL,GAAG,CAACC,MAAM,CAACmB,KAAK,EAAEf,SAAS,CAAC;MAAEG,GAAG,EAAEA,GAAG;MAAEC,GAAG,EAAEA;IAAG;EAC5E;AAEL,CAAC;AACDN,KAAK,CAACoB,WAAW,GAAG,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}
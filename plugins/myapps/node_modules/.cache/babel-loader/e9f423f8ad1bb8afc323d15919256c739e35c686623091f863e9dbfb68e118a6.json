{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/NotificationDrawer/notification-drawer';\nexport var NotificationDrawerListItem = function NotificationDrawerListItem(_a) {\n  var _a$children = _a.children,\n    children = _a$children === void 0 ? null : _a$children,\n    _a$className = _a.className,\n    className = _a$className === void 0 ? '' : _a$className,\n    _a$isHoverable = _a.isHoverable,\n    isHoverable = _a$isHoverable === void 0 ? true : _a$isHoverable,\n    _a$isRead = _a.isRead,\n    isRead = _a$isRead === void 0 ? false : _a$isRead,\n    _a$onClick = _a.onClick,\n    _onClick = _a$onClick === void 0 ? function (event) {\n      return undefined;\n    } : _a$onClick,\n    _a$tabIndex = _a.tabIndex,\n    tabIndex = _a$tabIndex === void 0 ? 0 : _a$tabIndex,\n    _a$variant = _a.variant,\n    variant = _a$variant === void 0 ? 'default' : _a$variant,\n    props = __rest(_a, [\"children\", \"className\", \"isHoverable\", \"isRead\", \"onClick\", \"tabIndex\", \"variant\"]);\n  var onKeyDown = function onKeyDown(event) {\n    // Accessibility function. Click on the list item when pressing Enter or Space on it.\n    if (event.key === 'Enter' || event.key === ' ') {\n      event.target.click();\n    }\n  };\n  return React.createElement(\"li\", Object.assign({}, props, {\n    className: css(styles.notificationDrawerListItem, isHoverable && styles.modifiers.hoverable, styles.modifiers[variant], isRead && styles.modifiers.read, className),\n    tabIndex: tabIndex,\n    onClick: function onClick(e) {\n      return _onClick(e);\n    },\n    onKeyDown: onKeyDown\n  }), children);\n};\nNotificationDrawerListItem.displayName = 'NotificationDrawerListItem';","map":{"version":3,"names":["React","css","styles","NotificationDrawerListItem","_a","children","_a$children","_a$className","className","_a$isHoverable","isHoverable","_a$isRead","isRead","_a$onClick","onClick","event","undefined","_a$tabIndex","tabIndex","_a$variant","variant","props","__rest","onKeyDown","key","target","click","createElement","Object","assign","notificationDrawerListItem","modifiers","hoverable","read","e","displayName"],"sources":["/data/stackhub-web/plugins/myapps/node_modules/@patternfly/react-core/src/components/NotificationDrawer/NotificationDrawerListItem.tsx"],"sourcesContent":["import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/NotificationDrawer/notification-drawer';\n\nexport interface NotificationDrawerListItemProps extends React.HTMLProps<HTMLLIElement> {\n  /**  Content rendered inside the list item */\n  children?: React.ReactNode;\n  /**  Additional classes added to the list item */\n  className?: string;\n  /**  Modifies the list item to include hover styles on :hover */\n  isHoverable?: boolean;\n  /**  Adds styling to the list item to indicate it has been read */\n  isRead?: boolean;\n  /**  Callback for when a list item is clicked */\n  onClick?: (event: any) => void;\n  /**  Tab index for the list item */\n  tabIndex?: number;\n  /**  Variant indicates the severity level */\n  variant?: 'default' | 'success' | 'danger' | 'warning' | 'info';\n}\n\nexport const NotificationDrawerListItem: React.FunctionComponent<NotificationDrawerListItemProps> = ({\n  children = null,\n  className = '',\n  isHoverable = true,\n  isRead = false,\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  onClick = (event: React.MouseEvent) => undefined as any,\n  tabIndex = 0,\n  variant = 'default',\n  ...props\n}: NotificationDrawerListItemProps) => {\n  const onKeyDown = (event: React.KeyboardEvent) => {\n    // Accessibility function. Click on the list item when pressing Enter or Space on it.\n    if (event.key === 'Enter' || event.key === ' ') {\n      (event.target as HTMLElement).click();\n    }\n  };\n  return (\n    <li\n      {...props}\n      className={css(\n        styles.notificationDrawerListItem,\n        isHoverable && styles.modifiers.hoverable,\n        styles.modifiers[variant],\n        isRead && styles.modifiers.read,\n        className\n      )}\n      tabIndex={tabIndex}\n      onClick={e => onClick(e)}\n      onKeyDown={onKeyDown}\n    >\n      {children}\n    </li>\n  );\n};\nNotificationDrawerListItem.displayName = 'NotificationDrawerListItem';\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,GAAG,QAAQ,0BAA0B;AAC9C,OAAOC,MAAM,MAAM,gFAAgF;AAmBnG,OAAO,IAAMC,0BAA0B,GAA6D,SAAvFA,0BAA0BA,CAA8DC,EAUnE,EAAI;oBAFjBA,EAEa,CAThCC,QAAQ;IAARA,QAAQ,GAAAC,WAAA,cAAG,IAAI,GAAAA,WAAA;IAAAC,YAAA,GAOIH,EAEa,CARhCI,SAAS;IAATA,SAAS,GAAAD,YAAA,cAAG,EAAE,GAAAA,YAAA;IAAAE,cAAA,GAMKL,EAEa,CAPhCM,WAAW;IAAXA,WAAW,GAAAD,cAAA,cAAG,IAAI,GAAAA,cAAA;IAAAE,SAAA,GAKCP,EAEa,CANhCQ,MAAM;IAANA,MAAM,GAAAD,SAAA,cAAG,KAAK,GAAAA,SAAA;IAAAE,UAAA,GAIKT,EAEa,CAJhCU,OAAO;IAAPA,QAAO,GAAAD,UAAA,cAAG,UAACE,KAAuB;MAAA,OAAKC,SAAgB;IAAA,IAAAH,UAAA;IAAAI,WAAA,GAEpCb,EAEa,CAHhCc,QAAQ;IAARA,QAAQ,GAAAD,WAAA,cAAG,CAAC,GAAAA,WAAA;IAAAE,UAAA,GACOf,EAEa,CAFhCgB,OAAO;IAAPA,OAAO,GAAAD,UAAA,cAAG,SAAS,GAAAA,UAAA;IAChBE,KAAK,GAAAC,MAAA,CAAAlB,EAAA,EAT2F,oFAUpG,CADS;EAER,IAAMmB,SAAS,GAAG,SAAZA,SAASA,CAAIR,KAA0B,EAAI;IAC/C;IACA,IAAIA,KAAK,CAACS,GAAG,KAAK,OAAO,IAAIT,KAAK,CAACS,GAAG,KAAK,GAAG,EAAE;MAC7CT,KAAK,CAACU,MAAsB,CAACC,KAAK,EAAE;;EAEzC,CAAC;EACD,OACE1B,KAAA,CAAA2B,aAAA,OAAAC,MAAA,CAAAC,MAAA,KACMR,KAAK;IACTb,SAAS,EAAEP,GAAG,CACZC,MAAM,CAAC4B,0BAA0B,EACjCpB,WAAW,IAAIR,MAAM,CAAC6B,SAAS,CAACC,SAAS,EACzC9B,MAAM,CAAC6B,SAAS,CAACX,OAAO,CAAC,EACzBR,MAAM,IAAIV,MAAM,CAAC6B,SAAS,CAACE,IAAI,EAC/BzB,SAAS,CACV;IACDU,QAAQ,EAAEA,QAAQ;IAClBJ,OAAO,EAAE,SAAAA,QAAAoB,CAAC;MAAA,OAAIpB,QAAO,CAACoB,CAAC,CAAC;IAAA;IACxBX,SAAS,EAAEA;EAAS,IAEnBlB,QAAQ,CACN;AAET,CAAC;AACDF,0BAA0B,CAACgC,WAAW,GAAG,4BAA4B"},"metadata":{},"sourceType":"module","externalDependencies":[]}
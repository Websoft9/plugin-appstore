{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/NumberInput/number-input';\nimport { css } from '@patternfly/react-styles';\nimport MinusIcon from '@patternfly/react-icons/dist/esm/icons/minus-icon';\nimport PlusIcon from '@patternfly/react-icons/dist/esm/icons/plus-icon';\nimport { InputGroup } from '../InputGroup';\nimport { Button } from '../Button';\nimport { KeyTypes, ValidatedOptions } from '../../helpers';\nimport { TextInput } from '../TextInput';\nvar defaultKeyDownHandler = function defaultKeyDownHandler(args) {\n  return function (event) {\n    if (KeyTypes.ArrowUp === event.key && args.onPlus) {\n      event.preventDefault();\n      args.onPlus(null, args.inputName);\n    }\n    if (KeyTypes.ArrowDown === event.key && args.onMinus) {\n      event.preventDefault();\n      args.onMinus(null, args.inputName);\n    }\n  };\n};\nexport var NumberInput = function NumberInput(_a) {\n  var _a$value = _a.value,\n    value = _a$value === void 0 ? 0 : _a$value,\n    className = _a.className,\n    widthChars = _a.widthChars,\n    _a$isDisabled = _a.isDisabled,\n    isDisabled = _a$isDisabled === void 0 ? false : _a$isDisabled,\n    _a$validated = _a.validated,\n    validated = _a$validated === void 0 ? ValidatedOptions.default : _a$validated,\n    _a$onMinus = _a.onMinus,\n    onMinus = _a$onMinus === void 0 ? function () {} : _a$onMinus,\n    _onChange = _a.onChange,\n    onBlur = _a.onBlur,\n    _a$onPlus = _a.onPlus,\n    onPlus = _a$onPlus === void 0 ? function () {} : _a$onPlus,\n    unit = _a.unit,\n    _a$unitPosition = _a.unitPosition,\n    unitPosition = _a$unitPosition === void 0 ? 'after' : _a$unitPosition,\n    min = _a.min,\n    max = _a.max,\n    inputName = _a.inputName,\n    _a$inputAriaLabel = _a.inputAriaLabel,\n    inputAriaLabel = _a$inputAriaLabel === void 0 ? 'Input' : _a$inputAriaLabel,\n    _a$minusBtnAriaLabel = _a.minusBtnAriaLabel,\n    minusBtnAriaLabel = _a$minusBtnAriaLabel === void 0 ? 'Minus' : _a$minusBtnAriaLabel,\n    _a$plusBtnAriaLabel = _a.plusBtnAriaLabel,\n    plusBtnAriaLabel = _a$plusBtnAriaLabel === void 0 ? 'Plus' : _a$plusBtnAriaLabel,\n    inputProps = _a.inputProps,\n    minusBtnProps = _a.minusBtnProps,\n    plusBtnProps = _a.plusBtnProps,\n    _a$allowEmptyInput = _a.allowEmptyInput,\n    allowEmptyInput = _a$allowEmptyInput === void 0 ? false : _a$allowEmptyInput,\n    props = __rest(_a, [\"value\", \"className\", \"widthChars\", \"isDisabled\", \"validated\", \"onMinus\", \"onChange\", \"onBlur\", \"onPlus\", \"unit\", \"unitPosition\", \"min\", \"max\", \"inputName\", \"inputAriaLabel\", \"minusBtnAriaLabel\", \"plusBtnAriaLabel\", \"inputProps\", \"minusBtnProps\", \"plusBtnProps\", \"allowEmptyInput\"]);\n  if (!allowEmptyInput) {\n    value = value || 0;\n  }\n  var numberInputUnit = React.createElement(\"div\", {\n    className: css(styles.numberInputUnit)\n  }, unit);\n  var keyDownHandler = inputProps && inputProps.onKeyDown ? inputProps.onKeyDown : defaultKeyDownHandler({\n    inputName: inputName,\n    onMinus: onMinus,\n    onPlus: onPlus\n  });\n  var handleBlur = function handleBlur(event) {\n    event.target.value = Number(event.target.value).toString();\n    if (_onChange) {\n      _onChange(event);\n    }\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n  return React.createElement(\"div\", Object.assign({\n    className: css(styles.numberInput, validated !== 'default' && styles.modifiers.status, className)\n  }, widthChars && {\n    style: Object.assign({\n      '--pf-c-number-input--c-form-control--width-chars': widthChars\n    }, props.style)\n  }, props), unit && unitPosition === 'before' && numberInputUnit, React.createElement(InputGroup, null, React.createElement(Button, Object.assign({\n    variant: \"control\",\n    \"aria-label\": minusBtnAriaLabel,\n    isDisabled: isDisabled || value <= min,\n    onClick: function onClick(evt) {\n      return onMinus(evt, inputName);\n    }\n  }, minusBtnProps), React.createElement(\"span\", {\n    className: css(styles.numberInputIcon)\n  }, React.createElement(MinusIcon, {\n    \"aria-hidden\": \"true\"\n  }))), React.createElement(TextInput, Object.assign({}, inputProps, {\n    type: \"number\",\n    value: value,\n    name: inputName,\n    \"aria-label\": inputAriaLabel\n  }, isDisabled && {\n    isDisabled: isDisabled\n  }, _onChange && {\n    onChange: function onChange(value, event) {\n      return _onChange(event);\n    }\n  }, {\n    onBlur: handleBlur\n  }, !_onChange && {\n    isReadOnly: true\n  }, {\n    onKeyDown: keyDownHandler,\n    validated: validated\n  })), React.createElement(Button, Object.assign({\n    variant: \"control\",\n    \"aria-label\": plusBtnAriaLabel,\n    isDisabled: isDisabled || value >= max,\n    onClick: function onClick(evt) {\n      return onPlus(evt, inputName);\n    }\n  }, plusBtnProps), React.createElement(\"span\", {\n    className: css(styles.numberInputIcon)\n  }, React.createElement(PlusIcon, {\n    \"aria-hidden\": \"true\"\n  })))), unit && unitPosition === 'after' && numberInputUnit);\n};\nNumberInput.displayName = 'NumberInput';","map":{"version":3,"names":["React","styles","css","MinusIcon","PlusIcon","InputGroup","Button","KeyTypes","ValidatedOptions","TextInput","defaultKeyDownHandler","args","event","ArrowUp","key","onPlus","preventDefault","inputName","ArrowDown","onMinus","NumberInput","_a","value","_a$value","className","widthChars","_a$isDisabled","isDisabled","_a$validated","validated","default","_a$onMinus","onChange","onBlur","_a$onPlus","unit","_a$unitPosition","unitPosition","min","max","_a$inputAriaLabel","inputAriaLabel","_a$minusBtnAriaLabel","minusBtnAriaLabel","_a$plusBtnAriaLabel","plusBtnAriaLabel","inputProps","minusBtnProps","plusBtnProps","_a$allowEmptyInput","allowEmptyInput","props","__rest","numberInputUnit","createElement","keyDownHandler","onKeyDown","handleBlur","target","Number","toString","Object","assign","numberInput","modifiers","status","style","variant","onClick","evt","numberInputIcon","type","name","isReadOnly","displayName"],"sources":["/data/stackhub-web/plugins/myapps/node_modules/@patternfly/react-core/src/components/NumberInput/NumberInput.tsx"],"sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/NumberInput/number-input';\nimport { css } from '@patternfly/react-styles';\nimport MinusIcon from '@patternfly/react-icons/dist/esm/icons/minus-icon';\nimport PlusIcon from '@patternfly/react-icons/dist/esm/icons/plus-icon';\nimport { InputGroup } from '../InputGroup';\nimport { Button, ButtonProps } from '../Button';\nimport { KeyTypes, ValidatedOptions } from '../../helpers';\nimport { TextInput } from '../TextInput';\n\nexport interface NumberInputProps extends React.HTMLProps<HTMLDivElement> {\n  /** Value of the number input */\n  value?: number | '';\n  /** Additional classes added to the number input */\n  className?: string;\n  /** Sets the width of the number input to a number of characters */\n  widthChars?: number;\n  /** Indicates the whole number input should be disabled */\n  isDisabled?: boolean;\n  /** Value to indicate if the input is modified to show that validation state\n   * @beta\n   */\n  validated?: 'default' | 'error' | 'warning' | 'success' | ValidatedOptions;\n  /** Callback for the minus button */\n  onMinus?: (event: React.MouseEvent, name?: string) => void;\n  /** Callback for the text input changing */\n  onChange?: (event: React.FormEvent<HTMLInputElement>) => void;\n  /** Callback function when text input is blurred (focus leaves) */\n  onBlur?: (event?: any) => void;\n  /** Callback for the plus button */\n  onPlus?: (event: React.MouseEvent, name?: string) => void;\n  /** Adds the given unit to the number input */\n  unit?: React.ReactNode;\n  /** Position of the number input unit in relation to the number input */\n  unitPosition?: 'before' | 'after';\n  /** Minimum value of the number input, disabling the minus button when reached */\n  min?: number;\n  /** Maximum value of the number input, disabling the plus button when reached */\n  max?: number;\n  /** Name of the input */\n  inputName?: string;\n  /** Aria label of the input */\n  inputAriaLabel?: string;\n  /** Aria label of the minus button */\n  minusBtnAriaLabel?: string;\n  /** Aria label of the plus button */\n  plusBtnAriaLabel?: string;\n  /** Additional properties added to the text input */\n  inputProps?: any;\n  /** Additional properties added to the minus button */\n  minusBtnProps?: ButtonProps;\n  /** Additional properties added to the plus button */\n  plusBtnProps?: ButtonProps;\n  /** Allow the user to clear out the input to an empty string (recommended) */\n  allowEmptyInput?: boolean;\n}\n\ntype DefaultKeyDownHandlerArgs = Pick<NumberInputProps, 'inputName' | 'onMinus' | 'onPlus'>;\n\nconst defaultKeyDownHandler = (args: DefaultKeyDownHandlerArgs) => (event: React.KeyboardEvent<HTMLInputElement>) => {\n  if (KeyTypes.ArrowUp === event.key && args.onPlus) {\n    event.preventDefault();\n    args.onPlus(null, args.inputName);\n  }\n  if (KeyTypes.ArrowDown === event.key && args.onMinus) {\n    event.preventDefault();\n    args.onMinus(null, args.inputName);\n  }\n};\n\nexport const NumberInput: React.FunctionComponent<NumberInputProps> = ({\n  value = 0,\n  className,\n  widthChars,\n  isDisabled = false,\n  validated = ValidatedOptions.default,\n  onMinus = () => {},\n  onChange,\n  onBlur,\n  onPlus = () => {},\n  unit,\n  unitPosition = 'after',\n  min,\n  max,\n  inputName,\n  inputAriaLabel = 'Input',\n  minusBtnAriaLabel = 'Minus',\n  plusBtnAriaLabel = 'Plus',\n  inputProps,\n  minusBtnProps,\n  plusBtnProps,\n  allowEmptyInput = false,\n  ...props\n}: NumberInputProps) => {\n  if (!allowEmptyInput) {\n    value = value || 0;\n  }\n  const numberInputUnit = <div className={css(styles.numberInputUnit)}>{unit}</div>;\n  const keyDownHandler =\n    inputProps && inputProps.onKeyDown ? inputProps.onKeyDown : defaultKeyDownHandler({ inputName, onMinus, onPlus });\n\n  const handleBlur = (event: React.FocusEvent<HTMLInputElement>) => {\n    event.target.value = Number(event.target.value).toString();\n    if (onChange) {\n      onChange(event);\n    }\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n\n  return (\n    <div\n      className={css(styles.numberInput, validated !== 'default' && styles.modifiers.status, className)}\n      {...(widthChars && {\n        style: {\n          '--pf-c-number-input--c-form-control--width-chars': widthChars,\n          ...props.style\n        } as React.CSSProperties\n      })}\n      {...props}\n    >\n      {unit && unitPosition === 'before' && numberInputUnit}\n      <InputGroup>\n        <Button\n          variant=\"control\"\n          aria-label={minusBtnAriaLabel}\n          isDisabled={isDisabled || value <= min}\n          onClick={evt => onMinus(evt, inputName)}\n          {...minusBtnProps}\n        >\n          <span className={css(styles.numberInputIcon)}>\n            <MinusIcon aria-hidden=\"true\" />\n          </span>\n        </Button>\n        <TextInput\n          {...inputProps}\n          type=\"number\"\n          value={value}\n          name={inputName}\n          aria-label={inputAriaLabel}\n          {...(isDisabled && { isDisabled })}\n          {...(onChange && { onChange: (value, event) => onChange(event) })}\n          onBlur={handleBlur}\n          {...(!onChange && { isReadOnly: true })}\n          onKeyDown={keyDownHandler}\n          validated={validated}\n        />\n        <Button\n          variant=\"control\"\n          aria-label={plusBtnAriaLabel}\n          isDisabled={isDisabled || value >= max}\n          onClick={evt => onPlus(evt, inputName)}\n          {...plusBtnProps}\n        >\n          <span className={css(styles.numberInputIcon)}>\n            <PlusIcon aria-hidden=\"true\" />\n          </span>\n        </Button>\n      </InputGroup>\n      {unit && unitPosition === 'after' && numberInputUnit}\n    </div>\n  );\n};\nNumberInput.displayName = 'NumberInput';\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import _classCallCheck from \"/data/stackhub-web/plugins/myapps/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/data/stackhub-web/plugins/myapps/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/data/stackhub-web/plugins/myapps/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/data/stackhub-web/plugins/myapps/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Dropdown/dropdown';\nimport { css } from '@patternfly/react-styles';\nimport { getOUIAProps, getDefaultOUIAId } from '../../helpers';\nimport { Spinner } from '../Spinner';\nexport var DropdownToggleCheckbox = /*#__PURE__*/function (_React$Component) {\n  _inherits(DropdownToggleCheckbox, _React$Component);\n  var _super = _createSuper(DropdownToggleCheckbox);\n  function DropdownToggleCheckbox(props) {\n    var _this;\n    _classCallCheck(this, DropdownToggleCheckbox);\n    _this = _super.call(this, props);\n    _this.handleChange = function (event) {\n      var _a, _b;\n      (_b = (_a = _this.props).onChange) === null || _b === void 0 ? void 0 : _b.call(_a, event.target.checked, event);\n    };\n    _this.calculateChecked = function () {\n      var _this$props = _this.props,\n        isChecked = _this$props.isChecked,\n        checked = _this$props.checked;\n      if (isChecked === null) {\n        // return false here and the indeterminate state will be set to true through the ref\n        return false;\n      } else if (isChecked !== undefined) {\n        return isChecked;\n      }\n      return checked;\n    };\n    _this.state = {\n      ouiaStateId: getDefaultOUIAId(DropdownToggleCheckbox.displayName)\n    };\n    return _this;\n  }\n  _createClass(DropdownToggleCheckbox, [{\n    key: \"render\",\n    value: function render() {\n      var _a = this.props,\n        className = _a.className,\n        isValid = _a.isValid,\n        isDisabled = _a.isDisabled,\n        isChecked = _a.isChecked,\n        _a$isInProgress = _a.isInProgress,\n        isInProgress = _a$isInProgress === void 0 ? false : _a$isInProgress,\n        defaultProgressAriaLabel = _a.defaultProgressAriaLabel,\n        _a$defaultProgressAri = _a.defaultProgressAriaValueText,\n        defaultProgressAriaValueText = _a$defaultProgressAri === void 0 ? 'Loading...' : _a$defaultProgressAri,\n        children = _a.children,\n        ouiaId = _a.ouiaId,\n        ouiaSafe = _a.ouiaSafe,\n        onChange = _a.onChange,\n        checked = _a.checked,\n        props = __rest(_a, [\"className\", \"isValid\", \"isDisabled\", \"isChecked\", \"isInProgress\", \"defaultProgressAriaLabel\", \"defaultProgressAriaValueText\", \"children\", \"ouiaId\", \"ouiaSafe\", \"onChange\", \"checked\"]);\n      var spinner = React.createElement(Spinner, {\n        diameter: \"1em\",\n        isSVG: true,\n        \"aria-valuetext\": defaultProgressAriaValueText,\n        \"aria-live\": \"polite\",\n        \"aria-label\": defaultProgressAriaLabel\n      });\n      var text = children && React.createElement(\"span\", {\n        className: css(styles.dropdownToggleText, className),\n        \"aria-hidden\": \"true\",\n        id: \"\".concat(props.id, \"-text\")\n      }, children);\n      return React.createElement(\"label\", {\n        className: css(styles.dropdownToggleCheck, isInProgress && styles.modifiers.inProgress, className),\n        htmlFor: props.id\n      }, React.createElement(\"input\", Object.assign({}, props, this.calculateChecked() !== undefined && {\n        onChange: this.handleChange\n      }, {\n        type: \"checkbox\",\n        ref: function ref(elem) {\n          return elem && (elem.indeterminate = isChecked === null);\n        },\n        \"aria-invalid\": !isValid,\n        disabled: isDisabled,\n        checked: this.calculateChecked()\n      }, getOUIAProps(DropdownToggleCheckbox.displayName, ouiaId !== undefined ? ouiaId : this.state.ouiaStateId, ouiaSafe))), isInProgress && React.createElement(\"span\", {\n        className: css(styles.dropdownToggleProgress, className)\n      }, spinner), text);\n    }\n  }]);\n  return DropdownToggleCheckbox;\n}(React.Component);\nDropdownToggleCheckbox.displayName = 'DropdownToggleCheckbox';\nDropdownToggleCheckbox.defaultProps = {\n  className: '',\n  isValid: true,\n  isDisabled: false,\n  onChange: function onChange() {\n    return undefined;\n  }\n};","map":{"version":3,"names":["React","styles","css","getOUIAProps","getDefaultOUIAId","Spinner","DropdownToggleCheckbox","_React$Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","handleChange","event","_b","_a","onChange","target","checked","calculateChecked","_this$props","isChecked","undefined","state","ouiaStateId","displayName","_createClass","key","value","render","className","isValid","isDisabled","_a$isInProgress","isInProgress","defaultProgressAriaLabel","_a$defaultProgressAri","defaultProgressAriaValueText","children","ouiaId","ouiaSafe","__rest","spinner","createElement","diameter","isSVG","text","dropdownToggleText","id","concat","dropdownToggleCheck","modifiers","inProgress","htmlFor","Object","assign","type","ref","elem","indeterminate","disabled","dropdownToggleProgress","Component","defaultProps"],"sources":["/data/stackhub-web/plugins/myapps/node_modules/@patternfly/react-core/src/components/Dropdown/DropdownToggleCheckbox.tsx"],"sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Dropdown/dropdown';\nimport { css } from '@patternfly/react-styles';\nimport { PickOptional } from '../../helpers/typeUtils';\nimport { getOUIAProps, OUIAProps, getDefaultOUIAId } from '../../helpers';\nimport { Spinner } from '../Spinner';\n\nexport interface DropdownToggleCheckboxProps\n  extends Omit<React.HTMLProps<HTMLInputElement>, 'type' | 'onChange' | 'disabled' | 'checked'>,\n    OUIAProps {\n  /** Additional classes added to the DropdownToggleCheckbox */\n  className?: string;\n  /** Flag to show if the checkbox selection is valid or invalid */\n  isValid?: boolean;\n  /** Flag to show if the checkbox is disabled */\n  isDisabled?: boolean;\n  /** Flag to show if the checkbox is checked */\n  isChecked?: boolean | null;\n  /** @beta Flag to show if the checkbox is in progress */\n  isInProgress?: boolean | null;\n  /** Alternate Flag to show if the checkbox is checked */\n  checked?: boolean | null;\n  /** A callback for when the checkbox selection changes */\n  onChange?: (checked: boolean, event: React.FormEvent<HTMLInputElement>) => void;\n  /** Element to be rendered inside the <span> */\n  children?: React.ReactNode;\n  /** Id of the checkbox */\n  id: string;\n  /** Aria-label of the checkbox */\n  'aria-label': string;\n  /** @beta Text describing current loading status or progress */\n  defaultProgressAriaValueText?: string;\n  /** @beta Aria-label for the default progress icon to describe what is loading */\n  defaultProgressAriaLabel?: string;\n  /** Value to overwrite the randomly generated data-ouia-component-id.*/\n  ouiaId?: number | string;\n  /** Set the value of data-ouia-safe. Only set to true when the component is in a static state, i.e. no animations are occurring. At all other times, this value must be false. */\n  ouiaSafe?: boolean;\n}\n\nexport class DropdownToggleCheckbox extends React.Component<DropdownToggleCheckboxProps, { ouiaStateId: string }> {\n  static displayName = 'DropdownToggleCheckbox';\n  static defaultProps: PickOptional<DropdownToggleCheckboxProps> = {\n    className: '',\n    isValid: true,\n    isDisabled: false,\n    onChange: () => undefined as any\n  };\n\n  constructor(props: DropdownToggleCheckboxProps) {\n    super(props);\n    this.state = {\n      ouiaStateId: getDefaultOUIAId(DropdownToggleCheckbox.displayName)\n    };\n  }\n\n  handleChange = (event: React.FormEvent<HTMLInputElement>) => {\n    this.props.onChange?.((event.target as HTMLInputElement).checked, event);\n  };\n\n  calculateChecked = () => {\n    const { isChecked, checked } = this.props;\n    if (isChecked === null) {\n      // return false here and the indeterminate state will be set to true through the ref\n      return false;\n    } else if (isChecked !== undefined) {\n      return isChecked;\n    }\n    return checked;\n  };\n\n  render() {\n    const {\n      className,\n      isValid,\n      isDisabled,\n      isChecked,\n      isInProgress = false,\n      defaultProgressAriaLabel,\n      defaultProgressAriaValueText = 'Loading...',\n      children,\n      ouiaId,\n      ouiaSafe,\n      /* eslint-disable @typescript-eslint/no-unused-vars */\n      onChange,\n      checked,\n      /* eslint-enable @typescript-eslint/no-unused-vars */\n      ...props\n    } = this.props;\n\n    const spinner = (\n      <Spinner\n        diameter=\"1em\"\n        isSVG\n        aria-valuetext={defaultProgressAriaValueText}\n        aria-live=\"polite\"\n        aria-label={defaultProgressAriaLabel}\n      />\n    );\n\n    const text = children && (\n      <span className={css(styles.dropdownToggleText, className)} aria-hidden=\"true\" id={`${props.id}-text`}>\n        {children}\n      </span>\n    );\n    return (\n      <label\n        className={css(styles.dropdownToggleCheck, isInProgress && styles.modifiers.inProgress, className)}\n        htmlFor={props.id}\n      >\n        <input\n          {...props}\n          {...(this.calculateChecked() !== undefined && { onChange: this.handleChange })}\n          type=\"checkbox\"\n          ref={elem => elem && (elem.indeterminate = isChecked === null)}\n          aria-invalid={!isValid}\n          disabled={isDisabled}\n          checked={this.calculateChecked()}\n          {...getOUIAProps(\n            DropdownToggleCheckbox.displayName,\n            ouiaId !== undefined ? ouiaId : this.state.ouiaStateId,\n            ouiaSafe\n          )}\n        />\n        {isInProgress && <span className={css(styles.dropdownToggleProgress, className)}>{spinner}</span>}\n        {text}\n      </label>\n    );\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
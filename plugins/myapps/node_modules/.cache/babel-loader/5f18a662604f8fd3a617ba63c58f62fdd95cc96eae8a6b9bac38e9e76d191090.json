{"ast":null,"code":"import inspect from \"../../jsutils/inspect.mjs\";\nimport invariant from \"../../jsutils/invariant.mjs\";\nimport { GraphQLError } from \"../../error/GraphQLError.mjs\";\nimport { Kind } from \"../../language/kinds.mjs\";\nimport { DirectiveLocation } from \"../../language/directiveLocation.mjs\";\nimport { specifiedDirectives } from \"../../type/directives.mjs\";\n\n/**\n * Known directives\n *\n * A GraphQL document is only valid if all `@directives` are known by the\n * schema and legally positioned.\n */\nexport function KnownDirectivesRule(context) {\n  var locationsMap = Object.create(null);\n  var schema = context.getSchema();\n  var definedDirectives = schema ? schema.getDirectives() : specifiedDirectives;\n  for (var _i2 = 0; _i2 < definedDirectives.length; _i2++) {\n    var directive = definedDirectives[_i2];\n    locationsMap[directive.name] = directive.locations;\n  }\n  var astDefinitions = context.getDocument().definitions;\n  for (var _i4 = 0; _i4 < astDefinitions.length; _i4++) {\n    var def = astDefinitions[_i4];\n    if (def.kind === Kind.DIRECTIVE_DEFINITION) {\n      locationsMap[def.name.value] = def.locations.map(function (name) {\n        return name.value;\n      });\n    }\n  }\n  return {\n    Directive: function Directive(node, _key, _parent, _path, ancestors) {\n      var name = node.name.value;\n      var locations = locationsMap[name];\n      if (!locations) {\n        context.reportError(new GraphQLError(\"Unknown directive \\\"@\".concat(name, \"\\\".\"), node));\n        return;\n      }\n      var candidateLocation = getDirectiveLocationForASTPath(ancestors);\n      if (candidateLocation && locations.indexOf(candidateLocation) === -1) {\n        context.reportError(new GraphQLError(\"Directive \\\"@\".concat(name, \"\\\" may not be used on \").concat(candidateLocation, \".\"), node));\n      }\n    }\n  };\n}\nfunction getDirectiveLocationForASTPath(ancestors) {\n  var appliedTo = ancestors[ancestors.length - 1];\n  !Array.isArray(appliedTo) || invariant(0);\n  switch (appliedTo.kind) {\n    case Kind.OPERATION_DEFINITION:\n      return getDirectiveLocationForOperation(appliedTo.operation);\n    case Kind.FIELD:\n      return DirectiveLocation.FIELD;\n    case Kind.FRAGMENT_SPREAD:\n      return DirectiveLocation.FRAGMENT_SPREAD;\n    case Kind.INLINE_FRAGMENT:\n      return DirectiveLocation.INLINE_FRAGMENT;\n    case Kind.FRAGMENT_DEFINITION:\n      return DirectiveLocation.FRAGMENT_DEFINITION;\n    case Kind.VARIABLE_DEFINITION:\n      return DirectiveLocation.VARIABLE_DEFINITION;\n    case Kind.SCHEMA_DEFINITION:\n    case Kind.SCHEMA_EXTENSION:\n      return DirectiveLocation.SCHEMA;\n    case Kind.SCALAR_TYPE_DEFINITION:\n    case Kind.SCALAR_TYPE_EXTENSION:\n      return DirectiveLocation.SCALAR;\n    case Kind.OBJECT_TYPE_DEFINITION:\n    case Kind.OBJECT_TYPE_EXTENSION:\n      return DirectiveLocation.OBJECT;\n    case Kind.FIELD_DEFINITION:\n      return DirectiveLocation.FIELD_DEFINITION;\n    case Kind.INTERFACE_TYPE_DEFINITION:\n    case Kind.INTERFACE_TYPE_EXTENSION:\n      return DirectiveLocation.INTERFACE;\n    case Kind.UNION_TYPE_DEFINITION:\n    case Kind.UNION_TYPE_EXTENSION:\n      return DirectiveLocation.UNION;\n    case Kind.ENUM_TYPE_DEFINITION:\n    case Kind.ENUM_TYPE_EXTENSION:\n      return DirectiveLocation.ENUM;\n    case Kind.ENUM_VALUE_DEFINITION:\n      return DirectiveLocation.ENUM_VALUE;\n    case Kind.INPUT_OBJECT_TYPE_DEFINITION:\n    case Kind.INPUT_OBJECT_TYPE_EXTENSION:\n      return DirectiveLocation.INPUT_OBJECT;\n    case Kind.INPUT_VALUE_DEFINITION:\n      {\n        var parentNode = ancestors[ancestors.length - 3];\n        return parentNode.kind === Kind.INPUT_OBJECT_TYPE_DEFINITION ? DirectiveLocation.INPUT_FIELD_DEFINITION : DirectiveLocation.ARGUMENT_DEFINITION;\n      }\n  }\n}\nfunction getDirectiveLocationForOperation(operation) {\n  switch (operation) {\n    case 'query':\n      return DirectiveLocation.QUERY;\n    case 'mutation':\n      return DirectiveLocation.MUTATION;\n    case 'subscription':\n      return DirectiveLocation.SUBSCRIPTION;\n  } // istanbul ignore next (Not reachable. All possible types have been considered)\n\n  false || invariant(0, 'Unexpected operation: ' + inspect(operation));\n}","map":{"version":3,"names":["inspect","invariant","GraphQLError","Kind","DirectiveLocation","specifiedDirectives","KnownDirectivesRule","context","locationsMap","Object","create","schema","getSchema","definedDirectives","getDirectives","_i2","length","directive","name","locations","astDefinitions","getDocument","definitions","_i4","def","kind","DIRECTIVE_DEFINITION","value","map","Directive","node","_key","_parent","_path","ancestors","reportError","concat","candidateLocation","getDirectiveLocationForASTPath","indexOf","appliedTo","Array","isArray","OPERATION_DEFINITION","getDirectiveLocationForOperation","operation","FIELD","FRAGMENT_SPREAD","INLINE_FRAGMENT","FRAGMENT_DEFINITION","VARIABLE_DEFINITION","SCHEMA_DEFINITION","SCHEMA_EXTENSION","SCHEMA","SCALAR_TYPE_DEFINITION","SCALAR_TYPE_EXTENSION","SCALAR","OBJECT_TYPE_DEFINITION","OBJECT_TYPE_EXTENSION","OBJECT","FIELD_DEFINITION","INTERFACE_TYPE_DEFINITION","INTERFACE_TYPE_EXTENSION","INTERFACE","UNION_TYPE_DEFINITION","UNION_TYPE_EXTENSION","UNION","ENUM_TYPE_DEFINITION","ENUM_TYPE_EXTENSION","ENUM","ENUM_VALUE_DEFINITION","ENUM_VALUE","INPUT_OBJECT_TYPE_DEFINITION","INPUT_OBJECT_TYPE_EXTENSION","INPUT_OBJECT","INPUT_VALUE_DEFINITION","parentNode","INPUT_FIELD_DEFINITION","ARGUMENT_DEFINITION","QUERY","MUTATION","SUBSCRIPTION"],"sources":["/data/stackhub-web/plugins/myapps/node_modules/graphql/validation/rules/KnownDirectivesRule.mjs"],"sourcesContent":["import inspect from \"../../jsutils/inspect.mjs\";\nimport invariant from \"../../jsutils/invariant.mjs\";\nimport { GraphQLError } from \"../../error/GraphQLError.mjs\";\nimport { Kind } from \"../../language/kinds.mjs\";\nimport { DirectiveLocation } from \"../../language/directiveLocation.mjs\";\nimport { specifiedDirectives } from \"../../type/directives.mjs\";\n\n/**\n * Known directives\n *\n * A GraphQL document is only valid if all `@directives` are known by the\n * schema and legally positioned.\n */\nexport function KnownDirectivesRule(context) {\n  var locationsMap = Object.create(null);\n  var schema = context.getSchema();\n  var definedDirectives = schema ? schema.getDirectives() : specifiedDirectives;\n\n  for (var _i2 = 0; _i2 < definedDirectives.length; _i2++) {\n    var directive = definedDirectives[_i2];\n    locationsMap[directive.name] = directive.locations;\n  }\n\n  var astDefinitions = context.getDocument().definitions;\n\n  for (var _i4 = 0; _i4 < astDefinitions.length; _i4++) {\n    var def = astDefinitions[_i4];\n\n    if (def.kind === Kind.DIRECTIVE_DEFINITION) {\n      locationsMap[def.name.value] = def.locations.map(function (name) {\n        return name.value;\n      });\n    }\n  }\n\n  return {\n    Directive: function Directive(node, _key, _parent, _path, ancestors) {\n      var name = node.name.value;\n      var locations = locationsMap[name];\n\n      if (!locations) {\n        context.reportError(new GraphQLError(\"Unknown directive \\\"@\".concat(name, \"\\\".\"), node));\n        return;\n      }\n\n      var candidateLocation = getDirectiveLocationForASTPath(ancestors);\n\n      if (candidateLocation && locations.indexOf(candidateLocation) === -1) {\n        context.reportError(new GraphQLError(\"Directive \\\"@\".concat(name, \"\\\" may not be used on \").concat(candidateLocation, \".\"), node));\n      }\n    }\n  };\n}\n\nfunction getDirectiveLocationForASTPath(ancestors) {\n  var appliedTo = ancestors[ancestors.length - 1];\n  !Array.isArray(appliedTo) || invariant(0);\n\n  switch (appliedTo.kind) {\n    case Kind.OPERATION_DEFINITION:\n      return getDirectiveLocationForOperation(appliedTo.operation);\n\n    case Kind.FIELD:\n      return DirectiveLocation.FIELD;\n\n    case Kind.FRAGMENT_SPREAD:\n      return DirectiveLocation.FRAGMENT_SPREAD;\n\n    case Kind.INLINE_FRAGMENT:\n      return DirectiveLocation.INLINE_FRAGMENT;\n\n    case Kind.FRAGMENT_DEFINITION:\n      return DirectiveLocation.FRAGMENT_DEFINITION;\n\n    case Kind.VARIABLE_DEFINITION:\n      return DirectiveLocation.VARIABLE_DEFINITION;\n\n    case Kind.SCHEMA_DEFINITION:\n    case Kind.SCHEMA_EXTENSION:\n      return DirectiveLocation.SCHEMA;\n\n    case Kind.SCALAR_TYPE_DEFINITION:\n    case Kind.SCALAR_TYPE_EXTENSION:\n      return DirectiveLocation.SCALAR;\n\n    case Kind.OBJECT_TYPE_DEFINITION:\n    case Kind.OBJECT_TYPE_EXTENSION:\n      return DirectiveLocation.OBJECT;\n\n    case Kind.FIELD_DEFINITION:\n      return DirectiveLocation.FIELD_DEFINITION;\n\n    case Kind.INTERFACE_TYPE_DEFINITION:\n    case Kind.INTERFACE_TYPE_EXTENSION:\n      return DirectiveLocation.INTERFACE;\n\n    case Kind.UNION_TYPE_DEFINITION:\n    case Kind.UNION_TYPE_EXTENSION:\n      return DirectiveLocation.UNION;\n\n    case Kind.ENUM_TYPE_DEFINITION:\n    case Kind.ENUM_TYPE_EXTENSION:\n      return DirectiveLocation.ENUM;\n\n    case Kind.ENUM_VALUE_DEFINITION:\n      return DirectiveLocation.ENUM_VALUE;\n\n    case Kind.INPUT_OBJECT_TYPE_DEFINITION:\n    case Kind.INPUT_OBJECT_TYPE_EXTENSION:\n      return DirectiveLocation.INPUT_OBJECT;\n\n    case Kind.INPUT_VALUE_DEFINITION:\n      {\n        var parentNode = ancestors[ancestors.length - 3];\n        return parentNode.kind === Kind.INPUT_OBJECT_TYPE_DEFINITION ? DirectiveLocation.INPUT_FIELD_DEFINITION : DirectiveLocation.ARGUMENT_DEFINITION;\n      }\n  }\n}\n\nfunction getDirectiveLocationForOperation(operation) {\n  switch (operation) {\n    case 'query':\n      return DirectiveLocation.QUERY;\n\n    case 'mutation':\n      return DirectiveLocation.MUTATION;\n\n    case 'subscription':\n      return DirectiveLocation.SUBSCRIPTION;\n  } // istanbul ignore next (Not reachable. All possible types have been considered)\n\n\n  false || invariant(0, 'Unexpected operation: ' + inspect(operation));\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
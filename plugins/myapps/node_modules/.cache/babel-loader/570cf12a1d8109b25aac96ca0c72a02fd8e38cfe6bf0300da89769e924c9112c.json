{"ast":null,"code":"import { invariant } from \"../../utilities/globals/index.js\";\nexport function toPromise(observable) {\n  var completed = false;\n  return new Promise(function (resolve, reject) {\n    observable.subscribe({\n      next: function next(data) {\n        if (completed) {\n          __DEV__ && invariant.warn(\"Promise Wrapper does not support multiple results from Observable\");\n        } else {\n          completed = true;\n          resolve(data);\n        }\n      },\n      error: reject\n    });\n  });\n}","map":{"version":3,"names":["invariant","toPromise","observable","completed","Promise","resolve","reject","subscribe","next","data","__DEV__","warn","error"],"sources":["/data/stackhub-web/plugins/myapps/node_modules/@apollo/src/link/utils/toPromise.ts"],"sourcesContent":["import { invariant } from '../../utilities/globals';\nimport { Observable } from '../../utilities';\n\nexport function toPromise<R>(observable: Observable<R>): Promise<R> {\n  let completed = false;\n  return new Promise<R>((resolve, reject) => {\n    observable.subscribe({\n      next: data => {\n        if (completed) {\n          invariant.warn(\n            `Promise Wrapper does not support multiple results from Observable`,\n          );\n        } else {\n          completed = true;\n          resolve(data);\n        }\n      },\n      error: reject,\n    });\n  });\n}\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,kCAA0B;AAGpD,OAAM,SAAUC,SAASA,CAAIC,UAAyB;EACpD,IAAIC,SAAS,GAAG,KAAK;EACrB,OAAO,IAAIC,OAAO,CAAI,UAACC,OAAO,EAAEC,MAAM;IACpCJ,UAAU,CAACK,SAAS,CAAC;MACnBC,IAAI,EAAE,SAAAA,KAAAC,IAAI;QACR,IAAIN,SAAS,EAAE;UACbO,OAAA,IAAUV,SACR,CAAAW,IAAA,oEACA;SACH,MAAM;UACLR,SAAS,GAAG,IAAI;UAChBE,OAAO,CAACI,IAAI,CAAC;;MAEjB,CAAC;MACDG,KAAK,EAAEN;KACR,CAAC;EACJ,CAAC,CAAC;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import _slicedToArray from \"/data/stackhub-web/plugins/myapps/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport responsivePropType from './responsivePropType';\nimport { handleBreakpoints } from './breakpoints';\nimport { getPath } from './style';\nimport merge from './merge';\nimport memoize from './memoize';\nvar properties = {\n  m: 'margin',\n  p: 'padding'\n};\nvar directions = {\n  t: 'Top',\n  r: 'Right',\n  b: 'Bottom',\n  l: 'Left',\n  x: ['Left', 'Right'],\n  y: ['Top', 'Bottom']\n};\nvar aliases = {\n  marginX: 'mx',\n  marginY: 'my',\n  paddingX: 'px',\n  paddingY: 'py'\n};\n\n// memoize() impact:\n// From 300,000 ops/sec\n// To 350,000 ops/sec\nvar getCssProperties = memoize(function (prop) {\n  // It's not a shorthand notation.\n  if (prop.length > 2) {\n    if (aliases[prop]) {\n      prop = aliases[prop];\n    } else {\n      return [prop];\n    }\n  }\n  var _prop$split = prop.split(''),\n    _prop$split2 = _slicedToArray(_prop$split, 2),\n    a = _prop$split2[0],\n    b = _prop$split2[1];\n  var property = properties[a];\n  var direction = directions[b] || '';\n  return Array.isArray(direction) ? direction.map(function (dir) {\n    return property + dir;\n  }) : [property + direction];\n});\nexport var marginKeys = ['m', 'mt', 'mr', 'mb', 'ml', 'mx', 'my', 'margin', 'marginTop', 'marginRight', 'marginBottom', 'marginLeft', 'marginX', 'marginY', 'marginInline', 'marginInlineStart', 'marginInlineEnd', 'marginBlock', 'marginBlockStart', 'marginBlockEnd'];\nexport var paddingKeys = ['p', 'pt', 'pr', 'pb', 'pl', 'px', 'py', 'padding', 'paddingTop', 'paddingRight', 'paddingBottom', 'paddingLeft', 'paddingX', 'paddingY', 'paddingInline', 'paddingInlineStart', 'paddingInlineEnd', 'paddingBlock', 'paddingBlockStart', 'paddingBlockEnd'];\nvar spacingKeys = [].concat(marginKeys, paddingKeys);\nexport function createUnaryUnit(theme, themeKey, defaultValue, propName) {\n  var _getPath;\n  var themeSpacing = (_getPath = getPath(theme, themeKey, false)) != null ? _getPath : defaultValue;\n  if (typeof themeSpacing === 'number') {\n    return function (abs) {\n      if (typeof abs === 'string') {\n        return abs;\n      }\n      if (process.env.NODE_ENV !== 'production') {\n        if (typeof abs !== 'number') {\n          console.error(\"MUI: Expected \".concat(propName, \" argument to be a number or a string, got \").concat(abs, \".\"));\n        }\n      }\n      return themeSpacing * abs;\n    };\n  }\n  if (Array.isArray(themeSpacing)) {\n    return function (abs) {\n      if (typeof abs === 'string') {\n        return abs;\n      }\n      if (process.env.NODE_ENV !== 'production') {\n        if (!Number.isInteger(abs)) {\n          console.error([\"MUI: The `theme.\".concat(themeKey, \"` array type cannot be combined with non integer values.\") + \"You should either use an integer value that can be used as index, or define the `theme.\".concat(themeKey, \"` as a number.\")].join('\\n'));\n        } else if (abs > themeSpacing.length - 1) {\n          console.error([\"MUI: The value provided (\".concat(abs, \") overflows.\"), \"The supported values are: \".concat(JSON.stringify(themeSpacing), \".\"), \"\".concat(abs, \" > \").concat(themeSpacing.length - 1, \", you need to add the missing values.\")].join('\\n'));\n        }\n      }\n      return themeSpacing[abs];\n    };\n  }\n  if (typeof themeSpacing === 'function') {\n    return themeSpacing;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    console.error([\"MUI: The `theme.\".concat(themeKey, \"` value (\").concat(themeSpacing, \") is invalid.\"), 'It should be a number, an array or a function.'].join('\\n'));\n  }\n  return function () {\n    return undefined;\n  };\n}\nexport function createUnarySpacing(theme) {\n  return createUnaryUnit(theme, 'spacing', 8, 'spacing');\n}\nexport function getValue(transformer, propValue) {\n  if (typeof propValue === 'string' || propValue == null) {\n    return propValue;\n  }\n  var abs = Math.abs(propValue);\n  var transformed = transformer(abs);\n  if (propValue >= 0) {\n    return transformed;\n  }\n  if (typeof transformed === 'number') {\n    return -transformed;\n  }\n  return \"-\".concat(transformed);\n}\nexport function getStyleFromPropValue(cssProperties, transformer) {\n  return function (propValue) {\n    return cssProperties.reduce(function (acc, cssProperty) {\n      acc[cssProperty] = getValue(transformer, propValue);\n      return acc;\n    }, {});\n  };\n}\nfunction resolveCssProperty(props, keys, prop, transformer) {\n  // Using a hash computation over an array iteration could be faster, but with only 28 items,\n  // it's doesn't worth the bundle size.\n  if (keys.indexOf(prop) === -1) {\n    return null;\n  }\n  var cssProperties = getCssProperties(prop);\n  var styleFromPropValue = getStyleFromPropValue(cssProperties, transformer);\n  var propValue = props[prop];\n  return handleBreakpoints(props, propValue, styleFromPropValue);\n}\nfunction style(props, keys) {\n  var transformer = createUnarySpacing(props.theme);\n  return Object.keys(props).map(function (prop) {\n    return resolveCssProperty(props, keys, prop, transformer);\n  }).reduce(merge, {});\n}\nexport function margin(props) {\n  return style(props, marginKeys);\n}\nmargin.propTypes = process.env.NODE_ENV !== 'production' ? marginKeys.reduce(function (obj, key) {\n  obj[key] = responsivePropType;\n  return obj;\n}, {}) : {};\nmargin.filterProps = marginKeys;\nexport function padding(props) {\n  return style(props, paddingKeys);\n}\npadding.propTypes = process.env.NODE_ENV !== 'production' ? paddingKeys.reduce(function (obj, key) {\n  obj[key] = responsivePropType;\n  return obj;\n}, {}) : {};\npadding.filterProps = paddingKeys;\nfunction spacing(props) {\n  return style(props, spacingKeys);\n}\nspacing.propTypes = process.env.NODE_ENV !== 'production' ? spacingKeys.reduce(function (obj, key) {\n  obj[key] = responsivePropType;\n  return obj;\n}, {}) : {};\nspacing.filterProps = spacingKeys;\nexport default spacing;","map":{"version":3,"names":["responsivePropType","handleBreakpoints","getPath","merge","memoize","properties","m","p","directions","t","r","b","l","x","y","aliases","marginX","marginY","paddingX","paddingY","getCssProperties","prop","length","_prop$split","split","_prop$split2","_slicedToArray","a","property","direction","Array","isArray","map","dir","marginKeys","paddingKeys","spacingKeys","concat","createUnaryUnit","theme","themeKey","defaultValue","propName","_getPath","themeSpacing","abs","process","env","NODE_ENV","console","error","Number","isInteger","join","JSON","stringify","undefined","createUnarySpacing","getValue","transformer","propValue","Math","transformed","getStyleFromPropValue","cssProperties","reduce","acc","cssProperty","resolveCssProperty","props","keys","indexOf","styleFromPropValue","style","Object","margin","propTypes","obj","key","filterProps","padding","spacing"],"sources":["/data/stackhub-web/plugins/myapps/node_modules/@mui/system/esm/spacing.js"],"sourcesContent":["import responsivePropType from './responsivePropType';\nimport { handleBreakpoints } from './breakpoints';\nimport { getPath } from './style';\nimport merge from './merge';\nimport memoize from './memoize';\nconst properties = {\n  m: 'margin',\n  p: 'padding'\n};\nconst directions = {\n  t: 'Top',\n  r: 'Right',\n  b: 'Bottom',\n  l: 'Left',\n  x: ['Left', 'Right'],\n  y: ['Top', 'Bottom']\n};\nconst aliases = {\n  marginX: 'mx',\n  marginY: 'my',\n  paddingX: 'px',\n  paddingY: 'py'\n};\n\n// memoize() impact:\n// From 300,000 ops/sec\n// To 350,000 ops/sec\nconst getCssProperties = memoize(prop => {\n  // It's not a shorthand notation.\n  if (prop.length > 2) {\n    if (aliases[prop]) {\n      prop = aliases[prop];\n    } else {\n      return [prop];\n    }\n  }\n  const [a, b] = prop.split('');\n  const property = properties[a];\n  const direction = directions[b] || '';\n  return Array.isArray(direction) ? direction.map(dir => property + dir) : [property + direction];\n});\nexport const marginKeys = ['m', 'mt', 'mr', 'mb', 'ml', 'mx', 'my', 'margin', 'marginTop', 'marginRight', 'marginBottom', 'marginLeft', 'marginX', 'marginY', 'marginInline', 'marginInlineStart', 'marginInlineEnd', 'marginBlock', 'marginBlockStart', 'marginBlockEnd'];\nexport const paddingKeys = ['p', 'pt', 'pr', 'pb', 'pl', 'px', 'py', 'padding', 'paddingTop', 'paddingRight', 'paddingBottom', 'paddingLeft', 'paddingX', 'paddingY', 'paddingInline', 'paddingInlineStart', 'paddingInlineEnd', 'paddingBlock', 'paddingBlockStart', 'paddingBlockEnd'];\nconst spacingKeys = [...marginKeys, ...paddingKeys];\nexport function createUnaryUnit(theme, themeKey, defaultValue, propName) {\n  var _getPath;\n  const themeSpacing = (_getPath = getPath(theme, themeKey, false)) != null ? _getPath : defaultValue;\n  if (typeof themeSpacing === 'number') {\n    return abs => {\n      if (typeof abs === 'string') {\n        return abs;\n      }\n      if (process.env.NODE_ENV !== 'production') {\n        if (typeof abs !== 'number') {\n          console.error(`MUI: Expected ${propName} argument to be a number or a string, got ${abs}.`);\n        }\n      }\n      return themeSpacing * abs;\n    };\n  }\n  if (Array.isArray(themeSpacing)) {\n    return abs => {\n      if (typeof abs === 'string') {\n        return abs;\n      }\n      if (process.env.NODE_ENV !== 'production') {\n        if (!Number.isInteger(abs)) {\n          console.error([`MUI: The \\`theme.${themeKey}\\` array type cannot be combined with non integer values.` + `You should either use an integer value that can be used as index, or define the \\`theme.${themeKey}\\` as a number.`].join('\\n'));\n        } else if (abs > themeSpacing.length - 1) {\n          console.error([`MUI: The value provided (${abs}) overflows.`, `The supported values are: ${JSON.stringify(themeSpacing)}.`, `${abs} > ${themeSpacing.length - 1}, you need to add the missing values.`].join('\\n'));\n        }\n      }\n      return themeSpacing[abs];\n    };\n  }\n  if (typeof themeSpacing === 'function') {\n    return themeSpacing;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    console.error([`MUI: The \\`theme.${themeKey}\\` value (${themeSpacing}) is invalid.`, 'It should be a number, an array or a function.'].join('\\n'));\n  }\n  return () => undefined;\n}\nexport function createUnarySpacing(theme) {\n  return createUnaryUnit(theme, 'spacing', 8, 'spacing');\n}\nexport function getValue(transformer, propValue) {\n  if (typeof propValue === 'string' || propValue == null) {\n    return propValue;\n  }\n  const abs = Math.abs(propValue);\n  const transformed = transformer(abs);\n  if (propValue >= 0) {\n    return transformed;\n  }\n  if (typeof transformed === 'number') {\n    return -transformed;\n  }\n  return `-${transformed}`;\n}\nexport function getStyleFromPropValue(cssProperties, transformer) {\n  return propValue => cssProperties.reduce((acc, cssProperty) => {\n    acc[cssProperty] = getValue(transformer, propValue);\n    return acc;\n  }, {});\n}\nfunction resolveCssProperty(props, keys, prop, transformer) {\n  // Using a hash computation over an array iteration could be faster, but with only 28 items,\n  // it's doesn't worth the bundle size.\n  if (keys.indexOf(prop) === -1) {\n    return null;\n  }\n  const cssProperties = getCssProperties(prop);\n  const styleFromPropValue = getStyleFromPropValue(cssProperties, transformer);\n  const propValue = props[prop];\n  return handleBreakpoints(props, propValue, styleFromPropValue);\n}\nfunction style(props, keys) {\n  const transformer = createUnarySpacing(props.theme);\n  return Object.keys(props).map(prop => resolveCssProperty(props, keys, prop, transformer)).reduce(merge, {});\n}\nexport function margin(props) {\n  return style(props, marginKeys);\n}\nmargin.propTypes = process.env.NODE_ENV !== 'production' ? marginKeys.reduce((obj, key) => {\n  obj[key] = responsivePropType;\n  return obj;\n}, {}) : {};\nmargin.filterProps = marginKeys;\nexport function padding(props) {\n  return style(props, paddingKeys);\n}\npadding.propTypes = process.env.NODE_ENV !== 'production' ? paddingKeys.reduce((obj, key) => {\n  obj[key] = responsivePropType;\n  return obj;\n}, {}) : {};\npadding.filterProps = paddingKeys;\nfunction spacing(props) {\n  return style(props, spacingKeys);\n}\nspacing.propTypes = process.env.NODE_ENV !== 'production' ? spacingKeys.reduce((obj, key) => {\n  obj[key] = responsivePropType;\n  return obj;\n}, {}) : {};\nspacing.filterProps = spacingKeys;\nexport default spacing;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
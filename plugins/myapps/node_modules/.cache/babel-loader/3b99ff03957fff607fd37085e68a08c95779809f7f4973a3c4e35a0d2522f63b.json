{"ast":null,"code":"import { __rest } from \"tslib\";\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/DualListSelector/dual-list-selector';\nimport { DualListSelectorListItem } from './DualListSelectorListItem';\nimport * as React from 'react';\nimport { DualListSelectorListContext } from './DualListSelectorContext';\nexport var DualListSelectorList = function DualListSelectorList(_a) {\n  var children = _a.children,\n    props = __rest(_a, [\"children\"]);\n  var _React$useContext = React.useContext(DualListSelectorListContext),\n    setFocusedOption = _React$useContext.setFocusedOption,\n    isTree = _React$useContext.isTree,\n    ariaLabelledBy = _React$useContext.ariaLabelledBy,\n    focusedOption = _React$useContext.focusedOption,\n    displayOption = _React$useContext.displayOption,\n    selectedOptions = _React$useContext.selectedOptions,\n    id = _React$useContext.id,\n    onOptionSelect = _React$useContext.onOptionSelect,\n    options = _React$useContext.options,\n    isDisabled = _React$useContext.isDisabled;\n  // only called when options are passed via options prop\n  var onOptionClick = function onOptionClick(e, index, id) {\n    setFocusedOption(id);\n    onOptionSelect(e, index, id);\n  };\n  var hasOptions = function hasOptions() {\n    return options.length !== 0 || children !== undefined && children.length !== 0;\n  };\n  return React.createElement(\"ul\", Object.assign({\n    className: css(styles.dualListSelectorList)\n  }, hasOptions() && {\n    role: isTree ? 'tree' : 'listbox',\n    'aria-multiselectable': true,\n    'aria-labelledby': ariaLabelledBy,\n    'aria-activedescendant': focusedOption\n  }, {\n    \"aria-disabled\": isDisabled ? 'true' : undefined\n  }, props), options.length === 0 ? children : options.map(function (option, index) {\n    if (displayOption(option)) {\n      return React.createElement(DualListSelectorListItem, {\n        key: index,\n        isSelected: selectedOptions.indexOf(index) !== -1,\n        id: \"\".concat(id, \"-option-\").concat(index),\n        onOptionSelect: function onOptionSelect(e, id) {\n          return onOptionClick(e, index, id);\n        },\n        orderIndex: index,\n        isDisabled: isDisabled\n      }, option);\n    }\n    return;\n  }));\n};\nDualListSelectorList.displayName = 'DualListSelectorList';","map":{"version":3,"names":["css","styles","DualListSelectorListItem","React","DualListSelectorListContext","DualListSelectorList","_a","children","props","__rest","_React$useContext","useContext","setFocusedOption","isTree","ariaLabelledBy","focusedOption","displayOption","selectedOptions","id","onOptionSelect","options","isDisabled","onOptionClick","e","index","hasOptions","length","undefined","createElement","Object","assign","className","dualListSelectorList","role","map","option","key","isSelected","indexOf","concat","orderIndex","displayName"],"sources":["/data/stackhub-web/plugins/myapps/node_modules/@patternfly/react-core/src/components/DualListSelector/DualListSelectorList.tsx"],"sourcesContent":["import { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/DualListSelector/dual-list-selector';\nimport { DualListSelectorListItem } from './DualListSelectorListItem';\nimport * as React from 'react';\nimport { DualListSelectorListContext } from './DualListSelectorContext';\n\n/** Acts as the container for DualListSelectorListItem sub-components. */\n\nexport interface DualListSelectorListProps extends React.HTMLProps<HTMLUListElement> {\n  /** Content rendered inside the dual list selector list */\n  children?: React.ReactNode;\n}\n\nexport const DualListSelectorList: React.FunctionComponent<DualListSelectorListProps> = ({\n  children,\n  ...props\n}: DualListSelectorListProps) => {\n  const {\n    setFocusedOption,\n    isTree,\n    ariaLabelledBy,\n    focusedOption,\n    displayOption,\n    selectedOptions,\n    id,\n    onOptionSelect,\n    options,\n    isDisabled\n  } = React.useContext(DualListSelectorListContext);\n\n  // only called when options are passed via options prop\n  const onOptionClick = (e: React.MouseEvent | React.ChangeEvent | React.KeyboardEvent, index: number, id: string) => {\n    setFocusedOption(id);\n    onOptionSelect(e, index, id);\n  };\n\n  const hasOptions = () =>\n    options.length !== 0 || (children !== undefined && (children as React.ReactNode[]).length !== 0);\n\n  return (\n    <ul\n      className={css(styles.dualListSelectorList)}\n      {...(hasOptions() && {\n        role: isTree ? 'tree' : 'listbox',\n        'aria-multiselectable': true,\n        'aria-labelledby': ariaLabelledBy,\n        'aria-activedescendant': focusedOption\n      })}\n      aria-disabled={isDisabled ? 'true' : undefined}\n      {...props}\n    >\n      {options.length === 0\n        ? children\n        : options.map((option, index) => {\n            if (displayOption(option)) {\n              return (\n                <DualListSelectorListItem\n                  key={index}\n                  isSelected={(selectedOptions as number[]).indexOf(index) !== -1}\n                  id={`${id}-option-${index}`}\n                  onOptionSelect={(e, id) => onOptionClick(e, index, id)}\n                  orderIndex={index}\n                  isDisabled={isDisabled}\n                >\n                  {option}\n                </DualListSelectorListItem>\n              );\n            }\n            return;\n          })}\n    </ul>\n  );\n};\nDualListSelectorList.displayName = 'DualListSelectorList';\n"],"mappings":";AAAA,SAASA,GAAG,QAAQ,0BAA0B;AAC9C,OAAOC,MAAM,MAAM,6EAA6E;AAChG,SAASC,wBAAwB,QAAQ,4BAA4B;AACrE,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAASC,2BAA2B,QAAQ,2BAA2B;AASvE,OAAO,IAAMC,oBAAoB,GAAuD,SAA3EA,oBAAoBA,CAAwDC,EAG7D,EAAI;EAHyD,IACvFC,QAAQ,GAAAD,EAEkB,CAF1BC,QAAQ;IACLC,KAAK,GAAAC,MAAA,CAAAH,EAAA,EAF+E,YAGxF,CADS;EAER,IAAAI,iBAAA,GAWIP,KAAK,CAACQ,UAAU,CAACP,2BAA2B,CAAC;IAV/CQ,gBAAgB,GAAAF,iBAAA,CAAhBE,gBAAgB;IAChBC,MAAM,GAAAH,iBAAA,CAANG,MAAM;IACNC,cAAc,GAAAJ,iBAAA,CAAdI,cAAc;IACdC,aAAa,GAAAL,iBAAA,CAAbK,aAAa;IACbC,aAAa,GAAAN,iBAAA,CAAbM,aAAa;IACbC,eAAe,GAAAP,iBAAA,CAAfO,eAAe;IACfC,EAAE,GAAAR,iBAAA,CAAFQ,EAAE;IACFC,cAAc,GAAAT,iBAAA,CAAdS,cAAc;IACdC,OAAO,GAAAV,iBAAA,CAAPU,OAAO;IACPC,UAAU,GAAAX,iBAAA,CAAVW,UAAU;EAGZ;EACA,IAAMC,aAAa,GAAG,SAAhBA,aAAaA,CAAIC,CAA6D,EAAEC,KAAa,EAAEN,EAAU,EAAI;IACjHN,gBAAgB,CAACM,EAAE,CAAC;IACpBC,cAAc,CAACI,CAAC,EAAEC,KAAK,EAAEN,EAAE,CAAC;EAC9B,CAAC;EAED,IAAMO,UAAU,GAAG,SAAbA,UAAUA,CAAA;IAAA,OACdL,OAAO,CAACM,MAAM,KAAK,CAAC,IAAKnB,QAAQ,KAAKoB,SAAS,IAAKpB,QAA8B,CAACmB,MAAM,KAAK,CAAE;EAAA;EAElG,OACEvB,KAAA,CAAAyB,aAAA,OAAAC,MAAA,CAAAC,MAAA;IACEC,SAAS,EAAE/B,GAAG,CAACC,MAAM,CAAC+B,oBAAoB;EAAC,GACtCP,UAAU,EAAE,IAAI;IACnBQ,IAAI,EAAEpB,MAAM,GAAG,MAAM,GAAG,SAAS;IACjC,sBAAsB,EAAE,IAAI;IAC5B,iBAAiB,EAAEC,cAAc;IACjC,uBAAuB,EAAEC;GAC1B,EAAC;IAAA,iBACaM,UAAU,GAAG,MAAM,GAAGM;EAAS,GAC1CnB,KAAK,GAERY,OAAO,CAACM,MAAM,KAAK,CAAC,GACjBnB,QAAQ,GACRa,OAAO,CAACc,GAAG,CAAC,UAACC,MAAM,EAAEX,KAAK,EAAI;IAC5B,IAAIR,aAAa,CAACmB,MAAM,CAAC,EAAE;MACzB,OACEhC,KAAA,CAAAyB,aAAA,CAAC1B,wBAAwB;QACvBkC,GAAG,EAAEZ,KAAK;QACVa,UAAU,EAAGpB,eAA4B,CAACqB,OAAO,CAACd,KAAK,CAAC,KAAK,CAAC,CAAC;QAC/DN,EAAE,KAAAqB,MAAA,CAAKrB,EAAE,cAAAqB,MAAA,CAAWf,KAAK,CAAE;QAC3BL,cAAc,EAAE,SAAAA,eAACI,CAAC,EAAEL,EAAE;UAAA,OAAKI,aAAa,CAACC,CAAC,EAAEC,KAAK,EAAEN,EAAE,CAAC;QAAA;QACtDsB,UAAU,EAAEhB,KAAK;QACjBH,UAAU,EAAEA;MAAU,GAErBc,MAAM,CACkB;;IAG/B;EACF,CAAC,CAAC,CACH;AAET,CAAC;AACD9B,oBAAoB,CAACoC,WAAW,GAAG,sBAAsB"},"metadata":{},"sourceType":"module","externalDependencies":[]}
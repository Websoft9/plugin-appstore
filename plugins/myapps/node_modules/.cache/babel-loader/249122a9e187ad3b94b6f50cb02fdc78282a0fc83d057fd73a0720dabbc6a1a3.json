{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport { KeyTypes } from '../../helpers/constants';\nimport styles from '@patternfly/react-styles/css/components/OptionsMenu/options-menu';\nimport { DropdownContext } from '../Dropdown';\nexport var OptionsMenuToggleWithText = function OptionsMenuToggleWithText(_a) {\n  var _a$parentId = _a.parentId,\n    parentId = _a$parentId === void 0 ? '' : _a$parentId,\n    toggleText = _a.toggleText,\n    _a$toggleTextClassNam = _a.toggleTextClassName,\n    toggleTextClassName = _a$toggleTextClassNam === void 0 ? '' : _a$toggleTextClassNam,\n    toggleButtonContents = _a.toggleButtonContents,\n    _a$toggleButtonConten = _a.toggleButtonContentsClassName,\n    toggleButtonContentsClassName = _a$toggleButtonConten === void 0 ? '' : _a$toggleButtonConten,\n    _a$onToggle = _a.onToggle,\n    onToggle = _a$onToggle === void 0 ? function () {\n      return null;\n    } : _a$onToggle,\n    _a$isOpen = _a.isOpen,\n    isOpen = _a$isOpen === void 0 ? false : _a$isOpen,\n    _a$isPlain = _a.isPlain,\n    isPlain = _a$isPlain === void 0 ? false : _a$isPlain,\n    _a$isText = _a.isText,\n    isText = _a$isText === void 0 ? true : _a$isText,\n    _a$isDisabled = _a.isDisabled,\n    isDisabled = _a$isDisabled === void 0 ? false : _a$isDisabled,\n    _a$isActive = _a.isActive,\n    isActive = _a$isActive === void 0 ? false : _a$isActive,\n    ariaHasPopup = _a['aria-haspopup'],\n    parentRef = _a.parentRef,\n    getMenuRef = _a.getMenuRef,\n    onEnter = _a.onEnter,\n    _a$ariaLabel = _a['aria-label'],\n    ariaLabel = _a$ariaLabel === void 0 ? 'Options menu' : _a$ariaLabel,\n    props = __rest(_a, [\"parentId\", \"toggleText\", \"toggleTextClassName\", \"toggleButtonContents\", \"toggleButtonContentsClassName\", \"onToggle\", \"isOpen\", \"isPlain\", \"isText\", \"isDisabled\", \"isActive\", 'aria-haspopup', \"parentRef\", \"getMenuRef\", \"onEnter\", 'aria-label']);\n  var buttonRef = React.useRef();\n  React.useEffect(function () {\n    document.addEventListener('mousedown', onDocClick);\n    document.addEventListener('touchstart', onDocClick);\n    document.addEventListener('keydown', onEscPress);\n    return function () {\n      document.removeEventListener('mousedown', onDocClick);\n      document.removeEventListener('touchstart', onDocClick);\n      document.removeEventListener('keydown', onEscPress);\n    };\n  });\n  var onDocClick = function onDocClick(event) {\n    if (isOpen && parentRef && parentRef.current && !parentRef.current.contains(event.target)) {\n      onToggle(false);\n      buttonRef.current.focus();\n    }\n  };\n  var onKeyDown = function onKeyDown(event) {\n    if (event.key === 'Tab' && !isOpen) {\n      return;\n    }\n    event.preventDefault();\n    if ((event.key === 'Enter' || event.key === ' ') && isOpen) {\n      onToggle(!isOpen);\n    } else if ((event.key === 'Enter' || event.key === ' ') && !isOpen) {\n      onToggle(!isOpen);\n      onEnter(event);\n    }\n  };\n  var onEscPress = function onEscPress(event) {\n    if (isOpen && (event.key === KeyTypes.Escape || event.key === 'Tab') && parentRef && parentRef.current && parentRef.current.contains(event.target)) {\n      onToggle(false);\n      buttonRef.current.focus();\n    }\n  };\n  return React.createElement(DropdownContext.Consumer, null, function (_ref) {\n    var contextId = _ref.id;\n    return React.createElement(\"div\", Object.assign({\n      className: css(styles.optionsMenuToggle, styles.modifiers.text, isPlain && styles.modifiers.plain, isDisabled && styles.modifiers.disabled, isActive && styles.modifiers.active)\n    }, props), React.createElement(\"span\", {\n      className: css(styles.optionsMenuToggleText, toggleTextClassName)\n    }, toggleText), React.createElement(\"button\", {\n      className: css(styles.optionsMenuToggleButton, toggleButtonContentsClassName),\n      id: parentId ? \"\".concat(parentId, \"-toggle\") : \"\".concat(contextId, \"-toggle\"),\n      \"aria-haspopup\": \"listbox\",\n      \"aria-label\": ariaLabel,\n      \"aria-expanded\": isOpen,\n      ref: buttonRef,\n      disabled: isDisabled,\n      onClick: function onClick() {\n        return onToggle(!isOpen);\n      },\n      onKeyDown: onKeyDown\n    }, React.createElement(\"span\", {\n      className: css(styles.optionsMenuToggleButtonIcon)\n    }, toggleButtonContents)));\n  });\n};\nOptionsMenuToggleWithText.displayName = 'OptionsMenuToggleWithText';","map":{"version":3,"names":["React","css","KeyTypes","styles","DropdownContext","OptionsMenuToggleWithText","_a","parentId","_a$parentId","toggleText","_a$toggleTextClassNam","toggleTextClassName","toggleButtonContents","_a$toggleButtonConten","toggleButtonContentsClassName","_a$onToggle","onToggle","_a$isOpen","isOpen","_a$isPlain","isPlain","_a$isText","isText","_a$isDisabled","isDisabled","_a$isActive","isActive","ariaHasPopup","parentRef","getMenuRef","onEnter","_a$ariaLabel","ariaLabel","props","__rest","buttonRef","useRef","useEffect","document","addEventListener","onDocClick","onEscPress","removeEventListener","event","current","contains","target","focus","onKeyDown","key","preventDefault","Escape","createElement","Consumer","_ref","contextId","id","Object","assign","className","optionsMenuToggle","modifiers","text","plain","disabled","active","optionsMenuToggleText","optionsMenuToggleButton","concat","ref","onClick","optionsMenuToggleButtonIcon","displayName"],"sources":["/data/stackhub-web/plugins/myapps/node_modules/@patternfly/react-core/src/components/OptionsMenu/OptionsMenuToggleWithText.tsx"],"sourcesContent":["import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport { KeyTypes } from '../../helpers/constants';\nimport styles from '@patternfly/react-styles/css/components/OptionsMenu/options-menu';\nimport { DropdownContext } from '../Dropdown';\n\nexport interface OptionsMenuToggleWithTextProps extends React.HTMLProps<HTMLDivElement> {\n  /** Id of the parent options menu component */\n  parentId?: string;\n  /** Content to be rendered inside the options menu toggle as text or another non-interactive element */\n  toggleText: React.ReactNode;\n  /** classes to be added to the options menu toggle text */\n  toggleTextClassName?: string;\n  /** Content to be rendered inside the options menu toggle button */\n  toggleButtonContents?: React.ReactNode;\n  /** Classes to be added to the options menu toggle button */\n  toggleButtonContentsClassName?: string;\n  /** Callback for when this options menu is toggled */\n  onToggle?: (event: boolean) => void;\n  /** Inner function to indicate open on Enter */\n  onEnter?: (event: React.MouseEvent<HTMLButtonElement> | React.KeyboardEvent<Element>) => void;\n  /** Flag to indicate if menu is open */\n  isOpen?: boolean;\n  /** Flag to indicate if the button is plain */\n  isPlain?: boolean;\n  /** Forces display of the active state of the options menu button */\n  isActive?: boolean;\n  /** Disables the options menu toggle */\n  isDisabled?: boolean;\n  /** @hide Internal parent reference */\n  parentRef?: React.RefObject<HTMLElement>;\n  /** Indicates that the element has a popup context menu or sub-level menu */\n  'aria-haspopup'?: boolean | 'dialog' | 'menu' | 'listbox' | 'tree' | 'grid';\n  /** Provides an accessible name for the button when an icon is used instead of text */\n  'aria-label'?: string;\n  /** @hide Display the toggle in text only mode. */\n  isText?: boolean;\n  /** @hide The menu element */\n  getMenuRef?: () => HTMLElement;\n}\n\nexport const OptionsMenuToggleWithText: React.FunctionComponent<OptionsMenuToggleWithTextProps> = ({\n  parentId = '',\n  toggleText,\n  toggleTextClassName = '',\n  toggleButtonContents,\n  toggleButtonContentsClassName = '',\n  onToggle = () => null as any,\n  isOpen = false,\n  isPlain = false,\n  /* eslint-disable @typescript-eslint/no-unused-vars */\n  isText = true,\n  isDisabled = false,\n  /* eslint-disable @typescript-eslint/no-unused-vars */\n  isActive = false,\n  'aria-haspopup': ariaHasPopup,\n  parentRef,\n  /* eslint-disable @typescript-eslint/no-unused-vars */\n  getMenuRef,\n  onEnter,\n  /* eslint-enable @typescript-eslint/no-unused-vars */\n  'aria-label': ariaLabel = 'Options menu',\n  ...props\n}: OptionsMenuToggleWithTextProps) => {\n  const buttonRef = React.useRef<HTMLButtonElement>();\n\n  React.useEffect(() => {\n    document.addEventListener('mousedown', onDocClick);\n    document.addEventListener('touchstart', onDocClick);\n    document.addEventListener('keydown', onEscPress);\n    return () => {\n      document.removeEventListener('mousedown', onDocClick);\n      document.removeEventListener('touchstart', onDocClick);\n      document.removeEventListener('keydown', onEscPress);\n    };\n  });\n\n  const onDocClick = (event: MouseEvent | TouchEvent) => {\n    if (isOpen && parentRef && parentRef.current && !parentRef.current.contains(event.target as Node)) {\n      onToggle(false);\n      buttonRef.current.focus();\n    }\n  };\n\n  const onKeyDown = (event: React.KeyboardEvent<any>) => {\n    if (event.key === 'Tab' && !isOpen) {\n      return;\n    }\n    event.preventDefault();\n    if ((event.key === 'Enter' || event.key === ' ') && isOpen) {\n      onToggle(!isOpen);\n    } else if ((event.key === 'Enter' || event.key === ' ') && !isOpen) {\n      onToggle(!isOpen);\n      onEnter(event);\n    }\n  };\n\n  const onEscPress = (event: KeyboardEvent) => {\n    if (\n      isOpen &&\n      (event.key === KeyTypes.Escape || event.key === 'Tab') &&\n      parentRef &&\n      parentRef.current &&\n      parentRef.current.contains(event.target as Node)\n    ) {\n      onToggle(false);\n      buttonRef.current.focus();\n    }\n  };\n\n  return (\n    <DropdownContext.Consumer>\n      {({ id: contextId }) => (\n        <div\n          className={css(\n            styles.optionsMenuToggle,\n            styles.modifiers.text,\n            isPlain && styles.modifiers.plain,\n            isDisabled && styles.modifiers.disabled,\n            isActive && styles.modifiers.active\n          )}\n          {...props}\n        >\n          <span className={css(styles.optionsMenuToggleText, toggleTextClassName)}>{toggleText}</span>\n          <button\n            className={css(styles.optionsMenuToggleButton, toggleButtonContentsClassName)}\n            id={parentId ? `${parentId}-toggle` : `${contextId}-toggle`}\n            aria-haspopup=\"listbox\"\n            aria-label={ariaLabel}\n            aria-expanded={isOpen}\n            ref={buttonRef}\n            disabled={isDisabled}\n            onClick={() => onToggle(!isOpen)}\n            onKeyDown={onKeyDown}\n          >\n            <span className={css(styles.optionsMenuToggleButtonIcon)}>{toggleButtonContents}</span>\n          </button>\n        </div>\n      )}\n    </DropdownContext.Consumer>\n  );\n};\nOptionsMenuToggleWithText.displayName = 'OptionsMenuToggleWithText';\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
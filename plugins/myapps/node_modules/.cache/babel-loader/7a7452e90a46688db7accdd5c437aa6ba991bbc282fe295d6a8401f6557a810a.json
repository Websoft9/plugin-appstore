{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport CaretDownIcon from '@patternfly/react-icons/dist/esm/icons/caret-down-icon';\nimport { Toggle } from './Toggle';\nimport styles from '@patternfly/react-styles/css/components/Dropdown/dropdown';\nimport { DropdownContext } from './dropdownConstants';\nimport { css } from '@patternfly/react-styles';\nimport { useOUIAProps } from '../../helpers';\nexport var DropdownToggle = function DropdownToggle(_a) {\n  var _a$id = _a.id,\n    id = _a$id === void 0 ? '' : _a$id,\n    _a$children = _a.children,\n    children = _a$children === void 0 ? null : _a$children,\n    _a$className = _a.className,\n    className = _a$className === void 0 ? '' : _a$className,\n    _a$isOpen = _a.isOpen,\n    isOpen = _a$isOpen === void 0 ? false : _a$isOpen,\n    _a$parentRef = _a.parentRef,\n    parentRef = _a$parentRef === void 0 ? null : _a$parentRef,\n    _a$getMenuRef = _a.getMenuRef,\n    getMenuRef = _a$getMenuRef === void 0 ? null : _a$getMenuRef,\n    _a$isDisabled = _a.isDisabled,\n    isDisabled = _a$isDisabled === void 0 ? false : _a$isDisabled,\n    _a$isPlain = _a.isPlain,\n    isPlain = _a$isPlain === void 0 ? false : _a$isPlain,\n    _a$isText = _a.isText,\n    isText = _a$isText === void 0 ? false : _a$isText,\n    _a$isPrimary = _a.isPrimary,\n    isPrimary = _a$isPrimary === void 0 ? false : _a$isPrimary,\n    _a$toggleVariant = _a.toggleVariant,\n    toggleVariant = _a$toggleVariant === void 0 ? 'default' : _a$toggleVariant,\n    _a$isActive = _a.isActive,\n    isActive = _a$isActive === void 0 ? false : _a$isActive,\n    _a$onToggle = _a.onToggle,\n    onToggle = _a$onToggle === void 0 ? function (_isOpen) {\n      return undefined;\n    } : _a$onToggle,\n    _a$icon = _a.icon,\n    icon = _a$icon === void 0 ? null : _a$icon,\n    _a$toggleIndicator = _a.toggleIndicator,\n    ToggleIndicator = _a$toggleIndicator === void 0 ? CaretDownIcon : _a$toggleIndicator,\n    splitButtonItems = _a.splitButtonItems,\n    _a$splitButtonVariant = _a.splitButtonVariant,\n    splitButtonVariant = _a$splitButtonVariant === void 0 ? 'checkbox' : _a$splitButtonVariant,\n    ariaHasPopup = _a['aria-haspopup'],\n    ouiaId = _a.ouiaId,\n    ouiaSafe = _a.ouiaSafe,\n    ref = _a.ref,\n    props = __rest(_a, [\"id\", \"children\", \"className\", \"isOpen\", \"parentRef\", \"getMenuRef\", \"isDisabled\", \"isPlain\", \"isText\", \"isPrimary\", \"toggleVariant\", \"isActive\", \"onToggle\", \"icon\", \"toggleIndicator\", \"splitButtonItems\", \"splitButtonVariant\", 'aria-haspopup', \"ouiaId\", \"ouiaSafe\", \"ref\"]);\n  var ouiaProps = useOUIAProps(DropdownToggle.displayName, ouiaId, ouiaSafe);\n  var toggle = React.createElement(DropdownContext.Consumer, null, function (_ref) {\n    var toggleTextClass = _ref.toggleTextClass,\n      toggleIndicatorClass = _ref.toggleIndicatorClass,\n      toggleIconClass = _ref.toggleIconClass;\n    return React.createElement(Toggle, Object.assign({}, props, {\n      id: id,\n      className: className,\n      isOpen: isOpen,\n      parentRef: parentRef,\n      getMenuRef: getMenuRef,\n      isActive: isActive,\n      isDisabled: isDisabled,\n      isPlain: isPlain,\n      isText: isText,\n      isPrimary: isPrimary,\n      toggleVariant: toggleVariant,\n      onToggle: onToggle,\n      \"aria-haspopup\": ariaHasPopup\n    }, ouiaProps, splitButtonItems && {\n      isSplitButton: true,\n      'aria-label': props['aria-label'] || 'Select'\n    }), icon && React.createElement(\"span\", {\n      className: css(toggleIconClass)\n    }, icon), children && React.createElement(\"span\", {\n      className: ToggleIndicator && css(toggleTextClass)\n    }, children), ToggleIndicator && React.createElement(\"span\", {\n      className: css(!splitButtonItems && toggleIndicatorClass)\n    }, React.createElement(ToggleIndicator, null)));\n  });\n  if (splitButtonItems) {\n    return React.createElement(\"div\", {\n      className: css(styles.dropdownToggle, styles.modifiers.splitButton, splitButtonVariant === 'action' && styles.modifiers.action, (toggleVariant === 'primary' || isPrimary) && splitButtonVariant === 'action' && styles.modifiers.primary, toggleVariant === 'secondary' && splitButtonVariant === 'action' && styles.modifiers.secondary, isDisabled && styles.modifiers.disabled)\n    }, splitButtonItems, toggle);\n  }\n  return toggle;\n};\nDropdownToggle.displayName = 'DropdownToggle';","map":{"version":3,"names":["React","CaretDownIcon","Toggle","styles","DropdownContext","css","useOUIAProps","DropdownToggle","_a","id","_a$id","_a$children","children","_a$className","className","_a$isOpen","isOpen","_a$parentRef","parentRef","_a$getMenuRef","getMenuRef","_a$isDisabled","isDisabled","_a$isPlain","isPlain","_a$isText","isText","_a$isPrimary","isPrimary","_a$toggleVariant","toggleVariant","_a$isActive","isActive","_a$onToggle","onToggle","_isOpen","undefined","_a$icon","icon","_a$toggleIndicator","toggleIndicator","ToggleIndicator","splitButtonItems","_a$splitButtonVariant","splitButtonVariant","ariaHasPopup","ouiaId","ouiaSafe","ref","props","__rest","ouiaProps","displayName","toggle","createElement","Consumer","_ref","toggleTextClass","toggleIndicatorClass","toggleIconClass","Object","assign","isSplitButton","dropdownToggle","modifiers","splitButton","action","primary","secondary","disabled"],"sources":["/data/stackhub-web/plugins/myapps/node_modules/@patternfly/react-core/src/components/Dropdown/DropdownToggle.tsx"],"sourcesContent":["import * as React from 'react';\nimport CaretDownIcon from '@patternfly/react-icons/dist/esm/icons/caret-down-icon';\nimport { Toggle } from './Toggle';\nimport styles from '@patternfly/react-styles/css/components/Dropdown/dropdown';\nimport { DropdownContext } from './dropdownConstants';\nimport { css } from '@patternfly/react-styles';\nimport { useOUIAProps, OUIAProps } from '../../helpers';\n\nexport interface DropdownToggleProps extends React.HTMLProps<HTMLButtonElement>, OUIAProps {\n  /** HTML ID of dropdown toggle */\n  id?: string;\n  /** Anything which can be rendered as dropdown toggle button */\n  children?: React.ReactNode;\n  /** Classes applied to root element of dropdown toggle button */\n  className?: string;\n  /** Flag to indicate if menu is opened */\n  isOpen?: boolean;\n  /** Callback called when toggle is clicked */\n  onToggle?: (value: boolean, event: any) => void;\n  /** Element which wraps toggle */\n  parentRef?: HTMLElement;\n  /** The menu element */\n  getMenuRef?: () => HTMLElement;\n  /** Forces active state */\n  isActive?: boolean;\n  /** Display the toggle with no border or background */\n  isPlain?: boolean;\n  /** Display the toggle in text only mode */\n  isText?: boolean;\n  /** Whether or not the <div> has a disabled state */\n  isDisabled?: boolean;\n  /** @deprecated Use `toggleVariant` instead. Whether or not the dropdown toggle button should have primary button styling */\n  isPrimary?: boolean;\n  /** Alternate styles for the dropdown toggle button */\n  toggleVariant?: 'primary' | 'secondary' | 'default';\n  /** An image to display within the dropdown toggle, appearing before any component children */\n  icon?: React.ReactNode;\n  /** The icon to display for the toggle, appearing after any component children. Defaults to CaretDownIcon. Set to null to not show an icon. */\n  toggleIndicator?: React.ElementType | null;\n  /** Elements to display before the toggle button. When included, renders the toggle as a split button. */\n  splitButtonItems?: React.ReactNode[];\n  /** Variant of split button toggle */\n  splitButtonVariant?: 'action' | 'checkbox';\n  /** Accessible label for the dropdown toggle button */\n  'aria-label'?: string;\n  /** Accessibility property to indicate correct has popup */\n  'aria-haspopup'?: boolean | 'listbox' | 'menu' | 'dialog' | 'grid' | 'tree';\n  /** Type to put on the button */\n  type?: 'button' | 'submit' | 'reset';\n  /** Callback called when the Enter key is pressed */\n  onEnter?: (event?: React.MouseEvent<HTMLButtonElement>) => void;\n  /** Value to overwrite the randomly generated data-ouia-component-id.*/\n  ouiaId?: number | string;\n  /** Set the value of data-ouia-safe. Only set to true when the component is in a static state, i.e. no animations are occurring. At all other times, this value must be false. */\n  ouiaSafe?: boolean;\n}\n\nexport const DropdownToggle: React.FunctionComponent<DropdownToggleProps> = ({\n  id = '',\n  children = null,\n  className = '',\n  isOpen = false,\n  parentRef = null,\n  getMenuRef = null,\n  isDisabled = false,\n  isPlain = false,\n  isText = false,\n  isPrimary = false,\n  toggleVariant = 'default',\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  isActive = false,\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  onToggle = (_isOpen: boolean) => undefined as any,\n  icon = null,\n  toggleIndicator: ToggleIndicator = CaretDownIcon,\n  splitButtonItems,\n  splitButtonVariant = 'checkbox',\n  'aria-haspopup': ariaHasPopup,\n  ouiaId,\n  ouiaSafe,\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  ref, // Types of Ref are different for React.FunctionComponent vs React.Component\n  ...props\n}: DropdownToggleProps) => {\n  const ouiaProps = useOUIAProps(DropdownToggle.displayName, ouiaId, ouiaSafe);\n  const toggle = (\n    <DropdownContext.Consumer>\n      {({ toggleTextClass, toggleIndicatorClass, toggleIconClass }) => (\n        <Toggle\n          {...props}\n          id={id}\n          className={className}\n          isOpen={isOpen}\n          parentRef={parentRef}\n          getMenuRef={getMenuRef}\n          isActive={isActive}\n          isDisabled={isDisabled}\n          isPlain={isPlain}\n          isText={isText}\n          isPrimary={isPrimary}\n          toggleVariant={toggleVariant}\n          onToggle={onToggle}\n          aria-haspopup={ariaHasPopup}\n          {...ouiaProps}\n          {...(splitButtonItems && { isSplitButton: true, 'aria-label': props['aria-label'] || 'Select' })}\n        >\n          {icon && <span className={css(toggleIconClass)}>{icon}</span>}\n          {children && <span className={ToggleIndicator && css(toggleTextClass)}>{children}</span>}\n          {ToggleIndicator && (\n            <span className={css(!splitButtonItems && toggleIndicatorClass)}>\n              <ToggleIndicator />\n            </span>\n          )}\n        </Toggle>\n      )}\n    </DropdownContext.Consumer>\n  );\n\n  if (splitButtonItems) {\n    return (\n      <div\n        className={css(\n          styles.dropdownToggle,\n          styles.modifiers.splitButton,\n          splitButtonVariant === 'action' && styles.modifiers.action,\n          (toggleVariant === 'primary' || isPrimary) && splitButtonVariant === 'action' && styles.modifiers.primary,\n          toggleVariant === 'secondary' && splitButtonVariant === 'action' && styles.modifiers.secondary,\n          isDisabled && styles.modifiers.disabled\n        )}\n      >\n        {splitButtonItems}\n        {toggle}\n      </div>\n    );\n  }\n\n  return toggle;\n};\nDropdownToggle.displayName = 'DropdownToggle';\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,aAAa,MAAM,wDAAwD;AAClF,SAASC,MAAM,QAAQ,UAAU;AACjC,OAAOC,MAAM,MAAM,2DAA2D;AAC9E,SAASC,eAAe,QAAQ,qBAAqB;AACrD,SAASC,GAAG,QAAQ,0BAA0B;AAC9C,SAASC,YAAY,QAAmB,eAAe;AAmDvD,OAAO,IAAMC,cAAc,GAAiD,SAA/DA,cAAcA,CAAkDC,EA0BvD,EAAI;cAFrBA,EAEiB,CAzBpBC,EAAE;IAAFA,EAAE,GAAAC,KAAA,cAAG,EAAE,GAAAA,KAAA;IAAAC,WAAA,GAuBJH,EAEiB,CAxBpBI,QAAQ;IAARA,QAAQ,GAAAD,WAAA,cAAG,IAAI,GAAAA,WAAA;IAAAE,YAAA,GAsBZL,EAEiB,CAvBpBM,SAAS;IAATA,SAAS,GAAAD,YAAA,cAAG,EAAE,GAAAA,YAAA;IAAAE,SAAA,GAqBXP,EAEiB,CAtBpBQ,MAAM;IAANA,MAAM,GAAAD,SAAA,cAAG,KAAK,GAAAA,SAAA;IAAAE,YAAA,GAoBXT,EAEiB,CArBpBU,SAAS;IAATA,SAAS,GAAAD,YAAA,cAAG,IAAI,GAAAA,YAAA;IAAAE,aAAA,GAmBbX,EAEiB,CApBpBY,UAAU;IAAVA,UAAU,GAAAD,aAAA,cAAG,IAAI,GAAAA,aAAA;IAAAE,aAAA,GAkBdb,EAEiB,CAnBpBc,UAAU;IAAVA,UAAU,GAAAD,aAAA,cAAG,KAAK,GAAAA,aAAA;IAAAE,UAAA,GAiBff,EAEiB,CAlBpBgB,OAAO;IAAPA,OAAO,GAAAD,UAAA,cAAG,KAAK,GAAAA,UAAA;IAAAE,SAAA,GAgBZjB,EAEiB,CAjBpBkB,MAAM;IAANA,MAAM,GAAAD,SAAA,cAAG,KAAK,GAAAA,SAAA;IAAAE,YAAA,GAeXnB,EAEiB,CAhBpBoB,SAAS;IAATA,SAAS,GAAAD,YAAA,cAAG,KAAK,GAAAA,YAAA;IAAAE,gBAAA,GAcdrB,EAEiB,CAfpBsB,aAAa;IAAbA,aAAa,GAAAD,gBAAA,cAAG,SAAS,GAAAA,gBAAA;IAAAE,WAAA,GAatBvB,EAEiB,CAbpBwB,QAAQ;IAARA,QAAQ,GAAAD,WAAA,cAAG,KAAK,GAAAA,WAAA;IAAAE,WAAA,GAWbzB,EAEiB,CAXpB0B,QAAQ;IAARA,QAAQ,GAAAD,WAAA,cAAG,UAACE,OAAgB;MAAA,OAAKC,SAAgB;IAAA,IAAAH,WAAA;IAAAI,OAAA,GAS9C7B,EAEiB,CAVpB8B,IAAI;IAAJA,IAAI,GAAAD,OAAA,cAAG,IAAI,GAAAA,OAAA;IAAAE,kBAAA,GAQR/B,EAEiB,CATpBgC,eAAe;IAAEC,eAAe,GAAAF,kBAAA,cAAGtC,aAAa,GAAAsC,kBAAA;IAChDG,gBAAgB,GAMblC,EAEiB,CARpBkC,gBAAgB;IAAAC,qBAAA,GAMbnC,EAEiB,CAPpBoC,kBAAkB;IAAlBA,kBAAkB,GAAAD,qBAAA,cAAG,UAAU,GAAAA,qBAAA;IACdE,YAAY,GAI1BrC,EAEiB,CANpB,eAAe;IACfsC,MAAM,GAGHtC,EAEiB,CALpBsC,MAAM;IACNC,QAAQ,GAELvC,EAEiB,CAJpBuC,QAAQ;IAERC,GAAG,GAAAxC,EAEiB,CAFpBwC,GAAG;IACAC,KAAK,GAAAC,MAAA,CAAA1C,EAAA,EAzBmE,gRA0B5E,CADS;EAER,IAAM2C,SAAS,GAAG7C,YAAY,CAACC,cAAc,CAAC6C,WAAW,EAAEN,MAAM,EAAEC,QAAQ,CAAC;EAC5E,IAAMM,MAAM,GACVrD,KAAA,CAAAsD,aAAA,CAAClD,eAAe,CAACmD,QAAQ,QACtB,UAAAC,IAAA;IAAA,IAAGC,eAAe,GAAAD,IAAA,CAAfC,eAAe;MAAEC,oBAAoB,GAAAF,IAAA,CAApBE,oBAAoB;MAAEC,eAAe,GAAAH,IAAA,CAAfG,eAAe;IAAA,OACxD3D,KAAA,CAAAsD,aAAA,CAACpD,MAAM,EAAA0D,MAAA,CAAAC,MAAA,KACDZ,KAAK;MACTxC,EAAE,EAAEA,EAAE;MACNK,SAAS,EAAEA,SAAS;MACpBE,MAAM,EAAEA,MAAM;MACdE,SAAS,EAAEA,SAAS;MACpBE,UAAU,EAAEA,UAAU;MACtBY,QAAQ,EAAEA,QAAQ;MAClBV,UAAU,EAAEA,UAAU;MACtBE,OAAO,EAAEA,OAAO;MAChBE,MAAM,EAAEA,MAAM;MACdE,SAAS,EAAEA,SAAS;MACpBE,aAAa,EAAEA,aAAa;MAC5BI,QAAQ,EAAEA,QAAQ;MAAA,iBACHW;IAAY,GACvBM,SAAS,EACRT,gBAAgB,IAAI;MAAEoB,aAAa,EAAE,IAAI;MAAE,YAAY,EAAEb,KAAK,CAAC,YAAY,CAAC,IAAI;IAAQ,CAAG,GAE/FX,IAAI,IAAItC,KAAA,CAAAsD,aAAA;MAAMxC,SAAS,EAAET,GAAG,CAACsD,eAAe;IAAC,GAAGrB,IAAI,CAAQ,EAC5D1B,QAAQ,IAAIZ,KAAA,CAAAsD,aAAA;MAAMxC,SAAS,EAAE2B,eAAe,IAAIpC,GAAG,CAACoD,eAAe;IAAC,GAAG7C,QAAQ,CAAQ,EACvF6B,eAAe,IACdzC,KAAA,CAAAsD,aAAA;MAAMxC,SAAS,EAAET,GAAG,CAAC,CAACqC,gBAAgB,IAAIgB,oBAAoB;IAAC,GAC7D1D,KAAA,CAAAsD,aAAA,CAACb,eAAe,OAAG,CAEtB,CACM;EAAA,CACV,CAEJ;EAED,IAAIC,gBAAgB,EAAE;IACpB,OACE1C,KAAA,CAAAsD,aAAA;MACExC,SAAS,EAAET,GAAG,CACZF,MAAM,CAAC4D,cAAc,EACrB5D,MAAM,CAAC6D,SAAS,CAACC,WAAW,EAC5BrB,kBAAkB,KAAK,QAAQ,IAAIzC,MAAM,CAAC6D,SAAS,CAACE,MAAM,EAC1D,CAACpC,aAAa,KAAK,SAAS,IAAIF,SAAS,KAAKgB,kBAAkB,KAAK,QAAQ,IAAIzC,MAAM,CAAC6D,SAAS,CAACG,OAAO,EACzGrC,aAAa,KAAK,WAAW,IAAIc,kBAAkB,KAAK,QAAQ,IAAIzC,MAAM,CAAC6D,SAAS,CAACI,SAAS,EAC9F9C,UAAU,IAAInB,MAAM,CAAC6D,SAAS,CAACK,QAAQ;IACxC,GAEA3B,gBAAgB,EAChBW,MAAM,CACH;;EAIV,OAAOA,MAAM;AACf,CAAC;AACD9C,cAAc,CAAC6C,WAAW,GAAG,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}
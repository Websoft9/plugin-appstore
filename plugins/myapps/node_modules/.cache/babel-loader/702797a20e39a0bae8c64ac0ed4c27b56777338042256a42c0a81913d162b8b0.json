{"ast":null,"code":"var _toConsumableArray = require(\"/data/stackhub-web/plugins/myapps/node_modules/@babel/runtime/helpers/toConsumableArray.js\").default;\nvar _slicedToArray = require(\"/data/stackhub-web/plugins/myapps/node_modules/@babel/runtime/helpers/slicedToArray.js\").default;\nvar _assertThisInitialized = require(\"/data/stackhub-web/plugins/myapps/node_modules/@babel/runtime/helpers/assertThisInitialized.js\").default;\nvar _get = require(\"/data/stackhub-web/plugins/myapps/node_modules/@babel/runtime/helpers/get.js\").default;\nvar _getPrototypeOf = require(\"/data/stackhub-web/plugins/myapps/node_modules/@babel/runtime/helpers/getPrototypeOf.js\").default;\nvar _createForOfIteratorHelper = require(\"/data/stackhub-web/plugins/myapps/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nvar _classCallCheck = require(\"/data/stackhub-web/plugins/myapps/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/data/stackhub-web/plugins/myapps/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _inherits = require(\"/data/stackhub-web/plugins/myapps/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"/data/stackhub-web/plugins/myapps/node_modules/@babel/runtime/helpers/createSuper.js\").default;\n!function (e, t) {\n  \"object\" == typeof exports && \"object\" == typeof module ? module.exports = t() : \"function\" == typeof define && define.amd ? define([], t) : \"object\" == typeof exports ? exports.CanvasAddon = t() : e.CanvasAddon = t();\n}(self, function () {\n  return function () {\n    \"use strict\";\n\n    var e = {\n        903: function _(e, t, i) {\n          Object.defineProperty(t, \"__esModule\", {\n            value: !0\n          }), t.BaseRenderLayer = void 0;\n          var s = i(503),\n            r = i(627),\n            o = i(237),\n            n = i(860),\n            a = i(374),\n            h = i(296),\n            c = i(855),\n            l = i(274),\n            d = i(859),\n            _ = i(399),\n            u = i(345);\n          var g = /*#__PURE__*/function (_d$Disposable) {\n            _inherits(g, _d$Disposable);\n            var _super = _createSuper(g);\n            function g(e, t, i, r, o, n, a, c, _, _g) {\n              var _this;\n              _classCallCheck(this, g);\n              _this = _super.call(this), _this._terminal = e, _this._container = t, _this._alpha = o, _this._themeService = n, _this._bufferService = a, _this._optionsService = c, _this._decorationService = _, _this._coreBrowserService = _g, _this._deviceCharWidth = 0, _this._deviceCharHeight = 0, _this._deviceCellWidth = 0, _this._deviceCellHeight = 0, _this._deviceCharLeft = 0, _this._deviceCharTop = 0, _this._selectionModel = (0, h.createSelectionRenderModel)(), _this._bitmapGenerator = [], _this._onAddTextureAtlasCanvas = _this.register(new u.EventEmitter()), _this.onAddTextureAtlasCanvas = _this._onAddTextureAtlasCanvas.event, _this._cellColorResolver = new l.CellColorResolver(_this._terminal, _this._selectionModel, _this._decorationService, _this._coreBrowserService, _this._themeService), _this._canvas = document.createElement(\"canvas\"), _this._canvas.classList.add(\"xterm-\".concat(i, \"-layer\")), _this._canvas.style.zIndex = r.toString(), _this._initCanvas(), _this._container.appendChild(_this._canvas), _this._refreshCharAtlas(_this._themeService.colors), _this.register(_this._themeService.onChangeColors(function (e) {\n                _this._refreshCharAtlas(e), _this.reset();\n              })), _this.register((0, d.toDisposable)(function () {\n                var e;\n                (0, s.removeElementFromParent)(_this._canvas), null === (e = _this._charAtlas) || void 0 === e || e.dispose();\n              }));\n              return _this;\n            }\n            _createClass(g, [{\n              key: \"canvas\",\n              get: function get() {\n                return this._canvas;\n              }\n            }, {\n              key: \"cacheCanvas\",\n              get: function get() {\n                var e;\n                return null === (e = this._charAtlas) || void 0 === e ? void 0 : e.pages[0].canvas;\n              }\n            }, {\n              key: \"_initCanvas\",\n              value: function _initCanvas() {\n                this._ctx = (0, a.throwIfFalsy)(this._canvas.getContext(\"2d\", {\n                  alpha: this._alpha\n                })), this._alpha || this._clearAll();\n              }\n            }, {\n              key: \"handleBlur\",\n              value: function handleBlur() {}\n            }, {\n              key: \"handleFocus\",\n              value: function handleFocus() {}\n            }, {\n              key: \"handleCursorMove\",\n              value: function handleCursorMove() {}\n            }, {\n              key: \"handleGridChanged\",\n              value: function handleGridChanged(e, t) {}\n            }, {\n              key: \"handleSelectionChanged\",\n              value: function handleSelectionChanged(e, t) {\n                var i = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : !1;\n                this._selectionModel.update(this._terminal, e, t, i);\n              }\n            }, {\n              key: \"_setTransparency\",\n              value: function _setTransparency(e) {\n                if (e === this._alpha) return;\n                var t = this._canvas;\n                this._alpha = e, this._canvas = this._canvas.cloneNode(), this._initCanvas(), this._container.replaceChild(this._canvas, t), this._refreshCharAtlas(this._themeService.colors), this.handleGridChanged(0, this._bufferService.rows - 1);\n              }\n            }, {\n              key: \"_refreshCharAtlas\",\n              value: function _refreshCharAtlas(e) {\n                var t;\n                if (!(this._deviceCharWidth <= 0 && this._deviceCharHeight <= 0)) {\n                  null === (t = this._charAtlasDisposable) || void 0 === t || t.dispose(), this._charAtlas = (0, r.acquireTextureAtlas)(this._terminal, this._optionsService.rawOptions, e, this._deviceCellWidth, this._deviceCellHeight, this._deviceCharWidth, this._deviceCharHeight, this._coreBrowserService.dpr), this._charAtlasDisposable = (0, u.forwardEvent)(this._charAtlas.onAddTextureAtlasCanvas, this._onAddTextureAtlasCanvas), this._charAtlas.warmUp();\n                  for (var _e = 0; _e < this._charAtlas.pages.length; _e++) this._bitmapGenerator[_e] = new f(this._charAtlas.pages[_e].canvas);\n                }\n              }\n            }, {\n              key: \"resize\",\n              value: function resize(e) {\n                this._deviceCellWidth = e.device.cell.width, this._deviceCellHeight = e.device.cell.height, this._deviceCharWidth = e.device.char.width, this._deviceCharHeight = e.device.char.height, this._deviceCharLeft = e.device.char.left, this._deviceCharTop = e.device.char.top, this._canvas.width = e.device.canvas.width, this._canvas.height = e.device.canvas.height, this._canvas.style.width = \"\".concat(e.css.canvas.width, \"px\"), this._canvas.style.height = \"\".concat(e.css.canvas.height, \"px\"), this._alpha || this._clearAll(), this._refreshCharAtlas(this._themeService.colors);\n              }\n            }, {\n              key: \"clearTextureAtlas\",\n              value: function clearTextureAtlas() {\n                var e;\n                null === (e = this._charAtlas) || void 0 === e || e.clearTexture();\n              }\n            }, {\n              key: \"_fillCells\",\n              value: function _fillCells(e, t, i, s) {\n                this._ctx.fillRect(e * this._deviceCellWidth, t * this._deviceCellHeight, i * this._deviceCellWidth, s * this._deviceCellHeight);\n              }\n            }, {\n              key: \"_fillMiddleLineAtCells\",\n              value: function _fillMiddleLineAtCells(e, t) {\n                var i = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n                var s = Math.ceil(.5 * this._deviceCellHeight);\n                this._ctx.fillRect(e * this._deviceCellWidth, (t + 1) * this._deviceCellHeight - s - this._coreBrowserService.dpr, i * this._deviceCellWidth, this._coreBrowserService.dpr);\n              }\n            }, {\n              key: \"_fillBottomLineAtCells\",\n              value: function _fillBottomLineAtCells(e, t) {\n                var i = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n                var s = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n                this._ctx.fillRect(e * this._deviceCellWidth, (t + 1) * this._deviceCellHeight + s - this._coreBrowserService.dpr - 1, i * this._deviceCellWidth, this._coreBrowserService.dpr);\n              }\n            }, {\n              key: \"_curlyUnderlineAtCell\",\n              value: function _curlyUnderlineAtCell(e, t) {\n                var i = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n                this._ctx.save(), this._ctx.beginPath(), this._ctx.strokeStyle = this._ctx.fillStyle;\n                var s = this._coreBrowserService.dpr;\n                this._ctx.lineWidth = s;\n                for (var _r = 0; _r < i; _r++) {\n                  var _i = (e + _r) * this._deviceCellWidth,\n                    _o = (e + _r + .5) * this._deviceCellWidth,\n                    _n = (e + _r + 1) * this._deviceCellWidth,\n                    _a = (t + 1) * this._deviceCellHeight - s - 1,\n                    _h = _a - s,\n                    _c = _a + s;\n                  this._ctx.moveTo(_i, _a), this._ctx.bezierCurveTo(_i, _h, _o, _h, _o, _a), this._ctx.bezierCurveTo(_o, _c, _n, _c, _n, _a);\n                }\n                this._ctx.stroke(), this._ctx.restore();\n              }\n            }, {\n              key: \"_dottedUnderlineAtCell\",\n              value: function _dottedUnderlineAtCell(e, t) {\n                var i = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n                this._ctx.save(), this._ctx.beginPath(), this._ctx.strokeStyle = this._ctx.fillStyle;\n                var s = this._coreBrowserService.dpr;\n                this._ctx.lineWidth = s, this._ctx.setLineDash([2 * s, s]);\n                var r = e * this._deviceCellWidth,\n                  o = (t + 1) * this._deviceCellHeight - s - 1;\n                this._ctx.moveTo(r, o);\n                for (var _t = 0; _t < i; _t++) {\n                  var _s = (e + i + _t) * this._deviceCellWidth;\n                  this._ctx.lineTo(_s, o);\n                }\n                this._ctx.stroke(), this._ctx.closePath(), this._ctx.restore();\n              }\n            }, {\n              key: \"_dashedUnderlineAtCell\",\n              value: function _dashedUnderlineAtCell(e, t) {\n                var i = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n                this._ctx.save(), this._ctx.beginPath(), this._ctx.strokeStyle = this._ctx.fillStyle;\n                var s = this._coreBrowserService.dpr;\n                this._ctx.lineWidth = s, this._ctx.setLineDash([4 * s, 3 * s]);\n                var r = e * this._deviceCellWidth,\n                  o = (e + i) * this._deviceCellWidth,\n                  n = (t + 1) * this._deviceCellHeight - s - 1;\n                this._ctx.moveTo(r, n), this._ctx.lineTo(o, n), this._ctx.stroke(), this._ctx.closePath(), this._ctx.restore();\n              }\n            }, {\n              key: \"_fillLeftLineAtCell\",\n              value: function _fillLeftLineAtCell(e, t, i) {\n                this._ctx.fillRect(e * this._deviceCellWidth, t * this._deviceCellHeight, this._coreBrowserService.dpr * i, this._deviceCellHeight);\n              }\n            }, {\n              key: \"_strokeRectAtCell\",\n              value: function _strokeRectAtCell(e, t, i, s) {\n                var r = this._coreBrowserService.dpr;\n                this._ctx.lineWidth = r, this._ctx.strokeRect(e * this._deviceCellWidth + r / 2, t * this._deviceCellHeight + r / 2, i * this._deviceCellWidth - r, s * this._deviceCellHeight - r);\n              }\n            }, {\n              key: \"_clearAll\",\n              value: function _clearAll() {\n                this._alpha ? this._ctx.clearRect(0, 0, this._canvas.width, this._canvas.height) : (this._ctx.fillStyle = this._themeService.colors.background.css, this._ctx.fillRect(0, 0, this._canvas.width, this._canvas.height));\n              }\n            }, {\n              key: \"_clearCells\",\n              value: function _clearCells(e, t, i, s) {\n                this._alpha ? this._ctx.clearRect(e * this._deviceCellWidth, t * this._deviceCellHeight, i * this._deviceCellWidth, s * this._deviceCellHeight) : (this._ctx.fillStyle = this._themeService.colors.background.css, this._ctx.fillRect(e * this._deviceCellWidth, t * this._deviceCellHeight, i * this._deviceCellWidth, s * this._deviceCellHeight));\n              }\n            }, {\n              key: \"_fillCharTrueColor\",\n              value: function _fillCharTrueColor(e, t, i) {\n                this._ctx.font = this._getFont(!1, !1), this._ctx.textBaseline = o.TEXT_BASELINE, this._clipRow(i);\n                var s = !1;\n                !1 !== this._optionsService.rawOptions.customGlyphs && (s = (0, n.tryDrawCustomChar)(this._ctx, e.getChars(), t * this._deviceCellWidth, i * this._deviceCellHeight, this._deviceCellWidth, this._deviceCellHeight, this._optionsService.rawOptions.fontSize, this._coreBrowserService.dpr)), s || this._ctx.fillText(e.getChars(), t * this._deviceCellWidth + this._deviceCharLeft, i * this._deviceCellHeight + this._deviceCharTop + this._deviceCharHeight);\n              }\n            }, {\n              key: \"_drawChars\",\n              value: function _drawChars(e, t, i) {\n                var s, r;\n                var o = e.getChars();\n                var n;\n                this._cellColorResolver.resolve(e, t, this._bufferService.buffer.ydisp + i), n = o && o.length > 1 ? this._charAtlas.getRasterizedGlyphCombinedChar(o, this._cellColorResolver.result.bg, this._cellColorResolver.result.fg, this._cellColorResolver.result.ext) : this._charAtlas.getRasterizedGlyph(e.getCode() || c.WHITESPACE_CELL_CODE, this._cellColorResolver.result.bg, this._cellColorResolver.result.fg, this._cellColorResolver.result.ext), n.size.x && n.size.y && (this._ctx.save(), this._clipRow(i), this._charAtlas.pages[n.texturePage].version !== (null === (s = this._bitmapGenerator[n.texturePage]) || void 0 === s ? void 0 : s.version) && (this._bitmapGenerator[n.texturePage] || (this._bitmapGenerator[n.texturePage] = new f(this._charAtlas.pages[n.texturePage].canvas)), this._bitmapGenerator[n.texturePage].refresh(), this._bitmapGenerator[n.texturePage].version = this._charAtlas.pages[n.texturePage].version), this._ctx.drawImage((null === (r = this._bitmapGenerator[n.texturePage]) || void 0 === r ? void 0 : r.bitmap) || this._charAtlas.pages[n.texturePage].canvas, n.texturePosition.x, n.texturePosition.y, n.size.x, n.size.y, t * this._deviceCellWidth + this._deviceCharLeft - n.offset.x, i * this._deviceCellHeight + this._deviceCharTop - n.offset.y, n.size.x, n.size.y), this._ctx.restore());\n              }\n            }, {\n              key: \"_clipRow\",\n              value: function _clipRow(e) {\n                this._ctx.beginPath(), this._ctx.rect(0, e * this._deviceCellHeight, this._bufferService.cols * this._deviceCellWidth, this._deviceCellHeight), this._ctx.clip();\n              }\n            }, {\n              key: \"_getFont\",\n              value: function _getFont(e, t) {\n                return \"\".concat(t ? \"italic\" : \"\", \" \").concat(e ? this._optionsService.rawOptions.fontWeightBold : this._optionsService.rawOptions.fontWeight, \" \").concat(this._optionsService.rawOptions.fontSize * this._coreBrowserService.dpr, \"px \").concat(this._optionsService.rawOptions.fontFamily);\n              }\n            }]);\n            return g;\n          }(d.Disposable);\n          t.BaseRenderLayer = g;\n          var f = /*#__PURE__*/function () {\n            function f(e) {\n              _classCallCheck(this, f);\n              this._canvas = e, this._state = 0, this._commitTimeout = void 0, this._bitmap = void 0, this.version = -1;\n            }\n            _createClass(f, [{\n              key: \"bitmap\",\n              get: function get() {\n                return this._bitmap;\n              }\n            }, {\n              key: \"refresh\",\n              value: function refresh() {\n                var _this2 = this;\n                this._bitmap = void 0, _.isSafari || (void 0 === this._commitTimeout && (this._commitTimeout = window.setTimeout(function () {\n                  return _this2._generate();\n                }, 100)), 1 === this._state && (this._state = 2));\n              }\n            }, {\n              key: \"_generate\",\n              value: function _generate() {\n                var _this3 = this;\n                0 === this._state && (this._bitmap = void 0, this._state = 1, window.createImageBitmap(this._canvas).then(function (e) {\n                  2 === _this3._state ? _this3.refresh() : _this3._bitmap = e, _this3._state = 0;\n                }), this._commitTimeout && (this._commitTimeout = void 0));\n              }\n            }]);\n            return f;\n          }();\n        },\n        949: function _(e, t, i) {\n          Object.defineProperty(t, \"__esModule\", {\n            value: !0\n          }), t.CanvasRenderer = void 0;\n          var s = i(627),\n            r = i(56),\n            o = i(374),\n            n = i(345),\n            a = i(859),\n            h = i(873),\n            c = i(43),\n            l = i(630),\n            d = i(744);\n          var _ = /*#__PURE__*/function (_a$Disposable) {\n            _inherits(_, _a$Disposable);\n            var _super2 = _createSuper(_);\n            function _(e, t, i, _2, u, g, f, v, C, p, m) {\n              var _this4;\n              _classCallCheck(this, _);\n              _this4 = _super2.call(this), _this4._terminal = e, _this4._screenElement = t, _this4._bufferService = _2, _this4._charSizeService = u, _this4._optionsService = g, _this4._coreBrowserService = C, _this4._themeService = m, _this4._onRequestRedraw = _this4.register(new n.EventEmitter()), _this4.onRequestRedraw = _this4._onRequestRedraw.event, _this4._onChangeTextureAtlas = _this4.register(new n.EventEmitter()), _this4.onChangeTextureAtlas = _this4._onChangeTextureAtlas.event, _this4._onAddTextureAtlasCanvas = _this4.register(new n.EventEmitter()), _this4.onAddTextureAtlasCanvas = _this4._onAddTextureAtlasCanvas.event;\n              var x = _this4._optionsService.rawOptions.allowTransparency;\n              _this4._renderLayers = [new d.TextRenderLayer(_this4._terminal, _this4._screenElement, 0, x, _this4._bufferService, _this4._optionsService, f, p, _this4._coreBrowserService, m), new l.SelectionRenderLayer(_this4._terminal, _this4._screenElement, 1, _this4._bufferService, _this4._coreBrowserService, p, _this4._optionsService, m), new c.LinkRenderLayer(_this4._terminal, _this4._screenElement, 2, i, _this4._bufferService, _this4._optionsService, p, _this4._coreBrowserService, m), new h.CursorRenderLayer(_this4._terminal, _this4._screenElement, 3, _this4._onRequestRedraw, _this4._bufferService, _this4._optionsService, v, _this4._coreBrowserService, p, m)];\n              var _iterator = _createForOfIteratorHelper(_this4._renderLayers),\n                _step;\n              try {\n                for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                  var _e3 = _step.value;\n                  (0, n.forwardEvent)(_e3.onAddTextureAtlasCanvas, _this4._onAddTextureAtlasCanvas);\n                }\n              } catch (err) {\n                _iterator.e(err);\n              } finally {\n                _iterator.f();\n              }\n              _this4.dimensions = (0, o.createRenderDimensions)(), _this4._devicePixelRatio = _this4._coreBrowserService.dpr, _this4._updateDimensions(), _this4.register((0, r.observeDevicePixelDimensions)(_this4._renderLayers[0].canvas, _this4._coreBrowserService.window, function (e, t) {\n                return _this4._setCanvasDevicePixelDimensions(e, t);\n              })), _this4.register((0, a.toDisposable)(function () {\n                var _iterator2 = _createForOfIteratorHelper(_this4._renderLayers),\n                  _step2;\n                try {\n                  for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                    var _e2 = _step2.value;\n                    _e2.dispose();\n                  }\n                } catch (err) {\n                  _iterator2.e(err);\n                } finally {\n                  _iterator2.f();\n                }\n                (0, s.removeTerminalFromCache)(_this4._terminal);\n              }));\n              return _this4;\n            }\n            _createClass(_, [{\n              key: \"textureAtlas\",\n              get: function get() {\n                return this._renderLayers[0].cacheCanvas;\n              }\n            }, {\n              key: \"handleDevicePixelRatioChange\",\n              value: function handleDevicePixelRatioChange() {\n                this._devicePixelRatio !== this._coreBrowserService.dpr && (this._devicePixelRatio = this._coreBrowserService.dpr, this.handleResize(this._bufferService.cols, this._bufferService.rows));\n              }\n            }, {\n              key: \"handleResize\",\n              value: function handleResize(e, t) {\n                this._updateDimensions();\n                var _iterator3 = _createForOfIteratorHelper(this._renderLayers),\n                  _step3;\n                try {\n                  for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n                    var _e4 = _step3.value;\n                    _e4.resize(this.dimensions);\n                  }\n                } catch (err) {\n                  _iterator3.e(err);\n                } finally {\n                  _iterator3.f();\n                }\n                this._screenElement.style.width = \"\".concat(this.dimensions.css.canvas.width, \"px\"), this._screenElement.style.height = \"\".concat(this.dimensions.css.canvas.height, \"px\");\n              }\n            }, {\n              key: \"handleCharSizeChanged\",\n              value: function handleCharSizeChanged() {\n                this.handleResize(this._bufferService.cols, this._bufferService.rows);\n              }\n            }, {\n              key: \"handleBlur\",\n              value: function handleBlur() {\n                this._runOperation(function (e) {\n                  return e.handleBlur();\n                });\n              }\n            }, {\n              key: \"handleFocus\",\n              value: function handleFocus() {\n                this._runOperation(function (e) {\n                  return e.handleFocus();\n                });\n              }\n            }, {\n              key: \"handleSelectionChanged\",\n              value: function handleSelectionChanged(e, t) {\n                var i = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : !1;\n                this._runOperation(function (s) {\n                  return s.handleSelectionChanged(e, t, i);\n                }), this._themeService.colors.selectionForeground && this._onRequestRedraw.fire({\n                  start: 0,\n                  end: this._bufferService.rows - 1\n                });\n              }\n            }, {\n              key: \"handleCursorMove\",\n              value: function handleCursorMove() {\n                this._runOperation(function (e) {\n                  return e.handleCursorMove();\n                });\n              }\n            }, {\n              key: \"clear\",\n              value: function clear() {\n                this._runOperation(function (e) {\n                  return e.reset();\n                });\n              }\n            }, {\n              key: \"_runOperation\",\n              value: function _runOperation(e) {\n                var _iterator4 = _createForOfIteratorHelper(this._renderLayers),\n                  _step4;\n                try {\n                  for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n                    var _t2 = _step4.value;\n                    e(_t2);\n                  }\n                } catch (err) {\n                  _iterator4.e(err);\n                } finally {\n                  _iterator4.f();\n                }\n              }\n            }, {\n              key: \"renderRows\",\n              value: function renderRows(e, t) {\n                var _iterator5 = _createForOfIteratorHelper(this._renderLayers),\n                  _step5;\n                try {\n                  for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n                    var _i2 = _step5.value;\n                    _i2.handleGridChanged(e, t);\n                  }\n                } catch (err) {\n                  _iterator5.e(err);\n                } finally {\n                  _iterator5.f();\n                }\n              }\n            }, {\n              key: \"clearTextureAtlas\",\n              value: function clearTextureAtlas() {\n                var _iterator6 = _createForOfIteratorHelper(this._renderLayers),\n                  _step6;\n                try {\n                  for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n                    var _e5 = _step6.value;\n                    _e5.clearTextureAtlas();\n                  }\n                } catch (err) {\n                  _iterator6.e(err);\n                } finally {\n                  _iterator6.f();\n                }\n              }\n            }, {\n              key: \"_updateDimensions\",\n              value: function _updateDimensions() {\n                if (!this._charSizeService.hasValidSize) return;\n                var e = this._coreBrowserService.dpr;\n                this.dimensions.device.char.width = Math.floor(this._charSizeService.width * e), this.dimensions.device.char.height = Math.ceil(this._charSizeService.height * e), this.dimensions.device.cell.height = Math.floor(this.dimensions.device.char.height * this._optionsService.rawOptions.lineHeight), this.dimensions.device.char.top = 1 === this._optionsService.rawOptions.lineHeight ? 0 : Math.round((this.dimensions.device.cell.height - this.dimensions.device.char.height) / 2), this.dimensions.device.cell.width = this.dimensions.device.char.width + Math.round(this._optionsService.rawOptions.letterSpacing), this.dimensions.device.char.left = Math.floor(this._optionsService.rawOptions.letterSpacing / 2), this.dimensions.device.canvas.height = this._bufferService.rows * this.dimensions.device.cell.height, this.dimensions.device.canvas.width = this._bufferService.cols * this.dimensions.device.cell.width, this.dimensions.css.canvas.height = Math.round(this.dimensions.device.canvas.height / e), this.dimensions.css.canvas.width = Math.round(this.dimensions.device.canvas.width / e), this.dimensions.css.cell.height = this.dimensions.css.canvas.height / this._bufferService.rows, this.dimensions.css.cell.width = this.dimensions.css.canvas.width / this._bufferService.cols;\n              }\n            }, {\n              key: \"_setCanvasDevicePixelDimensions\",\n              value: function _setCanvasDevicePixelDimensions(e, t) {\n                this.dimensions.device.canvas.height = t, this.dimensions.device.canvas.width = e;\n                var _iterator7 = _createForOfIteratorHelper(this._renderLayers),\n                  _step7;\n                try {\n                  for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n                    var _e6 = _step7.value;\n                    _e6.resize(this.dimensions);\n                  }\n                } catch (err) {\n                  _iterator7.e(err);\n                } finally {\n                  _iterator7.f();\n                }\n                this._requestRedrawViewport();\n              }\n            }, {\n              key: \"_requestRedrawViewport\",\n              value: function _requestRedrawViewport() {\n                this._onRequestRedraw.fire({\n                  start: 0,\n                  end: this._bufferService.rows - 1\n                });\n              }\n            }]);\n            return _;\n          }(a.Disposable);\n          t.CanvasRenderer = _;\n        },\n        873: function _(e, t, i) {\n          Object.defineProperty(t, \"__esModule\", {\n            value: !0\n          }), t.CursorRenderLayer = void 0;\n          var s = i(903),\n            r = i(782),\n            o = i(859);\n          var n = /*#__PURE__*/function (_s$BaseRenderLayer) {\n            _inherits(n, _s$BaseRenderLayer);\n            var _super3 = _createSuper(n);\n            function n(e, t, i, s, _n2, a, h, c, l, d) {\n              var _this5;\n              _classCallCheck(this, n);\n              _this5 = _super3.call(this, e, t, \"cursor\", i, !0, d, _n2, a, l, c), _this5._onRequestRedraw = s, _this5._coreService = h, _this5._cell = new r.CellData(), _this5._state = {\n                x: 0,\n                y: 0,\n                isFocused: !1,\n                style: \"\",\n                width: 0\n              }, _this5._cursorRenderers = {\n                bar: _this5._renderBarCursor.bind(_assertThisInitialized(_this5)),\n                block: _this5._renderBlockCursor.bind(_assertThisInitialized(_this5)),\n                underline: _this5._renderUnderlineCursor.bind(_assertThisInitialized(_this5))\n              }, _this5.register(a.onOptionChange(function () {\n                return _this5._handleOptionsChanged();\n              })), _this5.register((0, o.toDisposable)(function () {\n                var e;\n                null === (e = _this5._cursorBlinkStateManager) || void 0 === e || e.dispose(), _this5._cursorBlinkStateManager = void 0;\n              }));\n              return _this5;\n            }\n            _createClass(n, [{\n              key: \"resize\",\n              value: function resize(e) {\n                _get(_getPrototypeOf(n.prototype), \"resize\", this).call(this, e), this._state = {\n                  x: 0,\n                  y: 0,\n                  isFocused: !1,\n                  style: \"\",\n                  width: 0\n                };\n              }\n            }, {\n              key: \"reset\",\n              value: function reset() {\n                var e;\n                this._clearCursor(), null === (e = this._cursorBlinkStateManager) || void 0 === e || e.restartBlinkAnimation(), this._handleOptionsChanged();\n              }\n            }, {\n              key: \"handleBlur\",\n              value: function handleBlur() {\n                var e;\n                null === (e = this._cursorBlinkStateManager) || void 0 === e || e.pause(), this._onRequestRedraw.fire({\n                  start: this._bufferService.buffer.y,\n                  end: this._bufferService.buffer.y\n                });\n              }\n            }, {\n              key: \"handleFocus\",\n              value: function handleFocus() {\n                var e;\n                null === (e = this._cursorBlinkStateManager) || void 0 === e || e.resume(), this._onRequestRedraw.fire({\n                  start: this._bufferService.buffer.y,\n                  end: this._bufferService.buffer.y\n                });\n              }\n            }, {\n              key: \"_handleOptionsChanged\",\n              value: function _handleOptionsChanged() {\n                var _this6 = this;\n                var e;\n                this._optionsService.rawOptions.cursorBlink ? this._cursorBlinkStateManager || (this._cursorBlinkStateManager = new a(this._coreBrowserService.isFocused, function () {\n                  _this6._render(!0);\n                }, this._coreBrowserService)) : (null === (e = this._cursorBlinkStateManager) || void 0 === e || e.dispose(), this._cursorBlinkStateManager = void 0), this._onRequestRedraw.fire({\n                  start: this._bufferService.buffer.y,\n                  end: this._bufferService.buffer.y\n                });\n              }\n            }, {\n              key: \"handleCursorMove\",\n              value: function handleCursorMove() {\n                var e;\n                null === (e = this._cursorBlinkStateManager) || void 0 === e || e.restartBlinkAnimation();\n              }\n            }, {\n              key: \"handleGridChanged\",\n              value: function handleGridChanged(e, t) {\n                !this._cursorBlinkStateManager || this._cursorBlinkStateManager.isPaused ? this._render(!1) : this._cursorBlinkStateManager.restartBlinkAnimation();\n              }\n            }, {\n              key: \"_render\",\n              value: function _render(e) {\n                if (!this._coreService.isCursorInitialized || this._coreService.isCursorHidden) return void this._clearCursor();\n                var t = this._bufferService.buffer.ybase + this._bufferService.buffer.y,\n                  i = t - this._bufferService.buffer.ydisp;\n                if (i < 0 || i >= this._bufferService.rows) return void this._clearCursor();\n                var s = Math.min(this._bufferService.buffer.x, this._bufferService.cols - 1);\n                if (this._bufferService.buffer.lines.get(t).loadCell(s, this._cell), void 0 !== this._cell.content) {\n                  if (!this._coreBrowserService.isFocused) {\n                    this._clearCursor(), this._ctx.save(), this._ctx.fillStyle = this._themeService.colors.cursor.css;\n                    var _e7 = this._optionsService.rawOptions.cursorStyle;\n                    return _e7 && \"block\" !== _e7 ? this._cursorRenderers[_e7](s, i, this._cell) : this._renderBlurCursor(s, i, this._cell), this._ctx.restore(), this._state.x = s, this._state.y = i, this._state.isFocused = !1, this._state.style = _e7, void (this._state.width = this._cell.getWidth());\n                  }\n                  if (!this._cursorBlinkStateManager || this._cursorBlinkStateManager.isCursorVisible) {\n                    if (this._state) {\n                      if (this._state.x === s && this._state.y === i && this._state.isFocused === this._coreBrowserService.isFocused && this._state.style === this._optionsService.rawOptions.cursorStyle && this._state.width === this._cell.getWidth()) return;\n                      this._clearCursor();\n                    }\n                    this._ctx.save(), this._cursorRenderers[this._optionsService.rawOptions.cursorStyle || \"block\"](s, i, this._cell), this._ctx.restore(), this._state.x = s, this._state.y = i, this._state.isFocused = !1, this._state.style = this._optionsService.rawOptions.cursorStyle, this._state.width = this._cell.getWidth();\n                  } else this._clearCursor();\n                }\n              }\n            }, {\n              key: \"_clearCursor\",\n              value: function _clearCursor() {\n                this._state && (this._coreBrowserService.dpr < 1 ? this._clearAll() : this._clearCells(this._state.x, this._state.y, this._state.width, 1), this._state = {\n                  x: 0,\n                  y: 0,\n                  isFocused: !1,\n                  style: \"\",\n                  width: 0\n                });\n              }\n            }, {\n              key: \"_renderBarCursor\",\n              value: function _renderBarCursor(e, t, i) {\n                this._ctx.save(), this._ctx.fillStyle = this._themeService.colors.cursor.css, this._fillLeftLineAtCell(e, t, this._optionsService.rawOptions.cursorWidth), this._ctx.restore();\n              }\n            }, {\n              key: \"_renderBlockCursor\",\n              value: function _renderBlockCursor(e, t, i) {\n                this._ctx.save(), this._ctx.fillStyle = this._themeService.colors.cursor.css, this._fillCells(e, t, i.getWidth(), 1), this._ctx.fillStyle = this._themeService.colors.cursorAccent.css, this._fillCharTrueColor(i, e, t), this._ctx.restore();\n              }\n            }, {\n              key: \"_renderUnderlineCursor\",\n              value: function _renderUnderlineCursor(e, t, i) {\n                this._ctx.save(), this._ctx.fillStyle = this._themeService.colors.cursor.css, this._fillBottomLineAtCells(e, t), this._ctx.restore();\n              }\n            }, {\n              key: \"_renderBlurCursor\",\n              value: function _renderBlurCursor(e, t, i) {\n                this._ctx.save(), this._ctx.strokeStyle = this._themeService.colors.cursor.css, this._strokeRectAtCell(e, t, i.getWidth(), 1), this._ctx.restore();\n              }\n            }]);\n            return n;\n          }(s.BaseRenderLayer);\n          t.CursorRenderLayer = n;\n          var a = /*#__PURE__*/function () {\n            function a(e, t, i) {\n              _classCallCheck(this, a);\n              this._renderCallback = t, this._coreBrowserService = i, this.isCursorVisible = !0, e && this._restartInterval();\n            }\n            _createClass(a, [{\n              key: \"isPaused\",\n              get: function get() {\n                return !(this._blinkStartTimeout || this._blinkInterval);\n              }\n            }, {\n              key: \"dispose\",\n              value: function dispose() {\n                this._blinkInterval && (this._coreBrowserService.window.clearInterval(this._blinkInterval), this._blinkInterval = void 0), this._blinkStartTimeout && (this._coreBrowserService.window.clearTimeout(this._blinkStartTimeout), this._blinkStartTimeout = void 0), this._animationFrame && (this._coreBrowserService.window.cancelAnimationFrame(this._animationFrame), this._animationFrame = void 0);\n              }\n            }, {\n              key: \"restartBlinkAnimation\",\n              value: function restartBlinkAnimation() {\n                var _this7 = this;\n                this.isPaused || (this._animationTimeRestarted = Date.now(), this.isCursorVisible = !0, this._animationFrame || (this._animationFrame = this._coreBrowserService.window.requestAnimationFrame(function () {\n                  _this7._renderCallback(), _this7._animationFrame = void 0;\n                })));\n              }\n            }, {\n              key: \"_restartInterval\",\n              value: function _restartInterval() {\n                var _this8 = this;\n                var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 600;\n                this._blinkInterval && (this._coreBrowserService.window.clearInterval(this._blinkInterval), this._blinkInterval = void 0), this._blinkStartTimeout = this._coreBrowserService.window.setTimeout(function () {\n                  if (_this8._animationTimeRestarted) {\n                    var _e8 = 600 - (Date.now() - _this8._animationTimeRestarted);\n                    if (_this8._animationTimeRestarted = void 0, _e8 > 0) return void _this8._restartInterval(_e8);\n                  }\n                  _this8.isCursorVisible = !1, _this8._animationFrame = _this8._coreBrowserService.window.requestAnimationFrame(function () {\n                    _this8._renderCallback(), _this8._animationFrame = void 0;\n                  }), _this8._blinkInterval = _this8._coreBrowserService.window.setInterval(function () {\n                    if (_this8._animationTimeRestarted) {\n                      var _e9 = 600 - (Date.now() - _this8._animationTimeRestarted);\n                      return _this8._animationTimeRestarted = void 0, void _this8._restartInterval(_e9);\n                    }\n                    _this8.isCursorVisible = !_this8.isCursorVisible, _this8._animationFrame = _this8._coreBrowserService.window.requestAnimationFrame(function () {\n                      _this8._renderCallback(), _this8._animationFrame = void 0;\n                    });\n                  }, 600);\n                }, e);\n              }\n            }, {\n              key: \"pause\",\n              value: function pause() {\n                this.isCursorVisible = !0, this._blinkInterval && (this._coreBrowserService.window.clearInterval(this._blinkInterval), this._blinkInterval = void 0), this._blinkStartTimeout && (this._coreBrowserService.window.clearTimeout(this._blinkStartTimeout), this._blinkStartTimeout = void 0), this._animationFrame && (this._coreBrowserService.window.cancelAnimationFrame(this._animationFrame), this._animationFrame = void 0);\n              }\n            }, {\n              key: \"resume\",\n              value: function resume() {\n                this.pause(), this._animationTimeRestarted = void 0, this._restartInterval(), this.restartBlinkAnimation();\n              }\n            }]);\n            return a;\n          }();\n        },\n        574: function _(e, t) {\n          Object.defineProperty(t, \"__esModule\", {\n            value: !0\n          }), t.GridCache = void 0, t.GridCache = /*#__PURE__*/function () {\n            function _class() {\n              _classCallCheck(this, _class);\n              this.cache = [];\n            }\n            _createClass(_class, [{\n              key: \"resize\",\n              value: function resize(e, t) {\n                for (var _i3 = 0; _i3 < e; _i3++) {\n                  this.cache.length <= _i3 && this.cache.push([]);\n                  for (var _e10 = this.cache[_i3].length; _e10 < t; _e10++) this.cache[_i3].push(void 0);\n                  this.cache[_i3].length = t;\n                }\n                this.cache.length = e;\n              }\n            }, {\n              key: \"clear\",\n              value: function clear() {\n                for (var _e11 = 0; _e11 < this.cache.length; _e11++) for (var _t3 = 0; _t3 < this.cache[_e11].length; _t3++) this.cache[_e11][_t3] = void 0;\n              }\n            }]);\n            return _class;\n          }();\n        },\n        43: function _(e, t, i) {\n          Object.defineProperty(t, \"__esModule\", {\n            value: !0\n          }), t.LinkRenderLayer = void 0;\n          var s = i(903),\n            r = i(237),\n            o = i(197);\n          var n = /*#__PURE__*/function (_s$BaseRenderLayer2) {\n            _inherits(n, _s$BaseRenderLayer2);\n            var _super4 = _createSuper(n);\n            function n(e, t, i, s, r, o, _n3, a, h) {\n              var _this9;\n              _classCallCheck(this, n);\n              _this9 = _super4.call(this, e, t, \"link\", i, !0, h, r, o, _n3, a), _this9.register(s.onShowLinkUnderline(function (e) {\n                return _this9._handleShowLinkUnderline(e);\n              })), _this9.register(s.onHideLinkUnderline(function (e) {\n                return _this9._handleHideLinkUnderline(e);\n              }));\n              return _this9;\n            }\n            _createClass(n, [{\n              key: \"resize\",\n              value: function resize(e) {\n                _get(_getPrototypeOf(n.prototype), \"resize\", this).call(this, e), this._state = void 0;\n              }\n            }, {\n              key: \"reset\",\n              value: function reset() {\n                this._clearCurrentLink();\n              }\n            }, {\n              key: \"_clearCurrentLink\",\n              value: function _clearCurrentLink() {\n                if (this._state) {\n                  this._clearCells(this._state.x1, this._state.y1, this._state.cols - this._state.x1, 1);\n                  var _e12 = this._state.y2 - this._state.y1 - 1;\n                  _e12 > 0 && this._clearCells(0, this._state.y1 + 1, this._state.cols, _e12), this._clearCells(0, this._state.y2, this._state.x2, 1), this._state = void 0;\n                }\n              }\n            }, {\n              key: \"_handleShowLinkUnderline\",\n              value: function _handleShowLinkUnderline(e) {\n                if (e.fg === r.INVERTED_DEFAULT_COLOR ? this._ctx.fillStyle = this._themeService.colors.background.css : e.fg && (0, o.is256Color)(e.fg) ? this._ctx.fillStyle = this._themeService.colors.ansi[e.fg].css : this._ctx.fillStyle = this._themeService.colors.foreground.css, e.y1 === e.y2) this._fillBottomLineAtCells(e.x1, e.y1, e.x2 - e.x1);else {\n                  this._fillBottomLineAtCells(e.x1, e.y1, e.cols - e.x1);\n                  for (var _t4 = e.y1 + 1; _t4 < e.y2; _t4++) this._fillBottomLineAtCells(0, _t4, e.cols);\n                  this._fillBottomLineAtCells(0, e.y2, e.x2);\n                }\n                this._state = e;\n              }\n            }, {\n              key: \"_handleHideLinkUnderline\",\n              value: function _handleHideLinkUnderline(e) {\n                this._clearCurrentLink();\n              }\n            }]);\n            return n;\n          }(s.BaseRenderLayer);\n          t.LinkRenderLayer = n;\n        },\n        630: function _(e, t, i) {\n          Object.defineProperty(t, \"__esModule\", {\n            value: !0\n          }), t.SelectionRenderLayer = void 0;\n          var s = i(903);\n          var r = /*#__PURE__*/function (_s$BaseRenderLayer3) {\n            _inherits(r, _s$BaseRenderLayer3);\n            var _super5 = _createSuper(r);\n            function r(e, t, i, s, _r2, o, n, a) {\n              var _this10;\n              _classCallCheck(this, r);\n              _this10 = _super5.call(this, e, t, \"selection\", i, !0, a, s, n, o, _r2), _this10._clearState();\n              return _this10;\n            }\n            _createClass(r, [{\n              key: \"_clearState\",\n              value: function _clearState() {\n                this._state = {\n                  start: void 0,\n                  end: void 0,\n                  columnSelectMode: void 0,\n                  ydisp: void 0\n                };\n              }\n            }, {\n              key: \"resize\",\n              value: function resize(e) {\n                _get(_getPrototypeOf(r.prototype), \"resize\", this).call(this, e), this._selectionModel.selectionStart && this._selectionModel.selectionEnd && this._redrawSelection(this._selectionModel.selectionStart, this._selectionModel.selectionEnd, this._selectionModel.columnSelectMode);\n              }\n            }, {\n              key: \"reset\",\n              value: function reset() {\n                this._state.start && this._state.end && (this._clearState(), this._clearAll());\n              }\n            }, {\n              key: \"handleBlur\",\n              value: function handleBlur() {\n                this.reset(), this._redrawSelection(this._selectionModel.selectionStart, this._selectionModel.selectionEnd, this._selectionModel.columnSelectMode);\n              }\n            }, {\n              key: \"handleFocus\",\n              value: function handleFocus() {\n                this.reset(), this._redrawSelection(this._selectionModel.selectionStart, this._selectionModel.selectionEnd, this._selectionModel.columnSelectMode);\n              }\n            }, {\n              key: \"handleSelectionChanged\",\n              value: function handleSelectionChanged(e, t, i) {\n                _get(_getPrototypeOf(r.prototype), \"handleSelectionChanged\", this).call(this, e, t, i), this._redrawSelection(e, t, i);\n              }\n            }, {\n              key: \"_redrawSelection\",\n              value: function _redrawSelection(e, t, i) {\n                if (!this._didStateChange(e, t, i, this._bufferService.buffer.ydisp)) return;\n                if (this._clearAll(), !e || !t) return void this._clearState();\n                var s = e[1] - this._bufferService.buffer.ydisp,\n                  _r3 = t[1] - this._bufferService.buffer.ydisp,\n                  o = Math.max(s, 0),\n                  n = Math.min(_r3, this._bufferService.rows - 1);\n                if (o >= this._bufferService.rows || n < 0) this._state.ydisp = this._bufferService.buffer.ydisp;else {\n                  if (this._ctx.fillStyle = (this._coreBrowserService.isFocused ? this._themeService.colors.selectionBackgroundTransparent : this._themeService.colors.selectionInactiveBackgroundTransparent).css, i) {\n                    var _i4 = e[0],\n                      _s2 = t[0] - _i4,\n                      _r4 = n - o + 1;\n                    this._fillCells(_i4, o, _s2, _r4);\n                  } else {\n                    var _i5 = s === o ? e[0] : 0,\n                      a = o === _r3 ? t[0] : this._bufferService.cols;\n                    this._fillCells(_i5, o, a - _i5, 1);\n                    var h = Math.max(n - o - 1, 0);\n                    if (this._fillCells(0, o + 1, this._bufferService.cols, h), o !== n) {\n                      var _e13 = _r3 === n ? t[0] : this._bufferService.cols;\n                      this._fillCells(0, n, _e13, 1);\n                    }\n                  }\n                  this._state.start = [e[0], e[1]], this._state.end = [t[0], t[1]], this._state.columnSelectMode = i, this._state.ydisp = this._bufferService.buffer.ydisp;\n                }\n              }\n            }, {\n              key: \"_didStateChange\",\n              value: function _didStateChange(e, t, i, s) {\n                return !this._areCoordinatesEqual(e, this._state.start) || !this._areCoordinatesEqual(t, this._state.end) || i !== this._state.columnSelectMode || s !== this._state.ydisp;\n              }\n            }, {\n              key: \"_areCoordinatesEqual\",\n              value: function _areCoordinatesEqual(e, t) {\n                return !(!e || !t) && e[0] === t[0] && e[1] === t[1];\n              }\n            }]);\n            return r;\n          }(s.BaseRenderLayer);\n          t.SelectionRenderLayer = r;\n        },\n        744: function _(e, t, i) {\n          Object.defineProperty(t, \"__esModule\", {\n            value: !0\n          }), t.TextRenderLayer = void 0;\n          var s = i(574),\n            r = i(903),\n            o = i(147),\n            n = i(855),\n            a = i(782),\n            h = i(577),\n            c = i(160);\n          var l = /*#__PURE__*/function (_r$BaseRenderLayer) {\n            _inherits(l, _r$BaseRenderLayer);\n            var _super6 = _createSuper(l);\n            function l(e, t, i, r, o, n, h, c, _l, d) {\n              var _this11;\n              _classCallCheck(this, l);\n              _this11 = _super6.call(this, e, t, \"text\", i, r, d, o, n, c, _l), _this11._characterJoinerService = h, _this11._characterWidth = 0, _this11._characterFont = \"\", _this11._characterOverlapCache = {}, _this11._workCell = new a.CellData(), _this11._state = new s.GridCache(), _this11.register(n.onSpecificOptionChange(\"allowTransparency\", function (e) {\n                return _this11._setTransparency(e);\n              }));\n              return _this11;\n            }\n            _createClass(l, [{\n              key: \"resize\",\n              value: function resize(e) {\n                _get(_getPrototypeOf(l.prototype), \"resize\", this).call(this, e);\n                var t = this._getFont(!1, !1);\n                this._characterWidth === e.device.char.width && this._characterFont === t || (this._characterWidth = e.device.char.width, this._characterFont = t, this._characterOverlapCache = {}), this._state.clear(), this._state.resize(this._bufferService.cols, this._bufferService.rows);\n              }\n            }, {\n              key: \"reset\",\n              value: function reset() {\n                this._state.clear(), this._clearAll();\n              }\n            }, {\n              key: \"_forEachCell\",\n              value: function _forEachCell(e, t, i) {\n                for (var _s3 = e; _s3 <= t; _s3++) {\n                  var _e14 = _s3 + this._bufferService.buffer.ydisp,\n                    _t5 = this._bufferService.buffer.lines.get(_e14),\n                    _r5 = this._characterJoinerService.getJoinedCharacters(_e14);\n                  for (var _e15 = 0; _e15 < this._bufferService.cols; _e15++) {\n                    _t5.loadCell(_e15, this._workCell);\n                    var _o2 = this._workCell,\n                      _a2 = !1,\n                      _c2 = _e15;\n                    if (0 === _o2.getWidth()) continue;\n                    var _l2 = _o2.getCode();\n                    if (0 !== _l2 && 32 !== _l2) {\n                      if (_r5.length > 0 && _e15 === _r5[0][0]) {\n                        _a2 = !0;\n                        var _e16 = _r5.shift();\n                        _o2 = new h.JoinedCellData(this._workCell, _t5.translateToString(!0, _e16[0], _e16[1]), _e16[1] - _e16[0]), _c2 = _e16[1] - 1;\n                      }\n                      !_a2 && this._isOverlapping(_o2) && _c2 < _t5.length - 1 && _t5.getCodePoint(_c2 + 1) === n.NULL_CELL_CODE && (_o2.content &= -12582913, _o2.content |= 2 << 22), i(_o2, _e15, _s3), _e15 = _c2;\n                    }\n                  }\n                }\n              }\n            }, {\n              key: \"_drawBackground\",\n              value: function _drawBackground(e, t) {\n                var _this12 = this;\n                var i = this._ctx,\n                  s = this._bufferService.cols;\n                var r = 0,\n                  n = 0,\n                  a = null;\n                i.save(), this._forEachCell(e, t, function (e, t, h) {\n                  var _l3 = null;\n                  e.isInverse() ? _l3 = e.isFgDefault() ? _this12._themeService.colors.foreground.css : e.isFgRGB() ? \"rgb(\".concat(o.AttributeData.toColorRGB(e.getFgColor()).join(\",\"), \")\") : _this12._themeService.colors.ansi[e.getFgColor()].css : e.isBgRGB() ? _l3 = \"rgb(\".concat(o.AttributeData.toColorRGB(e.getBgColor()).join(\",\"), \")\") : e.isBgPalette() && (_l3 = _this12._themeService.colors.ansi[e.getBgColor()].css), _l3 && e.isDim() && (_l3 = c.color.multiplyOpacity(c.css.toColor(_l3), .5).css);\n                  var d = !1;\n                  _this12._decorationService.forEachDecorationAtCell(t, _this12._bufferService.buffer.ydisp + h, void 0, function (e) {\n                    \"top\" !== e.options.layer && d || (e.backgroundColorRGB && (_l3 = e.backgroundColorRGB.css), d = \"top\" === e.options.layer);\n                  }), null === a && (r = t, n = h), h !== n ? (i.fillStyle = a || \"\", _this12._fillCells(r, n, s - r, 1), r = t, n = h) : a !== _l3 && (i.fillStyle = a || \"\", _this12._fillCells(r, n, t - r, 1), r = t, n = h), a = _l3;\n                }), null !== a && (i.fillStyle = a, this._fillCells(r, n, s - r, 1)), i.restore();\n              }\n            }, {\n              key: \"_drawForeground\",\n              value: function _drawForeground(e, t) {\n                var _this13 = this;\n                this._forEachCell(e, t, function (e, t, i) {\n                  return _this13._drawChars(e, t, i);\n                });\n              }\n            }, {\n              key: \"handleGridChanged\",\n              value: function handleGridChanged(e, t) {\n                0 !== this._state.cache.length && (this._charAtlas && this._charAtlas.beginFrame(), this._clearCells(0, e, this._bufferService.cols, t - e + 1), this._drawBackground(e, t), this._drawForeground(e, t));\n              }\n            }, {\n              key: \"_isOverlapping\",\n              value: function _isOverlapping(e) {\n                if (1 !== e.getWidth()) return !1;\n                if (e.getCode() < 256) return !1;\n                var t = e.getChars();\n                if (this._characterOverlapCache.hasOwnProperty(t)) return this._characterOverlapCache[t];\n                this._ctx.save(), this._ctx.font = this._characterFont;\n                var i = Math.floor(this._ctx.measureText(t).width) > this._characterWidth;\n                return this._ctx.restore(), this._characterOverlapCache[t] = i, i;\n              }\n            }]);\n            return l;\n          }(r.BaseRenderLayer);\n          t.TextRenderLayer = l;\n        },\n        503: function _(e, t) {\n          Object.defineProperty(t, \"__esModule\", {\n            value: !0\n          }), t.removeElementFromParent = void 0, t.removeElementFromParent = function () {\n            var t;\n            for (var _len = arguments.length, e = new Array(_len), _key = 0; _key < _len; _key++) {\n              e[_key] = arguments[_key];\n            }\n            for (var _i6 = 0, _e17 = e; _i6 < _e17.length; _i6++) {\n              var _i7 = _e17[_i6];\n              null === (t = null == _i7 ? void 0 : _i7.parentElement) || void 0 === t || t.removeChild(_i7);\n            }\n          };\n        },\n        274: function _(e, t) {\n          Object.defineProperty(t, \"__esModule\", {\n            value: !0\n          }), t.CellColorResolver = void 0;\n          var i,\n            s = 0,\n            r = 0,\n            o = !1,\n            n = !1,\n            a = !1;\n          t.CellColorResolver = /*#__PURE__*/function () {\n            function _class2(e, t, i, s, r) {\n              _classCallCheck(this, _class2);\n              this._terminal = e, this._selectionRenderModel = t, this._decorationService = i, this._coreBrowserService = s, this._themeService = r, this.result = {\n                fg: 0,\n                bg: 0,\n                ext: 0\n              };\n            }\n            _createClass(_class2, [{\n              key: \"resolve\",\n              value: function resolve(e, t, h) {\n                this.result.bg = e.bg, this.result.fg = e.fg, this.result.ext = 268435456 & e.bg ? e.extended.ext : 0, r = 0, s = 0, n = !1, o = !1, a = !1, i = this._themeService.colors, this._decorationService.forEachDecorationAtCell(t, h, \"bottom\", function (e) {\n                  e.backgroundColorRGB && (r = e.backgroundColorRGB.rgba >> 8 & 16777215, n = !0), e.foregroundColorRGB && (s = e.foregroundColorRGB.rgba >> 8 & 16777215, o = !0);\n                }), a = this._selectionRenderModel.isCellSelected(this._terminal, t, h), a && (r = (this._coreBrowserService.isFocused ? i.selectionBackgroundOpaque : i.selectionInactiveBackgroundOpaque).rgba >> 8 & 16777215, n = !0, i.selectionForeground && (s = i.selectionForeground.rgba >> 8 & 16777215, o = !0)), this._decorationService.forEachDecorationAtCell(t, h, \"top\", function (e) {\n                  e.backgroundColorRGB && (r = e.backgroundColorRGB.rgba >> 8 & 16777215, n = !0), e.foregroundColorRGB && (s = e.foregroundColorRGB.rgba >> 8 & 16777215, o = !0);\n                }), n && (r = a ? -16777216 & e.bg & -134217729 | r | 50331648 : -16777216 & e.bg | r | 50331648), o && (s = -16777216 & e.fg & -67108865 | s | 50331648), 67108864 & this.result.fg && (n && !o && (s = 0 == (50331648 & this.result.bg) ? -134217728 & this.result.fg | 16777215 & i.background.rgba >> 8 | 50331648 : -134217728 & this.result.fg | 67108863 & this.result.bg, o = !0), !n && o && (r = 0 == (50331648 & this.result.fg) ? -67108864 & this.result.bg | 16777215 & i.foreground.rgba >> 8 | 50331648 : -67108864 & this.result.bg | 67108863 & this.result.fg, n = !0)), i = void 0, this.result.bg = n ? r : this.result.bg, this.result.fg = o ? s : this.result.fg;\n              }\n            }]);\n            return _class2;\n          }();\n        },\n        627: function _(e, t, i) {\n          Object.defineProperty(t, \"__esModule\", {\n            value: !0\n          }), t.removeTerminalFromCache = t.acquireTextureAtlas = void 0;\n          var s = i(509),\n            r = i(197),\n            o = [];\n          t.acquireTextureAtlas = function (e, t, i, n, a, h, c, l) {\n            var d = (0, r.generateConfig)(n, a, h, c, t, i, l);\n            for (var _t6 = 0; _t6 < o.length; _t6++) {\n              var _i8 = o[_t6],\n                _s4 = _i8.ownedBy.indexOf(e);\n              if (_s4 >= 0) {\n                if ((0, r.configEquals)(_i8.config, d)) return _i8.atlas;\n                1 === _i8.ownedBy.length ? (_i8.atlas.dispose(), o.splice(_t6, 1)) : _i8.ownedBy.splice(_s4, 1);\n                break;\n              }\n            }\n            for (var _t7 = 0; _t7 < o.length; _t7++) {\n              var _i9 = o[_t7];\n              if ((0, r.configEquals)(_i9.config, d)) return _i9.ownedBy.push(e), _i9.atlas;\n            }\n            var _ = e._core,\n              u = {\n                atlas: new s.TextureAtlas(document, d, _.unicodeService),\n                config: d,\n                ownedBy: [e]\n              };\n            return o.push(u), u.atlas;\n          }, t.removeTerminalFromCache = function (e) {\n            for (var _t8 = 0; _t8 < o.length; _t8++) {\n              var _i10 = o[_t8].ownedBy.indexOf(e);\n              if (-1 !== _i10) {\n                1 === o[_t8].ownedBy.length ? (o[_t8].atlas.dispose(), o.splice(_t8, 1)) : o[_t8].ownedBy.splice(_i10, 1);\n                break;\n              }\n            }\n          };\n        },\n        197: function _(e, t, i) {\n          Object.defineProperty(t, \"__esModule\", {\n            value: !0\n          }), t.is256Color = t.configEquals = t.generateConfig = void 0;\n          var s = i(160);\n          t.generateConfig = function (e, t, i, r, o, n, a) {\n            var h = {\n              foreground: n.foreground,\n              background: n.background,\n              cursor: s.NULL_COLOR,\n              cursorAccent: s.NULL_COLOR,\n              selectionForeground: s.NULL_COLOR,\n              selectionBackgroundTransparent: s.NULL_COLOR,\n              selectionBackgroundOpaque: s.NULL_COLOR,\n              selectionInactiveBackgroundTransparent: s.NULL_COLOR,\n              selectionInactiveBackgroundOpaque: s.NULL_COLOR,\n              ansi: n.ansi.slice(),\n              contrastCache: n.contrastCache\n            };\n            return {\n              customGlyphs: o.customGlyphs,\n              devicePixelRatio: a,\n              letterSpacing: o.letterSpacing,\n              lineHeight: o.lineHeight,\n              deviceCellWidth: e,\n              deviceCellHeight: t,\n              deviceCharWidth: i,\n              deviceCharHeight: r,\n              fontFamily: o.fontFamily,\n              fontSize: o.fontSize,\n              fontWeight: o.fontWeight,\n              fontWeightBold: o.fontWeightBold,\n              allowTransparency: o.allowTransparency,\n              drawBoldTextInBrightColors: o.drawBoldTextInBrightColors,\n              minimumContrastRatio: o.minimumContrastRatio,\n              colors: h\n            };\n          }, t.configEquals = function (e, t) {\n            for (var _i11 = 0; _i11 < e.colors.ansi.length; _i11++) if (e.colors.ansi[_i11].rgba !== t.colors.ansi[_i11].rgba) return !1;\n            return e.devicePixelRatio === t.devicePixelRatio && e.customGlyphs === t.customGlyphs && e.lineHeight === t.lineHeight && e.letterSpacing === t.letterSpacing && e.fontFamily === t.fontFamily && e.fontSize === t.fontSize && e.fontWeight === t.fontWeight && e.fontWeightBold === t.fontWeightBold && e.allowTransparency === t.allowTransparency && e.deviceCharWidth === t.deviceCharWidth && e.deviceCharHeight === t.deviceCharHeight && e.drawBoldTextInBrightColors === t.drawBoldTextInBrightColors && e.minimumContrastRatio === t.minimumContrastRatio && e.colors.foreground.rgba === t.colors.foreground.rgba && e.colors.background.rgba === t.colors.background.rgba;\n          }, t.is256Color = function (e) {\n            return 16777216 == (50331648 & e) || 33554432 == (50331648 & e);\n          };\n        },\n        237: function _(e, t, i) {\n          Object.defineProperty(t, \"__esModule\", {\n            value: !0\n          }), t.TEXT_BASELINE = t.DIM_OPACITY = t.INVERTED_DEFAULT_COLOR = void 0;\n          var s = i(399);\n          t.INVERTED_DEFAULT_COLOR = 257, t.DIM_OPACITY = .5, t.TEXT_BASELINE = s.isFirefox || s.isLegacyEdge ? \"bottom\" : \"ideographic\";\n        },\n        860: function _(e, t, i) {\n          Object.defineProperty(t, \"__esModule\", {\n            value: !0\n          }), t.tryDrawCustomChar = t.powerlineDefinitions = t.boxDrawingDefinitions = t.blockElementDefinitions = void 0;\n          var s = i(374);\n          t.blockElementDefinitions = {\n            \"▀\": [{\n              x: 0,\n              y: 0,\n              w: 8,\n              h: 4\n            }],\n            \"▁\": [{\n              x: 0,\n              y: 7,\n              w: 8,\n              h: 1\n            }],\n            \"▂\": [{\n              x: 0,\n              y: 6,\n              w: 8,\n              h: 2\n            }],\n            \"▃\": [{\n              x: 0,\n              y: 5,\n              w: 8,\n              h: 3\n            }],\n            \"▄\": [{\n              x: 0,\n              y: 4,\n              w: 8,\n              h: 4\n            }],\n            \"▅\": [{\n              x: 0,\n              y: 3,\n              w: 8,\n              h: 5\n            }],\n            \"▆\": [{\n              x: 0,\n              y: 2,\n              w: 8,\n              h: 6\n            }],\n            \"▇\": [{\n              x: 0,\n              y: 1,\n              w: 8,\n              h: 7\n            }],\n            \"█\": [{\n              x: 0,\n              y: 0,\n              w: 8,\n              h: 8\n            }],\n            \"▉\": [{\n              x: 0,\n              y: 0,\n              w: 7,\n              h: 8\n            }],\n            \"▊\": [{\n              x: 0,\n              y: 0,\n              w: 6,\n              h: 8\n            }],\n            \"▋\": [{\n              x: 0,\n              y: 0,\n              w: 5,\n              h: 8\n            }],\n            \"▌\": [{\n              x: 0,\n              y: 0,\n              w: 4,\n              h: 8\n            }],\n            \"▍\": [{\n              x: 0,\n              y: 0,\n              w: 3,\n              h: 8\n            }],\n            \"▎\": [{\n              x: 0,\n              y: 0,\n              w: 2,\n              h: 8\n            }],\n            \"▏\": [{\n              x: 0,\n              y: 0,\n              w: 1,\n              h: 8\n            }],\n            \"▐\": [{\n              x: 4,\n              y: 0,\n              w: 4,\n              h: 8\n            }],\n            \"▔\": [{\n              x: 0,\n              y: 0,\n              w: 8,\n              h: 1\n            }],\n            \"▕\": [{\n              x: 7,\n              y: 0,\n              w: 1,\n              h: 8\n            }],\n            \"▖\": [{\n              x: 0,\n              y: 4,\n              w: 4,\n              h: 4\n            }],\n            \"▗\": [{\n              x: 4,\n              y: 4,\n              w: 4,\n              h: 4\n            }],\n            \"▘\": [{\n              x: 0,\n              y: 0,\n              w: 4,\n              h: 4\n            }],\n            \"▙\": [{\n              x: 0,\n              y: 0,\n              w: 4,\n              h: 8\n            }, {\n              x: 0,\n              y: 4,\n              w: 8,\n              h: 4\n            }],\n            \"▚\": [{\n              x: 0,\n              y: 0,\n              w: 4,\n              h: 4\n            }, {\n              x: 4,\n              y: 4,\n              w: 4,\n              h: 4\n            }],\n            \"▛\": [{\n              x: 0,\n              y: 0,\n              w: 4,\n              h: 8\n            }, {\n              x: 4,\n              y: 0,\n              w: 4,\n              h: 4\n            }],\n            \"▜\": [{\n              x: 0,\n              y: 0,\n              w: 8,\n              h: 4\n            }, {\n              x: 4,\n              y: 0,\n              w: 4,\n              h: 8\n            }],\n            \"▝\": [{\n              x: 4,\n              y: 0,\n              w: 4,\n              h: 4\n            }],\n            \"▞\": [{\n              x: 4,\n              y: 0,\n              w: 4,\n              h: 4\n            }, {\n              x: 0,\n              y: 4,\n              w: 4,\n              h: 4\n            }],\n            \"▟\": [{\n              x: 4,\n              y: 0,\n              w: 4,\n              h: 8\n            }, {\n              x: 0,\n              y: 4,\n              w: 8,\n              h: 4\n            }],\n            \"🭰\": [{\n              x: 1,\n              y: 0,\n              w: 1,\n              h: 8\n            }],\n            \"🭱\": [{\n              x: 2,\n              y: 0,\n              w: 1,\n              h: 8\n            }],\n            \"🭲\": [{\n              x: 3,\n              y: 0,\n              w: 1,\n              h: 8\n            }],\n            \"🭳\": [{\n              x: 4,\n              y: 0,\n              w: 1,\n              h: 8\n            }],\n            \"🭴\": [{\n              x: 5,\n              y: 0,\n              w: 1,\n              h: 8\n            }],\n            \"🭵\": [{\n              x: 6,\n              y: 0,\n              w: 1,\n              h: 8\n            }],\n            \"🭶\": [{\n              x: 0,\n              y: 1,\n              w: 8,\n              h: 1\n            }],\n            \"🭷\": [{\n              x: 0,\n              y: 2,\n              w: 8,\n              h: 1\n            }],\n            \"🭸\": [{\n              x: 0,\n              y: 3,\n              w: 8,\n              h: 1\n            }],\n            \"🭹\": [{\n              x: 0,\n              y: 4,\n              w: 8,\n              h: 1\n            }],\n            \"🭺\": [{\n              x: 0,\n              y: 5,\n              w: 8,\n              h: 1\n            }],\n            \"🭻\": [{\n              x: 0,\n              y: 6,\n              w: 8,\n              h: 1\n            }],\n            \"🭼\": [{\n              x: 0,\n              y: 0,\n              w: 1,\n              h: 8\n            }, {\n              x: 0,\n              y: 7,\n              w: 8,\n              h: 1\n            }],\n            \"🭽\": [{\n              x: 0,\n              y: 0,\n              w: 1,\n              h: 8\n            }, {\n              x: 0,\n              y: 0,\n              w: 8,\n              h: 1\n            }],\n            \"🭾\": [{\n              x: 7,\n              y: 0,\n              w: 1,\n              h: 8\n            }, {\n              x: 0,\n              y: 0,\n              w: 8,\n              h: 1\n            }],\n            \"🭿\": [{\n              x: 7,\n              y: 0,\n              w: 1,\n              h: 8\n            }, {\n              x: 0,\n              y: 7,\n              w: 8,\n              h: 1\n            }],\n            \"🮀\": [{\n              x: 0,\n              y: 0,\n              w: 8,\n              h: 1\n            }, {\n              x: 0,\n              y: 7,\n              w: 8,\n              h: 1\n            }],\n            \"🮁\": [{\n              x: 0,\n              y: 0,\n              w: 8,\n              h: 1\n            }, {\n              x: 0,\n              y: 2,\n              w: 8,\n              h: 1\n            }, {\n              x: 0,\n              y: 4,\n              w: 8,\n              h: 1\n            }, {\n              x: 0,\n              y: 7,\n              w: 8,\n              h: 1\n            }],\n            \"🮂\": [{\n              x: 0,\n              y: 0,\n              w: 8,\n              h: 2\n            }],\n            \"🮃\": [{\n              x: 0,\n              y: 0,\n              w: 8,\n              h: 3\n            }],\n            \"🮄\": [{\n              x: 0,\n              y: 0,\n              w: 8,\n              h: 5\n            }],\n            \"🮅\": [{\n              x: 0,\n              y: 0,\n              w: 8,\n              h: 6\n            }],\n            \"🮆\": [{\n              x: 0,\n              y: 0,\n              w: 8,\n              h: 7\n            }],\n            \"🮇\": [{\n              x: 6,\n              y: 0,\n              w: 2,\n              h: 8\n            }],\n            \"🮈\": [{\n              x: 5,\n              y: 0,\n              w: 3,\n              h: 8\n            }],\n            \"🮉\": [{\n              x: 3,\n              y: 0,\n              w: 5,\n              h: 8\n            }],\n            \"🮊\": [{\n              x: 2,\n              y: 0,\n              w: 6,\n              h: 8\n            }],\n            \"🮋\": [{\n              x: 1,\n              y: 0,\n              w: 7,\n              h: 8\n            }],\n            \"🮕\": [{\n              x: 0,\n              y: 0,\n              w: 2,\n              h: 2\n            }, {\n              x: 4,\n              y: 0,\n              w: 2,\n              h: 2\n            }, {\n              x: 2,\n              y: 2,\n              w: 2,\n              h: 2\n            }, {\n              x: 6,\n              y: 2,\n              w: 2,\n              h: 2\n            }, {\n              x: 0,\n              y: 4,\n              w: 2,\n              h: 2\n            }, {\n              x: 4,\n              y: 4,\n              w: 2,\n              h: 2\n            }, {\n              x: 2,\n              y: 6,\n              w: 2,\n              h: 2\n            }, {\n              x: 6,\n              y: 6,\n              w: 2,\n              h: 2\n            }],\n            \"🮖\": [{\n              x: 2,\n              y: 0,\n              w: 2,\n              h: 2\n            }, {\n              x: 6,\n              y: 0,\n              w: 2,\n              h: 2\n            }, {\n              x: 0,\n              y: 2,\n              w: 2,\n              h: 2\n            }, {\n              x: 4,\n              y: 2,\n              w: 2,\n              h: 2\n            }, {\n              x: 2,\n              y: 4,\n              w: 2,\n              h: 2\n            }, {\n              x: 6,\n              y: 4,\n              w: 2,\n              h: 2\n            }, {\n              x: 0,\n              y: 6,\n              w: 2,\n              h: 2\n            }, {\n              x: 4,\n              y: 6,\n              w: 2,\n              h: 2\n            }],\n            \"🮗\": [{\n              x: 0,\n              y: 2,\n              w: 8,\n              h: 2\n            }, {\n              x: 0,\n              y: 6,\n              w: 8,\n              h: 2\n            }]\n          };\n          var r = {\n            \"░\": [[1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 1, 0], [0, 0, 0, 0]],\n            \"▒\": [[1, 0], [0, 0], [0, 1], [0, 0]],\n            \"▓\": [[0, 1], [1, 1], [1, 0], [1, 1]]\n          };\n          t.boxDrawingDefinitions = {\n            \"─\": {\n              1: \"M0,.5 L1,.5\"\n            },\n            \"━\": {\n              3: \"M0,.5 L1,.5\"\n            },\n            \"│\": {\n              1: \"M.5,0 L.5,1\"\n            },\n            \"┃\": {\n              3: \"M.5,0 L.5,1\"\n            },\n            \"┌\": {\n              1: \"M0.5,1 L.5,.5 L1,.5\"\n            },\n            \"┏\": {\n              3: \"M0.5,1 L.5,.5 L1,.5\"\n            },\n            \"┐\": {\n              1: \"M0,.5 L.5,.5 L.5,1\"\n            },\n            \"┓\": {\n              3: \"M0,.5 L.5,.5 L.5,1\"\n            },\n            \"└\": {\n              1: \"M.5,0 L.5,.5 L1,.5\"\n            },\n            \"┗\": {\n              3: \"M.5,0 L.5,.5 L1,.5\"\n            },\n            \"┘\": {\n              1: \"M.5,0 L.5,.5 L0,.5\"\n            },\n            \"┛\": {\n              3: \"M.5,0 L.5,.5 L0,.5\"\n            },\n            \"├\": {\n              1: \"M.5,0 L.5,1 M.5,.5 L1,.5\"\n            },\n            \"┣\": {\n              3: \"M.5,0 L.5,1 M.5,.5 L1,.5\"\n            },\n            \"┤\": {\n              1: \"M.5,0 L.5,1 M.5,.5 L0,.5\"\n            },\n            \"┫\": {\n              3: \"M.5,0 L.5,1 M.5,.5 L0,.5\"\n            },\n            \"┬\": {\n              1: \"M0,.5 L1,.5 M.5,.5 L.5,1\"\n            },\n            \"┳\": {\n              3: \"M0,.5 L1,.5 M.5,.5 L.5,1\"\n            },\n            \"┴\": {\n              1: \"M0,.5 L1,.5 M.5,.5 L.5,0\"\n            },\n            \"┻\": {\n              3: \"M0,.5 L1,.5 M.5,.5 L.5,0\"\n            },\n            \"┼\": {\n              1: \"M0,.5 L1,.5 M.5,0 L.5,1\"\n            },\n            \"╋\": {\n              3: \"M0,.5 L1,.5 M.5,0 L.5,1\"\n            },\n            \"╴\": {\n              1: \"M.5,.5 L0,.5\"\n            },\n            \"╸\": {\n              3: \"M.5,.5 L0,.5\"\n            },\n            \"╵\": {\n              1: \"M.5,.5 L.5,0\"\n            },\n            \"╹\": {\n              3: \"M.5,.5 L.5,0\"\n            },\n            \"╶\": {\n              1: \"M.5,.5 L1,.5\"\n            },\n            \"╺\": {\n              3: \"M.5,.5 L1,.5\"\n            },\n            \"╷\": {\n              1: \"M.5,.5 L.5,1\"\n            },\n            \"╻\": {\n              3: \"M.5,.5 L.5,1\"\n            },\n            \"═\": {\n              1: function _(e, t) {\n                return \"M0,\".concat(.5 - t, \" L1,\").concat(.5 - t, \" M0,\").concat(.5 + t, \" L1,\").concat(.5 + t);\n              }\n            },\n            \"║\": {\n              1: function _(e, t) {\n                return \"M\".concat(.5 - e, \",0 L\").concat(.5 - e, \",1 M\").concat(.5 + e, \",0 L\").concat(.5 + e, \",1\");\n              }\n            },\n            \"╒\": {\n              1: function _(e, t) {\n                return \"M.5,1 L.5,\".concat(.5 - t, \" L1,\").concat(.5 - t, \" M.5,\").concat(.5 + t, \" L1,\").concat(.5 + t);\n              }\n            },\n            \"╓\": {\n              1: function _(e, t) {\n                return \"M\".concat(.5 - e, \",1 L\").concat(.5 - e, \",.5 L1,.5 M\").concat(.5 + e, \",.5 L\").concat(.5 + e, \",1\");\n              }\n            },\n            \"╔\": {\n              1: function _(e, t) {\n                return \"M1,\".concat(.5 - t, \" L\").concat(.5 - e, \",\").concat(.5 - t, \" L\").concat(.5 - e, \",1 M1,\").concat(.5 + t, \" L\").concat(.5 + e, \",\").concat(.5 + t, \" L\").concat(.5 + e, \",1\");\n              }\n            },\n            \"╕\": {\n              1: function _(e, t) {\n                return \"M0,\".concat(.5 - t, \" L.5,\").concat(.5 - t, \" L.5,1 M0,\").concat(.5 + t, \" L.5,\").concat(.5 + t);\n              }\n            },\n            \"╖\": {\n              1: function _(e, t) {\n                return \"M\".concat(.5 + e, \",1 L\").concat(.5 + e, \",.5 L0,.5 M\").concat(.5 - e, \",.5 L\").concat(.5 - e, \",1\");\n              }\n            },\n            \"╗\": {\n              1: function _(e, t) {\n                return \"M0,\".concat(.5 + t, \" L\").concat(.5 - e, \",\").concat(.5 + t, \" L\").concat(.5 - e, \",1 M0,\").concat(.5 - t, \" L\").concat(.5 + e, \",\").concat(.5 - t, \" L\").concat(.5 + e, \",1\");\n              }\n            },\n            \"╘\": {\n              1: function _(e, t) {\n                return \"M.5,0 L.5,\".concat(.5 + t, \" L1,\").concat(.5 + t, \" M.5,\").concat(.5 - t, \" L1,\").concat(.5 - t);\n              }\n            },\n            \"╙\": {\n              1: function _(e, t) {\n                return \"M1,.5 L\".concat(.5 - e, \",.5 L\").concat(.5 - e, \",0 M\").concat(.5 + e, \",.5 L\").concat(.5 + e, \",0\");\n              }\n            },\n            \"╚\": {\n              1: function _(e, t) {\n                return \"M1,\".concat(.5 - t, \" L\").concat(.5 + e, \",\").concat(.5 - t, \" L\").concat(.5 + e, \",0 M1,\").concat(.5 + t, \" L\").concat(.5 - e, \",\").concat(.5 + t, \" L\").concat(.5 - e, \",0\");\n              }\n            },\n            \"╛\": {\n              1: function _(e, t) {\n                return \"M0,\".concat(.5 + t, \" L.5,\").concat(.5 + t, \" L.5,0 M0,\").concat(.5 - t, \" L.5,\").concat(.5 - t);\n              }\n            },\n            \"╜\": {\n              1: function _(e, t) {\n                return \"M0,.5 L\".concat(.5 + e, \",.5 L\").concat(.5 + e, \",0 M\").concat(.5 - e, \",.5 L\").concat(.5 - e, \",0\");\n              }\n            },\n            \"╝\": {\n              1: function _(e, t) {\n                return \"M0,\".concat(.5 - t, \" L\").concat(.5 - e, \",\").concat(.5 - t, \" L\").concat(.5 - e, \",0 M0,\").concat(.5 + t, \" L\").concat(.5 + e, \",\").concat(.5 + t, \" L\").concat(.5 + e, \",0\");\n              }\n            },\n            \"╞\": {\n              1: function _(e, t) {\n                return \"M.5,0 L.5,1 M.5,\".concat(.5 - t, \" L1,\").concat(.5 - t, \" M.5,\").concat(.5 + t, \" L1,\").concat(.5 + t);\n              }\n            },\n            \"╟\": {\n              1: function _(e, t) {\n                return \"M\".concat(.5 - e, \",0 L\").concat(.5 - e, \",1 M\").concat(.5 + e, \",0 L\").concat(.5 + e, \",1 M\").concat(.5 + e, \",.5 L1,.5\");\n              }\n            },\n            \"╠\": {\n              1: function _(e, t) {\n                return \"M\".concat(.5 - e, \",0 L\").concat(.5 - e, \",1 M1,\").concat(.5 + t, \" L\").concat(.5 + e, \",\").concat(.5 + t, \" L\").concat(.5 + e, \",1 M1,\").concat(.5 - t, \" L\").concat(.5 + e, \",\").concat(.5 - t, \" L\").concat(.5 + e, \",0\");\n              }\n            },\n            \"╡\": {\n              1: function _(e, t) {\n                return \"M.5,0 L.5,1 M0,\".concat(.5 - t, \" L.5,\").concat(.5 - t, \" M0,\").concat(.5 + t, \" L.5,\").concat(.5 + t);\n              }\n            },\n            \"╢\": {\n              1: function _(e, t) {\n                return \"M0,.5 L\".concat(.5 - e, \",.5 M\").concat(.5 - e, \",0 L\").concat(.5 - e, \",1 M\").concat(.5 + e, \",0 L\").concat(.5 + e, \",1\");\n              }\n            },\n            \"╣\": {\n              1: function _(e, t) {\n                return \"M\".concat(.5 + e, \",0 L\").concat(.5 + e, \",1 M0,\").concat(.5 + t, \" L\").concat(.5 - e, \",\").concat(.5 + t, \" L\").concat(.5 - e, \",1 M0,\").concat(.5 - t, \" L\").concat(.5 - e, \",\").concat(.5 - t, \" L\").concat(.5 - e, \",0\");\n              }\n            },\n            \"╤\": {\n              1: function _(e, t) {\n                return \"M0,\".concat(.5 - t, \" L1,\").concat(.5 - t, \" M0,\").concat(.5 + t, \" L1,\").concat(.5 + t, \" M.5,\").concat(.5 + t, \" L.5,1\");\n              }\n            },\n            \"╥\": {\n              1: function _(e, t) {\n                return \"M0,.5 L1,.5 M\".concat(.5 - e, \",.5 L\").concat(.5 - e, \",1 M\").concat(.5 + e, \",.5 L\").concat(.5 + e, \",1\");\n              }\n            },\n            \"╦\": {\n              1: function _(e, t) {\n                return \"M0,\".concat(.5 - t, \" L1,\").concat(.5 - t, \" M0,\").concat(.5 + t, \" L\").concat(.5 - e, \",\").concat(.5 + t, \" L\").concat(.5 - e, \",1 M1,\").concat(.5 + t, \" L\").concat(.5 + e, \",\").concat(.5 + t, \" L\").concat(.5 + e, \",1\");\n              }\n            },\n            \"╧\": {\n              1: function _(e, t) {\n                return \"M.5,0 L.5,\".concat(.5 - t, \" M0,\").concat(.5 - t, \" L1,\").concat(.5 - t, \" M0,\").concat(.5 + t, \" L1,\").concat(.5 + t);\n              }\n            },\n            \"╨\": {\n              1: function _(e, t) {\n                return \"M0,.5 L1,.5 M\".concat(.5 - e, \",.5 L\").concat(.5 - e, \",0 M\").concat(.5 + e, \",.5 L\").concat(.5 + e, \",0\");\n              }\n            },\n            \"╩\": {\n              1: function _(e, t) {\n                return \"M0,\".concat(.5 + t, \" L1,\").concat(.5 + t, \" M0,\").concat(.5 - t, \" L\").concat(.5 - e, \",\").concat(.5 - t, \" L\").concat(.5 - e, \",0 M1,\").concat(.5 - t, \" L\").concat(.5 + e, \",\").concat(.5 - t, \" L\").concat(.5 + e, \",0\");\n              }\n            },\n            \"╪\": {\n              1: function _(e, t) {\n                return \"M.5,0 L.5,1 M0,\".concat(.5 - t, \" L1,\").concat(.5 - t, \" M0,\").concat(.5 + t, \" L1,\").concat(.5 + t);\n              }\n            },\n            \"╫\": {\n              1: function _(e, t) {\n                return \"M0,.5 L1,.5 M\".concat(.5 - e, \",0 L\").concat(.5 - e, \",1 M\").concat(.5 + e, \",0 L\").concat(.5 + e, \",1\");\n              }\n            },\n            \"╬\": {\n              1: function _(e, t) {\n                return \"M0,\".concat(.5 + t, \" L\").concat(.5 - e, \",\").concat(.5 + t, \" L\").concat(.5 - e, \",1 M1,\").concat(.5 + t, \" L\").concat(.5 + e, \",\").concat(.5 + t, \" L\").concat(.5 + e, \",1 M0,\").concat(.5 - t, \" L\").concat(.5 - e, \",\").concat(.5 - t, \" L\").concat(.5 - e, \",0 M1,\").concat(.5 - t, \" L\").concat(.5 + e, \",\").concat(.5 - t, \" L\").concat(.5 + e, \",0\");\n              }\n            },\n            \"╱\": {\n              1: \"M1,0 L0,1\"\n            },\n            \"╲\": {\n              1: \"M0,0 L1,1\"\n            },\n            \"╳\": {\n              1: \"M1,0 L0,1 M0,0 L1,1\"\n            },\n            \"╼\": {\n              1: \"M.5,.5 L0,.5\",\n              3: \"M.5,.5 L1,.5\"\n            },\n            \"╽\": {\n              1: \"M.5,.5 L.5,0\",\n              3: \"M.5,.5 L.5,1\"\n            },\n            \"╾\": {\n              1: \"M.5,.5 L1,.5\",\n              3: \"M.5,.5 L0,.5\"\n            },\n            \"╿\": {\n              1: \"M.5,.5 L.5,1\",\n              3: \"M.5,.5 L.5,0\"\n            },\n            \"┍\": {\n              1: \"M.5,.5 L.5,1\",\n              3: \"M.5,.5 L1,.5\"\n            },\n            \"┎\": {\n              1: \"M.5,.5 L1,.5\",\n              3: \"M.5,.5 L.5,1\"\n            },\n            \"┑\": {\n              1: \"M.5,.5 L.5,1\",\n              3: \"M.5,.5 L0,.5\"\n            },\n            \"┒\": {\n              1: \"M.5,.5 L0,.5\",\n              3: \"M.5,.5 L.5,1\"\n            },\n            \"┕\": {\n              1: \"M.5,.5 L.5,0\",\n              3: \"M.5,.5 L1,.5\"\n            },\n            \"┖\": {\n              1: \"M.5,.5 L1,.5\",\n              3: \"M.5,.5 L.5,0\"\n            },\n            \"┙\": {\n              1: \"M.5,.5 L.5,0\",\n              3: \"M.5,.5 L0,.5\"\n            },\n            \"┚\": {\n              1: \"M.5,.5 L0,.5\",\n              3: \"M.5,.5 L.5,0\"\n            },\n            \"┝\": {\n              1: \"M.5,0 L.5,1\",\n              3: \"M.5,.5 L1,.5\"\n            },\n            \"┞\": {\n              1: \"M0.5,1 L.5,.5 L1,.5\",\n              3: \"M.5,.5 L.5,0\"\n            },\n            \"┟\": {\n              1: \"M.5,0 L.5,.5 L1,.5\",\n              3: \"M.5,.5 L.5,1\"\n            },\n            \"┠\": {\n              1: \"M.5,.5 L1,.5\",\n              3: \"M.5,0 L.5,1\"\n            },\n            \"┡\": {\n              1: \"M.5,.5 L.5,1\",\n              3: \"M.5,0 L.5,.5 L1,.5\"\n            },\n            \"┢\": {\n              1: \"M.5,.5 L.5,0\",\n              3: \"M0.5,1 L.5,.5 L1,.5\"\n            },\n            \"┥\": {\n              1: \"M.5,0 L.5,1\",\n              3: \"M.5,.5 L0,.5\"\n            },\n            \"┦\": {\n              1: \"M0,.5 L.5,.5 L.5,1\",\n              3: \"M.5,.5 L.5,0\"\n            },\n            \"┧\": {\n              1: \"M.5,0 L.5,.5 L0,.5\",\n              3: \"M.5,.5 L.5,1\"\n            },\n            \"┨\": {\n              1: \"M.5,.5 L0,.5\",\n              3: \"M.5,0 L.5,1\"\n            },\n            \"┩\": {\n              1: \"M.5,.5 L.5,1\",\n              3: \"M.5,0 L.5,.5 L0,.5\"\n            },\n            \"┪\": {\n              1: \"M.5,.5 L.5,0\",\n              3: \"M0,.5 L.5,.5 L.5,1\"\n            },\n            \"┭\": {\n              1: \"M0.5,1 L.5,.5 L1,.5\",\n              3: \"M.5,.5 L0,.5\"\n            },\n            \"┮\": {\n              1: \"M0,.5 L.5,.5 L.5,1\",\n              3: \"M.5,.5 L1,.5\"\n            },\n            \"┯\": {\n              1: \"M.5,.5 L.5,1\",\n              3: \"M0,.5 L1,.5\"\n            },\n            \"┰\": {\n              1: \"M0,.5 L1,.5\",\n              3: \"M.5,.5 L.5,1\"\n            },\n            \"┱\": {\n              1: \"M.5,.5 L1,.5\",\n              3: \"M0,.5 L.5,.5 L.5,1\"\n            },\n            \"┲\": {\n              1: \"M.5,.5 L0,.5\",\n              3: \"M0.5,1 L.5,.5 L1,.5\"\n            },\n            \"┵\": {\n              1: \"M.5,0 L.5,.5 L1,.5\",\n              3: \"M.5,.5 L0,.5\"\n            },\n            \"┶\": {\n              1: \"M.5,0 L.5,.5 L0,.5\",\n              3: \"M.5,.5 L1,.5\"\n            },\n            \"┷\": {\n              1: \"M.5,.5 L.5,0\",\n              3: \"M0,.5 L1,.5\"\n            },\n            \"┸\": {\n              1: \"M0,.5 L1,.5\",\n              3: \"M.5,.5 L.5,0\"\n            },\n            \"┹\": {\n              1: \"M.5,.5 L1,.5\",\n              3: \"M.5,0 L.5,.5 L0,.5\"\n            },\n            \"┺\": {\n              1: \"M.5,.5 L0,.5\",\n              3: \"M.5,0 L.5,.5 L1,.5\"\n            },\n            \"┽\": {\n              1: \"M.5,0 L.5,1 M.5,.5 L1,.5\",\n              3: \"M.5,.5 L0,.5\"\n            },\n            \"┾\": {\n              1: \"M.5,0 L.5,1 M.5,.5 L0,.5\",\n              3: \"M.5,.5 L1,.5\"\n            },\n            \"┿\": {\n              1: \"M.5,0 L.5,1\",\n              3: \"M0,.5 L1,.5\"\n            },\n            \"╀\": {\n              1: \"M0,.5 L1,.5 M.5,.5 L.5,1\",\n              3: \"M.5,.5 L.5,0\"\n            },\n            \"╁\": {\n              1: \"M.5,.5 L.5,0 M0,.5 L1,.5\",\n              3: \"M.5,.5 L.5,1\"\n            },\n            \"╂\": {\n              1: \"M0,.5 L1,.5\",\n              3: \"M.5,0 L.5,1\"\n            },\n            \"╃\": {\n              1: \"M0.5,1 L.5,.5 L1,.5\",\n              3: \"M.5,0 L.5,.5 L0,.5\"\n            },\n            \"╄\": {\n              1: \"M0,.5 L.5,.5 L.5,1\",\n              3: \"M.5,0 L.5,.5 L1,.5\"\n            },\n            \"╅\": {\n              1: \"M.5,0 L.5,.5 L1,.5\",\n              3: \"M0,.5 L.5,.5 L.5,1\"\n            },\n            \"╆\": {\n              1: \"M.5,0 L.5,.5 L0,.5\",\n              3: \"M0.5,1 L.5,.5 L1,.5\"\n            },\n            \"╇\": {\n              1: \"M.5,.5 L.5,1\",\n              3: \"M.5,.5 L.5,0 M0,.5 L1,.5\"\n            },\n            \"╈\": {\n              1: \"M.5,.5 L.5,0\",\n              3: \"M0,.5 L1,.5 M.5,.5 L.5,1\"\n            },\n            \"╉\": {\n              1: \"M.5,.5 L1,.5\",\n              3: \"M.5,0 L.5,1 M.5,.5 L0,.5\"\n            },\n            \"╊\": {\n              1: \"M.5,.5 L0,.5\",\n              3: \"M.5,0 L.5,1 M.5,.5 L1,.5\"\n            },\n            \"╌\": {\n              1: \"M.1,.5 L.4,.5 M.6,.5 L.9,.5\"\n            },\n            \"╍\": {\n              3: \"M.1,.5 L.4,.5 M.6,.5 L.9,.5\"\n            },\n            \"┄\": {\n              1: \"M.0667,.5 L.2667,.5 M.4,.5 L.6,.5 M.7333,.5 L.9333,.5\"\n            },\n            \"┅\": {\n              3: \"M.0667,.5 L.2667,.5 M.4,.5 L.6,.5 M.7333,.5 L.9333,.5\"\n            },\n            \"┈\": {\n              1: \"M.05,.5 L.2,.5 M.3,.5 L.45,.5 M.55,.5 L.7,.5 M.8,.5 L.95,.5\"\n            },\n            \"┉\": {\n              3: \"M.05,.5 L.2,.5 M.3,.5 L.45,.5 M.55,.5 L.7,.5 M.8,.5 L.95,.5\"\n            },\n            \"╎\": {\n              1: \"M.5,.1 L.5,.4 M.5,.6 L.5,.9\"\n            },\n            \"╏\": {\n              3: \"M.5,.1 L.5,.4 M.5,.6 L.5,.9\"\n            },\n            \"┆\": {\n              1: \"M.5,.0667 L.5,.2667 M.5,.4 L.5,.6 M.5,.7333 L.5,.9333\"\n            },\n            \"┇\": {\n              3: \"M.5,.0667 L.5,.2667 M.5,.4 L.5,.6 M.5,.7333 L.5,.9333\"\n            },\n            \"┊\": {\n              1: \"M.5,.05 L.5,.2 M.5,.3 L.5,.45 L.5,.55 M.5,.7 L.5,.95\"\n            },\n            \"┋\": {\n              3: \"M.5,.05 L.5,.2 M.5,.3 L.5,.45 L.5,.55 M.5,.7 L.5,.95\"\n            },\n            \"╭\": {\n              1: function _(e, t) {\n                return \"M.5,1 L.5,\".concat(.5 + t / .15 * .5, \" C.5,\").concat(.5 + t / .15 * .5, \",.5,.5,1,.5\");\n              }\n            },\n            \"╮\": {\n              1: function _(e, t) {\n                return \"M.5,1 L.5,\".concat(.5 + t / .15 * .5, \" C.5,\").concat(.5 + t / .15 * .5, \",.5,.5,0,.5\");\n              }\n            },\n            \"╯\": {\n              1: function _(e, t) {\n                return \"M.5,0 L.5,\".concat(.5 - t / .15 * .5, \" C.5,\").concat(.5 - t / .15 * .5, \",.5,.5,0,.5\");\n              }\n            },\n            \"╰\": {\n              1: function _(e, t) {\n                return \"M.5,0 L.5,\".concat(.5 - t / .15 * .5, \" C.5,\").concat(.5 - t / .15 * .5, \",.5,.5,1,.5\");\n              }\n            }\n          }, t.powerlineDefinitions = {\n            \"\": {\n              d: \"M0,0 L1,.5 L0,1\",\n              type: 0,\n              rightPadding: 2\n            },\n            \"\": {\n              d: \"M-1,-.5 L1,.5 L-1,1.5\",\n              type: 1,\n              leftPadding: 1,\n              rightPadding: 1\n            },\n            \"\": {\n              d: \"M1,0 L0,.5 L1,1\",\n              type: 0,\n              leftPadding: 2\n            },\n            \"\": {\n              d: \"M2,-.5 L0,.5 L2,1.5\",\n              type: 1,\n              leftPadding: 1,\n              rightPadding: 1\n            },\n            \"\": {\n              d: \"M0,0 L0,1 C0.552,1,1,0.776,1,.5 C1,0.224,0.552,0,0,0\",\n              type: 0,\n              rightPadding: 1\n            },\n            \"\": {\n              d: \"M0,1 C0.552,1,1,0.776,1,.5 C1,0.224,0.552,0,0,0\",\n              type: 1,\n              rightPadding: 1\n            },\n            \"\": {\n              d: \"M1,0 L1,1 C0.448,1,0,0.776,0,.5 C0,0.224,0.448,0,1,0\",\n              type: 0,\n              leftPadding: 1\n            },\n            \"\": {\n              d: \"M1,1 C0.448,1,0,0.776,0,.5 C0,0.224,0.448,0,1,0\",\n              type: 1,\n              leftPadding: 1\n            },\n            \"\": {\n              d: \"M-.5,-.5 L1.5,1.5 L-.5,1.5\",\n              type: 0\n            },\n            \"\": {\n              d: \"M-.5,-.5 L1.5,1.5\",\n              type: 1,\n              leftPadding: 1,\n              rightPadding: 1\n            },\n            \"\": {\n              d: \"M1.5,-.5 L-.5,1.5 L1.5,1.5\",\n              type: 0\n            },\n            \"\": {\n              d: \"M1.5,-.5 L-.5,1.5 L-.5,-.5\",\n              type: 0\n            },\n            \"\": {\n              d: \"M1.5,-.5 L-.5,1.5\",\n              type: 1,\n              leftPadding: 1,\n              rightPadding: 1\n            },\n            \"\": {\n              d: \"M-.5,-.5 L1.5,1.5 L1.5,-.5\",\n              type: 0\n            }\n          }, t.powerlineDefinitions[\"\"] = t.powerlineDefinitions[\"\"], t.powerlineDefinitions[\"\"] = t.powerlineDefinitions[\"\"], t.tryDrawCustomChar = function (e, i, n, c, l, d, _, u) {\n            var g = t.blockElementDefinitions[i];\n            if (g) return function (e, t, i, s, r, o) {\n              for (var _n4 = 0; _n4 < t.length; _n4++) {\n                var _a3 = t[_n4],\n                  _h2 = r / 8,\n                  _c3 = o / 8;\n                e.fillRect(i + _a3.x * _h2, s + _a3.y * _c3, _a3.w * _h2, _a3.h * _c3);\n              }\n            }(e, g, n, c, l, d), !0;\n            var f = r[i];\n            if (f) return function (e, t, i, r, n, a) {\n              var h = o.get(t);\n              h || (h = new Map(), o.set(t, h));\n              var c = e.fillStyle;\n              if (\"string\" != typeof c) throw new Error(\"Unexpected fillStyle type \\\"\".concat(c, \"\\\"\"));\n              var l = h.get(c);\n              if (!l) {\n                var _i12 = t[0].length,\n                  _r6 = t.length,\n                  _o3 = document.createElement(\"canvas\");\n                _o3.width = _i12, _o3.height = _r6;\n                var _n5 = (0, s.throwIfFalsy)(_o3.getContext(\"2d\")),\n                  _a4 = new ImageData(_i12, _r6);\n                var _d, _3, _u, _g2;\n                if (c.startsWith(\"#\")) _d = parseInt(c.slice(1, 3), 16), _3 = parseInt(c.slice(3, 5), 16), _u = parseInt(c.slice(5, 7), 16), _g2 = c.length > 7 && parseInt(c.slice(7, 9), 16) || 1;else {\n                  if (!c.startsWith(\"rgba\")) throw new Error(\"Unexpected fillStyle color format \\\"\".concat(c, \"\\\" when drawing pattern glyph\"));\n                  var _c$substring$split$ma = c.substring(5, c.length - 1).split(\",\").map(function (e) {\n                    return parseFloat(e);\n                  });\n                  var _c$substring$split$ma2 = _slicedToArray(_c$substring$split$ma, 4);\n                  _d = _c$substring$split$ma2[0];\n                  _3 = _c$substring$split$ma2[1];\n                  _u = _c$substring$split$ma2[2];\n                  _g2 = _c$substring$split$ma2[3];\n                }\n                for (var _e18 = 0; _e18 < _r6; _e18++) for (var _s5 = 0; _s5 < _i12; _s5++) _a4.data[4 * (_e18 * _i12 + _s5)] = _d, _a4.data[4 * (_e18 * _i12 + _s5) + 1] = _3, _a4.data[4 * (_e18 * _i12 + _s5) + 2] = _u, _a4.data[4 * (_e18 * _i12 + _s5) + 3] = t[_e18][_s5] * (255 * _g2);\n                _n5.putImageData(_a4, 0, 0), l = (0, s.throwIfFalsy)(e.createPattern(_o3, null)), h.set(c, l);\n              }\n              e.fillStyle = l, e.fillRect(i, r, n, a);\n            }(e, f, n, c, l, d), !0;\n            var v = t.boxDrawingDefinitions[i];\n            if (v) return function (e, t, i, s, r, o, n) {\n              e.strokeStyle = e.fillStyle;\n              for (var _i13 = 0, _Object$entries = Object.entries(t); _i13 < _Object$entries.length; _i13++) {\n                var _Object$entries$_i = _slicedToArray(_Object$entries[_i13], 2),\n                  _c4 = _Object$entries$_i[0],\n                  _l4 = _Object$entries$_i[1];\n                var _t9 = void 0;\n                e.beginPath(), e.lineWidth = n * Number.parseInt(_c4), _t9 = \"function\" == typeof _l4 ? _l4(.15, .15 / o * r) : _l4;\n                var _iterator8 = _createForOfIteratorHelper(_t9.split(\" \")),\n                  _step8;\n                try {\n                  for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n                    var _c5 = _step8.value;\n                    var _t10 = _c5[0],\n                      _l5 = a[_t10];\n                    if (!_l5) {\n                      console.error(\"Could not find drawing instructions for \\\"\".concat(_t10, \"\\\"\"));\n                      continue;\n                    }\n                    var _d2 = _c5.substring(1).split(\",\");\n                    _d2[0] && _d2[1] && _l5(e, h(_d2, r, o, i, s, !0, n));\n                  }\n                } catch (err) {\n                  _iterator8.e(err);\n                } finally {\n                  _iterator8.f();\n                }\n                e.stroke(), e.closePath();\n              }\n            }(e, v, n, c, l, d, u), !0;\n            var C = t.powerlineDefinitions[i];\n            return !!C && (function (e, t, i, s, r, o, n, c) {\n              var l, d;\n              var _ = new Path2D();\n              _.rect(i, s, r, o), e.clip(_), e.beginPath();\n              var u = n / 12;\n              e.lineWidth = c * u;\n              var _iterator9 = _createForOfIteratorHelper(t.d.split(\" \")),\n                _step9;\n              try {\n                for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n                  var _n6 = _step9.value;\n                  var _4 = _n6[0],\n                    _g3 = a[_4];\n                  if (!_g3) {\n                    console.error(\"Could not find drawing instructions for \\\"\".concat(_4, \"\\\"\"));\n                    continue;\n                  }\n                  var _f = _n6.substring(1).split(\",\");\n                  _f[0] && _f[1] && _g3(e, h(_f, r, o, i, s, !1, c, (null !== (l = t.leftPadding) && void 0 !== l ? l : 0) * (u / 2), (null !== (d = t.rightPadding) && void 0 !== d ? d : 0) * (u / 2)));\n                }\n              } catch (err) {\n                _iterator9.e(err);\n              } finally {\n                _iterator9.f();\n              }\n              1 === t.type ? (e.strokeStyle = e.fillStyle, e.stroke()) : e.fill(), e.closePath();\n            }(e, C, n, c, l, d, _, u), !0);\n          };\n          var o = new Map();\n          function n(e, t) {\n            var i = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n            return Math.max(Math.min(e, t), i);\n          }\n          var a = {\n            C: function C(e, t) {\n              return e.bezierCurveTo(t[0], t[1], t[2], t[3], t[4], t[5]);\n            },\n            L: function L(e, t) {\n              return e.lineTo(t[0], t[1]);\n            },\n            M: function M(e, t) {\n              return e.moveTo(t[0], t[1]);\n            }\n          };\n          function h(e, t, i, s, r, o, a) {\n            var h = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : 0;\n            var c = arguments.length > 8 && arguments[8] !== undefined ? arguments[8] : 0;\n            var l = e.map(function (e) {\n              return parseFloat(e) || parseInt(e);\n            });\n            if (l.length < 2) throw new Error(\"Too few arguments for instruction\");\n            for (var _e19 = 0; _e19 < l.length; _e19 += 2) l[_e19] *= t - h * a - c * a, o && 0 !== l[_e19] && (l[_e19] = n(Math.round(l[_e19] + .5) - .5, t, 0)), l[_e19] += s + h * a;\n            for (var _e20 = 1; _e20 < l.length; _e20 += 2) l[_e20] *= i, o && 0 !== l[_e20] && (l[_e20] = n(Math.round(l[_e20] + .5) - .5, i, 0)), l[_e20] += r;\n            return l;\n          }\n        },\n        56: function _(e, t, i) {\n          Object.defineProperty(t, \"__esModule\", {\n            value: !0\n          }), t.observeDevicePixelDimensions = void 0;\n          var s = i(859);\n          t.observeDevicePixelDimensions = function (e, t, i) {\n            var r = new t.ResizeObserver(function (t) {\n              var s = t.find(function (t) {\n                return t.target === e;\n              });\n              if (!s) return;\n              if (!(\"devicePixelContentBoxSize\" in s)) return null == r || r.disconnect(), void (r = void 0);\n              var o = s.devicePixelContentBoxSize[0].inlineSize,\n                n = s.devicePixelContentBoxSize[0].blockSize;\n              o > 0 && n > 0 && i(o, n);\n            });\n            try {\n              r.observe(e, {\n                box: [\"device-pixel-content-box\"]\n              });\n            } catch (e) {\n              r.disconnect(), r = void 0;\n            }\n            return (0, s.toDisposable)(function () {\n              return null == r ? void 0 : r.disconnect();\n            });\n          };\n        },\n        374: function _(e, t) {\n          function i(e) {\n            return 57508 <= e && e <= 57558;\n          }\n          Object.defineProperty(t, \"__esModule\", {\n            value: !0\n          }), t.createRenderDimensions = t.excludeFromContrastRatioDemands = t.isRestrictedPowerlineGlyph = t.isPowerlineGlyph = t.throwIfFalsy = void 0, t.throwIfFalsy = function (e) {\n            if (!e) throw new Error(\"value must not be falsy\");\n            return e;\n          }, t.isPowerlineGlyph = i, t.isRestrictedPowerlineGlyph = function (e) {\n            return 57520 <= e && e <= 57527;\n          }, t.excludeFromContrastRatioDemands = function (e) {\n            return i(e) || function (e) {\n              return 9472 <= e && e <= 9631;\n            }(e);\n          }, t.createRenderDimensions = function () {\n            return {\n              css: {\n                canvas: {\n                  width: 0,\n                  height: 0\n                },\n                cell: {\n                  width: 0,\n                  height: 0\n                }\n              },\n              device: {\n                canvas: {\n                  width: 0,\n                  height: 0\n                },\n                cell: {\n                  width: 0,\n                  height: 0\n                },\n                char: {\n                  width: 0,\n                  height: 0,\n                  left: 0,\n                  top: 0\n                }\n              }\n            };\n          };\n        },\n        296: function _(e, t) {\n          Object.defineProperty(t, \"__esModule\", {\n            value: !0\n          }), t.createSelectionRenderModel = void 0;\n          var i = /*#__PURE__*/function () {\n            function i() {\n              _classCallCheck(this, i);\n              this.clear();\n            }\n            _createClass(i, [{\n              key: \"clear\",\n              value: function clear() {\n                this.hasSelection = !1, this.columnSelectMode = !1, this.viewportStartRow = 0, this.viewportEndRow = 0, this.viewportCappedStartRow = 0, this.viewportCappedEndRow = 0, this.startCol = 0, this.endCol = 0, this.selectionStart = void 0, this.selectionEnd = void 0;\n              }\n            }, {\n              key: \"update\",\n              value: function update(e, t, _i14) {\n                var s = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : !1;\n                if (this.selectionStart = t, this.selectionEnd = _i14, !t || !_i14 || t[0] === _i14[0] && t[1] === _i14[1]) return void this.clear();\n                var r = t[1] - e.buffer.active.viewportY,\n                  o = _i14[1] - e.buffer.active.viewportY,\n                  n = Math.max(r, 0),\n                  a = Math.min(o, e.rows - 1);\n                n >= e.rows || a < 0 ? this.clear() : (this.hasSelection = !0, this.columnSelectMode = s, this.viewportStartRow = r, this.viewportEndRow = o, this.viewportCappedStartRow = n, this.viewportCappedEndRow = a, this.startCol = t[0], this.endCol = _i14[0]);\n              }\n            }, {\n              key: \"isCellSelected\",\n              value: function isCellSelected(e, t, _i15) {\n                return !!this.hasSelection && (_i15 -= e.buffer.active.viewportY, this.columnSelectMode ? this.startCol <= this.endCol ? t >= this.startCol && _i15 >= this.viewportCappedStartRow && t < this.endCol && _i15 <= this.viewportCappedEndRow : t < this.startCol && _i15 >= this.viewportCappedStartRow && t >= this.endCol && _i15 <= this.viewportCappedEndRow : _i15 > this.viewportStartRow && _i15 < this.viewportEndRow || this.viewportStartRow === this.viewportEndRow && _i15 === this.viewportStartRow && t >= this.startCol && t < this.endCol || this.viewportStartRow < this.viewportEndRow && _i15 === this.viewportEndRow && t < this.endCol || this.viewportStartRow < this.viewportEndRow && _i15 === this.viewportStartRow && t >= this.startCol);\n              }\n            }]);\n            return i;\n          }();\n          t.createSelectionRenderModel = function () {\n            return new i();\n          };\n        },\n        509: function _(e, t, i) {\n          Object.defineProperty(t, \"__esModule\", {\n            value: !0\n          }), t.TextureAtlas = void 0;\n          var s = i(237),\n            r = i(855),\n            o = i(147),\n            n = i(160),\n            a = i(860),\n            h = i(374),\n            c = i(485),\n            l = i(385),\n            d = i(345),\n            _ = {\n              texturePage: 0,\n              texturePosition: {\n                x: 0,\n                y: 0\n              },\n              texturePositionClipSpace: {\n                x: 0,\n                y: 0\n              },\n              offset: {\n                x: 0,\n                y: 0\n              },\n              size: {\n                x: 0,\n                y: 0\n              },\n              sizeClipSpace: {\n                x: 0,\n                y: 0\n              }\n            };\n          var u;\n          var g = /*#__PURE__*/function () {\n            function g(e, t, i) {\n              _classCallCheck(this, g);\n              this._document = e, this._config = t, this._unicodeService = i, this._didWarmUp = !1, this._cacheMap = new c.FourKeyMap(), this._cacheMapCombined = new c.FourKeyMap(), this._pages = [], this._activePages = [], this._workBoundingBox = {\n                top: 0,\n                left: 0,\n                bottom: 0,\n                right: 0\n              }, this._workAttributeData = new o.AttributeData(), this._textureSize = 512, this._onAddTextureAtlasCanvas = new d.EventEmitter(), this.onAddTextureAtlasCanvas = this._onAddTextureAtlasCanvas.event, this._onRemoveTextureAtlasCanvas = new d.EventEmitter(), this.onRemoveTextureAtlasCanvas = this._onRemoveTextureAtlasCanvas.event, this._requestClearModel = !1, this._createNewPage(), this._tmpCanvas = C(e, 4 * this._config.deviceCellWidth + 4, this._config.deviceCellHeight + 4), this._tmpCtx = (0, h.throwIfFalsy)(this._tmpCanvas.getContext(\"2d\", {\n                alpha: this._config.allowTransparency,\n                willReadFrequently: !0\n              }));\n            }\n            _createClass(g, [{\n              key: \"pages\",\n              get: function get() {\n                return this._pages;\n              }\n            }, {\n              key: \"dispose\",\n              value: function dispose() {\n                var _iterator10 = _createForOfIteratorHelper(this.pages),\n                  _step10;\n                try {\n                  for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n                    var _e21 = _step10.value;\n                    _e21.canvas.remove();\n                  }\n                } catch (err) {\n                  _iterator10.e(err);\n                } finally {\n                  _iterator10.f();\n                }\n                this._onAddTextureAtlasCanvas.dispose();\n              }\n            }, {\n              key: \"warmUp\",\n              value: function warmUp() {\n                this._didWarmUp || (this._doWarmUp(), this._didWarmUp = !0);\n              }\n            }, {\n              key: \"_doWarmUp\",\n              value: function _doWarmUp() {\n                var _this14 = this;\n                var e = new l.IdleTaskQueue();\n                var _loop = function _loop(_t11) {\n                  e.enqueue(function () {\n                    if (!_this14._cacheMap.get(_t11, r.DEFAULT_COLOR, r.DEFAULT_COLOR, r.DEFAULT_EXT)) {\n                      var _e22 = _this14._drawToCache(_t11, r.DEFAULT_COLOR, r.DEFAULT_COLOR, r.DEFAULT_EXT);\n                      _this14._cacheMap.set(_t11, r.DEFAULT_COLOR, r.DEFAULT_COLOR, r.DEFAULT_EXT, _e22);\n                    }\n                  });\n                };\n                for (var _t11 = 33; _t11 < 126; _t11++) {\n                  _loop(_t11);\n                }\n              }\n            }, {\n              key: \"beginFrame\",\n              value: function beginFrame() {\n                return this._requestClearModel;\n              }\n            }, {\n              key: \"clearTexture\",\n              value: function clearTexture() {\n                if (0 !== this._pages[0].currentRow.x || 0 !== this._pages[0].currentRow.y) {\n                  var _iterator11 = _createForOfIteratorHelper(this._pages),\n                    _step11;\n                  try {\n                    for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {\n                      var _e23 = _step11.value;\n                      _e23.clear();\n                    }\n                  } catch (err) {\n                    _iterator11.e(err);\n                  } finally {\n                    _iterator11.f();\n                  }\n                  this._cacheMap.clear(), this._cacheMapCombined.clear(), this._didWarmUp = !1;\n                }\n              }\n            }, {\n              key: \"_createNewPage\",\n              value: function _createNewPage() {\n                var _this15 = this;\n                g.maxAtlasPages && this._pages.length >= Math.max(4, g.maxAtlasPages / 2) && queueMicrotask(function () {\n                  var e = _this15._pages.filter(function (e) {\n                    return 2 * e.canvas.width <= (g.maxTextureSize || 4096);\n                  }).sort(function (e, t) {\n                    return t.canvas.width !== e.canvas.width ? t.canvas.width - e.canvas.width : t.percentageUsed - e.percentageUsed;\n                  });\n                  var t = -1,\n                    i = 0;\n                  for (var _s6 = 0; _s6 < e.length; _s6++) if (e[_s6].canvas.width !== i) t = _s6, i = e[_s6].canvas.width;else if (_s6 - t == 3) break;\n                  var s = e.slice(t, t + 4),\n                    r = s.map(function (e) {\n                      return e.glyphs[0].texturePage;\n                    }).sort(function (e, t) {\n                      return e > t ? 1 : -1;\n                    }),\n                    o = r[0],\n                    n = _this15._mergePages(s, o);\n                  n.version++, _this15._pages[o] = n;\n                  for (var _e24 = r.length - 1; _e24 >= 1; _e24--) _this15._deletePage(r[_e24]);\n                  _this15._requestClearModel = !0, _this15._onAddTextureAtlasCanvas.fire(n.canvas);\n                });\n                var e = new f(this._document, this._textureSize);\n                return this._pages.push(e), this._activePages.push(e), this._onAddTextureAtlasCanvas.fire(e.canvas), e;\n              }\n            }, {\n              key: \"_mergePages\",\n              value: function _mergePages(e, t) {\n                var i = 2 * e[0].canvas.width,\n                  s = new f(this._document, i, e);\n                var _iterator12 = _createForOfIteratorHelper(e.entries()),\n                  _step12;\n                try {\n                  for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {\n                    var _step12$value = _slicedToArray(_step12.value, 2),\n                      _r7 = _step12$value[0],\n                      _o4 = _step12$value[1];\n                    var _e25 = _r7 * _o4.canvas.width % i,\n                      _n7 = Math.floor(_r7 / 2) * _o4.canvas.height;\n                    s.ctx.drawImage(_o4.canvas, _e25, _n7);\n                    var _iterator13 = _createForOfIteratorHelper(_o4.glyphs),\n                      _step13;\n                    try {\n                      for (_iterator13.s(); !(_step13 = _iterator13.n()).done;) {\n                        var _s7 = _step13.value;\n                        _s7.texturePage = t, _s7.sizeClipSpace.x = _s7.size.x / i, _s7.sizeClipSpace.y = _s7.size.y / i, _s7.texturePosition.x += _e25, _s7.texturePosition.y += _n7, _s7.texturePositionClipSpace.x = _s7.texturePosition.x / i, _s7.texturePositionClipSpace.y = _s7.texturePosition.y / i;\n                      }\n                    } catch (err) {\n                      _iterator13.e(err);\n                    } finally {\n                      _iterator13.f();\n                    }\n                    this._onRemoveTextureAtlasCanvas.fire(_o4.canvas);\n                    var _a5 = this._activePages.indexOf(_o4);\n                    -1 !== _a5 && this._activePages.splice(_a5, 1);\n                  }\n                } catch (err) {\n                  _iterator12.e(err);\n                } finally {\n                  _iterator12.f();\n                }\n                return s;\n              }\n            }, {\n              key: \"_deletePage\",\n              value: function _deletePage(e) {\n                this._pages.splice(e, 1);\n                for (var _t12 = e; _t12 < this._pages.length; _t12++) {\n                  var _e26 = this._pages[_t12];\n                  var _iterator14 = _createForOfIteratorHelper(_e26.glyphs),\n                    _step14;\n                  try {\n                    for (_iterator14.s(); !(_step14 = _iterator14.n()).done;) {\n                      var _t13 = _step14.value;\n                      _t13.texturePage--;\n                    }\n                  } catch (err) {\n                    _iterator14.e(err);\n                  } finally {\n                    _iterator14.f();\n                  }\n                  _e26.version++;\n                }\n              }\n            }, {\n              key: \"getRasterizedGlyphCombinedChar\",\n              value: function getRasterizedGlyphCombinedChar(e, t, i, s) {\n                return this._getFromCacheMap(this._cacheMapCombined, e, t, i, s);\n              }\n            }, {\n              key: \"getRasterizedGlyph\",\n              value: function getRasterizedGlyph(e, t, i, s) {\n                return this._getFromCacheMap(this._cacheMap, e, t, i, s);\n              }\n            }, {\n              key: \"_getFromCacheMap\",\n              value: function _getFromCacheMap(e, t, i, s, r) {\n                return u = e.get(t, i, s, r), u || (u = this._drawToCache(t, i, s, r), e.set(t, i, s, r, u)), u;\n              }\n            }, {\n              key: \"_getColorFromAnsiIndex\",\n              value: function _getColorFromAnsiIndex(e) {\n                if (e >= this._config.colors.ansi.length) throw new Error(\"No color found for idx \" + e);\n                return this._config.colors.ansi[e];\n              }\n            }, {\n              key: \"_getBackgroundColor\",\n              value: function _getBackgroundColor(e, t, i, r) {\n                if (this._config.allowTransparency) return n.NULL_COLOR;\n                var a;\n                switch (e) {\n                  case 16777216:\n                  case 33554432:\n                    a = this._getColorFromAnsiIndex(t);\n                    break;\n                  case 50331648:\n                    var _e27 = o.AttributeData.toColorRGB(t);\n                    a = n.rgba.toColor(_e27[0], _e27[1], _e27[2]);\n                    break;\n                  default:\n                    a = i ? this._config.colors.foreground : this._config.colors.background;\n                }\n                return r && (a = n.color.blend(this._config.colors.background, n.color.multiplyOpacity(a, s.DIM_OPACITY))), a;\n              }\n            }, {\n              key: \"_getForegroundColor\",\n              value: function _getForegroundColor(e, t, i, r, a, h, c, l, d, _) {\n                var u = this._getMinimumContrastColor(e, t, i, r, a, h, !1, d, _);\n                if (u) return u;\n                var _g4;\n                switch (a) {\n                  case 16777216:\n                  case 33554432:\n                    this._config.drawBoldTextInBrightColors && d && h < 8 && (h += 8), _g4 = this._getColorFromAnsiIndex(h);\n                    break;\n                  case 50331648:\n                    var _e28 = o.AttributeData.toColorRGB(h);\n                    _g4 = n.rgba.toColor(_e28[0], _e28[1], _e28[2]);\n                    break;\n                  default:\n                    _g4 = c ? this._config.colors.background : this._config.colors.foreground;\n                }\n                return this._config.allowTransparency && (_g4 = n.color.opaque(_g4)), l && (_g4 = n.color.multiplyOpacity(_g4, s.DIM_OPACITY)), _g4;\n              }\n            }, {\n              key: \"_resolveBackgroundRgba\",\n              value: function _resolveBackgroundRgba(e, t, i) {\n                switch (e) {\n                  case 16777216:\n                  case 33554432:\n                    return this._getColorFromAnsiIndex(t).rgba;\n                  case 50331648:\n                    return t << 8;\n                  default:\n                    return i ? this._config.colors.foreground.rgba : this._config.colors.background.rgba;\n                }\n              }\n            }, {\n              key: \"_resolveForegroundRgba\",\n              value: function _resolveForegroundRgba(e, t, i, s) {\n                switch (e) {\n                  case 16777216:\n                  case 33554432:\n                    return this._config.drawBoldTextInBrightColors && s && t < 8 && (t += 8), this._getColorFromAnsiIndex(t).rgba;\n                  case 50331648:\n                    return t << 8;\n                  default:\n                    return i ? this._config.colors.background.rgba : this._config.colors.foreground.rgba;\n                }\n              }\n            }, {\n              key: \"_getMinimumContrastColor\",\n              value: function _getMinimumContrastColor(e, t, i, s, r, o, a, h, c) {\n                if (1 === this._config.minimumContrastRatio || c) return;\n                var l = this._config.colors.contrastCache.getColor(e, s);\n                if (void 0 !== l) return l || void 0;\n                var d = this._resolveBackgroundRgba(t, i, a),\n                  _ = this._resolveForegroundRgba(r, o, a, h),\n                  u = n.rgba.ensureContrastRatio(d, _, this._config.minimumContrastRatio);\n                if (!u) return void this._config.colors.contrastCache.setColor(e, s, null);\n                var _g5 = n.rgba.toColor(u >> 24 & 255, u >> 16 & 255, u >> 8 & 255);\n                return this._config.colors.contrastCache.setColor(e, s, _g5), _g5;\n              }\n            }, {\n              key: \"_drawToCache\",\n              value: function _drawToCache(e, t, i, r) {\n                var n = \"number\" == typeof e ? String.fromCharCode(e) : e,\n                  c = this._config.deviceCellWidth * Math.max(n.length, 2) + 4;\n                this._tmpCanvas.width < c && (this._tmpCanvas.width = c);\n                var l = this._config.deviceCellHeight + 8;\n                if (this._tmpCanvas.height < l && (this._tmpCanvas.height = l), this._tmpCtx.save(), this._workAttributeData.fg = i, this._workAttributeData.bg = t, this._workAttributeData.extended.ext = r, this._workAttributeData.isInvisible()) return _;\n                var d = !!this._workAttributeData.isBold(),\n                  u = !!this._workAttributeData.isInverse(),\n                  _g6 = !!this._workAttributeData.isDim(),\n                  f = !!this._workAttributeData.isItalic(),\n                  C = !!this._workAttributeData.isUnderline(),\n                  p = !!this._workAttributeData.isStrikethrough();\n                var m = this._workAttributeData.getFgColor(),\n                  x = this._workAttributeData.getFgColorMode(),\n                  w = this._workAttributeData.getBgColor(),\n                  L = this._workAttributeData.getBgColorMode();\n                if (u) {\n                  var _e29 = m;\n                  m = w, w = _e29;\n                  var _t14 = x;\n                  x = L, L = _t14;\n                }\n                var b = this._getBackgroundColor(L, w, u, _g6);\n                this._tmpCtx.globalCompositeOperation = \"copy\", this._tmpCtx.fillStyle = b.css, this._tmpCtx.fillRect(0, 0, this._tmpCanvas.width, this._tmpCanvas.height), this._tmpCtx.globalCompositeOperation = \"source-over\";\n                var M = d ? this._config.fontWeightBold : this._config.fontWeight,\n                  y = f ? \"italic\" : \"\";\n                this._tmpCtx.font = \"\".concat(y, \" \").concat(M, \" \").concat(this._config.fontSize * this._config.devicePixelRatio, \"px \").concat(this._config.fontFamily), this._tmpCtx.textBaseline = s.TEXT_BASELINE;\n                var S = 1 === n.length && (0, h.isPowerlineGlyph)(n.charCodeAt(0)),\n                  R = 1 === n.length && (0, h.isRestrictedPowerlineGlyph)(n.charCodeAt(0)),\n                  A = this._getForegroundColor(t, L, w, i, x, m, u, _g6, d, (0, h.excludeFromContrastRatioDemands)(n.charCodeAt(0)));\n                this._tmpCtx.fillStyle = A.css;\n                var D = R ? 0 : 4;\n                var T = !1;\n                !1 !== this._config.customGlyphs && (T = (0, a.tryDrawCustomChar)(this._tmpCtx, n, D, D, this._config.deviceCellWidth, this._config.deviceCellHeight, this._config.fontSize, this._config.devicePixelRatio));\n                var k,\n                  $ = !S;\n                if (k = \"number\" == typeof e ? this._unicodeService.wcwidth(e) : this._unicodeService.getStringCellWidth(e), C) {\n                  this._tmpCtx.save();\n                  var _e30 = Math.max(1, Math.floor(this._config.fontSize * this._config.devicePixelRatio / 15)),\n                    _t15 = _e30 % 2 == 1 ? .5 : 0;\n                  if (this._tmpCtx.lineWidth = _e30, this._workAttributeData.isUnderlineColorDefault()) this._tmpCtx.strokeStyle = this._tmpCtx.fillStyle;else if (this._workAttributeData.isUnderlineColorRGB()) $ = !1, this._tmpCtx.strokeStyle = \"rgb(\".concat(o.AttributeData.toColorRGB(this._workAttributeData.getUnderlineColor()).join(\",\"), \")\");else {\n                    $ = !1;\n                    var _e31 = this._workAttributeData.getUnderlineColor();\n                    this._config.drawBoldTextInBrightColors && this._workAttributeData.isBold() && _e31 < 8 && (_e31 += 8), this._tmpCtx.strokeStyle = this._getColorFromAnsiIndex(_e31).css;\n                  }\n                  this._tmpCtx.beginPath();\n                  var _i16 = D,\n                    _s8 = Math.ceil(D + this._config.deviceCharHeight) - _t15,\n                    _r8 = D + this._config.deviceCharHeight + _e30 - _t15,\n                    _a6 = Math.ceil(D + this._config.deviceCharHeight + 2 * _e30) - _t15;\n                  for (var _o5 = 0; _o5 < k; _o5++) {\n                    this._tmpCtx.save();\n                    var _n8 = _i16 + _o5 * this._config.deviceCellWidth,\n                      _h3 = _i16 + (_o5 + 1) * this._config.deviceCellWidth,\n                      _c6 = _n8 + this._config.deviceCellWidth / 2;\n                    switch (this._workAttributeData.extended.underlineStyle) {\n                      case 2:\n                        this._tmpCtx.moveTo(_n8, _s8), this._tmpCtx.lineTo(_h3, _s8), this._tmpCtx.moveTo(_n8, _a6), this._tmpCtx.lineTo(_h3, _a6);\n                        break;\n                      case 3:\n                        var _i17 = _e30 <= 1 ? _a6 : Math.ceil(D + this._config.deviceCharHeight - _e30 / 2) - _t15,\n                          _o6 = _e30 <= 1 ? _s8 : Math.ceil(D + this._config.deviceCharHeight + _e30 / 2) - _t15,\n                          _l6 = new Path2D();\n                        _l6.rect(_n8, _s8, this._config.deviceCellWidth, _a6 - _s8), this._tmpCtx.clip(_l6), this._tmpCtx.moveTo(_n8 - this._config.deviceCellWidth / 2, _r8), this._tmpCtx.bezierCurveTo(_n8 - this._config.deviceCellWidth / 2, _o6, _n8, _o6, _n8, _r8), this._tmpCtx.bezierCurveTo(_n8, _i17, _c6, _i17, _c6, _r8), this._tmpCtx.bezierCurveTo(_c6, _o6, _h3, _o6, _h3, _r8), this._tmpCtx.bezierCurveTo(_h3, _i17, _h3 + this._config.deviceCellWidth / 2, _i17, _h3 + this._config.deviceCellWidth / 2, _r8);\n                        break;\n                      case 4:\n                        this._tmpCtx.setLineDash([2 * this._config.devicePixelRatio, this._config.devicePixelRatio]), this._tmpCtx.moveTo(_n8, _s8), this._tmpCtx.lineTo(_h3, _s8);\n                        break;\n                      case 5:\n                        this._tmpCtx.setLineDash([4 * this._config.devicePixelRatio, 3 * this._config.devicePixelRatio]), this._tmpCtx.moveTo(_n8, _s8), this._tmpCtx.lineTo(_h3, _s8);\n                        break;\n                      default:\n                        this._tmpCtx.moveTo(_n8, _s8), this._tmpCtx.lineTo(_h3, _s8);\n                    }\n                    this._tmpCtx.stroke(), this._tmpCtx.restore();\n                  }\n                  if (this._tmpCtx.restore(), !T && this._config.fontSize >= 12 && !this._config.allowTransparency && \" \" !== n) {\n                    this._tmpCtx.save(), this._tmpCtx.textBaseline = \"alphabetic\";\n                    var _t16 = this._tmpCtx.measureText(n);\n                    if (this._tmpCtx.restore(), \"actualBoundingBoxDescent\" in _t16 && _t16.actualBoundingBoxDescent > 0) {\n                      this._tmpCtx.save();\n                      var _t17 = new Path2D();\n                      _t17.rect(_i16, _s8 - Math.ceil(_e30 / 2), this._config.deviceCellWidth, _a6 - _s8 + Math.ceil(_e30 / 2)), this._tmpCtx.clip(_t17), this._tmpCtx.lineWidth = 3 * this._config.devicePixelRatio, this._tmpCtx.strokeStyle = b.css, this._tmpCtx.strokeText(n, D, D + this._config.deviceCharHeight), this._tmpCtx.restore();\n                    }\n                  }\n                }\n                if (T || this._tmpCtx.fillText(n, D, D + this._config.deviceCharHeight), \"_\" === n && !this._config.allowTransparency) {\n                  var _e32 = v(this._tmpCtx.getImageData(D, D, this._config.deviceCellWidth, this._config.deviceCellHeight), b, A, $);\n                  if (_e32) for (var _t18 = 1; _t18 <= 5 && (this._tmpCtx.save(), this._tmpCtx.fillStyle = b.css, this._tmpCtx.fillRect(0, 0, this._tmpCanvas.width, this._tmpCanvas.height), this._tmpCtx.restore(), this._tmpCtx.fillText(n, D, D + this._config.deviceCharHeight - _t18), _e32 = v(this._tmpCtx.getImageData(D, D, this._config.deviceCellWidth, this._config.deviceCellHeight), b, A, $), _e32); _t18++);\n                }\n                if (p) {\n                  var _e33 = Math.max(1, Math.floor(this._config.fontSize * this._config.devicePixelRatio / 10)),\n                    _t19 = this._tmpCtx.lineWidth % 2 == 1 ? .5 : 0;\n                  this._tmpCtx.lineWidth = _e33, this._tmpCtx.strokeStyle = this._tmpCtx.fillStyle, this._tmpCtx.beginPath(), this._tmpCtx.moveTo(D, D + Math.floor(this._config.deviceCharHeight / 2) - _t19), this._tmpCtx.lineTo(D + this._config.deviceCharWidth * k, D + Math.floor(this._config.deviceCharHeight / 2) - _t19), this._tmpCtx.stroke();\n                }\n                this._tmpCtx.restore();\n                var B = this._tmpCtx.getImageData(0, 0, this._tmpCanvas.width, this._tmpCanvas.height);\n                var E;\n                if (E = this._config.allowTransparency ? function (e) {\n                  for (var _t20 = 0; _t20 < e.data.length; _t20 += 4) if (e.data[_t20 + 3] > 0) return !1;\n                  return !0;\n                }(B) : v(B, b, A, $), E) return _;\n                var P = this._findGlyphBoundingBox(B, this._workBoundingBox, c, R, T, D);\n                var I, O;\n                for (;;) {\n                  if (0 === this._activePages.length) {\n                    var _e34 = this._createNewPage();\n                    I = _e34, O = _e34.currentRow, O.height = P.size.y;\n                    break;\n                  }\n                  I = this._activePages[this._activePages.length - 1], O = I.currentRow;\n                  var _iterator15 = _createForOfIteratorHelper(this._activePages),\n                    _step15;\n                  try {\n                    for (_iterator15.s(); !(_step15 = _iterator15.n()).done;) {\n                      var _e38 = _step15.value;\n                      P.size.y <= _e38.currentRow.height && (I = _e38, O = _e38.currentRow);\n                    }\n                  } catch (err) {\n                    _iterator15.e(err);\n                  } finally {\n                    _iterator15.f();\n                  }\n                  for (var _e35 = this._activePages.length - 1; _e35 >= 0; _e35--) {\n                    var _iterator16 = _createForOfIteratorHelper(this._activePages[_e35].fixedRows),\n                      _step16;\n                    try {\n                      for (_iterator16.s(); !(_step16 = _iterator16.n()).done;) {\n                        var _t21 = _step16.value;\n                        _t21.height <= O.height && P.size.y <= _t21.height && (I = this._activePages[_e35], O = _t21);\n                      }\n                    } catch (err) {\n                      _iterator16.e(err);\n                    } finally {\n                      _iterator16.f();\n                    }\n                  }\n                  if (O.y + P.size.y >= I.canvas.height || O.height > P.size.y + 2) {\n                    var _e36 = !1;\n                    if (I.currentRow.y + I.currentRow.height + P.size.y >= I.canvas.height) {\n                      var _t22 = void 0;\n                      var _iterator17 = _createForOfIteratorHelper(this._activePages),\n                        _step17;\n                      try {\n                        for (_iterator17.s(); !(_step17 = _iterator17.n()).done;) {\n                          var _e37 = _step17.value;\n                          if (_e37.currentRow.y + _e37.currentRow.height + P.size.y < _e37.canvas.height) {\n                            _t22 = _e37;\n                            break;\n                          }\n                        }\n                      } catch (err) {\n                        _iterator17.e(err);\n                      } finally {\n                        _iterator17.f();\n                      }\n                      if (_t22) I = _t22;else {\n                        var _t23 = this._createNewPage();\n                        I = _t23, O = _t23.currentRow, O.height = P.size.y, _e36 = !0;\n                      }\n                    }\n                    _e36 || (I.currentRow.height > 0 && I.fixedRows.push(I.currentRow), O = {\n                      x: 0,\n                      y: I.currentRow.y + I.currentRow.height,\n                      height: P.size.y\n                    }, I.fixedRows.push(O), I.currentRow = {\n                      x: 0,\n                      y: O.y + O.height,\n                      height: 0\n                    });\n                  }\n                  if (O.x + P.size.x <= I.canvas.width) break;\n                  O === I.currentRow ? (O.x = 0, O.y += O.height, O.height = 0) : I.fixedRows.splice(I.fixedRows.indexOf(O), 1);\n                }\n                return P.texturePage = this._pages.indexOf(I), P.texturePosition.x = O.x, P.texturePosition.y = O.y, P.texturePositionClipSpace.x = O.x / I.canvas.width, P.texturePositionClipSpace.y = O.y / I.canvas.height, P.sizeClipSpace.x /= I.canvas.width, P.sizeClipSpace.y /= I.canvas.height, O.height = Math.max(O.height, P.size.y), O.x += P.size.x, I.ctx.putImageData(B, P.texturePosition.x - this._workBoundingBox.left, P.texturePosition.y - this._workBoundingBox.top, this._workBoundingBox.left, this._workBoundingBox.top, P.size.x, P.size.y), I.addGlyph(P), I.version++, P;\n              }\n            }, {\n              key: \"_findGlyphBoundingBox\",\n              value: function _findGlyphBoundingBox(e, t, i, s, r, o) {\n                t.top = 0;\n                var n = s ? this._config.deviceCellHeight : this._tmpCanvas.height,\n                  a = s ? this._config.deviceCellWidth : i;\n                var h = !1;\n                for (var _i18 = 0; _i18 < n; _i18++) {\n                  for (var _s9 = 0; _s9 < a; _s9++) {\n                    var _r9 = _i18 * this._tmpCanvas.width * 4 + 4 * _s9 + 3;\n                    if (0 !== e.data[_r9]) {\n                      t.top = _i18, h = !0;\n                      break;\n                    }\n                  }\n                  if (h) break;\n                }\n                t.left = 0, h = !1;\n                for (var _i19 = 0; _i19 < o + a; _i19++) {\n                  for (var _s10 = 0; _s10 < n; _s10++) {\n                    var _r10 = _s10 * this._tmpCanvas.width * 4 + 4 * _i19 + 3;\n                    if (0 !== e.data[_r10]) {\n                      t.left = _i19, h = !0;\n                      break;\n                    }\n                  }\n                  if (h) break;\n                }\n                t.right = a, h = !1;\n                for (var _i20 = o + a - 1; _i20 >= o; _i20--) {\n                  for (var _s11 = 0; _s11 < n; _s11++) {\n                    var _r11 = _s11 * this._tmpCanvas.width * 4 + 4 * _i20 + 3;\n                    if (0 !== e.data[_r11]) {\n                      t.right = _i20, h = !0;\n                      break;\n                    }\n                  }\n                  if (h) break;\n                }\n                t.bottom = n, h = !1;\n                for (var _i21 = n - 1; _i21 >= 0; _i21--) {\n                  for (var _s12 = 0; _s12 < a; _s12++) {\n                    var _r12 = _i21 * this._tmpCanvas.width * 4 + 4 * _s12 + 3;\n                    if (0 !== e.data[_r12]) {\n                      t.bottom = _i21, h = !0;\n                      break;\n                    }\n                  }\n                  if (h) break;\n                }\n                return {\n                  texturePage: 0,\n                  texturePosition: {\n                    x: 0,\n                    y: 0\n                  },\n                  texturePositionClipSpace: {\n                    x: 0,\n                    y: 0\n                  },\n                  size: {\n                    x: t.right - t.left + 1,\n                    y: t.bottom - t.top + 1\n                  },\n                  sizeClipSpace: {\n                    x: t.right - t.left + 1,\n                    y: t.bottom - t.top + 1\n                  },\n                  offset: {\n                    x: -t.left + o + (s || r ? Math.floor((this._config.deviceCellWidth - this._config.deviceCharWidth) / 2) : 0),\n                    y: -t.top + o + (s || r ? 1 === this._config.lineHeight ? 0 : Math.round((this._config.deviceCellHeight - this._config.deviceCharHeight) / 2) : 0)\n                  }\n                };\n              }\n            }]);\n            return g;\n          }();\n          t.TextureAtlas = g;\n          var f = /*#__PURE__*/function () {\n            function f(e, t, i) {\n              _classCallCheck(this, f);\n              if (this._usedPixels = 0, this._glyphs = [], this.version = 0, this.currentRow = {\n                x: 0,\n                y: 0,\n                height: 0\n              }, this.fixedRows = [], i) {\n                var _iterator18 = _createForOfIteratorHelper(i),\n                  _step18;\n                try {\n                  for (_iterator18.s(); !(_step18 = _iterator18.n()).done;) {\n                    var _this$_glyphs;\n                    var _e39 = _step18.value;\n                    (_this$_glyphs = this._glyphs).push.apply(_this$_glyphs, _toConsumableArray(_e39.glyphs)), this._usedPixels += _e39._usedPixels;\n                  }\n                } catch (err) {\n                  _iterator18.e(err);\n                } finally {\n                  _iterator18.f();\n                }\n              }\n              this.canvas = C(e, t, t), this.ctx = (0, h.throwIfFalsy)(this.canvas.getContext(\"2d\", {\n                alpha: !0\n              }));\n            }\n            _createClass(f, [{\n              key: \"percentageUsed\",\n              get: function get() {\n                return this._usedPixels / (this.canvas.width * this.canvas.height);\n              }\n            }, {\n              key: \"glyphs\",\n              get: function get() {\n                return this._glyphs;\n              }\n            }, {\n              key: \"addGlyph\",\n              value: function addGlyph(e) {\n                this._glyphs.push(e), this._usedPixels += e.size.x * e.size.y;\n              }\n            }, {\n              key: \"clear\",\n              value: function clear() {\n                this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height), this.currentRow.x = 0, this.currentRow.y = 0, this.currentRow.height = 0, this.fixedRows.length = 0, this.version++;\n              }\n            }]);\n            return f;\n          }();\n          function v(e, t, i, s) {\n            var r = t.rgba >>> 24,\n              o = t.rgba >>> 16 & 255,\n              n = t.rgba >>> 8 & 255,\n              a = i.rgba >>> 24,\n              h = i.rgba >>> 16 & 255,\n              c = i.rgba >>> 8 & 255,\n              l = Math.floor((Math.abs(r - a) + Math.abs(o - h) + Math.abs(n - c)) / 12);\n            var d = !0;\n            for (var _t24 = 0; _t24 < e.data.length; _t24 += 4) e.data[_t24] === r && e.data[_t24 + 1] === o && e.data[_t24 + 2] === n || s && Math.abs(e.data[_t24] - r) + Math.abs(e.data[_t24 + 1] - o) + Math.abs(e.data[_t24 + 2] - n) < l ? e.data[_t24 + 3] = 0 : d = !1;\n            return d;\n          }\n          function C(e, t, i) {\n            var s = e.createElement(\"canvas\");\n            return s.width = t, s.height = i, s;\n          }\n        },\n        577: function _(e, t, i) {\n          var s = this && this.__decorate || function (e, t, i, s) {\n              var r,\n                o = arguments.length,\n                n = o < 3 ? t : null === s ? s = Object.getOwnPropertyDescriptor(t, i) : s;\n              if (\"object\" == typeof Reflect && \"function\" == typeof Reflect.decorate) n = Reflect.decorate(e, t, i, s);else for (var a = e.length - 1; a >= 0; a--) (r = e[a]) && (n = (o < 3 ? r(n) : o > 3 ? r(t, i, n) : r(t, i)) || n);\n              return o > 3 && n && Object.defineProperty(t, i, n), n;\n            },\n            r = this && this.__param || function (e, t) {\n              return function (i, s) {\n                t(i, s, e);\n              };\n            };\n          Object.defineProperty(t, \"__esModule\", {\n            value: !0\n          }), t.CharacterJoinerService = t.JoinedCellData = void 0;\n          var o = i(147),\n            n = i(855),\n            a = i(782),\n            h = i(97);\n          var c = /*#__PURE__*/function (_o$AttributeData) {\n            _inherits(c, _o$AttributeData);\n            var _super7 = _createSuper(c);\n            function c(e, t, i) {\n              var _this16;\n              _classCallCheck(this, c);\n              _this16 = _super7.call(this), _this16.content = 0, _this16.combinedData = \"\", _this16.fg = e.fg, _this16.bg = e.bg, _this16.combinedData = t, _this16._width = i;\n              return _this16;\n            }\n            _createClass(c, [{\n              key: \"isCombined\",\n              value: function isCombined() {\n                return 2097152;\n              }\n            }, {\n              key: \"getWidth\",\n              value: function getWidth() {\n                return this._width;\n              }\n            }, {\n              key: \"getChars\",\n              value: function getChars() {\n                return this.combinedData;\n              }\n            }, {\n              key: \"getCode\",\n              value: function getCode() {\n                return 2097151;\n              }\n            }, {\n              key: \"setFromCharData\",\n              value: function setFromCharData(e) {\n                throw new Error(\"not implemented\");\n              }\n            }, {\n              key: \"getAsCharData\",\n              value: function getAsCharData() {\n                return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n              }\n            }]);\n            return c;\n          }(o.AttributeData);\n          t.JoinedCellData = c;\n          var l = /*#__PURE__*/function () {\n            function e(_e40) {\n              _classCallCheck(this, e);\n              this._bufferService = _e40, this._characterJoiners = [], this._nextCharacterJoinerId = 0, this._workCell = new a.CellData();\n            }\n            _createClass(e, [{\n              key: \"register\",\n              value: function register(_e41) {\n                var t = {\n                  id: this._nextCharacterJoinerId++,\n                  handler: _e41\n                };\n                return this._characterJoiners.push(t), t.id;\n              }\n            }, {\n              key: \"deregister\",\n              value: function deregister(_e42) {\n                for (var _t25 = 0; _t25 < this._characterJoiners.length; _t25++) if (this._characterJoiners[_t25].id === _e42) return this._characterJoiners.splice(_t25, 1), !0;\n                return !1;\n              }\n            }, {\n              key: \"getJoinedCharacters\",\n              value: function getJoinedCharacters(_e43) {\n                if (0 === this._characterJoiners.length) return [];\n                var t = this._bufferService.buffer.lines.get(_e43);\n                if (!t || 0 === t.length) return [];\n                var i = [],\n                  s = t.translateToString(!0);\n                var r = 0,\n                  o = 0,\n                  a = 0,\n                  h = t.getFg(0),\n                  c = t.getBg(0);\n                for (var _e51 = 0; _e51 < t.getTrimmedLength(); _e51++) if (t.loadCell(_e51, this._workCell), 0 !== this._workCell.getWidth()) {\n                  if (this._workCell.fg !== h || this._workCell.bg !== c) {\n                    if (_e51 - r > 1) {\n                      var _e45 = this._getJoinedRanges(s, a, o, t, r);\n                      for (var _t26 = 0; _t26 < _e45.length; _t26++) i.push(_e45[_t26]);\n                    }\n                    r = _e51, a = o, h = this._workCell.fg, c = this._workCell.bg;\n                  }\n                  o += this._workCell.getChars().length || n.WHITESPACE_CELL_CHAR.length;\n                }\n                if (this._bufferService.cols - r > 1) {\n                  var _e46 = this._getJoinedRanges(s, a, o, t, r);\n                  for (var _t27 = 0; _t27 < _e46.length; _t27++) i.push(_e46[_t27]);\n                }\n                return i;\n              }\n            }, {\n              key: \"_getJoinedRanges\",\n              value: function _getJoinedRanges(t, i, s, r, o) {\n                var n = t.substring(i, s);\n                var a = [];\n                try {\n                  a = this._characterJoiners[0].handler(n);\n                } catch (_e47) {\n                  console.error(_e47);\n                }\n                for (var _t28 = 1; _t28 < this._characterJoiners.length; _t28++) try {\n                  var _i22 = this._characterJoiners[_t28].handler(n);\n                  for (var _t29 = 0; _t29 < _i22.length; _t29++) e._mergeRanges(a, _i22[_t29]);\n                } catch (_e48) {\n                  console.error(_e48);\n                }\n                return this._stringRangesToCellRanges(a, r, o), a;\n              }\n            }, {\n              key: \"_stringRangesToCellRanges\",\n              value: function _stringRangesToCellRanges(_e49, t, i) {\n                var s = 0,\n                  r = !1,\n                  o = 0,\n                  a = _e49[s];\n                if (a) {\n                  for (var _h4 = i; _h4 < this._bufferService.cols; _h4++) {\n                    var _i23 = t.getWidth(_h4),\n                      _c7 = t.getString(_h4).length || n.WHITESPACE_CELL_CHAR.length;\n                    if (0 !== _i23) {\n                      if (!r && a[0] <= o && (a[0] = _h4, r = !0), a[1] <= o) {\n                        if (a[1] = _h4, a = _e49[++s], !a) break;\n                        a[0] <= o ? (a[0] = _h4, r = !0) : r = !1;\n                      }\n                      o += _c7;\n                    }\n                  }\n                  a && (a[1] = this._bufferService.cols);\n                }\n              }\n            }], [{\n              key: \"_mergeRanges\",\n              value: function _mergeRanges(_e50, t) {\n                var i = !1;\n                for (var _s13 = 0; _s13 < _e50.length; _s13++) {\n                  var _r13 = _e50[_s13];\n                  if (i) {\n                    if (t[1] <= _r13[0]) return _e50[_s13 - 1][1] = t[1], _e50;\n                    if (t[1] <= _r13[1]) return _e50[_s13 - 1][1] = Math.max(t[1], _r13[1]), _e50.splice(_s13, 1), _e50;\n                    _e50.splice(_s13, 1), _s13--;\n                  } else {\n                    if (t[1] <= _r13[0]) return _e50.splice(_s13, 0, t), _e50;\n                    if (t[1] <= _r13[1]) return _r13[0] = Math.min(t[0], _r13[0]), _e50;\n                    t[0] < _r13[1] && (_r13[0] = Math.min(t[0], _r13[0]), i = !0);\n                  }\n                }\n                return i ? _e50[_e50.length - 1][1] = t[1] : _e50.push(t), _e50;\n              }\n            }]);\n            return e;\n          }();\n          l = s([r(0, h.IBufferService)], l), t.CharacterJoinerService = l;\n        },\n        160: function _(e, t, i) {\n          Object.defineProperty(t, \"__esModule\", {\n            value: !0\n          }), t.contrastRatio = t.toPaddedHex = t.rgba = t.rgb = t.css = t.color = t.channels = t.NULL_COLOR = void 0;\n          var s = i(399);\n          var r = 0,\n            o = 0,\n            n = 0,\n            a = 0;\n          var h, c, l;\n          function d(e) {\n            var t = e.toString(16);\n            return t.length < 2 ? \"0\" + t : t;\n          }\n          function _(e, t) {\n            return e < t ? (t + .05) / (e + .05) : (e + .05) / (t + .05);\n          }\n          t.NULL_COLOR = {\n            css: \"#00000000\",\n            rgba: 0\n          }, function (e) {\n            e.toCss = function (e, t, i, s) {\n              return void 0 !== s ? \"#\".concat(d(e)).concat(d(t)).concat(d(i)).concat(d(s)) : \"#\".concat(d(e)).concat(d(t)).concat(d(i));\n            }, e.toRgba = function (e, t, i) {\n              var s = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 255;\n              return (e << 24 | t << 16 | i << 8 | s) >>> 0;\n            };\n          }(h = t.channels || (t.channels = {})), function (e) {\n            function t(e, t) {\n              var _l$toChannels, _l$toChannels2;\n              return a = Math.round(255 * t), (_l$toChannels = l.toChannels(e.rgba), _l$toChannels2 = _slicedToArray(_l$toChannels, 3), r = _l$toChannels2[0], o = _l$toChannels2[1], n = _l$toChannels2[2]), {\n                css: h.toCss(r, o, n, a),\n                rgba: h.toRgba(r, o, n, a)\n              };\n            }\n            e.blend = function (e, t) {\n              if (a = (255 & t.rgba) / 255, 1 === a) return {\n                css: t.css,\n                rgba: t.rgba\n              };\n              var i = t.rgba >> 24 & 255,\n                s = t.rgba >> 16 & 255,\n                c = t.rgba >> 8 & 255,\n                l = e.rgba >> 24 & 255,\n                d = e.rgba >> 16 & 255,\n                _ = e.rgba >> 8 & 255;\n              return r = l + Math.round((i - l) * a), o = d + Math.round((s - d) * a), n = _ + Math.round((c - _) * a), {\n                css: h.toCss(r, o, n),\n                rgba: h.toRgba(r, o, n)\n              };\n            }, e.isOpaque = function (e) {\n              return 255 == (255 & e.rgba);\n            }, e.ensureContrastRatio = function (e, t, i) {\n              var s = l.ensureContrastRatio(e.rgba, t.rgba, i);\n              if (s) return l.toColor(s >> 24 & 255, s >> 16 & 255, s >> 8 & 255);\n            }, e.opaque = function (e) {\n              var _l$toChannels3, _l$toChannels4;\n              var t = (255 | e.rgba) >>> 0;\n              return (_l$toChannels3 = l.toChannels(t), _l$toChannels4 = _slicedToArray(_l$toChannels3, 3), r = _l$toChannels4[0], o = _l$toChannels4[1], n = _l$toChannels4[2]), {\n                css: h.toCss(r, o, n),\n                rgba: t\n              };\n            }, e.opacity = t, e.multiplyOpacity = function (e, i) {\n              return a = 255 & e.rgba, t(e, a * i / 255);\n            }, e.toColorRGB = function (e) {\n              return [e.rgba >> 24 & 255, e.rgba >> 16 & 255, e.rgba >> 8 & 255];\n            };\n          }(t.color || (t.color = {})), function (e) {\n            var t, i;\n            if (!s.isNode) {\n              var _e52 = document.createElement(\"canvas\");\n              _e52.width = 1, _e52.height = 1;\n              var _s14 = _e52.getContext(\"2d\", {\n                willReadFrequently: !0\n              });\n              _s14 && (t = _s14, t.globalCompositeOperation = \"copy\", i = t.createLinearGradient(0, 0, 1, 1));\n            }\n            e.toColor = function (e) {\n              var _t$getImageData$data;\n              if (e.match(/#[\\da-f]{3,8}/i)) switch (e.length) {\n                case 4:\n                  return r = parseInt(e.slice(1, 2).repeat(2), 16), o = parseInt(e.slice(2, 3).repeat(2), 16), n = parseInt(e.slice(3, 4).repeat(2), 16), l.toColor(r, o, n);\n                case 5:\n                  return r = parseInt(e.slice(1, 2).repeat(2), 16), o = parseInt(e.slice(2, 3).repeat(2), 16), n = parseInt(e.slice(3, 4).repeat(2), 16), a = parseInt(e.slice(4, 5).repeat(2), 16), l.toColor(r, o, n, a);\n                case 7:\n                  return {\n                    css: e,\n                    rgba: (parseInt(e.slice(1), 16) << 8 | 255) >>> 0\n                  };\n                case 9:\n                  return {\n                    css: e,\n                    rgba: parseInt(e.slice(1), 16) >>> 0\n                  };\n              }\n              var s = e.match(/rgba?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*(,\\s*(0|1|\\d?\\.(\\d+))\\s*)?\\)/);\n              if (s) return r = parseInt(s[1]), o = parseInt(s[2]), n = parseInt(s[3]), a = Math.round(255 * (void 0 === s[5] ? 1 : parseFloat(s[5]))), l.toColor(r, o, n, a);\n              if (!t || !i) throw new Error(\"css.toColor: Unsupported css format\");\n              if (t.fillStyle = i, t.fillStyle = e, \"string\" != typeof t.fillStyle) throw new Error(\"css.toColor: Unsupported css format\");\n              if (t.fillRect(0, 0, 1, 1), (_t$getImageData$data = _slicedToArray(t.getImageData(0, 0, 1, 1).data, 4), r = _t$getImageData$data[0], o = _t$getImageData$data[1], n = _t$getImageData$data[2], a = _t$getImageData$data[3]), 255 !== a) throw new Error(\"css.toColor: Unsupported css format\");\n              return {\n                rgba: h.toRgba(r, o, n, a),\n                css: e\n              };\n            };\n          }(t.css || (t.css = {})), function (e) {\n            function t(e, t, i) {\n              var s = e / 255,\n                r = t / 255,\n                o = i / 255;\n              return .2126 * (s <= .03928 ? s / 12.92 : Math.pow((s + .055) / 1.055, 2.4)) + .7152 * (r <= .03928 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4)) + .0722 * (o <= .03928 ? o / 12.92 : Math.pow((o + .055) / 1.055, 2.4));\n            }\n            e.relativeLuminance = function (e) {\n              return t(e >> 16 & 255, e >> 8 & 255, 255 & e);\n            }, e.relativeLuminance2 = t;\n          }(c = t.rgb || (t.rgb = {})), function (e) {\n            function t(e, t, i) {\n              var s = e >> 24 & 255,\n                r = e >> 16 & 255,\n                o = e >> 8 & 255;\n              var n = t >> 24 & 255,\n                a = t >> 16 & 255,\n                h = t >> 8 & 255,\n                l = _(c.relativeLuminance2(n, a, h), c.relativeLuminance2(s, r, o));\n              for (; l < i && (n > 0 || a > 0 || h > 0);) n -= Math.max(0, Math.ceil(.1 * n)), a -= Math.max(0, Math.ceil(.1 * a)), h -= Math.max(0, Math.ceil(.1 * h)), l = _(c.relativeLuminance2(n, a, h), c.relativeLuminance2(s, r, o));\n              return (n << 24 | a << 16 | h << 8 | 255) >>> 0;\n            }\n            function i(e, t, i) {\n              var s = e >> 24 & 255,\n                r = e >> 16 & 255,\n                o = e >> 8 & 255;\n              var n = t >> 24 & 255,\n                a = t >> 16 & 255,\n                h = t >> 8 & 255,\n                l = _(c.relativeLuminance2(n, a, h), c.relativeLuminance2(s, r, o));\n              for (; l < i && (n < 255 || a < 255 || h < 255);) n = Math.min(255, n + Math.ceil(.1 * (255 - n))), a = Math.min(255, a + Math.ceil(.1 * (255 - a))), h = Math.min(255, h + Math.ceil(.1 * (255 - h))), l = _(c.relativeLuminance2(n, a, h), c.relativeLuminance2(s, r, o));\n              return (n << 24 | a << 16 | h << 8 | 255) >>> 0;\n            }\n            e.ensureContrastRatio = function (e, s, r) {\n              var o = c.relativeLuminance(e >> 8),\n                n = c.relativeLuminance(s >> 8);\n              if (_(o, n) < r) {\n                if (n < o) {\n                  var _n9 = t(e, s, r),\n                    _a7 = _(o, c.relativeLuminance(_n9 >> 8));\n                  if (_a7 < r) {\n                    var _t30 = i(e, s, r);\n                    return _a7 > _(o, c.relativeLuminance(_t30 >> 8)) ? _n9 : _t30;\n                  }\n                  return _n9;\n                }\n                var _a8 = i(e, s, r),\n                  _h5 = _(o, c.relativeLuminance(_a8 >> 8));\n                if (_h5 < r) {\n                  var _i24 = t(e, s, r);\n                  return _h5 > _(o, c.relativeLuminance(_i24 >> 8)) ? _a8 : _i24;\n                }\n                return _a8;\n              }\n            }, e.reduceLuminance = t, e.increaseLuminance = i, e.toChannels = function (e) {\n              return [e >> 24 & 255, e >> 16 & 255, e >> 8 & 255, 255 & e];\n            }, e.toColor = function (e, t, i, s) {\n              return {\n                css: h.toCss(e, t, i, s),\n                rgba: h.toRgba(e, t, i, s)\n              };\n            };\n          }(l = t.rgba || (t.rgba = {})), t.toPaddedHex = d, t.contrastRatio = _;\n        },\n        345: function _(e, t) {\n          Object.defineProperty(t, \"__esModule\", {\n            value: !0\n          }), t.forwardEvent = t.EventEmitter = void 0, t.EventEmitter = /*#__PURE__*/function () {\n            function _class3() {\n              _classCallCheck(this, _class3);\n              this._listeners = [], this._disposed = !1;\n            }\n            _createClass(_class3, [{\n              key: \"event\",\n              get: function get() {\n                var _this17 = this;\n                return this._event || (this._event = function (e) {\n                  return _this17._listeners.push(e), {\n                    dispose: function dispose() {\n                      if (!_this17._disposed) for (var _t31 = 0; _t31 < _this17._listeners.length; _t31++) if (_this17._listeners[_t31] === e) return void _this17._listeners.splice(_t31, 1);\n                    }\n                  };\n                }), this._event;\n              }\n            }, {\n              key: \"fire\",\n              value: function fire(e, t) {\n                var i = [];\n                for (var _e53 = 0; _e53 < this._listeners.length; _e53++) i.push(this._listeners[_e53]);\n                for (var _s15 = 0; _s15 < i.length; _s15++) i[_s15].call(void 0, e, t);\n              }\n            }, {\n              key: \"dispose\",\n              value: function dispose() {\n                this._listeners && (this._listeners.length = 0), this._disposed = !0;\n              }\n            }]);\n            return _class3;\n          }(), t.forwardEvent = function (e, t) {\n            return e(function (e) {\n              return t.fire(e);\n            });\n          };\n        },\n        859: function _(e, t) {\n          function i(e) {\n            var _iterator19 = _createForOfIteratorHelper(e),\n              _step19;\n            try {\n              for (_iterator19.s(); !(_step19 = _iterator19.n()).done;) {\n                var _t32 = _step19.value;\n                _t32.dispose();\n              }\n            } catch (err) {\n              _iterator19.e(err);\n            } finally {\n              _iterator19.f();\n            }\n            e.length = 0;\n          }\n          Object.defineProperty(t, \"__esModule\", {\n            value: !0\n          }), t.getDisposeArrayDisposable = t.disposeArray = t.toDisposable = t.Disposable = void 0, t.Disposable = /*#__PURE__*/function () {\n            function _class4() {\n              _classCallCheck(this, _class4);\n              this._disposables = [], this._isDisposed = !1;\n            }\n            _createClass(_class4, [{\n              key: \"dispose\",\n              value: function dispose() {\n                this._isDisposed = !0;\n                var _iterator20 = _createForOfIteratorHelper(this._disposables),\n                  _step20;\n                try {\n                  for (_iterator20.s(); !(_step20 = _iterator20.n()).done;) {\n                    var _e54 = _step20.value;\n                    _e54.dispose();\n                  }\n                } catch (err) {\n                  _iterator20.e(err);\n                } finally {\n                  _iterator20.f();\n                }\n                this._disposables.length = 0;\n              }\n            }, {\n              key: \"register\",\n              value: function register(e) {\n                return this._disposables.push(e), e;\n              }\n            }, {\n              key: \"unregister\",\n              value: function unregister(e) {\n                var t = this._disposables.indexOf(e);\n                -1 !== t && this._disposables.splice(t, 1);\n              }\n            }]);\n            return _class4;\n          }(), t.toDisposable = function (e) {\n            return {\n              dispose: e\n            };\n          }, t.disposeArray = i, t.getDisposeArrayDisposable = function (e) {\n            return {\n              dispose: function dispose() {\n                return i(e);\n              }\n            };\n          };\n        },\n        485: function _(e, t) {\n          Object.defineProperty(t, \"__esModule\", {\n            value: !0\n          }), t.FourKeyMap = t.TwoKeyMap = void 0;\n          var i = /*#__PURE__*/function () {\n            function i() {\n              _classCallCheck(this, i);\n              this._data = {};\n            }\n            _createClass(i, [{\n              key: \"set\",\n              value: function set(e, t, _i25) {\n                this._data[e] || (this._data[e] = {}), this._data[e][t] = _i25;\n              }\n            }, {\n              key: \"get\",\n              value: function get(e, t) {\n                return this._data[e] ? this._data[e][t] : void 0;\n              }\n            }, {\n              key: \"clear\",\n              value: function clear() {\n                this._data = {};\n              }\n            }]);\n            return i;\n          }();\n          t.TwoKeyMap = i, t.FourKeyMap = /*#__PURE__*/function () {\n            function _class5() {\n              _classCallCheck(this, _class5);\n              this._data = new i();\n            }\n            _createClass(_class5, [{\n              key: \"set\",\n              value: function set(e, t, s, r, o) {\n                this._data.get(e, t) || this._data.set(e, t, new i()), this._data.get(e, t).set(s, r, o);\n              }\n            }, {\n              key: \"get\",\n              value: function get(e, t, i, s) {\n                var r;\n                return null === (r = this._data.get(e, t)) || void 0 === r ? void 0 : r.get(i, s);\n              }\n            }, {\n              key: \"clear\",\n              value: function clear() {\n                this._data.clear();\n              }\n            }]);\n            return _class5;\n          }();\n        },\n        399: function _(e, t) {\n          Object.defineProperty(t, \"__esModule\", {\n            value: !0\n          }), t.isChromeOS = t.isLinux = t.isWindows = t.isIphone = t.isIpad = t.isMac = t.getSafariVersion = t.isSafari = t.isLegacyEdge = t.isFirefox = t.isNode = void 0, t.isNode = \"undefined\" == typeof navigator;\n          var i = t.isNode ? \"node\" : navigator.userAgent,\n            s = t.isNode ? \"node\" : navigator.platform;\n          t.isFirefox = i.includes(\"Firefox\"), t.isLegacyEdge = i.includes(\"Edge\"), t.isSafari = /^((?!chrome|android).)*safari/i.test(i), t.getSafariVersion = function () {\n            if (!t.isSafari) return 0;\n            var e = i.match(/Version\\/(\\d+)/);\n            return null === e || e.length < 2 ? 0 : parseInt(e[1]);\n          }, t.isMac = [\"Macintosh\", \"MacIntel\", \"MacPPC\", \"Mac68K\"].includes(s), t.isIpad = \"iPad\" === s, t.isIphone = \"iPhone\" === s, t.isWindows = [\"Windows\", \"Win16\", \"Win32\", \"WinCE\"].includes(s), t.isLinux = s.indexOf(\"Linux\") >= 0, t.isChromeOS = /\\bCrOS\\b/.test(i);\n        },\n        385: function _(e, t, i) {\n          Object.defineProperty(t, \"__esModule\", {\n            value: !0\n          }), t.DebouncedIdleTask = t.IdleTaskQueue = t.PriorityTaskQueue = void 0;\n          var s = i(399);\n          var r = /*#__PURE__*/function () {\n            function r() {\n              _classCallCheck(this, r);\n              this._tasks = [], this._i = 0;\n            }\n            _createClass(r, [{\n              key: \"enqueue\",\n              value: function enqueue(e) {\n                this._tasks.push(e), this._start();\n              }\n            }, {\n              key: \"flush\",\n              value: function flush() {\n                for (; this._i < this._tasks.length;) this._tasks[this._i]() || this._i++;\n                this.clear();\n              }\n            }, {\n              key: \"clear\",\n              value: function clear() {\n                this._idleCallback && (this._cancelCallback(this._idleCallback), this._idleCallback = void 0), this._i = 0, this._tasks.length = 0;\n              }\n            }, {\n              key: \"_start\",\n              value: function _start() {\n                this._idleCallback || (this._idleCallback = this._requestCallback(this._process.bind(this)));\n              }\n            }, {\n              key: \"_process\",\n              value: function _process(e) {\n                this._idleCallback = void 0;\n                var t = 0,\n                  i = 0,\n                  s = e.timeRemaining(),\n                  _r14 = 0;\n                for (; this._i < this._tasks.length;) {\n                  if (t = Date.now(), this._tasks[this._i]() || this._i++, t = Math.max(1, Date.now() - t), i = Math.max(t, i), _r14 = e.timeRemaining(), 1.5 * i > _r14) return s - t < -20 && console.warn(\"task queue exceeded allotted deadline by \".concat(Math.abs(Math.round(s - t)), \"ms\")), void this._start();\n                  s = _r14;\n                }\n                this.clear();\n              }\n            }]);\n            return r;\n          }();\n          var o = /*#__PURE__*/function (_r15) {\n            _inherits(o, _r15);\n            var _super8 = _createSuper(o);\n            function o() {\n              _classCallCheck(this, o);\n              return _super8.apply(this, arguments);\n            }\n            _createClass(o, [{\n              key: \"_requestCallback\",\n              value: function _requestCallback(e) {\n                var _this18 = this;\n                return setTimeout(function () {\n                  return e(_this18._createDeadline(16));\n                });\n              }\n            }, {\n              key: \"_cancelCallback\",\n              value: function _cancelCallback(e) {\n                clearTimeout(e);\n              }\n            }, {\n              key: \"_createDeadline\",\n              value: function _createDeadline(e) {\n                var t = Date.now() + e;\n                return {\n                  timeRemaining: function timeRemaining() {\n                    return Math.max(0, t - Date.now());\n                  }\n                };\n              }\n            }]);\n            return o;\n          }(r);\n          t.PriorityTaskQueue = o, t.IdleTaskQueue = !s.isNode && \"requestIdleCallback\" in window ? /*#__PURE__*/function (_r16) {\n            _inherits(_class6, _r16);\n            var _super9 = _createSuper(_class6);\n            function _class6() {\n              _classCallCheck(this, _class6);\n              return _super9.apply(this, arguments);\n            }\n            _createClass(_class6, [{\n              key: \"_requestCallback\",\n              value: function _requestCallback(e) {\n                return requestIdleCallback(e);\n              }\n            }, {\n              key: \"_cancelCallback\",\n              value: function _cancelCallback(e) {\n                cancelIdleCallback(e);\n              }\n            }]);\n            return _class6;\n          }(r) : o, t.DebouncedIdleTask = /*#__PURE__*/function () {\n            function _class7() {\n              _classCallCheck(this, _class7);\n              this._queue = new t.IdleTaskQueue();\n            }\n            _createClass(_class7, [{\n              key: \"set\",\n              value: function set(e) {\n                this._queue.clear(), this._queue.enqueue(e);\n              }\n            }, {\n              key: \"flush\",\n              value: function flush() {\n                this._queue.flush();\n              }\n            }]);\n            return _class7;\n          }();\n        },\n        147: function _(e, t) {\n          Object.defineProperty(t, \"__esModule\", {\n            value: !0\n          }), t.ExtendedAttrs = t.AttributeData = void 0;\n          var i = /*#__PURE__*/function () {\n            function i() {\n              _classCallCheck(this, i);\n              this.fg = 0, this.bg = 0, this.extended = new s();\n            }\n            _createClass(i, [{\n              key: \"clone\",\n              value: function clone() {\n                var e = new i();\n                return e.fg = this.fg, e.bg = this.bg, e.extended = this.extended.clone(), e;\n              }\n            }, {\n              key: \"isInverse\",\n              value: function isInverse() {\n                return 67108864 & this.fg;\n              }\n            }, {\n              key: \"isBold\",\n              value: function isBold() {\n                return 134217728 & this.fg;\n              }\n            }, {\n              key: \"isUnderline\",\n              value: function isUnderline() {\n                return this.hasExtendedAttrs() && 0 !== this.extended.underlineStyle ? 1 : 268435456 & this.fg;\n              }\n            }, {\n              key: \"isBlink\",\n              value: function isBlink() {\n                return 536870912 & this.fg;\n              }\n            }, {\n              key: \"isInvisible\",\n              value: function isInvisible() {\n                return 1073741824 & this.fg;\n              }\n            }, {\n              key: \"isItalic\",\n              value: function isItalic() {\n                return 67108864 & this.bg;\n              }\n            }, {\n              key: \"isDim\",\n              value: function isDim() {\n                return 134217728 & this.bg;\n              }\n            }, {\n              key: \"isStrikethrough\",\n              value: function isStrikethrough() {\n                return 2147483648 & this.fg;\n              }\n            }, {\n              key: \"isProtected\",\n              value: function isProtected() {\n                return 536870912 & this.bg;\n              }\n            }, {\n              key: \"getFgColorMode\",\n              value: function getFgColorMode() {\n                return 50331648 & this.fg;\n              }\n            }, {\n              key: \"getBgColorMode\",\n              value: function getBgColorMode() {\n                return 50331648 & this.bg;\n              }\n            }, {\n              key: \"isFgRGB\",\n              value: function isFgRGB() {\n                return 50331648 == (50331648 & this.fg);\n              }\n            }, {\n              key: \"isBgRGB\",\n              value: function isBgRGB() {\n                return 50331648 == (50331648 & this.bg);\n              }\n            }, {\n              key: \"isFgPalette\",\n              value: function isFgPalette() {\n                return 16777216 == (50331648 & this.fg) || 33554432 == (50331648 & this.fg);\n              }\n            }, {\n              key: \"isBgPalette\",\n              value: function isBgPalette() {\n                return 16777216 == (50331648 & this.bg) || 33554432 == (50331648 & this.bg);\n              }\n            }, {\n              key: \"isFgDefault\",\n              value: function isFgDefault() {\n                return 0 == (50331648 & this.fg);\n              }\n            }, {\n              key: \"isBgDefault\",\n              value: function isBgDefault() {\n                return 0 == (50331648 & this.bg);\n              }\n            }, {\n              key: \"isAttributeDefault\",\n              value: function isAttributeDefault() {\n                return 0 === this.fg && 0 === this.bg;\n              }\n            }, {\n              key: \"getFgColor\",\n              value: function getFgColor() {\n                switch (50331648 & this.fg) {\n                  case 16777216:\n                  case 33554432:\n                    return 255 & this.fg;\n                  case 50331648:\n                    return 16777215 & this.fg;\n                  default:\n                    return -1;\n                }\n              }\n            }, {\n              key: \"getBgColor\",\n              value: function getBgColor() {\n                switch (50331648 & this.bg) {\n                  case 16777216:\n                  case 33554432:\n                    return 255 & this.bg;\n                  case 50331648:\n                    return 16777215 & this.bg;\n                  default:\n                    return -1;\n                }\n              }\n            }, {\n              key: \"hasExtendedAttrs\",\n              value: function hasExtendedAttrs() {\n                return 268435456 & this.bg;\n              }\n            }, {\n              key: \"updateExtended\",\n              value: function updateExtended() {\n                this.extended.isEmpty() ? this.bg &= -268435457 : this.bg |= 268435456;\n              }\n            }, {\n              key: \"getUnderlineColor\",\n              value: function getUnderlineColor() {\n                if (268435456 & this.bg && ~this.extended.underlineColor) switch (50331648 & this.extended.underlineColor) {\n                  case 16777216:\n                  case 33554432:\n                    return 255 & this.extended.underlineColor;\n                  case 50331648:\n                    return 16777215 & this.extended.underlineColor;\n                  default:\n                    return this.getFgColor();\n                }\n                return this.getFgColor();\n              }\n            }, {\n              key: \"getUnderlineColorMode\",\n              value: function getUnderlineColorMode() {\n                return 268435456 & this.bg && ~this.extended.underlineColor ? 50331648 & this.extended.underlineColor : this.getFgColorMode();\n              }\n            }, {\n              key: \"isUnderlineColorRGB\",\n              value: function isUnderlineColorRGB() {\n                return 268435456 & this.bg && ~this.extended.underlineColor ? 50331648 == (50331648 & this.extended.underlineColor) : this.isFgRGB();\n              }\n            }, {\n              key: \"isUnderlineColorPalette\",\n              value: function isUnderlineColorPalette() {\n                return 268435456 & this.bg && ~this.extended.underlineColor ? 16777216 == (50331648 & this.extended.underlineColor) || 33554432 == (50331648 & this.extended.underlineColor) : this.isFgPalette();\n              }\n            }, {\n              key: \"isUnderlineColorDefault\",\n              value: function isUnderlineColorDefault() {\n                return 268435456 & this.bg && ~this.extended.underlineColor ? 0 == (50331648 & this.extended.underlineColor) : this.isFgDefault();\n              }\n            }, {\n              key: \"getUnderlineStyle\",\n              value: function getUnderlineStyle() {\n                return 268435456 & this.fg ? 268435456 & this.bg ? this.extended.underlineStyle : 1 : 0;\n              }\n            }], [{\n              key: \"toColorRGB\",\n              value: function toColorRGB(e) {\n                return [e >>> 16 & 255, e >>> 8 & 255, 255 & e];\n              }\n            }, {\n              key: \"fromColorRGB\",\n              value: function fromColorRGB(e) {\n                return (255 & e[0]) << 16 | (255 & e[1]) << 8 | 255 & e[2];\n              }\n            }]);\n            return i;\n          }();\n          t.AttributeData = i;\n          var s = /*#__PURE__*/function () {\n            function s() {\n              var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n              var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n              _classCallCheck(this, s);\n              this._ext = 0, this._urlId = 0, this._ext = e, this._urlId = t;\n            }\n            _createClass(s, [{\n              key: \"ext\",\n              get: function get() {\n                return this._urlId ? -469762049 & this._ext | this.underlineStyle << 26 : this._ext;\n              },\n              set: function set(e) {\n                this._ext = e;\n              }\n            }, {\n              key: \"underlineStyle\",\n              get: function get() {\n                return this._urlId ? 5 : (469762048 & this._ext) >> 26;\n              },\n              set: function set(e) {\n                this._ext &= -469762049, this._ext |= e << 26 & 469762048;\n              }\n            }, {\n              key: \"underlineColor\",\n              get: function get() {\n                return 67108863 & this._ext;\n              },\n              set: function set(e) {\n                this._ext &= -67108864, this._ext |= 67108863 & e;\n              }\n            }, {\n              key: \"urlId\",\n              get: function get() {\n                return this._urlId;\n              },\n              set: function set(e) {\n                this._urlId = e;\n              }\n            }, {\n              key: \"clone\",\n              value: function clone() {\n                return new s(this._ext, this._urlId);\n              }\n            }, {\n              key: \"isEmpty\",\n              value: function isEmpty() {\n                return 0 === this.underlineStyle && 0 === this._urlId;\n              }\n            }]);\n            return s;\n          }();\n          t.ExtendedAttrs = s;\n        },\n        782: function _(e, t, i) {\n          Object.defineProperty(t, \"__esModule\", {\n            value: !0\n          }), t.CellData = void 0;\n          var s = i(133),\n            r = i(855),\n            o = i(147);\n          var n = /*#__PURE__*/function (_o$AttributeData2) {\n            _inherits(n, _o$AttributeData2);\n            var _super10 = _createSuper(n);\n            function n() {\n              var _this19;\n              _classCallCheck(this, n);\n              _this19 = _super10.apply(this, arguments), _this19.content = 0, _this19.fg = 0, _this19.bg = 0, _this19.extended = new o.ExtendedAttrs(), _this19.combinedData = \"\";\n              return _this19;\n            }\n            _createClass(n, [{\n              key: \"isCombined\",\n              value: function isCombined() {\n                return 2097152 & this.content;\n              }\n            }, {\n              key: \"getWidth\",\n              value: function getWidth() {\n                return this.content >> 22;\n              }\n            }, {\n              key: \"getChars\",\n              value: function getChars() {\n                return 2097152 & this.content ? this.combinedData : 2097151 & this.content ? (0, s.stringFromCodePoint)(2097151 & this.content) : \"\";\n              }\n            }, {\n              key: \"getCode\",\n              value: function getCode() {\n                return this.isCombined() ? this.combinedData.charCodeAt(this.combinedData.length - 1) : 2097151 & this.content;\n              }\n            }, {\n              key: \"setFromCharData\",\n              value: function setFromCharData(e) {\n                this.fg = e[r.CHAR_DATA_ATTR_INDEX], this.bg = 0;\n                var t = !1;\n                if (e[r.CHAR_DATA_CHAR_INDEX].length > 2) t = !0;else if (2 === e[r.CHAR_DATA_CHAR_INDEX].length) {\n                  var _i26 = e[r.CHAR_DATA_CHAR_INDEX].charCodeAt(0);\n                  if (55296 <= _i26 && _i26 <= 56319) {\n                    var _s16 = e[r.CHAR_DATA_CHAR_INDEX].charCodeAt(1);\n                    56320 <= _s16 && _s16 <= 57343 ? this.content = 1024 * (_i26 - 55296) + _s16 - 56320 + 65536 | e[r.CHAR_DATA_WIDTH_INDEX] << 22 : t = !0;\n                  } else t = !0;\n                } else this.content = e[r.CHAR_DATA_CHAR_INDEX].charCodeAt(0) | e[r.CHAR_DATA_WIDTH_INDEX] << 22;\n                t && (this.combinedData = e[r.CHAR_DATA_CHAR_INDEX], this.content = 2097152 | e[r.CHAR_DATA_WIDTH_INDEX] << 22);\n              }\n            }, {\n              key: \"getAsCharData\",\n              value: function getAsCharData() {\n                return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n              }\n            }], [{\n              key: \"fromCharData\",\n              value: function fromCharData(e) {\n                var t = new n();\n                return t.setFromCharData(e), t;\n              }\n            }]);\n            return n;\n          }(o.AttributeData);\n          t.CellData = n;\n        },\n        855: function _(e, t) {\n          Object.defineProperty(t, \"__esModule\", {\n            value: !0\n          }), t.WHITESPACE_CELL_CODE = t.WHITESPACE_CELL_WIDTH = t.WHITESPACE_CELL_CHAR = t.NULL_CELL_CODE = t.NULL_CELL_WIDTH = t.NULL_CELL_CHAR = t.CHAR_DATA_CODE_INDEX = t.CHAR_DATA_WIDTH_INDEX = t.CHAR_DATA_CHAR_INDEX = t.CHAR_DATA_ATTR_INDEX = t.DEFAULT_EXT = t.DEFAULT_ATTR = t.DEFAULT_COLOR = void 0, t.DEFAULT_COLOR = 0, t.DEFAULT_ATTR = 256 | t.DEFAULT_COLOR << 9, t.DEFAULT_EXT = 0, t.CHAR_DATA_ATTR_INDEX = 0, t.CHAR_DATA_CHAR_INDEX = 1, t.CHAR_DATA_WIDTH_INDEX = 2, t.CHAR_DATA_CODE_INDEX = 3, t.NULL_CELL_CHAR = \"\", t.NULL_CELL_WIDTH = 1, t.NULL_CELL_CODE = 0, t.WHITESPACE_CELL_CHAR = \" \", t.WHITESPACE_CELL_WIDTH = 1, t.WHITESPACE_CELL_CODE = 32;\n        },\n        133: function _(e, t) {\n          Object.defineProperty(t, \"__esModule\", {\n            value: !0\n          }), t.Utf8ToUtf32 = t.StringToUtf32 = t.utf32ToString = t.stringFromCodePoint = void 0, t.stringFromCodePoint = function (e) {\n            return e > 65535 ? (e -= 65536, String.fromCharCode(55296 + (e >> 10)) + String.fromCharCode(e % 1024 + 56320)) : String.fromCharCode(e);\n          }, t.utf32ToString = function (e) {\n            var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            var i = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : e.length;\n            var s = \"\";\n            for (var r = t; r < i; ++r) {\n              var _t33 = e[r];\n              _t33 > 65535 ? (_t33 -= 65536, s += String.fromCharCode(55296 + (_t33 >> 10)) + String.fromCharCode(_t33 % 1024 + 56320)) : s += String.fromCharCode(_t33);\n            }\n            return s;\n          }, t.StringToUtf32 = /*#__PURE__*/function () {\n            function _class8() {\n              _classCallCheck(this, _class8);\n              this._interim = 0;\n            }\n            _createClass(_class8, [{\n              key: \"clear\",\n              value: function clear() {\n                this._interim = 0;\n              }\n            }, {\n              key: \"decode\",\n              value: function decode(e, t) {\n                var i = e.length;\n                if (!i) return 0;\n                var s = 0,\n                  r = 0;\n                if (this._interim) {\n                  var _i27 = e.charCodeAt(r++);\n                  56320 <= _i27 && _i27 <= 57343 ? t[s++] = 1024 * (this._interim - 55296) + _i27 - 56320 + 65536 : (t[s++] = this._interim, t[s++] = _i27), this._interim = 0;\n                }\n                for (var o = r; o < i; ++o) {\n                  var _r17 = e.charCodeAt(o);\n                  if (55296 <= _r17 && _r17 <= 56319) {\n                    if (++o >= i) return this._interim = _r17, s;\n                    var n = e.charCodeAt(o);\n                    56320 <= n && n <= 57343 ? t[s++] = 1024 * (_r17 - 55296) + n - 56320 + 65536 : (t[s++] = _r17, t[s++] = n);\n                  } else 65279 !== _r17 && (t[s++] = _r17);\n                }\n                return s;\n              }\n            }]);\n            return _class8;\n          }(), t.Utf8ToUtf32 = /*#__PURE__*/function () {\n            function _class9() {\n              _classCallCheck(this, _class9);\n              this.interim = new Uint8Array(3);\n            }\n            _createClass(_class9, [{\n              key: \"clear\",\n              value: function clear() {\n                this.interim.fill(0);\n              }\n            }, {\n              key: \"decode\",\n              value: function decode(e, t) {\n                var i = e.length;\n                if (!i) return 0;\n                var s,\n                  r,\n                  o,\n                  n,\n                  a = 0,\n                  h = 0,\n                  c = 0;\n                if (this.interim[0]) {\n                  var _s17 = !1,\n                    _r18 = this.interim[0];\n                  _r18 &= 192 == (224 & _r18) ? 31 : 224 == (240 & _r18) ? 15 : 7;\n                  var _o7,\n                    _n10 = 0;\n                  for (; (_o7 = 63 & this.interim[++_n10]) && _n10 < 4;) _r18 <<= 6, _r18 |= _o7;\n                  var _h6 = 192 == (224 & this.interim[0]) ? 2 : 224 == (240 & this.interim[0]) ? 3 : 4,\n                    _l7 = _h6 - _n10;\n                  for (; c < _l7;) {\n                    if (c >= i) return 0;\n                    if (_o7 = e[c++], 128 != (192 & _o7)) {\n                      c--, _s17 = !0;\n                      break;\n                    }\n                    this.interim[_n10++] = _o7, _r18 <<= 6, _r18 |= 63 & _o7;\n                  }\n                  _s17 || (2 === _h6 ? _r18 < 128 ? c-- : t[a++] = _r18 : 3 === _h6 ? _r18 < 2048 || _r18 >= 55296 && _r18 <= 57343 || 65279 === _r18 || (t[a++] = _r18) : _r18 < 65536 || _r18 > 1114111 || (t[a++] = _r18)), this.interim.fill(0);\n                }\n                var l = i - 4;\n                var d = c;\n                for (; d < i;) {\n                  for (; !(!(d < l) || 128 & (s = e[d]) || 128 & (r = e[d + 1]) || 128 & (o = e[d + 2]) || 128 & (n = e[d + 3]));) t[a++] = s, t[a++] = r, t[a++] = o, t[a++] = n, d += 4;\n                  if (s = e[d++], s < 128) t[a++] = s;else if (192 == (224 & s)) {\n                    if (d >= i) return this.interim[0] = s, a;\n                    if (r = e[d++], 128 != (192 & r)) {\n                      d--;\n                      continue;\n                    }\n                    if (h = (31 & s) << 6 | 63 & r, h < 128) {\n                      d--;\n                      continue;\n                    }\n                    t[a++] = h;\n                  } else if (224 == (240 & s)) {\n                    if (d >= i) return this.interim[0] = s, a;\n                    if (r = e[d++], 128 != (192 & r)) {\n                      d--;\n                      continue;\n                    }\n                    if (d >= i) return this.interim[0] = s, this.interim[1] = r, a;\n                    if (o = e[d++], 128 != (192 & o)) {\n                      d--;\n                      continue;\n                    }\n                    if (h = (15 & s) << 12 | (63 & r) << 6 | 63 & o, h < 2048 || h >= 55296 && h <= 57343 || 65279 === h) continue;\n                    t[a++] = h;\n                  } else if (240 == (248 & s)) {\n                    if (d >= i) return this.interim[0] = s, a;\n                    if (r = e[d++], 128 != (192 & r)) {\n                      d--;\n                      continue;\n                    }\n                    if (d >= i) return this.interim[0] = s, this.interim[1] = r, a;\n                    if (o = e[d++], 128 != (192 & o)) {\n                      d--;\n                      continue;\n                    }\n                    if (d >= i) return this.interim[0] = s, this.interim[1] = r, this.interim[2] = o, a;\n                    if (n = e[d++], 128 != (192 & n)) {\n                      d--;\n                      continue;\n                    }\n                    if (h = (7 & s) << 18 | (63 & r) << 12 | (63 & o) << 6 | 63 & n, h < 65536 || h > 1114111) continue;\n                    t[a++] = h;\n                  }\n                }\n                return a;\n              }\n            }]);\n            return _class9;\n          }();\n        },\n        726: function _(e, t) {\n          function i(e, t, i) {\n            t.di$target === t ? t.di$dependencies.push({\n              id: e,\n              index: i\n            }) : (t.di$dependencies = [{\n              id: e,\n              index: i\n            }], t.di$target = t);\n          }\n          Object.defineProperty(t, \"__esModule\", {\n            value: !0\n          }), t.createDecorator = t.getServiceDependencies = t.serviceRegistry = void 0, t.serviceRegistry = new Map(), t.getServiceDependencies = function (e) {\n            return e.di$dependencies || [];\n          }, t.createDecorator = function (e) {\n            if (t.serviceRegistry.has(e)) return t.serviceRegistry.get(e);\n            var s = function s(e, t, r) {\n              if (3 !== arguments.length) throw new Error(\"@IServiceName-decorator can only be used to decorate a parameter\");\n              i(s, e, r);\n            };\n            return s.toString = function () {\n              return e;\n            }, t.serviceRegistry.set(e, s), s;\n          };\n        },\n        97: function _(e, t, i) {\n          Object.defineProperty(t, \"__esModule\", {\n            value: !0\n          }), t.IDecorationService = t.IUnicodeService = t.IOscLinkService = t.IOptionsService = t.ILogService = t.LogLevelEnum = t.IInstantiationService = t.ICharsetService = t.ICoreService = t.ICoreMouseService = t.IBufferService = void 0;\n          var s = i(726);\n          var r;\n          t.IBufferService = (0, s.createDecorator)(\"BufferService\"), t.ICoreMouseService = (0, s.createDecorator)(\"CoreMouseService\"), t.ICoreService = (0, s.createDecorator)(\"CoreService\"), t.ICharsetService = (0, s.createDecorator)(\"CharsetService\"), t.IInstantiationService = (0, s.createDecorator)(\"InstantiationService\"), (r = t.LogLevelEnum || (t.LogLevelEnum = {}))[r.DEBUG = 0] = \"DEBUG\", r[r.INFO = 1] = \"INFO\", r[r.WARN = 2] = \"WARN\", r[r.ERROR = 3] = \"ERROR\", r[r.OFF = 4] = \"OFF\", t.ILogService = (0, s.createDecorator)(\"LogService\"), t.IOptionsService = (0, s.createDecorator)(\"OptionsService\"), t.IOscLinkService = (0, s.createDecorator)(\"OscLinkService\"), t.IUnicodeService = (0, s.createDecorator)(\"UnicodeService\"), t.IDecorationService = (0, s.createDecorator)(\"DecorationService\");\n        }\n      },\n      t = {};\n    function i(s) {\n      var r = t[s];\n      if (void 0 !== r) return r.exports;\n      var o = t[s] = {\n        exports: {}\n      };\n      return e[s].call(o.exports, o, o.exports, i), o.exports;\n    }\n    var s = {};\n    return function () {\n      var e = s;\n      Object.defineProperty(e, \"__esModule\", {\n        value: !0\n      }), e.CanvasAddon = void 0;\n      var t = i(949),\n        r = i(345),\n        o = i(859);\n      var n = /*#__PURE__*/function (_o$Disposable) {\n        _inherits(n, _o$Disposable);\n        var _super11 = _createSuper(n);\n        function n() {\n          var _this20;\n          _classCallCheck(this, n);\n          _this20 = _super11.apply(this, arguments), _this20._onChangeTextureAtlas = _this20.register(new r.EventEmitter()), _this20.onChangeTextureAtlas = _this20._onChangeTextureAtlas.event, _this20._onAddTextureAtlasCanvas = _this20.register(new r.EventEmitter()), _this20.onAddTextureAtlasCanvas = _this20._onAddTextureAtlasCanvas.event;\n          return _this20;\n        }\n        _createClass(n, [{\n          key: \"textureAtlas\",\n          get: function get() {\n            var e;\n            return null === (e = this._renderer) || void 0 === e ? void 0 : e.textureAtlas;\n          }\n        }, {\n          key: \"activate\",\n          value: function activate(e) {\n            var _this21 = this;\n            var i = e._core;\n            if (!e.element) return void this.register(i.onWillOpen(function () {\n              return _this21.activate(e);\n            }));\n            this._terminal = e;\n            var s = i.coreService,\n              _n11 = i.optionsService,\n              a = i.screenElement,\n              h = i.linkifier2,\n              c = i,\n              l = c._bufferService,\n              d = c._renderService,\n              _ = c._characterJoinerService,\n              u = c._charSizeService,\n              g = c._coreBrowserService,\n              f = c._decorationService,\n              v = c._themeService;\n            this._renderer = new t.CanvasRenderer(e, a, h, l, u, _n11, _, s, g, f, v), this.register((0, r.forwardEvent)(this._renderer.onChangeTextureAtlas, this._onChangeTextureAtlas)), this.register((0, r.forwardEvent)(this._renderer.onAddTextureAtlasCanvas, this._onAddTextureAtlasCanvas)), d.setRenderer(this._renderer), d.handleResize(l.cols, l.rows), this.register((0, o.toDisposable)(function () {\n              var t;\n              d.setRenderer(_this21._terminal._core._createRenderer()), d.handleResize(e.cols, e.rows), null === (t = _this21._renderer) || void 0 === t || t.dispose(), _this21._renderer = void 0;\n            }));\n          }\n        }]);\n        return n;\n      }(o.Disposable);\n      e.CanvasAddon = n;\n    }(), s;\n  }();\n});","map":{"version":3,"names":["e","t","exports","module","define","amd","CanvasAddon","self","s","i","r","o","n","a","h","c","l","d","_","u","g","_d$Disposable","_inherits","_super","_createSuper","_this","_classCallCheck","call","_terminal","_container","_alpha","_themeService","_bufferService","_optionsService","_decorationService","_coreBrowserService","_deviceCharWidth","_deviceCharHeight","_deviceCellWidth","_deviceCellHeight","_deviceCharLeft","_deviceCharTop","_selectionModel","createSelectionRenderModel","_bitmapGenerator","_onAddTextureAtlasCanvas","register","EventEmitter","onAddTextureAtlasCanvas","event","_cellColorResolver","CellColorResolver","_canvas","document","createElement","classList","add","concat","style","zIndex","toString","_initCanvas","appendChild","_refreshCharAtlas","colors","onChangeColors","reset","toDisposable","removeElementFromParent","_charAtlas","dispose","_createClass","key","get","pages","canvas","value","_ctx","throwIfFalsy","getContext","alpha","_clearAll","handleBlur","handleFocus","handleCursorMove","handleGridChanged","handleSelectionChanged","arguments","length","undefined","update","_setTransparency","cloneNode","replaceChild","rows","_charAtlasDisposable","acquireTextureAtlas","rawOptions","dpr","forwardEvent","warmUp","f","resize","device","cell","width","height","char","left","top","css","clearTextureAtlas","clearTexture","_fillCells","fillRect","_fillMiddleLineAtCells","Math","ceil","_fillBottomLineAtCells","_curlyUnderlineAtCell","save","beginPath","strokeStyle","fillStyle","lineWidth","moveTo","bezierCurveTo","stroke","restore","_dottedUnderlineAtCell","setLineDash","lineTo","closePath","_dashedUnderlineAtCell","_fillLeftLineAtCell","_strokeRectAtCell","strokeRect","clearRect","background","_clearCells","_fillCharTrueColor","font","_getFont","textBaseline","TEXT_BASELINE","_clipRow","customGlyphs","tryDrawCustomChar","getChars","fontSize","fillText","_drawChars","resolve","buffer","ydisp","getRasterizedGlyphCombinedChar","result","bg","fg","ext","getRasterizedGlyph","getCode","WHITESPACE_CELL_CODE","size","x","y","texturePage","version","refresh","drawImage","bitmap","texturePosition","offset","rect","cols","clip","fontWeightBold","fontWeight","fontFamily","Disposable","BaseRenderLayer","_state","_commitTimeout","_bitmap","_this2","isSafari","window","setTimeout","_generate","_this3","createImageBitmap","then","_a$Disposable","_super2","v","C","p","m","_this4","_screenElement","_charSizeService","_onRequestRedraw","onRequestRedraw","_onChangeTextureAtlas","onChangeTextureAtlas","allowTransparency","_renderLayers","TextRenderLayer","SelectionRenderLayer","LinkRenderLayer","CursorRenderLayer","_iterator","_createForOfIteratorHelper","_step","done","err","dimensions","createRenderDimensions","_devicePixelRatio","_updateDimensions","observeDevicePixelDimensions","_setCanvasDevicePixelDimensions","_iterator2","_step2","removeTerminalFromCache","cacheCanvas","handleDevicePixelRatioChange","handleResize","_iterator3","_step3","handleCharSizeChanged","_runOperation","selectionForeground","fire","start","end","clear","_iterator4","_step4","renderRows","_iterator5","_step5","_iterator6","_step6","hasValidSize","floor","lineHeight","round","letterSpacing","_iterator7","_step7","_requestRedrawViewport","CanvasRenderer","_s$BaseRenderLayer","_super3","_this5","_coreService","_cell","CellData","isFocused","_cursorRenderers","bar","_renderBarCursor","bind","_assertThisInitialized","block","_renderBlockCursor","underline","_renderUnderlineCursor","onOptionChange","_handleOptionsChanged","_cursorBlinkStateManager","_get","_getPrototypeOf","prototype","_clearCursor","restartBlinkAnimation","pause","resume","_this6","cursorBlink","_render","isPaused","isCursorInitialized","isCursorHidden","ybase","min","lines","loadCell","content","cursor","cursorStyle","_renderBlurCursor","getWidth","isCursorVisible","cursorWidth","cursorAccent","_renderCallback","_restartInterval","_blinkStartTimeout","_blinkInterval","clearInterval","clearTimeout","_animationFrame","cancelAnimationFrame","_this7","_animationTimeRestarted","Date","now","requestAnimationFrame","_this8","setInterval","GridCache","_class","cache","push","_s$BaseRenderLayer2","_super4","_this9","onShowLinkUnderline","_handleShowLinkUnderline","onHideLinkUnderline","_handleHideLinkUnderline","_clearCurrentLink","x1","y1","y2","x2","INVERTED_DEFAULT_COLOR","is256Color","ansi","foreground","_s$BaseRenderLayer3","_super5","_this10","_clearState","columnSelectMode","selectionStart","selectionEnd","_redrawSelection","_didStateChange","max","selectionBackgroundTransparent","selectionInactiveBackgroundTransparent","_areCoordinatesEqual","_r$BaseRenderLayer","_super6","_this11","_characterJoinerService","_characterWidth","_characterFont","_characterOverlapCache","_workCell","onSpecificOptionChange","_forEachCell","getJoinedCharacters","shift","JoinedCellData","translateToString","_isOverlapping","getCodePoint","NULL_CELL_CODE","_drawBackground","_this12","isInverse","isFgDefault","isFgRGB","AttributeData","toColorRGB","getFgColor","join","isBgRGB","getBgColor","isBgPalette","isDim","color","multiplyOpacity","toColor","forEachDecorationAtCell","options","layer","backgroundColorRGB","_drawForeground","_this13","beginFrame","hasOwnProperty","measureText","_len","Array","_key","_i6","_e17","parentElement","removeChild","_class2","_selectionRenderModel","extended","rgba","foregroundColorRGB","isCellSelected","selectionBackgroundOpaque","selectionInactiveBackgroundOpaque","generateConfig","ownedBy","indexOf","configEquals","config","atlas","splice","_core","TextureAtlas","unicodeService","NULL_COLOR","slice","contrastCache","devicePixelRatio","deviceCellWidth","deviceCellHeight","deviceCharWidth","deviceCharHeight","drawBoldTextInBrightColors","minimumContrastRatio","DIM_OPACITY","isFirefox","isLegacyEdge","blockElementDefinitions","w","boxDrawingDefinitions","powerlineDefinitions","type","rightPadding","leftPadding","Map","set","Error","ImageData","startsWith","parseInt","_c$substring$split$ma","substring","split","map","parseFloat","_c$substring$split$ma2","data","putImageData","createPattern","_i13","_Object$entries","Object","entries","_Object$entries$_i","_slicedToArray","Number","_iterator8","_step8","console","error","Path2D","_iterator9","_step9","fill","L","M","ResizeObserver","find","target","disconnect","devicePixelContentBoxSize","inlineSize","blockSize","observe","box","isPowerlineGlyph","isRestrictedPowerlineGlyph","excludeFromContrastRatioDemands","hasSelection","viewportStartRow","viewportEndRow","viewportCappedStartRow","viewportCappedEndRow","startCol","endCol","active","viewportY","texturePositionClipSpace","sizeClipSpace","_document","_config","_unicodeService","_didWarmUp","_cacheMap","FourKeyMap","_cacheMapCombined","_pages","_activePages","_workBoundingBox","bottom","right","_workAttributeData","_textureSize","_onRemoveTextureAtlasCanvas","onRemoveTextureAtlasCanvas","_requestClearModel","_createNewPage","_tmpCanvas","_tmpCtx","willReadFrequently","_iterator10","_step10","remove","_doWarmUp","_this14","IdleTaskQueue","_loop","_t11","enqueue","DEFAULT_COLOR","DEFAULT_EXT","_drawToCache","currentRow","_iterator11","_step11","_this15","maxAtlasPages","queueMicrotask","filter","maxTextureSize","sort","percentageUsed","glyphs","_mergePages","_deletePage","_iterator12","_step12","_step12$value","ctx","_iterator13","_step13","_iterator14","_step14","_getFromCacheMap","_getColorFromAnsiIndex","_getBackgroundColor","blend","_getForegroundColor","_getMinimumContrastColor","opaque","_resolveBackgroundRgba","_resolveForegroundRgba","getColor","ensureContrastRatio","setColor","String","fromCharCode","isInvisible","isBold","isItalic","isUnderline","isStrikethrough","getFgColorMode","getBgColorMode","b","globalCompositeOperation","S","charCodeAt","R","A","D","T","k","$","wcwidth","getStringCellWidth","isUnderlineColorDefault","isUnderlineColorRGB","getUnderlineColor","underlineStyle","actualBoundingBoxDescent","strokeText","getImageData","B","E","P","_findGlyphBoundingBox","I","O","_iterator15","_step15","_iterator16","fixedRows","_step16","_iterator17","_step17","addGlyph","_usedPixels","_glyphs","_iterator18","_step18","_this$_glyphs","apply","_toConsumableArray","abs","_o$AttributeData","_super7","_this16","combinedData","_width","isCombined","setFromCharData","getAsCharData","_characterJoiners","_nextCharacterJoinerId","id","handler","deregister","getFg","getBg","getTrimmedLength","_getJoinedRanges","WHITESPACE_CELL_CHAR","_mergeRanges","_stringRangesToCellRanges","getString","IBufferService","CharacterJoinerService","toCss","toRgba","channels","_l$toChannels","_l$toChannels2","toChannels","isOpaque","_l$toChannels3","_l$toChannels4","opacity","isNode","createLinearGradient","_t$getImageData$data","match","repeat","pow","relativeLuminance","relativeLuminance2","rgb","reduceLuminance","increaseLuminance","toPaddedHex","contrastRatio","_class3","_listeners","_disposed","_this17","_event","_iterator19","_step19","_class4","_disposables","_isDisposed","_iterator20","_step20","unregister","disposeArray","getDisposeArrayDisposable","_data","TwoKeyMap","_class5","navigator","userAgent","platform","includes","test","getSafariVersion","isMac","isIpad","isIphone","isWindows","isLinux","isChromeOS","_tasks","_i","_start","flush","_idleCallback","_cancelCallback","_requestCallback","_process","timeRemaining","warn","_r15","_super8","_this18","_createDeadline","PriorityTaskQueue","_r16","_class6","_super9","requestIdleCallback","cancelIdleCallback","DebouncedIdleTask","_class7","_queue","clone","hasExtendedAttrs","isBlink","isProtected","isFgPalette","isBgDefault","isAttributeDefault","updateExtended","isEmpty","underlineColor","getUnderlineColorMode","isUnderlineColorPalette","getUnderlineStyle","fromColorRGB","_ext","_urlId","ExtendedAttrs","_o$AttributeData2","_super10","_this19","stringFromCodePoint","CHAR_DATA_ATTR_INDEX","CHAR_DATA_CHAR_INDEX","CHAR_DATA_WIDTH_INDEX","fromCharData","DEFAULT_ATTR","CHAR_DATA_CODE_INDEX","NULL_CELL_CHAR","NULL_CELL_WIDTH","WHITESPACE_CELL_WIDTH","utf32ToString","StringToUtf32","_class8","_interim","decode","Utf8ToUtf32","_class9","interim","Uint8Array","di$target","di$dependencies","index","serviceRegistry","getServiceDependencies","createDecorator","has","ICoreMouseService","ICoreService","ICharsetService","IInstantiationService","LogLevelEnum","DEBUG","INFO","WARN","ERROR","OFF","ILogService","IOptionsService","IOscLinkService","IUnicodeService","IDecorationService","_o$Disposable","_super11","_this20","_renderer","textureAtlas","activate","_this21","element","onWillOpen","coreService","optionsService","screenElement","linkifier2","_renderService","setRenderer","_createRenderer"],"sources":["webpack://CanvasAddon/webpack/universalModuleDefinition","webpack://CanvasAddon/src/BaseRenderLayer.ts","webpack://CanvasAddon/src/CanvasRenderer.ts","webpack://CanvasAddon/src/CursorRenderLayer.ts","webpack://CanvasAddon/src/GridCache.ts","webpack://CanvasAddon/src/LinkRenderLayer.ts","webpack://CanvasAddon/src/SelectionRenderLayer.ts","webpack://CanvasAddon/src/TextRenderLayer.ts","webpack://CanvasAddon/src/browser/Dom.ts","webpack://CanvasAddon/src/browser/renderer/shared/CellColorResolver.ts","webpack://CanvasAddon/src/browser/renderer/shared/CharAtlasCache.ts","webpack://CanvasAddon/src/browser/renderer/shared/CharAtlasUtils.ts","webpack://CanvasAddon/src/browser/renderer/shared/Constants.ts","webpack://CanvasAddon/src/browser/renderer/shared/CustomGlyphs.ts","webpack://CanvasAddon/src/browser/renderer/shared/DevicePixelObserver.ts","webpack://CanvasAddon/src/browser/renderer/shared/RendererUtils.ts","webpack://CanvasAddon/src/browser/renderer/shared/SelectionRenderModel.ts","webpack://CanvasAddon/src/browser/renderer/shared/TextureAtlas.ts","webpack://CanvasAddon/src/browser/services/CharacterJoinerService.ts","webpack://CanvasAddon/src/common/Color.ts","webpack://CanvasAddon/src/common/EventEmitter.ts","webpack://CanvasAddon/src/common/Lifecycle.ts","webpack://CanvasAddon/src/common/MultiKeyMap.ts","webpack://CanvasAddon/src/common/Platform.ts","webpack://CanvasAddon/src/common/TaskQueue.ts","webpack://CanvasAddon/src/common/buffer/AttributeData.ts","webpack://CanvasAddon/src/common/buffer/CellData.ts","webpack://CanvasAddon/src/common/buffer/Constants.ts","webpack://CanvasAddon/src/common/input/TextDecoder.ts","webpack://CanvasAddon/src/common/services/ServiceRegistry.ts","webpack://CanvasAddon/src/common/services/Services.ts","webpack://CanvasAddon/webpack/bootstrap","webpack://CanvasAddon/src/CanvasAddon.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"CanvasAddon\"] = factory();\n\telse\n\t\troot[\"CanvasAddon\"] = factory();\n})(self, function() {\nreturn ","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { removeElementFromParent } from 'browser/Dom';\nimport { acquireTextureAtlas } from 'browser/renderer/shared/CharAtlasCache';\nimport { TEXT_BASELINE } from 'browser/renderer/shared/Constants';\nimport { tryDrawCustomChar } from 'browser/renderer/shared/CustomGlyphs';\nimport { throwIfFalsy } from 'browser/renderer/shared/RendererUtils';\nimport { IRasterizedGlyph, IRenderDimensions, ISelectionRenderModel, ITextureAtlas } from 'browser/renderer/shared/Types';\nimport { createSelectionRenderModel } from 'browser/renderer/shared/SelectionRenderModel';\nimport { ICoreBrowserService, IThemeService } from 'browser/services/Services';\nimport { ReadonlyColorSet } from 'browser/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { WHITESPACE_CELL_CODE } from 'common/buffer/Constants';\nimport { IBufferService, IDecorationService, IOptionsService } from 'common/services/Services';\nimport { ICellData, IDisposable } from 'common/Types';\nimport { Terminal } from 'xterm';\nimport { IRenderLayer } from './Types';\nimport { CellColorResolver } from 'browser/renderer/shared/CellColorResolver';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { isSafari } from 'common/Platform';\nimport { EventEmitter, forwardEvent } from 'common/EventEmitter';\n\nexport abstract class BaseRenderLayer extends Disposable implements IRenderLayer {\n  private _canvas: HTMLCanvasElement;\n  protected _ctx!: CanvasRenderingContext2D;\n  private _deviceCharWidth: number = 0;\n  private _deviceCharHeight: number = 0;\n  private _deviceCellWidth: number = 0;\n  private _deviceCellHeight: number = 0;\n  private _deviceCharLeft: number = 0;\n  private _deviceCharTop: number = 0;\n\n  protected _selectionModel: ISelectionRenderModel = createSelectionRenderModel();\n  private _cellColorResolver: CellColorResolver;\n  private _bitmapGenerator: (BitmapGenerator | undefined)[] = [];\n\n  protected _charAtlas!: ITextureAtlas;\n  private _charAtlasDisposable?: IDisposable;\n\n  public get canvas(): HTMLCanvasElement { return this._canvas; }\n  public get cacheCanvas(): HTMLCanvasElement { return this._charAtlas?.pages[0].canvas!; }\n\n  private readonly _onAddTextureAtlasCanvas = this.register(new EventEmitter<HTMLCanvasElement>());\n  public readonly onAddTextureAtlasCanvas = this._onAddTextureAtlasCanvas.event;\n\n  constructor(\n    private readonly _terminal: Terminal,\n    private _container: HTMLElement,\n    id: string,\n    zIndex: number,\n    private _alpha: boolean,\n    protected readonly _themeService: IThemeService,\n    protected readonly _bufferService: IBufferService,\n    protected readonly _optionsService: IOptionsService,\n    protected readonly _decorationService: IDecorationService,\n    protected readonly _coreBrowserService: ICoreBrowserService\n  ) {\n    super();\n    this._cellColorResolver = new CellColorResolver(this._terminal, this._selectionModel, this._decorationService, this._coreBrowserService, this._themeService);\n    this._canvas = document.createElement('canvas');\n    this._canvas.classList.add(`xterm-${id}-layer`);\n    this._canvas.style.zIndex = zIndex.toString();\n    this._initCanvas();\n    this._container.appendChild(this._canvas);\n    this._refreshCharAtlas(this._themeService.colors);\n    this.register(this._themeService.onChangeColors(e => {\n      this._refreshCharAtlas(e);\n      this.reset();\n    }));\n\n    this.register(toDisposable(() => {\n      removeElementFromParent(this._canvas);\n      this._charAtlas?.dispose();\n    }));\n  }\n\n  private _initCanvas(): void {\n    this._ctx = throwIfFalsy(this._canvas.getContext('2d', { alpha: this._alpha }));\n    // Draw the background if this is an opaque layer\n    if (!this._alpha) {\n      this._clearAll();\n    }\n  }\n\n  public handleBlur(): void {}\n  public handleFocus(): void {}\n  public handleCursorMove(): void {}\n  public handleGridChanged(startRow: number, endRow: number): void {}\n\n  public handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean = false): void {\n    this._selectionModel.update(this._terminal, start, end, columnSelectMode);\n  }\n\n  protected _setTransparency(alpha: boolean): void {\n    // Do nothing when alpha doesn't change\n    if (alpha === this._alpha) {\n      return;\n    }\n\n    // Create new canvas and replace old one\n    const oldCanvas = this._canvas;\n    this._alpha = alpha;\n    // Cloning preserves properties\n    this._canvas = this._canvas.cloneNode() as HTMLCanvasElement;\n    this._initCanvas();\n    this._container.replaceChild(this._canvas, oldCanvas);\n\n    // Regenerate char atlas and force a full redraw\n    this._refreshCharAtlas(this._themeService.colors);\n    this.handleGridChanged(0, this._bufferService.rows - 1);\n  }\n\n  /**\n   * Refreshes the char atlas, aquiring a new one if necessary.\n   * @param colorSet The color set to use for the char atlas.\n   */\n  private _refreshCharAtlas(colorSet: ReadonlyColorSet): void {\n    if (this._deviceCharWidth <= 0 && this._deviceCharHeight <= 0) {\n      return;\n    }\n    this._charAtlasDisposable?.dispose();\n    this._charAtlas = acquireTextureAtlas(this._terminal, this._optionsService.rawOptions, colorSet, this._deviceCellWidth, this._deviceCellHeight, this._deviceCharWidth, this._deviceCharHeight, this._coreBrowserService.dpr);\n    this._charAtlasDisposable = forwardEvent(this._charAtlas.onAddTextureAtlasCanvas, this._onAddTextureAtlasCanvas);\n    this._charAtlas.warmUp();\n    for (let i = 0; i < this._charAtlas.pages.length; i++) {\n      this._bitmapGenerator[i] = new BitmapGenerator(this._charAtlas.pages[i].canvas);\n    }\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    this._deviceCellWidth = dim.device.cell.width;\n    this._deviceCellHeight = dim.device.cell.height;\n    this._deviceCharWidth = dim.device.char.width;\n    this._deviceCharHeight = dim.device.char.height;\n    this._deviceCharLeft = dim.device.char.left;\n    this._deviceCharTop = dim.device.char.top;\n    this._canvas.width = dim.device.canvas.width;\n    this._canvas.height = dim.device.canvas.height;\n    this._canvas.style.width = `${dim.css.canvas.width}px`;\n    this._canvas.style.height = `${dim.css.canvas.height}px`;\n\n    // Draw the background if this is an opaque layer\n    if (!this._alpha) {\n      this._clearAll();\n    }\n\n    this._refreshCharAtlas(this._themeService.colors);\n  }\n\n  public abstract reset(): void;\n\n  public clearTextureAtlas(): void {\n    this._charAtlas?.clearTexture();\n  }\n\n  /**\n   * Fills 1+ cells completely. This uses the existing fillStyle on the context.\n   * @param x The column to start at.\n   * @param y The row to start at\n   * @param width The number of columns to fill.\n   * @param height The number of rows to fill.\n   */\n  protected _fillCells(x: number, y: number, width: number, height: number): void {\n    this._ctx.fillRect(\n      x * this._deviceCellWidth,\n      y * this._deviceCellHeight,\n      width * this._deviceCellWidth,\n      height * this._deviceCellHeight);\n  }\n\n  /**\n   * Fills a 1px line (2px on HDPI) at the middle of the cell. This uses the\n   * existing fillStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected _fillMiddleLineAtCells(x: number, y: number, width: number = 1): void {\n    const cellOffset = Math.ceil(this._deviceCellHeight * 0.5);\n    this._ctx.fillRect(\n      x * this._deviceCellWidth,\n      (y + 1) * this._deviceCellHeight - cellOffset - this._coreBrowserService.dpr,\n      width * this._deviceCellWidth,\n      this._coreBrowserService.dpr);\n  }\n\n  /**\n   * Fills a 1px line (2px on HDPI) at the bottom of the cell. This uses the\n   * existing fillStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected _fillBottomLineAtCells(x: number, y: number, width: number = 1, pixelOffset: number = 0): void {\n    this._ctx.fillRect(\n      x * this._deviceCellWidth,\n      (y + 1) * this._deviceCellHeight + pixelOffset - this._coreBrowserService.dpr - 1 /* Ensure it's drawn within the cell */,\n      width * this._deviceCellWidth,\n      this._coreBrowserService.dpr);\n  }\n\n  protected _curlyUnderlineAtCell(x: number, y: number, width: number = 1): void {\n    this._ctx.save();\n    this._ctx.beginPath();\n    this._ctx.strokeStyle = this._ctx.fillStyle;\n    const lineWidth = this._coreBrowserService.dpr;\n    this._ctx.lineWidth = lineWidth;\n    for (let xOffset = 0; xOffset < width; xOffset++) {\n      const xLeft = (x + xOffset) * this._deviceCellWidth;\n      const xMid = (x + xOffset + 0.5) * this._deviceCellWidth;\n      const xRight = (x + xOffset + 1) * this._deviceCellWidth;\n      const yMid = (y + 1) * this._deviceCellHeight - lineWidth - 1;\n      const yMidBot = yMid - lineWidth;\n      const yMidTop = yMid + lineWidth;\n      this._ctx.moveTo(xLeft, yMid);\n      this._ctx.bezierCurveTo(\n        xLeft, yMidBot,\n        xMid, yMidBot,\n        xMid, yMid\n      );\n      this._ctx.bezierCurveTo(\n        xMid, yMidTop,\n        xRight, yMidTop,\n        xRight, yMid\n      );\n    }\n    this._ctx.stroke();\n    this._ctx.restore();\n  }\n\n  protected _dottedUnderlineAtCell(x: number, y: number, width: number = 1): void {\n    this._ctx.save();\n    this._ctx.beginPath();\n    this._ctx.strokeStyle = this._ctx.fillStyle;\n    const lineWidth = this._coreBrowserService.dpr;\n    this._ctx.lineWidth = lineWidth;\n    this._ctx.setLineDash([lineWidth * 2, lineWidth]);\n    const xLeft = x * this._deviceCellWidth;\n    const yMid = (y + 1) * this._deviceCellHeight - lineWidth - 1;\n    this._ctx.moveTo(xLeft, yMid);\n    for (let xOffset = 0; xOffset < width; xOffset++) {\n      // const xLeft = x * this._deviceCellWidth;\n      const xRight = (x + width + xOffset) * this._deviceCellWidth;\n      this._ctx.lineTo(xRight, yMid);\n    }\n    this._ctx.stroke();\n    this._ctx.closePath();\n    this._ctx.restore();\n  }\n\n  protected _dashedUnderlineAtCell(x: number, y: number, width: number = 1): void {\n    this._ctx.save();\n    this._ctx.beginPath();\n    this._ctx.strokeStyle = this._ctx.fillStyle;\n    const lineWidth = this._coreBrowserService.dpr;\n    this._ctx.lineWidth = lineWidth;\n    this._ctx.setLineDash([lineWidth * 4, lineWidth * 3]);\n    const xLeft = x * this._deviceCellWidth;\n    const xRight = (x + width) * this._deviceCellWidth;\n    const yMid = (y + 1) * this._deviceCellHeight - lineWidth - 1;\n    this._ctx.moveTo(xLeft, yMid);\n    this._ctx.lineTo(xRight, yMid);\n    this._ctx.stroke();\n    this._ctx.closePath();\n    this._ctx.restore();\n  }\n\n  /**\n   * Fills a 1px line (2px on HDPI) at the left of the cell. This uses the\n   * existing fillStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected _fillLeftLineAtCell(x: number, y: number, width: number): void {\n    this._ctx.fillRect(\n      x * this._deviceCellWidth,\n      y * this._deviceCellHeight,\n      this._coreBrowserService.dpr * width,\n      this._deviceCellHeight);\n  }\n\n  /**\n   * Strokes a 1px rectangle (2px on HDPI) around a cell. This uses the existing\n   * strokeStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected _strokeRectAtCell(x: number, y: number, width: number, height: number): void {\n    const lineWidth = this._coreBrowserService.dpr;\n    this._ctx.lineWidth = lineWidth;\n    this._ctx.strokeRect(\n      x * this._deviceCellWidth + lineWidth / 2,\n      y * this._deviceCellHeight + (lineWidth / 2),\n      width * this._deviceCellWidth - lineWidth,\n      (height * this._deviceCellHeight) - lineWidth);\n  }\n\n  /**\n   * Clears the entire canvas.\n   */\n  protected _clearAll(): void {\n    if (this._alpha) {\n      this._ctx.clearRect(0, 0, this._canvas.width, this._canvas.height);\n    } else {\n      this._ctx.fillStyle = this._themeService.colors.background.css;\n      this._ctx.fillRect(0, 0, this._canvas.width, this._canvas.height);\n    }\n  }\n\n  /**\n   * Clears 1+ cells completely.\n   * @param x The column to start at.\n   * @param y The row to start at.\n   * @param width The number of columns to clear.\n   * @param height The number of rows to clear.\n   */\n  protected _clearCells(x: number, y: number, width: number, height: number): void {\n    if (this._alpha) {\n      this._ctx.clearRect(\n        x * this._deviceCellWidth,\n        y * this._deviceCellHeight,\n        width * this._deviceCellWidth,\n        height * this._deviceCellHeight);\n    } else {\n      this._ctx.fillStyle = this._themeService.colors.background.css;\n      this._ctx.fillRect(\n        x * this._deviceCellWidth,\n        y * this._deviceCellHeight,\n        width * this._deviceCellWidth,\n        height * this._deviceCellHeight);\n    }\n  }\n\n  /**\n   * Draws a truecolor character at the cell. The character will be clipped to\n   * ensure that it fits with the cell, including the cell to the right if it's\n   * a wide character. This uses the existing fillStyle on the context.\n   * @param cell The cell data for the character to draw.\n   * @param x The column to draw at.\n   * @param y The row to draw at.\n   */\n  protected _fillCharTrueColor(cell: CellData, x: number, y: number): void {\n    this._ctx.font = this._getFont(false, false);\n    this._ctx.textBaseline = TEXT_BASELINE;\n    this._clipRow(y);\n\n    // Draw custom characters if applicable\n    let drawSuccess = false;\n    if (this._optionsService.rawOptions.customGlyphs !== false) {\n      drawSuccess = tryDrawCustomChar(this._ctx, cell.getChars(), x * this._deviceCellWidth, y * this._deviceCellHeight, this._deviceCellWidth, this._deviceCellHeight, this._optionsService.rawOptions.fontSize, this._coreBrowserService.dpr);\n    }\n\n    // Draw the character\n    if (!drawSuccess) {\n      this._ctx.fillText(\n        cell.getChars(),\n        x * this._deviceCellWidth + this._deviceCharLeft,\n        y * this._deviceCellHeight + this._deviceCharTop + this._deviceCharHeight);\n    }\n  }\n\n  /**\n   * Draws one or more characters at a cell. If possible this will draw using\n   * the character atlas to reduce draw time.\n   */\n  protected _drawChars(cell: ICellData, x: number, y: number): void {\n    const chars = cell.getChars();\n    this._cellColorResolver.resolve(cell, x, this._bufferService.buffer.ydisp + y);\n    let glyph: IRasterizedGlyph;\n    if (chars && chars.length > 1) {\n      glyph = this._charAtlas.getRasterizedGlyphCombinedChar(chars, this._cellColorResolver.result.bg, this._cellColorResolver.result.fg, this._cellColorResolver.result.ext);\n    } else {\n      glyph = this._charAtlas.getRasterizedGlyph(cell.getCode() || WHITESPACE_CELL_CODE, this._cellColorResolver.result.bg, this._cellColorResolver.result.fg, this._cellColorResolver.result.ext);\n    }\n    if (!glyph.size.x || !glyph.size.y) {\n      return;\n    }\n    this._ctx.save();\n    this._clipRow(y);\n    // Draw the image, use the bitmap if it's available\n    if (this._charAtlas.pages[glyph.texturePage].version !== this._bitmapGenerator[glyph.texturePage]?.version) {\n      if (!this._bitmapGenerator[glyph.texturePage]) {\n        this._bitmapGenerator[glyph.texturePage] = new BitmapGenerator(this._charAtlas.pages[glyph.texturePage].canvas);\n      }\n      this._bitmapGenerator[glyph.texturePage]!.refresh();\n      this._bitmapGenerator[glyph.texturePage]!.version = this._charAtlas.pages[glyph.texturePage].version;\n    }\n    this._ctx.drawImage(\n      this._bitmapGenerator[glyph.texturePage]?.bitmap || this._charAtlas!.pages[glyph.texturePage].canvas,\n      glyph.texturePosition.x,\n      glyph.texturePosition.y,\n      glyph.size.x,\n      glyph.size.y,\n      x * this._deviceCellWidth + this._deviceCharLeft - glyph.offset.x,\n      y * this._deviceCellHeight + this._deviceCharTop - glyph.offset.y,\n      glyph.size.x,\n      glyph.size.y\n    );\n    this._ctx.restore();\n  }\n\n  /**\n   * Clips a row to ensure no pixels will be drawn outside the cells in the row.\n   * @param y The row to clip.\n   */\n  private _clipRow(y: number): void {\n    this._ctx.beginPath();\n    this._ctx.rect(\n      0,\n      y * this._deviceCellHeight,\n      this._bufferService.cols * this._deviceCellWidth,\n      this._deviceCellHeight);\n    this._ctx.clip();\n  }\n\n  /**\n   * Gets the current font.\n   * @param isBold If we should use the bold fontWeight.\n   */\n  protected _getFont(isBold: boolean, isItalic: boolean): string {\n    const fontWeight = isBold ? this._optionsService.rawOptions.fontWeightBold : this._optionsService.rawOptions.fontWeight;\n    const fontStyle = isItalic ? 'italic' : '';\n\n    return `${fontStyle} ${fontWeight} ${this._optionsService.rawOptions.fontSize * this._coreBrowserService.dpr}px ${this._optionsService.rawOptions.fontFamily}`;\n  }\n}\n\n/**\n * The number of milliseconds to wait before generating the ImageBitmap, this is to debounce/batch\n * the operation as window.createImageBitmap is asynchronous.\n */\nconst GLYPH_BITMAP_COMMIT_DELAY = 100;\n\nconst enum BitmapGeneratorState {\n  IDLE = 0,\n  GENERATING = 1,\n  GENERATING_INVALID = 2\n}\n\nclass BitmapGenerator {\n  private _state: BitmapGeneratorState = BitmapGeneratorState.IDLE;\n  private _commitTimeout: number | undefined = undefined;\n  private _bitmap: ImageBitmap | undefined = undefined;\n  public get bitmap(): ImageBitmap | undefined { return this._bitmap; }\n  public version: number = -1;\n\n  constructor(private readonly _canvas: HTMLCanvasElement) {\n  }\n\n  public refresh(): void {\n    // Clear the bitmap immediately as it's stale\n    this._bitmap = undefined;\n    // Disable ImageBitmaps on Safari because of https://bugs.webkit.org/show_bug.cgi?id=149990\n    if (isSafari) {\n      return;\n    }\n    if (this._commitTimeout === undefined) {\n      this._commitTimeout = window.setTimeout(() => this._generate(), GLYPH_BITMAP_COMMIT_DELAY);\n    }\n    if (this._state === BitmapGeneratorState.GENERATING) {\n      this._state = BitmapGeneratorState.GENERATING_INVALID;\n    }\n  }\n\n  private _generate(): void {\n    if (this._state === BitmapGeneratorState.IDLE) {\n      this._bitmap = undefined;\n      this._state = BitmapGeneratorState.GENERATING;\n      window.createImageBitmap(this._canvas).then(bitmap => {\n        if (this._state === BitmapGeneratorState.GENERATING_INVALID) {\n          this.refresh();\n        } else {\n          this._bitmap = bitmap;\n        }\n        this._state = BitmapGeneratorState.IDLE;\n      });\n      if (this._commitTimeout) {\n        this._commitTimeout = undefined;\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { removeTerminalFromCache } from 'browser/renderer/shared/CharAtlasCache';\nimport { observeDevicePixelDimensions } from 'browser/renderer/shared/DevicePixelObserver';\nimport { createRenderDimensions } from 'browser/renderer/shared/RendererUtils';\nimport { IRenderDimensions, IRenderer, IRequestRedrawEvent } from 'browser/renderer/shared/Types';\nimport { ICharacterJoinerService, ICharSizeService, ICoreBrowserService, IThemeService } from 'browser/services/Services';\nimport { ILinkifier2 } from 'browser/Types';\nimport { EventEmitter, forwardEvent } from 'common/EventEmitter';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IBufferService, ICoreService, IDecorationService, IOptionsService } from 'common/services/Services';\nimport { Terminal } from 'xterm';\nimport { CursorRenderLayer } from './CursorRenderLayer';\nimport { LinkRenderLayer } from './LinkRenderLayer';\nimport { SelectionRenderLayer } from './SelectionRenderLayer';\nimport { TextRenderLayer } from './TextRenderLayer';\nimport { IRenderLayer } from './Types';\n\nexport class CanvasRenderer extends Disposable implements IRenderer {\n  private _renderLayers: IRenderLayer[];\n  private _devicePixelRatio: number;\n\n  public dimensions: IRenderDimensions;\n\n  private readonly _onRequestRedraw = this.register(new EventEmitter<IRequestRedrawEvent>());\n  public readonly onRequestRedraw = this._onRequestRedraw.event;\n  private readonly _onChangeTextureAtlas = this.register(new EventEmitter<HTMLCanvasElement>());\n  public readonly onChangeTextureAtlas = this._onChangeTextureAtlas.event;\n  private readonly _onAddTextureAtlasCanvas = this.register(new EventEmitter<HTMLCanvasElement>());\n  public readonly onAddTextureAtlasCanvas = this._onAddTextureAtlasCanvas.event;\n\n  constructor(\n    private readonly _terminal: Terminal,\n    private readonly _screenElement: HTMLElement,\n    linkifier2: ILinkifier2,\n    private readonly _bufferService: IBufferService,\n    private readonly _charSizeService: ICharSizeService,\n    private readonly _optionsService: IOptionsService,\n    characterJoinerService: ICharacterJoinerService,\n    coreService: ICoreService,\n    private readonly _coreBrowserService: ICoreBrowserService,\n    decorationService: IDecorationService,\n    private readonly _themeService: IThemeService\n  ) {\n    super();\n    const allowTransparency = this._optionsService.rawOptions.allowTransparency;\n    this._renderLayers = [\n      new TextRenderLayer(this._terminal, this._screenElement, 0, allowTransparency, this._bufferService, this._optionsService, characterJoinerService, decorationService, this._coreBrowserService, _themeService),\n      new SelectionRenderLayer(this._terminal, this._screenElement, 1, this._bufferService, this._coreBrowserService, decorationService, this._optionsService, _themeService),\n      new LinkRenderLayer(this._terminal, this._screenElement, 2, linkifier2, this._bufferService, this._optionsService, decorationService, this._coreBrowserService, _themeService),\n      new CursorRenderLayer(this._terminal, this._screenElement, 3, this._onRequestRedraw, this._bufferService, this._optionsService, coreService, this._coreBrowserService, decorationService, _themeService)\n    ];\n    for (const layer of this._renderLayers) {\n      forwardEvent(layer.onAddTextureAtlasCanvas, this._onAddTextureAtlasCanvas);\n    }\n    this.dimensions = createRenderDimensions();\n    this._devicePixelRatio = this._coreBrowserService.dpr;\n    this._updateDimensions();\n\n    this.register(observeDevicePixelDimensions(this._renderLayers[0].canvas, this._coreBrowserService.window, (w, h) => this._setCanvasDevicePixelDimensions(w, h)));\n    this.register(toDisposable(() => {\n      for (const l of this._renderLayers) {\n        l.dispose();\n      }\n      removeTerminalFromCache(this._terminal);\n    }));\n  }\n\n  public get textureAtlas(): HTMLCanvasElement | undefined {\n    return this._renderLayers[0].cacheCanvas;\n  }\n\n  public handleDevicePixelRatioChange(): void {\n    // If the device pixel ratio changed, the char atlas needs to be regenerated\n    // and the terminal needs to refreshed\n    if (this._devicePixelRatio !== this._coreBrowserService.dpr) {\n      this._devicePixelRatio = this._coreBrowserService.dpr;\n      this.handleResize(this._bufferService.cols, this._bufferService.rows);\n    }\n  }\n\n  public handleResize(cols: number, rows: number): void {\n    // Update character and canvas dimensions\n    this._updateDimensions();\n\n    // Resize all render layers\n    for (const l of this._renderLayers) {\n      l.resize(this.dimensions);\n    }\n\n    // Resize the screen\n    this._screenElement.style.width = `${this.dimensions.css.canvas.width}px`;\n    this._screenElement.style.height = `${this.dimensions.css.canvas.height}px`;\n  }\n\n  public handleCharSizeChanged(): void {\n    this.handleResize(this._bufferService.cols, this._bufferService.rows);\n  }\n\n  public handleBlur(): void {\n    this._runOperation(l => l.handleBlur());\n  }\n\n  public handleFocus(): void {\n    this._runOperation(l => l.handleFocus());\n  }\n\n  public handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean = false): void {\n    this._runOperation(l => l.handleSelectionChanged(start, end, columnSelectMode));\n    // Selection foreground requires a full re-render\n    if (this._themeService.colors.selectionForeground) {\n      this._onRequestRedraw.fire({ start: 0, end: this._bufferService.rows - 1 });\n    }\n  }\n\n  public handleCursorMove(): void {\n    this._runOperation(l => l.handleCursorMove());\n  }\n\n  public clear(): void {\n    this._runOperation(l => l.reset());\n  }\n\n  private _runOperation(operation: (layer: IRenderLayer) => void): void {\n    for (const l of this._renderLayers) {\n      operation(l);\n    }\n  }\n\n  /**\n   * Performs the refresh loop callback, calling refresh only if a refresh is\n   * necessary before queueing up the next one.\n   */\n  public renderRows(start: number, end: number): void {\n    for (const l of this._renderLayers) {\n      l.handleGridChanged(start, end);\n    }\n  }\n\n  public clearTextureAtlas(): void {\n    for (const layer of this._renderLayers) {\n      layer.clearTextureAtlas();\n    }\n  }\n\n  /**\n   * Recalculates the character and canvas dimensions.\n   */\n  private _updateDimensions(): void {\n    if (!this._charSizeService.hasValidSize) {\n      return;\n    }\n\n    // See the WebGL renderer for an explanation of this section.\n    const dpr = this._coreBrowserService.dpr;\n    this.dimensions.device.char.width = Math.floor(this._charSizeService.width * dpr);\n    this.dimensions.device.char.height = Math.ceil(this._charSizeService.height * dpr);\n    this.dimensions.device.cell.height = Math.floor(this.dimensions.device.char.height * this._optionsService.rawOptions.lineHeight);\n    this.dimensions.device.char.top = this._optionsService.rawOptions.lineHeight === 1 ? 0 : Math.round((this.dimensions.device.cell.height - this.dimensions.device.char.height) / 2);\n    this.dimensions.device.cell.width = this.dimensions.device.char.width + Math.round(this._optionsService.rawOptions.letterSpacing);\n    this.dimensions.device.char.left = Math.floor(this._optionsService.rawOptions.letterSpacing / 2);\n    this.dimensions.device.canvas.height = this._bufferService.rows * this.dimensions.device.cell.height;\n    this.dimensions.device.canvas.width = this._bufferService.cols * this.dimensions.device.cell.width;\n    this.dimensions.css.canvas.height = Math.round(this.dimensions.device.canvas.height / dpr);\n    this.dimensions.css.canvas.width = Math.round(this.dimensions.device.canvas.width / dpr);\n    this.dimensions.css.cell.height = this.dimensions.css.canvas.height / this._bufferService.rows;\n    this.dimensions.css.cell.width = this.dimensions.css.canvas.width / this._bufferService.cols;\n  }\n\n  private _setCanvasDevicePixelDimensions(width: number, height: number): void {\n    this.dimensions.device.canvas.height = height;\n    this.dimensions.device.canvas.width = width;\n    // Resize all render layers\n    for (const l of this._renderLayers) {\n      l.resize(this.dimensions);\n    }\n    this._requestRedrawViewport();\n  }\n\n  private _requestRedrawViewport(): void {\n    this._onRequestRedraw.fire({ start: 0, end: this._bufferService.rows - 1 });\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions, IRequestRedrawEvent } from 'browser/renderer/shared/Types';\nimport { BaseRenderLayer } from './BaseRenderLayer';\nimport { ICellData } from 'common/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { IColorSet, ReadonlyColorSet } from 'browser/Types';\nimport { IBufferService, IOptionsService, ICoreService, IDecorationService } from 'common/services/Services';\nimport { IEventEmitter } from 'common/EventEmitter';\nimport { ICoreBrowserService, IThemeService } from 'browser/services/Services';\nimport { Terminal } from 'xterm';\nimport { toDisposable } from 'common/Lifecycle';\n\ninterface ICursorState {\n  x: number;\n  y: number;\n  isFocused: boolean;\n  style: string;\n  width: number;\n}\n\n/**\n * The time between cursor blinks.\n */\nconst BLINK_INTERVAL = 600;\n\nexport class CursorRenderLayer extends BaseRenderLayer {\n  private _state: ICursorState;\n  private _cursorRenderers: {[key: string]: (x: number, y: number, cell: ICellData) => void};\n  private _cursorBlinkStateManager: CursorBlinkStateManager | undefined;\n  private _cell: ICellData = new CellData();\n\n  constructor(\n    terminal: Terminal,\n    container: HTMLElement,\n    zIndex: number,\n    private readonly _onRequestRedraw: IEventEmitter<IRequestRedrawEvent>,\n    bufferService: IBufferService,\n    optionsService: IOptionsService,\n    private readonly _coreService: ICoreService,\n    coreBrowserService: ICoreBrowserService,\n    decorationService: IDecorationService,\n    themeService: IThemeService\n  ) {\n    super(terminal, container, 'cursor', zIndex, true, themeService, bufferService, optionsService, decorationService, coreBrowserService);\n    this._state = {\n      x: 0,\n      y: 0,\n      isFocused: false,\n      style: '',\n      width: 0\n    };\n    this._cursorRenderers = {\n      'bar': this._renderBarCursor.bind(this),\n      'block': this._renderBlockCursor.bind(this),\n      'underline': this._renderUnderlineCursor.bind(this)\n    };\n    this.register(optionsService.onOptionChange(() => this._handleOptionsChanged()));\n    this.register(toDisposable(() => {\n      this._cursorBlinkStateManager?.dispose();\n      this._cursorBlinkStateManager = undefined;\n    }));\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    super.resize(dim);\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._state = {\n      x: 0,\n      y: 0,\n      isFocused: false,\n      style: '',\n      width: 0\n    };\n  }\n\n  public reset(): void {\n    this._clearCursor();\n    this._cursorBlinkStateManager?.restartBlinkAnimation();\n    this._handleOptionsChanged();\n  }\n\n  public handleBlur(): void {\n    this._cursorBlinkStateManager?.pause();\n    this._onRequestRedraw.fire({ start: this._bufferService.buffer.y, end: this._bufferService.buffer.y });\n  }\n\n  public handleFocus(): void {\n    this._cursorBlinkStateManager?.resume();\n    this._onRequestRedraw.fire({ start: this._bufferService.buffer.y, end: this._bufferService.buffer.y });\n  }\n\n  private _handleOptionsChanged(): void {\n    if (this._optionsService.rawOptions.cursorBlink) {\n      if (!this._cursorBlinkStateManager) {\n        this._cursorBlinkStateManager = new CursorBlinkStateManager(this._coreBrowserService.isFocused, () => {\n          this._render(true);\n        }, this._coreBrowserService);\n      }\n    } else {\n      this._cursorBlinkStateManager?.dispose();\n      this._cursorBlinkStateManager = undefined;\n    }\n    // Request a refresh from the terminal as management of rendering is being\n    // moved back to the terminal\n    this._onRequestRedraw.fire({ start: this._bufferService.buffer.y, end: this._bufferService.buffer.y });\n  }\n\n  public handleCursorMove(): void {\n    this._cursorBlinkStateManager?.restartBlinkAnimation();\n  }\n\n  public handleGridChanged(startRow: number, endRow: number): void {\n    if (!this._cursorBlinkStateManager || this._cursorBlinkStateManager.isPaused) {\n      this._render(false);\n    } else {\n      this._cursorBlinkStateManager.restartBlinkAnimation();\n    }\n  }\n\n  private _render(triggeredByAnimationFrame: boolean): void {\n    // Don't draw the cursor if it's hidden\n    if (!this._coreService.isCursorInitialized || this._coreService.isCursorHidden) {\n      this._clearCursor();\n      return;\n    }\n\n    const cursorY = this._bufferService.buffer.ybase + this._bufferService.buffer.y;\n    const viewportRelativeCursorY = cursorY - this._bufferService.buffer.ydisp;\n\n    // Don't draw the cursor if it's off-screen\n    if (viewportRelativeCursorY < 0 || viewportRelativeCursorY >= this._bufferService.rows) {\n      this._clearCursor();\n      return;\n    }\n\n    // in case cursor.x == cols adjust visual cursor to cols - 1\n    const cursorX = Math.min(this._bufferService.buffer.x, this._bufferService.cols - 1);\n    this._bufferService.buffer.lines.get(cursorY)!.loadCell(cursorX, this._cell);\n    if (this._cell.content === undefined) {\n      return;\n    }\n\n    if (!this._coreBrowserService.isFocused) {\n      this._clearCursor();\n      this._ctx.save();\n      this._ctx.fillStyle = this._themeService.colors.cursor.css;\n      const cursorStyle = this._optionsService.rawOptions.cursorStyle;\n      if (cursorStyle && cursorStyle !== 'block') {\n        this._cursorRenderers[cursorStyle](cursorX, viewportRelativeCursorY, this._cell);\n      } else {\n        this._renderBlurCursor(cursorX, viewportRelativeCursorY, this._cell);\n      }\n      this._ctx.restore();\n      this._state.x = cursorX;\n      this._state.y = viewportRelativeCursorY;\n      this._state.isFocused = false;\n      this._state.style = cursorStyle;\n      this._state.width = this._cell.getWidth();\n      return;\n    }\n\n    // Don't draw the cursor if it's blinking\n    if (this._cursorBlinkStateManager && !this._cursorBlinkStateManager.isCursorVisible) {\n      this._clearCursor();\n      return;\n    }\n\n    if (this._state) {\n      // The cursor is already in the correct spot, don't redraw\n      if (this._state.x === cursorX &&\n          this._state.y === viewportRelativeCursorY &&\n          this._state.isFocused === this._coreBrowserService.isFocused &&\n          this._state.style === this._optionsService.rawOptions.cursorStyle &&\n          this._state.width === this._cell.getWidth()) {\n        return;\n      }\n      this._clearCursor();\n    }\n\n    this._ctx.save();\n    this._cursorRenderers[this._optionsService.rawOptions.cursorStyle || 'block'](cursorX, viewportRelativeCursorY, this._cell);\n    this._ctx.restore();\n\n    this._state.x = cursorX;\n    this._state.y = viewportRelativeCursorY;\n    this._state.isFocused = false;\n    this._state.style = this._optionsService.rawOptions.cursorStyle;\n    this._state.width = this._cell.getWidth();\n  }\n\n  private _clearCursor(): void {\n    if (this._state) {\n      // Avoid potential rounding errors when device pixel ratio is less than 1\n      if (this._coreBrowserService.dpr < 1) {\n        this._clearAll();\n      } else {\n        this._clearCells(this._state.x, this._state.y, this._state.width, 1);\n      }\n      this._state = {\n        x: 0,\n        y: 0,\n        isFocused: false,\n        style: '',\n        width: 0\n      };\n    }\n  }\n\n  private _renderBarCursor(x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.fillStyle = this._themeService.colors.cursor.css;\n    this._fillLeftLineAtCell(x, y, this._optionsService.rawOptions.cursorWidth);\n    this._ctx.restore();\n  }\n\n  private _renderBlockCursor(x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.fillStyle = this._themeService.colors.cursor.css;\n    this._fillCells(x, y, cell.getWidth(), 1);\n    this._ctx.fillStyle = this._themeService.colors.cursorAccent.css;\n    this._fillCharTrueColor(cell, x, y);\n    this._ctx.restore();\n  }\n\n  private _renderUnderlineCursor(x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.fillStyle = this._themeService.colors.cursor.css;\n    this._fillBottomLineAtCells(x, y);\n    this._ctx.restore();\n  }\n\n  private _renderBlurCursor(x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.strokeStyle = this._themeService.colors.cursor.css;\n    this._strokeRectAtCell(x, y, cell.getWidth(), 1);\n    this._ctx.restore();\n  }\n}\n\nclass CursorBlinkStateManager {\n  public isCursorVisible: boolean;\n\n  private _animationFrame: number | undefined;\n  private _blinkStartTimeout: number | undefined;\n  private _blinkInterval: number | undefined;\n\n  /**\n   * The time at which the animation frame was restarted, this is used on the\n   * next render to restart the timers so they don't need to restart the timers\n   * multiple times over a short period.\n   */\n  private _animationTimeRestarted: number | undefined;\n\n  constructor(\n    isFocused: boolean,\n    private _renderCallback: () => void,\n    private _coreBrowserService: ICoreBrowserService\n  ) {\n    this.isCursorVisible = true;\n    if (isFocused) {\n      this._restartInterval();\n    }\n  }\n\n  public get isPaused(): boolean { return !(this._blinkStartTimeout || this._blinkInterval); }\n\n  public dispose(): void {\n    if (this._blinkInterval) {\n      this._coreBrowserService.window.clearInterval(this._blinkInterval);\n      this._blinkInterval = undefined;\n    }\n    if (this._blinkStartTimeout) {\n      this._coreBrowserService.window.clearTimeout(this._blinkStartTimeout);\n      this._blinkStartTimeout = undefined;\n    }\n    if (this._animationFrame) {\n      this._coreBrowserService.window.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public restartBlinkAnimation(): void {\n    if (this.isPaused) {\n      return;\n    }\n    // Save a timestamp so that the restart can be done on the next interval\n    this._animationTimeRestarted = Date.now();\n    // Force a cursor render to ensure it's visible and in the correct position\n    this.isCursorVisible = true;\n    if (!this._animationFrame) {\n      this._animationFrame = this._coreBrowserService.window.requestAnimationFrame(() => {\n        this._renderCallback();\n        this._animationFrame = undefined;\n      });\n    }\n  }\n\n  private _restartInterval(timeToStart: number = BLINK_INTERVAL): void {\n    // Clear any existing interval\n    if (this._blinkInterval) {\n      this._coreBrowserService.window.clearInterval(this._blinkInterval);\n      this._blinkInterval = undefined;\n    }\n\n    // Setup the initial timeout which will hide the cursor, this is done before\n    // the regular interval is setup in order to support restarting the blink\n    // animation in a lightweight way (without thrashing clearInterval and\n    // setInterval).\n    this._blinkStartTimeout = this._coreBrowserService.window.setTimeout(() => {\n      // Check if another animation restart was requested while this was being\n      // started\n      if (this._animationTimeRestarted) {\n        const time = BLINK_INTERVAL - (Date.now() - this._animationTimeRestarted);\n        this._animationTimeRestarted = undefined;\n        if (time > 0) {\n          this._restartInterval(time);\n          return;\n        }\n      }\n\n      // Hide the cursor\n      this.isCursorVisible = false;\n      this._animationFrame = this._coreBrowserService.window.requestAnimationFrame(() => {\n        this._renderCallback();\n        this._animationFrame = undefined;\n      });\n\n      // Setup the blink interval\n      this._blinkInterval = this._coreBrowserService.window.setInterval(() => {\n        // Adjust the animation time if it was restarted\n        if (this._animationTimeRestarted) {\n          // calc time diff\n          // Make restart interval do a setTimeout initially?\n          const time = BLINK_INTERVAL - (Date.now() - this._animationTimeRestarted);\n          this._animationTimeRestarted = undefined;\n          this._restartInterval(time);\n          return;\n        }\n\n        // Invert visibility and render\n        this.isCursorVisible = !this.isCursorVisible;\n        this._animationFrame = this._coreBrowserService.window.requestAnimationFrame(() => {\n          this._renderCallback();\n          this._animationFrame = undefined;\n        });\n      }, BLINK_INTERVAL);\n    }, timeToStart);\n  }\n\n  public pause(): void {\n    this.isCursorVisible = true;\n    if (this._blinkInterval) {\n      this._coreBrowserService.window.clearInterval(this._blinkInterval);\n      this._blinkInterval = undefined;\n    }\n    if (this._blinkStartTimeout) {\n      this._coreBrowserService.window.clearTimeout(this._blinkStartTimeout);\n      this._blinkStartTimeout = undefined;\n    }\n    if (this._animationFrame) {\n      this._coreBrowserService.window.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public resume(): void {\n    // Clear out any existing timers just in case\n    this.pause();\n\n    this._animationTimeRestarted = undefined;\n    this._restartInterval();\n    this.restartBlinkAnimation();\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport class GridCache<T> {\n  public cache: (T | undefined)[][];\n\n  public constructor() {\n    this.cache = [];\n  }\n\n  public resize(width: number, height: number): void {\n    for (let x = 0; x < width; x++) {\n      if (this.cache.length <= x) {\n        this.cache.push([]);\n      }\n      for (let y = this.cache[x].length; y < height; y++) {\n        this.cache[x].push(undefined);\n      }\n      this.cache[x].length = height;\n    }\n    this.cache.length = width;\n  }\n\n  public clear(): void {\n    for (let x = 0; x < this.cache.length; x++) {\n      for (let y = 0; y < this.cache[x].length; y++) {\n        this.cache[x][y] = undefined;\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions } from 'browser/renderer/shared/Types';\nimport { BaseRenderLayer } from './BaseRenderLayer';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/shared/Constants';\nimport { ICoreBrowserService, IThemeService } from 'browser/services/Services';\nimport { IColorSet, ILinkifierEvent, ILinkifier2, ReadonlyColorSet } from 'browser/Types';\nimport { IBufferService, IDecorationService, IOptionsService } from 'common/services/Services';\nimport { is256Color } from 'browser/renderer/shared/CharAtlasUtils';\nimport { Terminal } from 'xterm';\n\nexport class LinkRenderLayer extends BaseRenderLayer {\n  private _state: ILinkifierEvent | undefined;\n\n  constructor(\n    terminal: Terminal,\n    container: HTMLElement,\n    zIndex: number,\n    linkifier2: ILinkifier2,\n    bufferService: IBufferService,\n    optionsService: IOptionsService,\n    decorationService: IDecorationService,\n    coreBrowserService: ICoreBrowserService,\n    themeService: IThemeService\n  ) {\n    super(terminal, container, 'link', zIndex, true, themeService, bufferService, optionsService, decorationService, coreBrowserService);\n\n    this.register(linkifier2.onShowLinkUnderline(e => this._handleShowLinkUnderline(e)));\n    this.register(linkifier2.onHideLinkUnderline(e => this._handleHideLinkUnderline(e)));\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    super.resize(dim);\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._state = undefined;\n  }\n\n  public reset(): void {\n    this._clearCurrentLink();\n  }\n\n  private _clearCurrentLink(): void {\n    if (this._state) {\n      this._clearCells(this._state.x1, this._state.y1, this._state.cols - this._state.x1, 1);\n      const middleRowCount = this._state.y2 - this._state.y1 - 1;\n      if (middleRowCount > 0) {\n        this._clearCells(0, this._state.y1 + 1, this._state.cols, middleRowCount);\n      }\n      this._clearCells(0, this._state.y2, this._state.x2, 1);\n      this._state = undefined;\n    }\n  }\n\n  private _handleShowLinkUnderline(e: ILinkifierEvent): void {\n    if (e.fg === INVERTED_DEFAULT_COLOR) {\n      this._ctx.fillStyle = this._themeService.colors.background.css;\n    } else if (e.fg && is256Color(e.fg)) {\n      // 256 color support\n      this._ctx.fillStyle = this._themeService.colors.ansi[e.fg].css;\n    } else {\n      this._ctx.fillStyle = this._themeService.colors.foreground.css;\n    }\n\n    if (e.y1 === e.y2) {\n      // Single line link\n      this._fillBottomLineAtCells(e.x1, e.y1, e.x2 - e.x1);\n    } else {\n      // Multi-line link\n      this._fillBottomLineAtCells(e.x1, e.y1, e.cols - e.x1);\n      for (let y = e.y1 + 1; y < e.y2; y++) {\n        this._fillBottomLineAtCells(0, y, e.cols);\n      }\n      this._fillBottomLineAtCells(0, e.y2, e.x2);\n    }\n    this._state = e;\n  }\n\n  private _handleHideLinkUnderline(e: ILinkifierEvent): void {\n    this._clearCurrentLink();\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions } from 'browser/renderer/shared/Types';\nimport { BaseRenderLayer } from './BaseRenderLayer';\nimport { IColorSet, ReadonlyColorSet } from 'browser/Types';\nimport { IBufferService, IDecorationService, IOptionsService } from 'common/services/Services';\nimport { ICoreBrowserService, IThemeService } from 'browser/services/Services';\nimport { Terminal } from 'xterm';\n\ninterface ISelectionState {\n  start?: [number, number];\n  end?: [number, number];\n  columnSelectMode?: boolean;\n  ydisp?: number;\n}\n\nexport class SelectionRenderLayer extends BaseRenderLayer {\n  private _state!: ISelectionState;\n\n  constructor(\n    terminal: Terminal,\n    container: HTMLElement,\n    zIndex: number,\n    bufferService: IBufferService,\n    coreBrowserService: ICoreBrowserService,\n    decorationService: IDecorationService,\n    optionsService: IOptionsService,\n    themeService: IThemeService\n  ) {\n    super(terminal, container, 'selection', zIndex, true, themeService, bufferService, optionsService, decorationService, coreBrowserService);\n    this._clearState();\n  }\n\n  private _clearState(): void {\n    this._state = {\n      start: undefined,\n      end: undefined,\n      columnSelectMode: undefined,\n      ydisp: undefined\n    };\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    super.resize(dim);\n    // On resize use the base render layer's cached selection values since resize clears _state\n    // inside reset.\n    if (this._selectionModel.selectionStart && this._selectionModel.selectionEnd) {\n      this._redrawSelection(this._selectionModel.selectionStart, this._selectionModel.selectionEnd, this._selectionModel.columnSelectMode);\n    }\n  }\n\n  public reset(): void {\n    if (this._state.start && this._state.end) {\n      this._clearState();\n      this._clearAll();\n    }\n  }\n\n  public handleBlur(): void {\n    this.reset();\n    this._redrawSelection(this._selectionModel.selectionStart, this._selectionModel.selectionEnd, this._selectionModel.columnSelectMode);\n  }\n\n  public handleFocus(): void {\n    this.reset();\n    this._redrawSelection(this._selectionModel.selectionStart, this._selectionModel.selectionEnd, this._selectionModel.columnSelectMode);\n  }\n\n  public handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    super.handleSelectionChanged(start, end, columnSelectMode);\n    this._redrawSelection(start, end, columnSelectMode);\n  }\n\n  private _redrawSelection(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    // Selection has not changed\n    if (!this._didStateChange(start, end, columnSelectMode, this._bufferService.buffer.ydisp)) {\n      return;\n    }\n\n    // Remove all selections\n    this._clearAll();\n\n    // Selection does not exist\n    if (!start || !end) {\n      this._clearState();\n      return;\n    }\n\n    // Translate from buffer position to viewport position\n    const viewportStartRow = start[1] - this._bufferService.buffer.ydisp;\n    const viewportEndRow = end[1] - this._bufferService.buffer.ydisp;\n    const viewportCappedStartRow = Math.max(viewportStartRow, 0);\n    const viewportCappedEndRow = Math.min(viewportEndRow, this._bufferService.rows - 1);\n\n    // No need to draw the selection\n    if (viewportCappedStartRow >= this._bufferService.rows || viewportCappedEndRow < 0) {\n      this._state.ydisp = this._bufferService.buffer.ydisp;\n      return;\n    }\n\n    this._ctx.fillStyle = (this._coreBrowserService.isFocused\n      ? this._themeService.colors.selectionBackgroundTransparent\n      : this._themeService.colors.selectionInactiveBackgroundTransparent).css;\n\n    if (columnSelectMode) {\n      const startCol = start[0];\n      const width = end[0] - startCol;\n      const height = viewportCappedEndRow - viewportCappedStartRow + 1;\n      this._fillCells(startCol, viewportCappedStartRow, width, height);\n    } else {\n      // Draw first row\n      const startCol = viewportStartRow === viewportCappedStartRow ? start[0] : 0;\n      const startRowEndCol = viewportCappedStartRow === viewportEndRow ? end[0] : this._bufferService.cols;\n      this._fillCells(startCol, viewportCappedStartRow, startRowEndCol - startCol, 1);\n\n      // Draw middle rows\n      const middleRowsCount = Math.max(viewportCappedEndRow - viewportCappedStartRow - 1, 0);\n      this._fillCells(0, viewportCappedStartRow + 1, this._bufferService.cols, middleRowsCount);\n\n      // Draw final row\n      if (viewportCappedStartRow !== viewportCappedEndRow) {\n        // Only draw viewportEndRow if it's not the same as viewportStartRow\n        const endCol = viewportEndRow === viewportCappedEndRow ? end[0] : this._bufferService.cols;\n        this._fillCells(0, viewportCappedEndRow, endCol, 1);\n      }\n    }\n\n    // Save state for next render\n    this._state.start = [start[0], start[1]];\n    this._state.end = [end[0], end[1]];\n    this._state.columnSelectMode = columnSelectMode;\n    this._state.ydisp = this._bufferService.buffer.ydisp;\n  }\n\n  private _didStateChange(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean, ydisp: number): boolean {\n    return !this._areCoordinatesEqual(start, this._state.start) ||\n      !this._areCoordinatesEqual(end, this._state.end) ||\n      columnSelectMode !== this._state.columnSelectMode ||\n      ydisp !== this._state.ydisp;\n  }\n\n  private _areCoordinatesEqual(coord1: [number, number] | undefined, coord2: [number, number] | undefined): boolean {\n    if (!coord1 || !coord2) {\n      return false;\n    }\n\n    return coord1[0] === coord2[0] && coord1[1] === coord2[1];\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions } from 'browser/renderer/shared/Types';\nimport { CharData, ICellData } from 'common/Types';\nimport { GridCache } from './GridCache';\nimport { BaseRenderLayer } from './BaseRenderLayer';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { NULL_CELL_CODE, Content, UnderlineStyle } from 'common/buffer/Constants';\nimport { IColorSet, ReadonlyColorSet } from 'browser/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { IOptionsService, IBufferService, IDecorationService } from 'common/services/Services';\nimport { ICharacterJoinerService, ICoreBrowserService, IThemeService } from 'browser/services/Services';\nimport { JoinedCellData } from 'browser/services/CharacterJoinerService';\nimport { color, css } from 'common/Color';\nimport { Terminal } from 'xterm';\n\n/**\n * This CharData looks like a null character, which will forc a clear and render\n * when the character changes (a regular space ' ' character may not as it's\n * drawn state is a cleared cell).\n */\n// const OVERLAP_OWNED_CHAR_DATA: CharData = [null, '', 0, -1];\n\nexport class TextRenderLayer extends BaseRenderLayer {\n  private _state: GridCache<CharData>;\n  private _characterWidth: number = 0;\n  private _characterFont: string = '';\n  private _characterOverlapCache: { [key: string]: boolean } = {};\n  private _workCell = new CellData();\n\n  constructor(\n    terminal: Terminal,\n    container: HTMLElement,\n    zIndex: number,\n    alpha: boolean,\n    bufferService: IBufferService,\n    optionsService: IOptionsService,\n    private readonly _characterJoinerService: ICharacterJoinerService,\n    decorationService: IDecorationService,\n    coreBrowserService: ICoreBrowserService,\n    themeService: IThemeService\n  ) {\n    super(terminal, container, 'text', zIndex, alpha, themeService, bufferService, optionsService, decorationService, coreBrowserService);\n    this._state = new GridCache<CharData>();\n    this.register(optionsService.onSpecificOptionChange('allowTransparency', value => this._setTransparency(value)));\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    super.resize(dim);\n\n    // Clear the character width cache if the font or width has changed\n    const terminalFont = this._getFont(false, false);\n    if (this._characterWidth !== dim.device.char.width || this._characterFont !== terminalFont) {\n      this._characterWidth = dim.device.char.width;\n      this._characterFont = terminalFont;\n      this._characterOverlapCache = {};\n    }\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._state.clear();\n    this._state.resize(this._bufferService.cols, this._bufferService.rows);\n  }\n\n  public reset(): void {\n    this._state.clear();\n    this._clearAll();\n  }\n\n  private _forEachCell(\n    firstRow: number,\n    lastRow: number,\n    callback: (\n      cell: ICellData,\n      x: number,\n      y: number\n    ) => void\n  ): void {\n    for (let y = firstRow; y <= lastRow; y++) {\n      const row = y + this._bufferService.buffer.ydisp;\n      const line = this._bufferService.buffer.lines.get(row);\n      const joinedRanges = this._characterJoinerService.getJoinedCharacters(row);\n      for (let x = 0; x < this._bufferService.cols; x++) {\n        line!.loadCell(x, this._workCell);\n        let cell = this._workCell;\n\n        // If true, indicates that the current character(s) to draw were joined.\n        let isJoined = false;\n        let lastCharX = x;\n\n        // The character to the left is a wide character, drawing is owned by\n        // the char at x-1\n        if (cell.getWidth() === 0) {\n          continue;\n        }\n\n        // exit early for NULL and SP\n        const code = cell.getCode();\n        if (code === 0 || code === 32) {\n          continue;\n        }\n\n        // Process any joined character ranges as needed. Because of how the\n        // ranges are produced, we know that they are valid for the characters\n        // and attributes of our input.\n        if (joinedRanges.length > 0 && x === joinedRanges[0][0]) {\n          isJoined = true;\n          const range = joinedRanges.shift()!;\n\n          // We already know the exact start and end column of the joined range,\n          // so we get the string and width representing it directly\n          cell = new JoinedCellData(\n            this._workCell,\n            line!.translateToString(true, range[0], range[1]),\n            range[1] - range[0]\n          );\n\n          // Skip over the cells occupied by this range in the loop\n          lastCharX = range[1] - 1;\n        }\n\n        // If the character is an overlapping char and the character to the\n        // right is a space, take ownership of the cell to the right. We skip\n        // this check for joined characters because their rendering likely won't\n        // yield the same result as rendering the last character individually.\n        if (!isJoined && this._isOverlapping(cell)) {\n          // If the character is overlapping, we want to force a re-render on every\n          // frame. This is specifically to work around the case where two\n          // overlaping chars `a` and `b` are adjacent, the cursor is moved to b and a\n          // space is added. Without this, the first half of `b` would never\n          // get removed, and `a` would not re-render because it thinks it's\n          // already in the correct state.\n          // this._state.cache[x][y] = OVERLAP_OWNED_CHAR_DATA;\n          if (lastCharX < line!.length - 1 && line!.getCodePoint(lastCharX + 1) === NULL_CELL_CODE) {\n            // patch width to 2\n            cell.content &= ~Content.WIDTH_MASK;\n            cell.content |= 2 << Content.WIDTH_SHIFT;\n            // this._clearChar(x + 1, y);\n            // The overlapping char's char data will force a clear and render when the\n            // overlapping char is no longer to the left of the character and also when\n            // the space changes to another character.\n            // this._state.cache[x + 1][y] = OVERLAP_OWNED_CHAR_DATA;\n          }\n        }\n\n        callback(\n          cell,\n          x,\n          y\n        );\n\n        x = lastCharX;\n      }\n    }\n  }\n\n  /**\n   * Draws the background for a specified range of columns. Tries to batch adjacent cells of the\n   * same color together to reduce draw calls.\n   */\n  private _drawBackground(firstRow: number, lastRow: number): void {\n    const ctx = this._ctx;\n    const cols = this._bufferService.cols;\n    let startX: number = 0;\n    let startY: number = 0;\n    let prevFillStyle: string | null = null;\n\n    ctx.save();\n\n    this._forEachCell(firstRow, lastRow, (cell, x, y) => {\n      // libvte and xterm both draw the background (but not foreground) of invisible characters,\n      // so we should too.\n      let nextFillStyle = null; // null represents default background color\n\n      if (cell.isInverse()) {\n        if (cell.isFgDefault()) {\n          nextFillStyle = this._themeService.colors.foreground.css;\n        } else if (cell.isFgRGB()) {\n          nextFillStyle = `rgb(${AttributeData.toColorRGB(cell.getFgColor()).join(',')})`;\n        } else {\n          nextFillStyle = this._themeService.colors.ansi[cell.getFgColor()].css;\n        }\n      } else if (cell.isBgRGB()) {\n        nextFillStyle = `rgb(${AttributeData.toColorRGB(cell.getBgColor()).join(',')})`;\n      } else if (cell.isBgPalette()) {\n        nextFillStyle = this._themeService.colors.ansi[cell.getBgColor()].css;\n      }\n\n      // Apply dim to the background, this is relatively slow as the CSS is re-parsed but dim is\n      // rarely used\n      if (nextFillStyle && cell.isDim()) {\n        nextFillStyle = color.multiplyOpacity(css.toColor(nextFillStyle), 0.5).css;\n      }\n\n      // Get any decoration foreground/background overrides, this must be fetched before the early\n      // exist but applied after inverse\n      let isTop = false;\n      this._decorationService.forEachDecorationAtCell(x, this._bufferService.buffer.ydisp + y, undefined, d => {\n        if (d.options.layer !== 'top' && isTop) {\n          return;\n        }\n        if (d.backgroundColorRGB) {\n          nextFillStyle = d.backgroundColorRGB.css;\n        }\n        isTop = d.options.layer === 'top';\n      });\n\n      if (prevFillStyle === null) {\n        // This is either the first iteration, or the default background was set. Either way, we\n        // don't need to draw anything.\n        startX = x;\n        startY = y;\n      }\n\n      if (y !== startY) {\n        // our row changed, draw the previous row\n        ctx.fillStyle = prevFillStyle || '';\n        this._fillCells(startX, startY, cols - startX, 1);\n        startX = x;\n        startY = y;\n      } else if (prevFillStyle !== nextFillStyle) {\n        // our color changed, draw the previous characters in this row\n        ctx.fillStyle = prevFillStyle || '';\n        this._fillCells(startX, startY, x - startX, 1);\n        startX = x;\n        startY = y;\n      }\n\n      prevFillStyle = nextFillStyle;\n    });\n\n    // flush the last color we encountered\n    if (prevFillStyle !== null) {\n      ctx.fillStyle = prevFillStyle;\n      this._fillCells(startX, startY, cols - startX, 1);\n    }\n\n    ctx.restore();\n  }\n\n  private _drawForeground(firstRow: number, lastRow: number): void {\n    this._forEachCell(firstRow, lastRow, (cell, x, y) => this._drawChars(cell, x, y));\n  }\n\n  public handleGridChanged(firstRow: number, lastRow: number): void {\n    // Resize has not been called yet\n    if (this._state.cache.length === 0) {\n      return;\n    }\n\n    if (this._charAtlas) {\n      this._charAtlas.beginFrame();\n    }\n\n    this._clearCells(0, firstRow, this._bufferService.cols, lastRow - firstRow + 1);\n    this._drawBackground(firstRow, lastRow);\n    this._drawForeground(firstRow, lastRow);\n  }\n\n  /**\n   * Whether a character is overlapping to the next cell.\n   */\n  private _isOverlapping(cell: ICellData): boolean {\n    // Only single cell characters can be overlapping, rendering issues can\n    // occur without this check\n    if (cell.getWidth() !== 1) {\n      return false;\n    }\n\n    // We assume that any ascii character will not overlap\n    if (cell.getCode() < 256) {\n      return false;\n    }\n\n    const chars = cell.getChars();\n\n    // Deliver from cache if available\n    if (this._characterOverlapCache.hasOwnProperty(chars)) {\n      return this._characterOverlapCache[chars];\n    }\n\n    // Setup the font\n    this._ctx.save();\n    this._ctx.font = this._characterFont;\n\n    // Measure the width of the character, but Math.floor it\n    // because that is what the renderer does when it calculates\n    // the character dimensions we are comparing against\n    const overlaps = Math.floor(this._ctx.measureText(chars).width) > this._characterWidth;\n\n    // Restore the original context\n    this._ctx.restore();\n\n    // Cache and return\n    this._characterOverlapCache[chars] = overlaps;\n    return overlaps;\n  }\n}\n","/**\n * Copyright (c) 2020 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function removeElementFromParent(...elements: (HTMLElement | undefined)[]): void {\n  for (const e of elements) {\n    e?.parentElement?.removeChild(e);\n  }\n}\n","import { ISelectionRenderModel } from 'browser/renderer/shared/Types';\nimport { ICoreBrowserService, IThemeService } from 'browser/services/Services';\nimport { IColorSet, ReadonlyColorSet } from 'browser/Types';\nimport { Attributes, BgFlags, FgFlags } from 'common/buffer/Constants';\nimport { IDecorationService } from 'common/services/Services';\nimport { ICellData } from 'common/Types';\nimport { Terminal } from 'xterm';\n\n// Work variables to avoid garbage collection\nlet $fg = 0;\nlet $bg = 0;\nlet $hasFg = false;\nlet $hasBg = false;\nlet $isSelected = false;\nlet $colors: ReadonlyColorSet | undefined;\n\nexport class CellColorResolver {\n  /**\n   * The shared result of the {@link resolve} call. This is only safe to use immediately after as\n   * any other calls will share object.\n   */\n  public readonly result: { fg: number, bg: number, ext: number } = {\n    fg: 0,\n    bg: 0,\n    ext: 0\n  };\n\n  constructor(\n    private readonly _terminal: Terminal,\n    private readonly _selectionRenderModel: ISelectionRenderModel,\n    private readonly _decorationService: IDecorationService,\n    private readonly _coreBrowserService: ICoreBrowserService,\n    private readonly _themeService: IThemeService\n  ) {\n  }\n\n  /**\n   * Resolves colors for the cell, putting the result into the shared {@link result}. This resolves\n   * overrides, inverse and selection for the cell which can then be used to feed into the renderer.\n   */\n  public resolve(cell: ICellData, x: number, y: number): void {\n    this.result.bg = cell.bg;\n    this.result.fg = cell.fg;\n    this.result.ext = cell.bg & BgFlags.HAS_EXTENDED ? cell.extended.ext : 0;\n    // Get any foreground/background overrides, this happens on the model to avoid spreading\n    // override logic throughout the different sub-renderers\n\n    // Reset overrides work variables\n    $bg = 0;\n    $fg = 0;\n    $hasBg = false;\n    $hasFg = false;\n    $isSelected = false;\n    $colors = this._themeService.colors;\n\n    // Apply decorations on the bottom layer\n    this._decorationService.forEachDecorationAtCell(x, y, 'bottom', d => {\n      if (d.backgroundColorRGB) {\n        $bg = d.backgroundColorRGB.rgba >> 8 & 0xFFFFFF;\n        $hasBg = true;\n      }\n      if (d.foregroundColorRGB) {\n        $fg = d.foregroundColorRGB.rgba >> 8 & 0xFFFFFF;\n        $hasFg = true;\n      }\n    });\n\n    // Apply the selection color if needed\n    $isSelected = this._selectionRenderModel.isCellSelected(this._terminal, x, y);\n    if ($isSelected) {\n      $bg = (this._coreBrowserService.isFocused ? $colors.selectionBackgroundOpaque : $colors.selectionInactiveBackgroundOpaque).rgba >> 8 & 0xFFFFFF;\n      $hasBg = true;\n      if ($colors.selectionForeground) {\n        $fg = $colors.selectionForeground.rgba >> 8 & 0xFFFFFF;\n        $hasFg = true;\n      }\n    }\n\n    // Apply decorations on the top layer\n    this._decorationService.forEachDecorationAtCell(x, y, 'top', d => {\n      if (d.backgroundColorRGB) {\n        $bg = d.backgroundColorRGB.rgba >> 8 & 0xFFFFFF;\n        $hasBg = true;\n      }\n      if (d.foregroundColorRGB) {\n        $fg = d.foregroundColorRGB.rgba >> 8 & 0xFFFFFF;\n        $hasFg = true;\n      }\n    });\n\n    // Convert any overrides from rgba to the fg/bg packed format. This resolves the inverse flag\n    // ahead of time in order to use the correct cache key\n    if ($hasBg) {\n      if ($isSelected) {\n        // Non-RGB attributes from model + force non-dim + override + force RGB color mode\n        $bg = (cell.bg & ~Attributes.RGB_MASK & ~BgFlags.DIM) | $bg | Attributes.CM_RGB;\n      } else {\n        // Non-RGB attributes from model + override + force RGB color mode\n        $bg = (cell.bg & ~Attributes.RGB_MASK) | $bg | Attributes.CM_RGB;\n      }\n    }\n    if ($hasFg) {\n      // Non-RGB attributes from model + force disable inverse + override + force RGB color mode\n      $fg = (cell.fg & ~Attributes.RGB_MASK & ~FgFlags.INVERSE) | $fg | Attributes.CM_RGB;\n    }\n\n    // Handle case where inverse was specified by only one of bg override or fg override was set,\n    // resolving the other inverse color and setting the inverse flag if needed.\n    if (this.result.fg & FgFlags.INVERSE) {\n      if ($hasBg && !$hasFg) {\n        // Resolve bg color type (default color has a different meaning in fg vs bg)\n        if ((this.result.bg & Attributes.CM_MASK) === Attributes.CM_DEFAULT) {\n          $fg = (this.result.fg & ~(Attributes.RGB_MASK | FgFlags.INVERSE | Attributes.CM_MASK)) | (($colors.background.rgba >> 8 & 0xFFFFFF) & Attributes.RGB_MASK) | Attributes.CM_RGB;\n        } else {\n          $fg = (this.result.fg & ~(Attributes.RGB_MASK | FgFlags.INVERSE | Attributes.CM_MASK)) | this.result.bg & (Attributes.RGB_MASK | Attributes.CM_MASK);\n        }\n        $hasFg = true;\n      }\n      if (!$hasBg && $hasFg) {\n        // Resolve bg color type (default color has a different meaning in fg vs bg)\n        if ((this.result.fg & Attributes.CM_MASK) === Attributes.CM_DEFAULT) {\n          $bg = (this.result.bg & ~(Attributes.RGB_MASK | Attributes.CM_MASK)) | (($colors.foreground.rgba >> 8 & 0xFFFFFF) & Attributes.RGB_MASK) | Attributes.CM_RGB;\n        } else {\n          $bg = (this.result.bg & ~(Attributes.RGB_MASK | Attributes.CM_MASK)) | this.result.fg & (Attributes.RGB_MASK | Attributes.CM_MASK);\n        }\n        $hasBg = true;\n      }\n    }\n\n    // Release object\n    $colors = undefined;\n\n    // Use the override if it exists\n    this.result.bg = $hasBg ? $bg : this.result.bg;\n    this.result.fg = $hasFg ? $fg : this.result.fg;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { TextureAtlas } from 'browser/renderer/shared/TextureAtlas';\nimport { ITerminalOptions, Terminal } from 'xterm';\nimport { ITerminal, ReadonlyColorSet } from 'browser/Types';\nimport { ICharAtlasConfig, ITextureAtlas } from 'browser/renderer/shared/Types';\nimport { generateConfig, configEquals } from 'browser/renderer/shared/CharAtlasUtils';\n\ninterface ITextureAtlasCacheEntry {\n  atlas: ITextureAtlas;\n  config: ICharAtlasConfig;\n  // N.B. This implementation potentially holds onto copies of the terminal forever, so\n  // this may cause memory leaks.\n  ownedBy: Terminal[];\n}\n\nconst charAtlasCache: ITextureAtlasCacheEntry[] = [];\n\n/**\n * Acquires a char atlas, either generating a new one or returning an existing\n * one that is in use by another terminal.\n */\nexport function acquireTextureAtlas(\n  terminal: Terminal,\n  options: Required<ITerminalOptions>,\n  colors: ReadonlyColorSet,\n  deviceCellWidth: number,\n  deviceCellHeight: number,\n  deviceCharWidth: number,\n  deviceCharHeight: number,\n  devicePixelRatio: number\n): ITextureAtlas {\n  const newConfig = generateConfig(deviceCellWidth, deviceCellHeight, deviceCharWidth, deviceCharHeight, options, colors, devicePixelRatio);\n\n  // Check to see if the terminal already owns this config\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const entry = charAtlasCache[i];\n    const ownedByIndex = entry.ownedBy.indexOf(terminal);\n    if (ownedByIndex >= 0) {\n      if (configEquals(entry.config, newConfig)) {\n        return entry.atlas;\n      }\n      // The configs differ, release the terminal from the entry\n      if (entry.ownedBy.length === 1) {\n        entry.atlas.dispose();\n        charAtlasCache.splice(i, 1);\n      } else {\n        entry.ownedBy.splice(ownedByIndex, 1);\n      }\n      break;\n    }\n  }\n\n  // Try match a char atlas from the cache\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const entry = charAtlasCache[i];\n    if (configEquals(entry.config, newConfig)) {\n      // Add the terminal to the cache entry and return\n      entry.ownedBy.push(terminal);\n      return entry.atlas;\n    }\n  }\n\n  const core: ITerminal = (terminal as any)._core;\n  const newEntry: ITextureAtlasCacheEntry = {\n    atlas: new TextureAtlas(document, newConfig, core.unicodeService),\n    config: newConfig,\n    ownedBy: [terminal]\n  };\n  charAtlasCache.push(newEntry);\n  return newEntry.atlas;\n}\n\n/**\n * Removes a terminal reference from the cache, allowing its memory to be freed.\n * @param terminal The terminal to remove.\n */\nexport function removeTerminalFromCache(terminal: Terminal): void {\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const index = charAtlasCache[i].ownedBy.indexOf(terminal);\n    if (index !== -1) {\n      if (charAtlasCache[i].ownedBy.length === 1) {\n        // Remove the cache entry if it's the only terminal\n        charAtlasCache[i].atlas.dispose();\n        charAtlasCache.splice(i, 1);\n      } else {\n        // Remove the reference from the cache entry\n        charAtlasCache[i].ownedBy.splice(index, 1);\n      }\n      break;\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharAtlasConfig } from './Types';\nimport { Attributes } from 'common/buffer/Constants';\nimport { ITerminalOptions } from 'xterm';\nimport { IColorSet, ReadonlyColorSet } from 'browser/Types';\nimport { NULL_COLOR } from 'common/Color';\n\nexport function generateConfig(deviceCellWidth: number, deviceCellHeight: number, deviceCharWidth: number, deviceCharHeight: number, options: Required<ITerminalOptions>, colors: ReadonlyColorSet, devicePixelRatio: number): ICharAtlasConfig {\n  // null out some fields that don't matter\n  const clonedColors: IColorSet = {\n    foreground: colors.foreground,\n    background: colors.background,\n    cursor: NULL_COLOR,\n    cursorAccent: NULL_COLOR,\n    selectionForeground: NULL_COLOR,\n    selectionBackgroundTransparent: NULL_COLOR,\n    selectionBackgroundOpaque: NULL_COLOR,\n    selectionInactiveBackgroundTransparent: NULL_COLOR,\n    selectionInactiveBackgroundOpaque: NULL_COLOR,\n    // For the static char atlas, we only use the first 16 colors, but we need all 256 for the\n    // dynamic character atlas.\n    ansi: colors.ansi.slice(),\n    contrastCache: colors.contrastCache\n  };\n  return {\n    customGlyphs: options.customGlyphs,\n    devicePixelRatio,\n    letterSpacing: options.letterSpacing,\n    lineHeight: options.lineHeight,\n    deviceCellWidth: deviceCellWidth,\n    deviceCellHeight: deviceCellHeight,\n    deviceCharWidth: deviceCharWidth,\n    deviceCharHeight: deviceCharHeight,\n    fontFamily: options.fontFamily,\n    fontSize: options.fontSize,\n    fontWeight: options.fontWeight,\n    fontWeightBold: options.fontWeightBold,\n    allowTransparency: options.allowTransparency,\n    drawBoldTextInBrightColors: options.drawBoldTextInBrightColors,\n    minimumContrastRatio: options.minimumContrastRatio,\n    colors: clonedColors\n  };\n}\n\nexport function configEquals(a: ICharAtlasConfig, b: ICharAtlasConfig): boolean {\n  for (let i = 0; i < a.colors.ansi.length; i++) {\n    if (a.colors.ansi[i].rgba !== b.colors.ansi[i].rgba) {\n      return false;\n    }\n  }\n  return a.devicePixelRatio === b.devicePixelRatio &&\n      a.customGlyphs === b.customGlyphs &&\n      a.lineHeight === b.lineHeight &&\n      a.letterSpacing === b.letterSpacing &&\n      a.fontFamily === b.fontFamily &&\n      a.fontSize === b.fontSize &&\n      a.fontWeight === b.fontWeight &&\n      a.fontWeightBold === b.fontWeightBold &&\n      a.allowTransparency === b.allowTransparency &&\n      a.deviceCharWidth === b.deviceCharWidth &&\n      a.deviceCharHeight === b.deviceCharHeight &&\n      a.drawBoldTextInBrightColors === b.drawBoldTextInBrightColors &&\n      a.minimumContrastRatio === b.minimumContrastRatio &&\n      a.colors.foreground.rgba === b.colors.foreground.rgba &&\n      a.colors.background.rgba === b.colors.background.rgba;\n}\n\nexport function is256Color(colorCode: number): boolean {\n  return (colorCode & Attributes.CM_MASK) === Attributes.CM_P16 || (colorCode & Attributes.CM_MASK) === Attributes.CM_P256;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isFirefox, isLegacyEdge } from 'common/Platform';\n\nexport const INVERTED_DEFAULT_COLOR = 257;\n\nexport const DIM_OPACITY = 0.5;\n// The text baseline is set conditionally by browser. Using 'ideographic' for Firefox or Legacy Edge would\n// result in truncated text (Issue 3353). Using 'bottom' for Chrome would result in slightly\n// unaligned Powerline fonts (PR 3356#issuecomment-850928179).\nexport const TEXT_BASELINE: CanvasTextBaseline = isFirefox || isLegacyEdge ? 'bottom' : 'ideographic';\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { throwIfFalsy } from 'browser/renderer/shared/RendererUtils';\n\ninterface IBlockVector {\n  x: number;\n  y: number;\n  w: number;\n  h: number;\n}\n\nexport const blockElementDefinitions: { [index: string]: IBlockVector[] | undefined } = {\n  // Block elements (0x2580-0x2590)\n  '▀': [{ x: 0, y: 0, w: 8, h: 4 }], // UPPER HALF BLOCK\n  '▁': [{ x: 0, y: 7, w: 8, h: 1 }], // LOWER ONE EIGHTH BLOCK\n  '▂': [{ x: 0, y: 6, w: 8, h: 2 }], // LOWER ONE QUARTER BLOCK\n  '▃': [{ x: 0, y: 5, w: 8, h: 3 }], // LOWER THREE EIGHTHS BLOCK\n  '▄': [{ x: 0, y: 4, w: 8, h: 4 }], // LOWER HALF BLOCK\n  '▅': [{ x: 0, y: 3, w: 8, h: 5 }], // LOWER FIVE EIGHTHS BLOCK\n  '▆': [{ x: 0, y: 2, w: 8, h: 6 }], // LOWER THREE QUARTERS BLOCK\n  '▇': [{ x: 0, y: 1, w: 8, h: 7 }], // LOWER SEVEN EIGHTHS BLOCK\n  '█': [{ x: 0, y: 0, w: 8, h: 8 }], // FULL BLOCK\n  '▉': [{ x: 0, y: 0, w: 7, h: 8 }], // LEFT SEVEN EIGHTHS BLOCK\n  '▊': [{ x: 0, y: 0, w: 6, h: 8 }], // LEFT THREE QUARTERS BLOCK\n  '▋': [{ x: 0, y: 0, w: 5, h: 8 }], // LEFT FIVE EIGHTHS BLOCK\n  '▌': [{ x: 0, y: 0, w: 4, h: 8 }], // LEFT HALF BLOCK\n  '▍': [{ x: 0, y: 0, w: 3, h: 8 }], // LEFT THREE EIGHTHS BLOCK\n  '▎': [{ x: 0, y: 0, w: 2, h: 8 }], // LEFT ONE QUARTER BLOCK\n  '▏': [{ x: 0, y: 0, w: 1, h: 8 }], // LEFT ONE EIGHTH BLOCK\n  '▐': [{ x: 4, y: 0, w: 4, h: 8 }], // RIGHT HALF BLOCK\n\n  // Block elements (0x2594-0x2595)\n  '▔': [{ x: 0, y: 0, w: 8, h: 1 }], // UPPER ONE EIGHTH BLOCK\n  '▕': [{ x: 7, y: 0, w: 1, h: 8 }], // RIGHT ONE EIGHTH BLOCK\n\n  // Terminal graphic characters (0x2596-0x259F)\n  '▖': [{ x: 0, y: 4, w: 4, h: 4 }],                             // QUADRANT LOWER LEFT\n  '▗': [{ x: 4, y: 4, w: 4, h: 4 }],                             // QUADRANT LOWER RIGHT\n  '▘': [{ x: 0, y: 0, w: 4, h: 4 }],                             // QUADRANT UPPER LEFT\n  '▙': [{ x: 0, y: 0, w: 4, h: 8 }, { x: 0, y: 4, w: 8, h: 4 }], // QUADRANT UPPER LEFT AND LOWER LEFT AND LOWER RIGHT\n  '▚': [{ x: 0, y: 0, w: 4, h: 4 }, { x: 4, y: 4, w: 4, h: 4 }], // QUADRANT UPPER LEFT AND LOWER RIGHT\n  '▛': [{ x: 0, y: 0, w: 4, h: 8 }, { x: 4, y: 0, w: 4, h: 4 }], // QUADRANT UPPER LEFT AND UPPER RIGHT AND LOWER LEFT\n  '▜': [{ x: 0, y: 0, w: 8, h: 4 }, { x: 4, y: 0, w: 4, h: 8 }], // QUADRANT UPPER LEFT AND UPPER RIGHT AND LOWER RIGHT\n  '▝': [{ x: 4, y: 0, w: 4, h: 4 }],                             // QUADRANT UPPER RIGHT\n  '▞': [{ x: 4, y: 0, w: 4, h: 4 }, { x: 0, y: 4, w: 4, h: 4 }], // QUADRANT UPPER RIGHT AND LOWER LEFT\n  '▟': [{ x: 4, y: 0, w: 4, h: 8 }, { x: 0, y: 4, w: 8, h: 4 }], // QUADRANT UPPER RIGHT AND LOWER LEFT AND LOWER RIGHT\n\n  // VERTICAL ONE EIGHTH BLOCK-2 through VERTICAL ONE EIGHTH BLOCK-7\n  '\\u{1FB70}': [{ x: 1, y: 0, w: 1, h: 8 }],\n  '\\u{1FB71}': [{ x: 2, y: 0, w: 1, h: 8 }],\n  '\\u{1FB72}': [{ x: 3, y: 0, w: 1, h: 8 }],\n  '\\u{1FB73}': [{ x: 4, y: 0, w: 1, h: 8 }],\n  '\\u{1FB74}': [{ x: 5, y: 0, w: 1, h: 8 }],\n  '\\u{1FB75}': [{ x: 6, y: 0, w: 1, h: 8 }],\n\n  // HORIZONTAL ONE EIGHTH BLOCK-2 through HORIZONTAL ONE EIGHTH BLOCK-7\n  '\\u{1FB76}': [{ x: 0, y: 1, w: 8, h: 1 }],\n  '\\u{1FB77}': [{ x: 0, y: 2, w: 8, h: 1 }],\n  '\\u{1FB78}': [{ x: 0, y: 3, w: 8, h: 1 }],\n  '\\u{1FB79}': [{ x: 0, y: 4, w: 8, h: 1 }],\n  '\\u{1FB7A}': [{ x: 0, y: 5, w: 8, h: 1 }],\n  '\\u{1FB7B}': [{ x: 0, y: 6, w: 8, h: 1 }],\n\n  // LEFT AND LOWER ONE EIGHTH BLOCK\n  '\\u{1FB7C}': [{ x: 0, y: 0, w: 1, h: 8 }, { x: 0, y: 7, w: 8, h: 1 }],\n  // LEFT AND UPPER ONE EIGHTH BLOCK\n  '\\u{1FB7D}': [{ x: 0, y: 0, w: 1, h: 8 }, { x: 0, y: 0, w: 8, h: 1 }],\n  // RIGHT AND UPPER ONE EIGHTH BLOCK\n  '\\u{1FB7E}': [{ x: 7, y: 0, w: 1, h: 8 }, { x: 0, y: 0, w: 8, h: 1 }],\n  // RIGHT AND LOWER ONE EIGHTH BLOCK\n  '\\u{1FB7F}': [{ x: 7, y: 0, w: 1, h: 8 }, { x: 0, y: 7, w: 8, h: 1 }],\n  // UPPER AND LOWER ONE EIGHTH BLOCK\n  '\\u{1FB80}': [{ x: 0, y: 0, w: 8, h: 1 }, { x: 0, y: 7, w: 8, h: 1 }],\n  // HORIZONTAL ONE EIGHTH BLOCK-1358\n  '\\u{1FB81}': [{ x: 0, y: 0, w: 8, h: 1 }, { x: 0, y: 2, w: 8, h: 1 }, { x: 0, y: 4, w: 8, h: 1 }, { x: 0, y: 7, w: 8, h: 1 }],\n\n  // UPPER ONE QUARTER BLOCK\n  '\\u{1FB82}': [{ x: 0, y: 0, w: 8, h: 2 }],\n  // UPPER THREE EIGHTHS BLOCK\n  '\\u{1FB83}': [{ x: 0, y: 0, w: 8, h: 3 }],\n  // UPPER FIVE EIGHTHS BLOCK\n  '\\u{1FB84}': [{ x: 0, y: 0, w: 8, h: 5 }],\n  // UPPER THREE QUARTERS BLOCK\n  '\\u{1FB85}': [{ x: 0, y: 0, w: 8, h: 6 }],\n  // UPPER SEVEN EIGHTHS BLOCK\n  '\\u{1FB86}': [{ x: 0, y: 0, w: 8, h: 7 }],\n\n  // RIGHT ONE QUARTER BLOCK\n  '\\u{1FB87}': [{ x: 6, y: 0, w: 2, h: 8 }],\n  // RIGHT THREE EIGHTHS B0OCK\n  '\\u{1FB88}': [{ x: 5, y: 0, w: 3, h: 8 }],\n  // RIGHT FIVE EIGHTHS BL0CK\n  '\\u{1FB89}': [{ x: 3, y: 0, w: 5, h: 8 }],\n  // RIGHT THREE QUARTERS 0LOCK\n  '\\u{1FB8A}': [{ x: 2, y: 0, w: 6, h: 8 }],\n  // RIGHT SEVEN EIGHTHS B0OCK\n  '\\u{1FB8B}': [{ x: 1, y: 0, w: 7, h: 8 }],\n\n  // CHECKER BOARD FILL\n  '\\u{1FB95}': [\n    { x: 0, y: 0, w: 2, h: 2 }, { x: 4, y: 0, w: 2, h: 2 },\n    { x: 2, y: 2, w: 2, h: 2 }, { x: 6, y: 2, w: 2, h: 2 },\n    { x: 0, y: 4, w: 2, h: 2 }, { x: 4, y: 4, w: 2, h: 2 },\n    { x: 2, y: 6, w: 2, h: 2 }, { x: 6, y: 6, w: 2, h: 2 }\n  ],\n  // INVERSE CHECKER BOARD FILL\n  '\\u{1FB96}': [\n    { x: 2, y: 0, w: 2, h: 2 }, { x: 6, y: 0, w: 2, h: 2 },\n    { x: 0, y: 2, w: 2, h: 2 }, { x: 4, y: 2, w: 2, h: 2 },\n    { x: 2, y: 4, w: 2, h: 2 }, { x: 6, y: 4, w: 2, h: 2 },\n    { x: 0, y: 6, w: 2, h: 2 }, { x: 4, y: 6, w: 2, h: 2 }\n  ],\n  // HEAVY HORIZONTAL FILL (upper middle and lower one quarter block)\n  '\\u{1FB97}': [{ x: 0, y: 2, w: 8, h: 2 }, { x: 0, y: 6, w: 8, h: 2 }]\n};\n\ntype PatternDefinition = number[][];\n\n/**\n * Defines the repeating pattern used by special characters, the pattern is made up of a 2d array of\n * pixel values to be filled (1) or not filled (0).\n */\nconst patternCharacterDefinitions: { [key: string]: PatternDefinition | undefined } = {\n  // Shade characters (0x2591-0x2593)\n  '░': [ // LIGHT SHADE (25%)\n    [1, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 1, 0],\n    [0, 0, 0, 0]\n  ],\n  '▒': [ // MEDIUM SHADE (50%)\n    [1, 0],\n    [0, 0],\n    [0, 1],\n    [0, 0]\n  ],\n  '▓': [ // DARK SHADE (75%)\n    [0, 1],\n    [1, 1],\n    [1, 0],\n    [1, 1]\n  ]\n};\n\nconst enum Shapes {\n  /** │ */ TOP_TO_BOTTOM = 'M.5,0 L.5,1',\n  /** ─ */ LEFT_TO_RIGHT = 'M0,.5 L1,.5',\n\n  /** └ */ TOP_TO_RIGHT = 'M.5,0 L.5,.5 L1,.5',\n  /** ┘ */ TOP_TO_LEFT = 'M.5,0 L.5,.5 L0,.5',\n  /** ┐ */ LEFT_TO_BOTTOM = 'M0,.5 L.5,.5 L.5,1',\n  /** ┌ */ RIGHT_TO_BOTTOM = 'M0.5,1 L.5,.5 L1,.5',\n\n  /** ╵ */ MIDDLE_TO_TOP = 'M.5,.5 L.5,0',\n  /** ╴ */ MIDDLE_TO_LEFT = 'M.5,.5 L0,.5',\n  /** ╶ */ MIDDLE_TO_RIGHT = 'M.5,.5 L1,.5',\n  /** ╷ */ MIDDLE_TO_BOTTOM = 'M.5,.5 L.5,1',\n\n  /** ┴ */ T_TOP = 'M0,.5 L1,.5 M.5,.5 L.5,0',\n  /** ┤ */ T_LEFT = 'M.5,0 L.5,1 M.5,.5 L0,.5',\n  /** ├ */ T_RIGHT = 'M.5,0 L.5,1 M.5,.5 L1,.5',\n  /** ┬ */ T_BOTTOM = 'M0,.5 L1,.5 M.5,.5 L.5,1',\n\n  /** ┼ */ CROSS = 'M0,.5 L1,.5 M.5,0 L.5,1',\n\n  /** ╌ */ TWO_DASHES_HORIZONTAL = 'M.1,.5 L.4,.5 M.6,.5 L.9,.5', // .2 empty, .3 filled\n  /** ┄ */ THREE_DASHES_HORIZONTAL = 'M.0667,.5 L.2667,.5 M.4,.5 L.6,.5 M.7333,.5 L.9333,.5', // .1333 empty, .2 filled\n  /** ┉ */ FOUR_DASHES_HORIZONTAL = 'M.05,.5 L.2,.5 M.3,.5 L.45,.5 M.55,.5 L.7,.5 M.8,.5 L.95,.5', // .1 empty, .15 filled\n  /** ╎ */ TWO_DASHES_VERTICAL = 'M.5,.1 L.5,.4 M.5,.6 L.5,.9',\n  /** ┆ */ THREE_DASHES_VERTICAL = 'M.5,.0667 L.5,.2667 M.5,.4 L.5,.6 M.5,.7333 L.5,.9333',\n  /** ┊ */ FOUR_DASHES_VERTICAL = 'M.5,.05 L.5,.2 M.5,.3 L.5,.45 L.5,.55 M.5,.7 L.5,.95',\n}\n\nconst enum Style {\n  NORMAL = 1,\n  BOLD = 3\n}\n\n/**\n * @param xp The percentage of 15% of the x axis.\n * @param yp The percentage of 15% of the x axis on the y axis.\n */\ntype DrawFunctionDefinition = (xp: number, yp: number) => string;\n\n/**\n * This contains the definitions of all box drawing characters in the format of SVG paths (ie. the\n * svg d attribute).\n */\nexport const boxDrawingDefinitions: { [character: string]: { [fontWeight: number]: string | DrawFunctionDefinition } | undefined } = {\n  // Uniform normal and bold\n  '─': { [Style.NORMAL]: Shapes.LEFT_TO_RIGHT },\n  '━': { [Style.BOLD]:   Shapes.LEFT_TO_RIGHT },\n  '│': { [Style.NORMAL]: Shapes.TOP_TO_BOTTOM },\n  '┃': { [Style.BOLD]:   Shapes.TOP_TO_BOTTOM },\n  '┌': { [Style.NORMAL]: Shapes.RIGHT_TO_BOTTOM },\n  '┏': { [Style.BOLD]:   Shapes.RIGHT_TO_BOTTOM },\n  '┐': { [Style.NORMAL]: Shapes.LEFT_TO_BOTTOM },\n  '┓': { [Style.BOLD]:   Shapes.LEFT_TO_BOTTOM },\n  '└': { [Style.NORMAL]: Shapes.TOP_TO_RIGHT },\n  '┗': { [Style.BOLD]:   Shapes.TOP_TO_RIGHT },\n  '┘': { [Style.NORMAL]: Shapes.TOP_TO_LEFT },\n  '┛': { [Style.BOLD]:   Shapes.TOP_TO_LEFT },\n  '├': { [Style.NORMAL]: Shapes.T_RIGHT },\n  '┣': { [Style.BOLD]:   Shapes.T_RIGHT },\n  '┤': { [Style.NORMAL]: Shapes.T_LEFT },\n  '┫': { [Style.BOLD]:   Shapes.T_LEFT },\n  '┬': { [Style.NORMAL]: Shapes.T_BOTTOM },\n  '┳': { [Style.BOLD]:   Shapes.T_BOTTOM },\n  '┴': { [Style.NORMAL]: Shapes.T_TOP },\n  '┻': { [Style.BOLD]:   Shapes.T_TOP },\n  '┼': { [Style.NORMAL]: Shapes.CROSS },\n  '╋': { [Style.BOLD]:   Shapes.CROSS },\n  '╴': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT },\n  '╸': { [Style.BOLD]:   Shapes.MIDDLE_TO_LEFT },\n  '╵': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP },\n  '╹': { [Style.BOLD]:   Shapes.MIDDLE_TO_TOP },\n  '╶': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT },\n  '╺': { [Style.BOLD]:   Shapes.MIDDLE_TO_RIGHT },\n  '╷': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM },\n  '╻': { [Style.BOLD]:   Shapes.MIDDLE_TO_BOTTOM },\n\n  // Double border\n  '═': { [Style.NORMAL]: (xp, yp) => `M0,${.5 - yp} L1,${.5 - yp} M0,${.5 + yp} L1,${.5 + yp}` },\n  '║': { [Style.NORMAL]: (xp, yp) => `M${.5 - xp},0 L${.5 - xp},1 M${.5 + xp},0 L${.5 + xp},1` },\n  '╒': { [Style.NORMAL]: (xp, yp) => `M.5,1 L.5,${.5 - yp} L1,${.5 - yp} M.5,${.5 + yp} L1,${.5 + yp}` },\n  '╓': { [Style.NORMAL]: (xp, yp) => `M${.5 - xp},1 L${.5 - xp},.5 L1,.5 M${.5 + xp},.5 L${.5 + xp},1` },\n  '╔': { [Style.NORMAL]: (xp, yp) => `M1,${.5 - yp} L${.5 - xp},${.5 - yp} L${.5 - xp},1 M1,${.5 + yp} L${.5 + xp},${.5 + yp} L${.5 + xp},1` },\n  '╕': { [Style.NORMAL]: (xp, yp) => `M0,${.5 - yp} L.5,${.5 - yp} L.5,1 M0,${.5 + yp} L.5,${.5 + yp}` },\n  '╖': { [Style.NORMAL]: (xp, yp) => `M${.5 + xp},1 L${.5 + xp},.5 L0,.5 M${.5 - xp},.5 L${.5 - xp},1` },\n  '╗': { [Style.NORMAL]: (xp, yp) => `M0,${.5 + yp} L${.5 - xp},${.5 + yp} L${.5 - xp},1 M0,${.5 - yp} L${.5 + xp},${.5 - yp} L${.5 + xp},1` },\n  '╘': { [Style.NORMAL]: (xp, yp) => `M.5,0 L.5,${.5 + yp} L1,${.5 + yp} M.5,${.5 - yp} L1,${.5 - yp}` },\n  '╙': { [Style.NORMAL]: (xp, yp) => `M1,.5 L${.5 - xp},.5 L${.5 - xp},0 M${.5 + xp},.5 L${.5 + xp},0` },\n  '╚': { [Style.NORMAL]: (xp, yp) => `M1,${.5 - yp} L${.5 + xp},${.5 - yp} L${.5 + xp},0 M1,${.5 + yp} L${.5 - xp},${.5 + yp} L${.5 - xp},0` },\n  '╛': { [Style.NORMAL]: (xp, yp) => `M0,${.5 + yp} L.5,${.5 + yp} L.5,0 M0,${.5 - yp} L.5,${.5 - yp}` },\n  '╜': { [Style.NORMAL]: (xp, yp) => `M0,.5 L${.5 + xp},.5 L${.5 + xp},0 M${.5 - xp},.5 L${.5 - xp},0` },\n  '╝': { [Style.NORMAL]: (xp, yp) => `M0,${.5 - yp} L${.5 - xp},${.5 - yp} L${.5 - xp},0 M0,${.5 + yp} L${.5 + xp},${.5 + yp} L${.5 + xp},0` },\n  '╞': { [Style.NORMAL]: (xp, yp) => `${Shapes.TOP_TO_BOTTOM} M.5,${.5 - yp} L1,${.5 - yp} M.5,${.5 + yp} L1,${.5 + yp}` },\n  '╟': { [Style.NORMAL]: (xp, yp) => `M${.5 - xp},0 L${.5 - xp},1 M${.5 + xp},0 L${.5 + xp},1 M${.5 + xp},.5 L1,.5` },\n  '╠': { [Style.NORMAL]: (xp, yp) => `M${.5 - xp},0 L${.5 - xp},1 M1,${.5 + yp} L${.5 + xp},${.5 + yp} L${.5 + xp},1 M1,${.5 - yp} L${.5 + xp},${.5 - yp} L${.5 + xp},0` },\n  '╡': { [Style.NORMAL]: (xp, yp) => `${Shapes.TOP_TO_BOTTOM} M0,${.5 - yp} L.5,${.5 - yp} M0,${.5 + yp} L.5,${.5 + yp}` },\n  '╢': { [Style.NORMAL]: (xp, yp) => `M0,.5 L${.5 - xp},.5 M${.5 - xp},0 L${.5 - xp},1 M${.5 + xp},0 L${.5 + xp},1` },\n  '╣': { [Style.NORMAL]: (xp, yp) => `M${.5 + xp},0 L${.5 + xp},1 M0,${.5 + yp} L${.5 - xp},${.5 + yp} L${.5 - xp},1 M0,${.5 - yp} L${.5 - xp},${.5 - yp} L${.5 - xp},0` },\n  '╤': { [Style.NORMAL]: (xp, yp) => `M0,${.5 - yp} L1,${.5 - yp} M0,${.5 + yp} L1,${.5 + yp} M.5,${.5 + yp} L.5,1` },\n  '╥': { [Style.NORMAL]: (xp, yp) => `${Shapes.LEFT_TO_RIGHT} M${.5 - xp},.5 L${.5 - xp},1 M${.5 + xp},.5 L${.5 + xp},1` },\n  '╦': { [Style.NORMAL]: (xp, yp) => `M0,${.5 - yp} L1,${.5 - yp} M0,${.5 + yp} L${.5 - xp},${.5 + yp} L${.5 - xp},1 M1,${.5 + yp} L${.5 + xp},${.5 + yp} L${.5 + xp},1` },\n  '╧': { [Style.NORMAL]: (xp, yp) => `M.5,0 L.5,${.5 - yp} M0,${.5 - yp} L1,${.5 - yp} M0,${.5 + yp} L1,${.5 + yp}` },\n  '╨': { [Style.NORMAL]: (xp, yp) => `${Shapes.LEFT_TO_RIGHT} M${.5 - xp},.5 L${.5 - xp},0 M${.5 + xp},.5 L${.5 + xp},0` },\n  '╩': { [Style.NORMAL]: (xp, yp) => `M0,${.5 + yp} L1,${.5 + yp} M0,${.5 - yp} L${.5 - xp},${.5 - yp} L${.5 - xp},0 M1,${.5 - yp} L${.5 + xp},${.5 - yp} L${.5 + xp},0` },\n  '╪': { [Style.NORMAL]: (xp, yp) => `${Shapes.TOP_TO_BOTTOM} M0,${.5 - yp} L1,${.5 - yp} M0,${.5 + yp} L1,${.5 + yp}` },\n  '╫': { [Style.NORMAL]: (xp, yp) => `${Shapes.LEFT_TO_RIGHT} M${.5 - xp},0 L${.5 - xp},1 M${.5 + xp},0 L${.5 + xp},1` },\n  '╬': { [Style.NORMAL]: (xp, yp) => `M0,${.5 + yp} L${.5 - xp},${.5 + yp} L${.5 - xp},1 M1,${.5 + yp} L${.5 + xp},${.5 + yp} L${.5 + xp},1 M0,${.5 - yp} L${.5 - xp},${.5 - yp} L${.5 - xp},0 M1,${.5 - yp} L${.5 + xp},${.5 - yp} L${.5 + xp},0` },\n\n  // Diagonal\n  '╱': { [Style.NORMAL]: 'M1,0 L0,1' },\n  '╲': { [Style.NORMAL]: 'M0,0 L1,1' },\n  '╳': { [Style.NORMAL]: 'M1,0 L0,1 M0,0 L1,1' },\n\n  // Mixed weight\n  '╼': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '╽': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '╾': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '╿': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┍': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┎': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '┑': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┒': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '┕': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┖': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┙': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┚': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┝': { [Style.NORMAL]: Shapes.TOP_TO_BOTTOM,                                 [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┞': { [Style.NORMAL]: Shapes.RIGHT_TO_BOTTOM,                               [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┟': { [Style.NORMAL]: Shapes.TOP_TO_RIGHT,                                  [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '┠': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.TOP_TO_BOTTOM },\n  '┡': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.TOP_TO_RIGHT },\n  '┢': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.RIGHT_TO_BOTTOM },\n  '┥': { [Style.NORMAL]: Shapes.TOP_TO_BOTTOM,                                 [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┦': { [Style.NORMAL]: Shapes.LEFT_TO_BOTTOM,                                [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┧': { [Style.NORMAL]: Shapes.TOP_TO_LEFT,                                   [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '┨': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.TOP_TO_BOTTOM },\n  '┩': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.TOP_TO_LEFT },\n  '┪': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.LEFT_TO_BOTTOM },\n  '┭': { [Style.NORMAL]: Shapes.RIGHT_TO_BOTTOM,                               [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┮': { [Style.NORMAL]: Shapes.LEFT_TO_BOTTOM,                                [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┯': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.LEFT_TO_RIGHT },\n  '┰': { [Style.NORMAL]: Shapes.LEFT_TO_RIGHT,                                 [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '┱': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.LEFT_TO_BOTTOM },\n  '┲': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.RIGHT_TO_BOTTOM },\n  '┵': { [Style.NORMAL]: Shapes.TOP_TO_RIGHT,                                  [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┶': { [Style.NORMAL]: Shapes.TOP_TO_LEFT,                                   [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┷': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.LEFT_TO_RIGHT },\n  '┸': { [Style.NORMAL]: Shapes.LEFT_TO_RIGHT,                                 [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┹': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.TOP_TO_LEFT },\n  '┺': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.TOP_TO_RIGHT },\n  '┽': { [Style.NORMAL]: `${Shapes.TOP_TO_BOTTOM} ${Shapes.MIDDLE_TO_RIGHT}`,  [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┾': { [Style.NORMAL]: `${Shapes.TOP_TO_BOTTOM} ${Shapes.MIDDLE_TO_LEFT}`,   [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┿': { [Style.NORMAL]: Shapes.TOP_TO_BOTTOM,                                 [Style.BOLD]: Shapes.LEFT_TO_RIGHT },\n  '╀': { [Style.NORMAL]: `${Shapes.LEFT_TO_RIGHT} ${Shapes.MIDDLE_TO_BOTTOM}`, [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '╁': { [Style.NORMAL]: `${Shapes.MIDDLE_TO_TOP} ${Shapes.LEFT_TO_RIGHT}`,    [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '╂': { [Style.NORMAL]: Shapes.LEFT_TO_RIGHT,                                 [Style.BOLD]: Shapes.TOP_TO_BOTTOM },\n  '╃': { [Style.NORMAL]: Shapes.RIGHT_TO_BOTTOM,                               [Style.BOLD]: Shapes.TOP_TO_LEFT },\n  '╄': { [Style.NORMAL]: Shapes.LEFT_TO_BOTTOM,                                [Style.BOLD]: Shapes.TOP_TO_RIGHT },\n  '╅': { [Style.NORMAL]: Shapes.TOP_TO_RIGHT,                                  [Style.BOLD]: Shapes.LEFT_TO_BOTTOM },\n  '╆': { [Style.NORMAL]: Shapes.TOP_TO_LEFT,                                   [Style.BOLD]: Shapes.RIGHT_TO_BOTTOM },\n  '╇': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: `${Shapes.MIDDLE_TO_TOP} ${Shapes.LEFT_TO_RIGHT}` },\n  '╈': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: `${Shapes.LEFT_TO_RIGHT} ${Shapes.MIDDLE_TO_BOTTOM}` },\n  '╉': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: `${Shapes.TOP_TO_BOTTOM} ${Shapes.MIDDLE_TO_LEFT}` },\n  '╊': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: `${Shapes.TOP_TO_BOTTOM} ${Shapes.MIDDLE_TO_RIGHT}` },\n\n  // Dashed\n  '╌': { [Style.NORMAL]: Shapes.TWO_DASHES_HORIZONTAL },\n  '╍': { [Style.BOLD]:   Shapes.TWO_DASHES_HORIZONTAL },\n  '┄': { [Style.NORMAL]: Shapes.THREE_DASHES_HORIZONTAL },\n  '┅': { [Style.BOLD]:   Shapes.THREE_DASHES_HORIZONTAL },\n  '┈': { [Style.NORMAL]: Shapes.FOUR_DASHES_HORIZONTAL },\n  '┉': { [Style.BOLD]:   Shapes.FOUR_DASHES_HORIZONTAL },\n  '╎': { [Style.NORMAL]: Shapes.TWO_DASHES_VERTICAL },\n  '╏': { [Style.BOLD]:   Shapes.TWO_DASHES_VERTICAL },\n  '┆': { [Style.NORMAL]: Shapes.THREE_DASHES_VERTICAL  },\n  '┇': { [Style.BOLD]:   Shapes.THREE_DASHES_VERTICAL },\n  '┊': { [Style.NORMAL]: Shapes.FOUR_DASHES_VERTICAL },\n  '┋': { [Style.BOLD]:   Shapes.FOUR_DASHES_VERTICAL },\n\n  // Curved\n  '╭': { [Style.NORMAL]: (xp, yp) => `M.5,1 L.5,${.5 + (yp / .15 * .5)} C.5,${.5 + (yp / .15 * .5)},.5,.5,1,.5` },\n  '╮': { [Style.NORMAL]: (xp, yp) => `M.5,1 L.5,${.5 + (yp / .15 * .5)} C.5,${.5 + (yp / .15 * .5)},.5,.5,0,.5` },\n  '╯': { [Style.NORMAL]: (xp, yp) => `M.5,0 L.5,${.5 - (yp / .15 * .5)} C.5,${.5 - (yp / .15 * .5)},.5,.5,0,.5` },\n  '╰': { [Style.NORMAL]: (xp, yp) => `M.5,0 L.5,${.5 - (yp / .15 * .5)} C.5,${.5 - (yp / .15 * .5)},.5,.5,1,.5` }\n};\n\ninterface IVectorShape {\n  d: string;\n  type: VectorType;\n  leftPadding?: number;\n  rightPadding?: number;\n}\n\nconst enum VectorType {\n  FILL,\n  STROKE\n}\n\n/**\n * This contains the definitions of the primarily used box drawing characters as vector shapes. The\n * reason these characters are defined specially is to avoid common problems if a user's font has\n * not been patched with powerline characters and also to get pixel perfect rendering as rendering\n * issues can occur around AA/SPAA.\n *\n * The line variants draw beyond the cell and get clipped to ensure the end of the line is not visible.\n *\n * Original symbols defined in https://github.com/powerline/fontpatcher\n */\nexport const powerlineDefinitions: { [index: string]: IVectorShape } = {\n  // Right triangle solid\n  '\\u{E0B0}': { d: 'M0,0 L1,.5 L0,1', type: VectorType.FILL, rightPadding: 2 },\n  // Right triangle line\n  '\\u{E0B1}': { d: 'M-1,-.5 L1,.5 L-1,1.5', type: VectorType.STROKE, leftPadding: 1, rightPadding: 1 },\n  // Left triangle solid\n  '\\u{E0B2}': { d: 'M1,0 L0,.5 L1,1', type: VectorType.FILL, leftPadding: 2 },\n  // Left triangle line\n  '\\u{E0B3}': { d: 'M2,-.5 L0,.5 L2,1.5', type: VectorType.STROKE, leftPadding: 1, rightPadding: 1 },\n  // Right semi-circle solid\n  '\\u{E0B4}': { d: 'M0,0 L0,1 C0.552,1,1,0.776,1,.5 C1,0.224,0.552,0,0,0', type: VectorType.FILL, rightPadding: 1 },\n  // Right semi-circle line\n  '\\u{E0B5}': { d: 'M0,1 C0.552,1,1,0.776,1,.5 C1,0.224,0.552,0,0,0', type: VectorType.STROKE, rightPadding: 1 },\n  // Left semi-circle solid\n  '\\u{E0B6}': { d: 'M1,0 L1,1 C0.448,1,0,0.776,0,.5 C0,0.224,0.448,0,1,0', type: VectorType.FILL, leftPadding: 1 },\n  // Left semi-circle line\n  '\\u{E0B7}': { d: 'M1,1 C0.448,1,0,0.776,0,.5 C0,0.224,0.448,0,1,0', type: VectorType.STROKE, leftPadding: 1 },\n  // Lower left triangle\n  '\\u{E0B8}': { d: 'M-.5,-.5 L1.5,1.5 L-.5,1.5', type: VectorType.FILL },\n  // Backslash separator\n  '\\u{E0B9}': { d: 'M-.5,-.5 L1.5,1.5', type: VectorType.STROKE, leftPadding: 1, rightPadding: 1 },\n  // Lower right triangle\n  '\\u{E0BA}': { d: 'M1.5,-.5 L-.5,1.5 L1.5,1.5', type: VectorType.FILL },\n  // Upper left triangle\n  '\\u{E0BC}': { d: 'M1.5,-.5 L-.5,1.5 L-.5,-.5', type: VectorType.FILL },\n  // Forward slash separator\n  '\\u{E0BD}': { d: 'M1.5,-.5 L-.5,1.5', type: VectorType.STROKE, leftPadding: 1, rightPadding: 1 },\n  // Upper right triangle\n  '\\u{E0BE}': { d: 'M-.5,-.5 L1.5,1.5 L1.5,-.5', type: VectorType.FILL }\n};\n// Backslash separator redundant\npowerlineDefinitions['\\u{E0BB}'] = powerlineDefinitions['\\u{E0B9}'];\n// Forward slash separator redundant\npowerlineDefinitions['\\u{E0BF}'] = powerlineDefinitions['\\u{E0BD}'];\n\n/**\n * Try drawing a custom block element or box drawing character, returning whether it was\n * successfully drawn.\n */\nexport function tryDrawCustomChar(\n  ctx: CanvasRenderingContext2D,\n  c: string,\n  xOffset: number,\n  yOffset: number,\n  deviceCellWidth: number,\n  deviceCellHeight: number,\n  fontSize: number,\n  devicePixelRatio: number\n): boolean {\n  const blockElementDefinition = blockElementDefinitions[c];\n  if (blockElementDefinition) {\n    drawBlockElementChar(ctx, blockElementDefinition, xOffset, yOffset, deviceCellWidth, deviceCellHeight);\n    return true;\n  }\n\n  const patternDefinition = patternCharacterDefinitions[c];\n  if (patternDefinition) {\n    drawPatternChar(ctx, patternDefinition, xOffset, yOffset, deviceCellWidth, deviceCellHeight);\n    return true;\n  }\n\n  const boxDrawingDefinition = boxDrawingDefinitions[c];\n  if (boxDrawingDefinition) {\n    drawBoxDrawingChar(ctx, boxDrawingDefinition, xOffset, yOffset, deviceCellWidth, deviceCellHeight, devicePixelRatio);\n    return true;\n  }\n\n  const powerlineDefinition = powerlineDefinitions[c];\n  if (powerlineDefinition) {\n    drawPowerlineChar(ctx, powerlineDefinition, xOffset, yOffset, deviceCellWidth, deviceCellHeight, fontSize, devicePixelRatio);\n    return true;\n  }\n\n  return false;\n}\n\nfunction drawBlockElementChar(\n  ctx: CanvasRenderingContext2D,\n  charDefinition: IBlockVector[],\n  xOffset: number,\n  yOffset: number,\n  deviceCellWidth: number,\n  deviceCellHeight: number\n): void {\n  for (let i = 0; i < charDefinition.length; i++) {\n    const box = charDefinition[i];\n    const xEighth = deviceCellWidth / 8;\n    const yEighth = deviceCellHeight / 8;\n    ctx.fillRect(\n      xOffset + box.x * xEighth,\n      yOffset + box.y * yEighth,\n      box.w * xEighth,\n      box.h * yEighth\n    );\n  }\n}\n\nconst cachedPatterns: Map<PatternDefinition, Map</* fillStyle */string, CanvasPattern>> = new Map();\n\nfunction drawPatternChar(\n  ctx: CanvasRenderingContext2D,\n  charDefinition: number[][],\n  xOffset: number,\n  yOffset: number,\n  deviceCellWidth: number,\n  deviceCellHeight: number\n): void {\n  let patternSet = cachedPatterns.get(charDefinition);\n  if (!patternSet) {\n    patternSet = new Map();\n    cachedPatterns.set(charDefinition, patternSet);\n  }\n  const fillStyle = ctx.fillStyle;\n  if (typeof fillStyle !== 'string') {\n    throw new Error(`Unexpected fillStyle type \"${fillStyle}\"`);\n  }\n  let pattern = patternSet.get(fillStyle);\n  if (!pattern) {\n    const width = charDefinition[0].length;\n    const height = charDefinition.length;\n    const tmpCanvas = document.createElement('canvas');\n    tmpCanvas.width = width;\n    tmpCanvas.height = height;\n    const tmpCtx = throwIfFalsy(tmpCanvas.getContext('2d'));\n    const imageData = new ImageData(width, height);\n\n    // Extract rgba from fillStyle\n    let r: number;\n    let g: number;\n    let b: number;\n    let a: number;\n    if (fillStyle.startsWith('#')) {\n      r = parseInt(fillStyle.slice(1, 3), 16);\n      g = parseInt(fillStyle.slice(3, 5), 16);\n      b = parseInt(fillStyle.slice(5, 7), 16);\n      a = fillStyle.length > 7 && parseInt(fillStyle.slice(7, 9), 16) || 1;\n    } else if (fillStyle.startsWith('rgba')) {\n      ([r, g, b, a] = fillStyle.substring(5, fillStyle.length - 1).split(',').map(e => parseFloat(e)));\n    } else {\n      throw new Error(`Unexpected fillStyle color format \"${fillStyle}\" when drawing pattern glyph`);\n    }\n\n    for (let y = 0; y < height; y++) {\n      for (let x = 0; x < width; x++) {\n        imageData.data[(y * width + x) * 4    ] = r;\n        imageData.data[(y * width + x) * 4 + 1] = g;\n        imageData.data[(y * width + x) * 4 + 2] = b;\n        imageData.data[(y * width + x) * 4 + 3] = charDefinition[y][x] * (a * 255);\n      }\n    }\n    tmpCtx.putImageData(imageData, 0, 0);\n    pattern = throwIfFalsy(ctx.createPattern(tmpCanvas, null));\n    patternSet.set(fillStyle, pattern);\n  }\n  ctx.fillStyle = pattern;\n  ctx.fillRect(xOffset, yOffset, deviceCellWidth, deviceCellHeight);\n}\n\n/**\n * Draws the following box drawing characters by mapping a subset of SVG d attribute instructions to\n * canvas draw calls.\n *\n * Box styles:       ┎┰┒┍┯┑╓╥╖╒╤╕ ┏┳┓┌┲┓┌┬┐┏┱┐\n * ┌─┬─┐ ┏━┳━┓ ╔═╦═╗ ┠╂┨┝┿┥╟╫╢╞╪╡ ┡╇┩├╊┫┢╈┪┣╉┤\n * │ │ │ ┃ ┃ ┃ ║ ║ ║ ┖┸┚┕┷┙╙╨╜╘╧╛ └┴┘└┺┛┗┻┛┗┹┘\n * ├─┼─┤ ┣━╋━┫ ╠═╬═╣ ┏┱┐┌┲┓┌┬┐┌┬┐ ┏┳┓┌┮┓┌┬┐┏┭┐\n * │ │ │ ┃ ┃ ┃ ║ ║ ║ ┡╃┤├╄┩├╆┪┢╅┤ ┞╀┦├┾┫┟╁┧┣┽┤\n * └─┴─┘ ┗━┻━┛ ╚═╩═╝ └┴┘└┴┘└┺┛┗┹┘ └┴┘└┶┛┗┻┛┗┵┘\n *\n * Other:\n * ╭─╮ ╲ ╱ ╷╻╎╏┆┇┊┋ ╺╾╴ ╌╌╌ ┄┄┄ ┈┈┈\n * │ │  ╳  ╽╿╎╏┆┇┊┋ ╶╼╸ ╍╍╍ ┅┅┅ ┉┉┉\n * ╰─╯ ╱ ╲ ╹╵╎╏┆┇┊┋\n *\n * All box drawing characters:\n * ─ ━ │ ┃ ┄ ┅ ┆ ┇ ┈ ┉ ┊ ┋ ┌ ┍ ┎ ┏\n * ┐ ┑ ┒ ┓ └ ┕ ┖ ┗ ┘ ┙ ┚ ┛ ├ ┝ ┞ ┟\n * ┠ ┡ ┢ ┣ ┤ ┥ ┦ ┧ ┨ ┩ ┪ ┫ ┬ ┭ ┮ ┯\n * ┰ ┱ ┲ ┳ ┴ ┵ ┶ ┷ ┸ ┹ ┺ ┻ ┼ ┽ ┾ ┿\n * ╀ ╁ ╂ ╃ ╄ ╅ ╆ ╇ ╈ ╉ ╊ ╋ ╌ ╍ ╎ ╏\n * ═ ║ ╒ ╓ ╔ ╕ ╖ ╗ ╘ ╙ ╚ ╛ ╜ ╝ ╞ ╟\n * ╠ ╡ ╢ ╣ ╤ ╥ ╦ ╧ ╨ ╩ ╪ ╫ ╬ ╭ ╮ ╯\n * ╰ ╱ ╲ ╳ ╴ ╵ ╶ ╷ ╸ ╹ ╺ ╻ ╼ ╽ ╾ ╿\n *\n * ---\n *\n * Box drawing alignment tests:                                          █\n *                                                                       ▉\n *   ╔══╦══╗  ┌──┬──┐  ╭──┬──╮  ╭──┬──╮  ┏━━┳━━┓  ┎┒┏┑   ╷  ╻ ┏┯┓ ┌┰┐    ▊ ╱╲╱╲╳╳╳\n *   ║┌─╨─┐║  │╔═╧═╗│  │╒═╪═╕│  │╓─╁─╖│  ┃┌─╂─┐┃  ┗╃╄┙  ╶┼╴╺╋╸┠┼┨ ┝╋┥    ▋ ╲╱╲╱╳╳╳\n *   ║│╲ ╱│║  │║   ║│  ││ │ ││  │║ ┃ ║│  ┃│ ╿ │┃  ┍╅╆┓   ╵  ╹ ┗┷┛ └┸┘    ▌ ╱╲╱╲╳╳╳\n *   ╠╡ ╳ ╞╣  ├╢   ╟┤  ├┼─┼─┼┤  ├╫─╂─╫┤  ┣┿╾┼╼┿┫  ┕┛┖┚     ┌┄┄┐ ╎ ┏┅┅┓ ┋ ▍ ╲╱╲╱╳╳╳\n *   ║│╱ ╲│║  │║   ║│  ││ │ ││  │║ ┃ ║│  ┃│ ╽ │┃  ░░▒▒▓▓██ ┊  ┆ ╎ ╏  ┇ ┋ ▎\n *   ║└─╥─┘║  │╚═╤═╝│  │╘═╪═╛│  │╙─╀─╜│  ┃└─╂─┘┃  ░░▒▒▓▓██ ┊  ┆ ╎ ╏  ┇ ┋ ▏\n *   ╚══╩══╝  └──┴──┘  ╰──┴──╯  ╰──┴──╯  ┗━━┻━━┛           └╌╌┘ ╎ ┗╍╍┛ ┋  ▁▂▃▄▅▆▇█\n *\n * Source: https://www.w3.org/2001/06/utf-8-test/UTF-8-demo.html\n */\nfunction drawBoxDrawingChar(\n  ctx: CanvasRenderingContext2D,\n  charDefinition: { [fontWeight: number]: string | ((xp: number, yp: number) => string) },\n  xOffset: number,\n  yOffset: number,\n  deviceCellWidth: number,\n  deviceCellHeight: number,\n  devicePixelRatio: number\n): void {\n  ctx.strokeStyle = ctx.fillStyle;\n  for (const [fontWeight, instructions] of Object.entries(charDefinition)) {\n    ctx.beginPath();\n    ctx.lineWidth = devicePixelRatio * Number.parseInt(fontWeight);\n    let actualInstructions: string;\n    if (typeof instructions === 'function') {\n      const xp = .15;\n      const yp = .15 / deviceCellHeight * deviceCellWidth;\n      actualInstructions = instructions(xp, yp);\n    } else {\n      actualInstructions = instructions;\n    }\n    for (const instruction of actualInstructions.split(' ')) {\n      const type = instruction[0];\n      const f = svgToCanvasInstructionMap[type];\n      if (!f) {\n        console.error(`Could not find drawing instructions for \"${type}\"`);\n        continue;\n      }\n      const args: string[] = instruction.substring(1).split(',');\n      if (!args[0] || !args[1]) {\n        continue;\n      }\n      f(ctx, translateArgs(args, deviceCellWidth, deviceCellHeight, xOffset, yOffset, true, devicePixelRatio));\n    }\n    ctx.stroke();\n    ctx.closePath();\n  }\n}\n\nfunction drawPowerlineChar(\n  ctx: CanvasRenderingContext2D,\n  charDefinition: IVectorShape,\n  xOffset: number,\n  yOffset: number,\n  deviceCellWidth: number,\n  deviceCellHeight: number,\n  fontSize: number,\n  devicePixelRatio: number\n): void {\n  // Clip the cell to make sure drawing doesn't occur beyond bounds\n  const clipRegion = new Path2D();\n  clipRegion.rect(xOffset, yOffset, deviceCellWidth, deviceCellHeight);\n  ctx.clip(clipRegion);\n\n  ctx.beginPath();\n  // Scale the stroke with DPR and font size\n  const cssLineWidth = fontSize / 12;\n  ctx.lineWidth = devicePixelRatio * cssLineWidth;\n  for (const instruction of charDefinition.d.split(' ')) {\n    const type = instruction[0];\n    const f = svgToCanvasInstructionMap[type];\n    if (!f) {\n      console.error(`Could not find drawing instructions for \"${type}\"`);\n      continue;\n    }\n    const args: string[] = instruction.substring(1).split(',');\n    if (!args[0] || !args[1]) {\n      continue;\n    }\n    f(ctx, translateArgs(\n      args,\n      deviceCellWidth,\n      deviceCellHeight,\n      xOffset,\n      yOffset,\n      false,\n      devicePixelRatio,\n      (charDefinition.leftPadding ?? 0) * (cssLineWidth / 2),\n      (charDefinition.rightPadding ?? 0) * (cssLineWidth / 2)\n    ));\n  }\n  if (charDefinition.type === VectorType.STROKE) {\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.stroke();\n  } else {\n    ctx.fill();\n  }\n  ctx.closePath();\n}\n\nfunction clamp(value: number, max: number, min: number = 0): number {\n  return Math.max(Math.min(value, max), min);\n}\n\nconst svgToCanvasInstructionMap: { [index: string]: any } = {\n  'C': (ctx: CanvasRenderingContext2D, args: number[]) => ctx.bezierCurveTo(args[0], args[1], args[2], args[3], args[4], args[5]),\n  'L': (ctx: CanvasRenderingContext2D, args: number[]) => ctx.lineTo(args[0], args[1]),\n  'M': (ctx: CanvasRenderingContext2D, args: number[]) => ctx.moveTo(args[0], args[1])\n};\n\nfunction translateArgs(args: string[], cellWidth: number, cellHeight: number, xOffset: number, yOffset: number, doClamp: boolean, devicePixelRatio: number, leftPadding: number = 0, rightPadding: number = 0): number[] {\n  const result = args.map(e => parseFloat(e) || parseInt(e));\n\n  if (result.length < 2) {\n    throw new Error('Too few arguments for instruction');\n  }\n\n  for (let x = 0; x < result.length; x += 2) {\n    // Translate from 0-1 to 0-cellWidth\n    result[x] *= cellWidth - (leftPadding * devicePixelRatio) - (rightPadding * devicePixelRatio);\n    // Ensure coordinate doesn't escape cell bounds and round to the nearest 0.5 to ensure a crisp\n    // line at 100% devicePixelRatio\n    if (doClamp && result[x] !== 0) {\n      result[x] = clamp(Math.round(result[x] + 0.5) - 0.5, cellWidth, 0);\n    }\n    // Apply the cell's offset (ie. x*cellWidth)\n    result[x] += xOffset + (leftPadding * devicePixelRatio);\n  }\n\n  for (let y = 1; y < result.length; y += 2) {\n    // Translate from 0-1 to 0-cellHeight\n    result[y] *= cellHeight;\n    // Ensure coordinate doesn't escape cell bounds and round to the nearest 0.5 to ensure a crisp\n    // line at 100% devicePixelRatio\n    if (doClamp && result[y] !== 0) {\n      result[y] = clamp(Math.round(result[y] + 0.5) - 0.5, cellHeight, 0);\n    }\n    // Apply the cell's offset (ie. x*cellHeight)\n    result[y] += yOffset;\n  }\n\n  return result;\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { toDisposable } from 'common/Lifecycle';\nimport { IDisposable } from 'common/Types';\n\nexport function observeDevicePixelDimensions(element: HTMLElement, parentWindow: Window & typeof globalThis, callback: (deviceWidth: number, deviceHeight: number) => void): IDisposable {\n  // Observe any resizes to the element and extract the actual pixel size of the element if the\n  // devicePixelContentBoxSize API is supported. This allows correcting rounding errors when\n  // converting between CSS pixels and device pixels which causes blurry rendering when device\n  // pixel ratio is not a round number.\n  let observer: ResizeObserver | undefined = new parentWindow.ResizeObserver((entries) => {\n    const entry = entries.find((entry) => entry.target === element);\n    if (!entry) {\n      return;\n    }\n\n    // Disconnect if devicePixelContentBoxSize isn't supported by the browser\n    if (!('devicePixelContentBoxSize' in entry)) {\n      observer?.disconnect();\n      observer = undefined;\n      return;\n    }\n\n    // Fire the callback, ignore events where the dimensions are 0x0 as the canvas is likely hidden\n    const width = entry.devicePixelContentBoxSize[0].inlineSize;\n    const height = entry.devicePixelContentBoxSize[0].blockSize;\n    if (width > 0 && height > 0) {\n      callback(width, height);\n    }\n  });\n  try {\n    observer.observe(element, { box: ['device-pixel-content-box'] } as any);\n  } catch {\n    observer.disconnect();\n    observer = undefined;\n  }\n  return toDisposable(() => observer?.disconnect());\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDimensions, IOffset, IRenderDimensions } from 'browser/renderer/shared/Types';\n\nexport function throwIfFalsy<T>(value: T | undefined | null): T {\n  if (!value) {\n    throw new Error('value must not be falsy');\n  }\n  return value;\n}\n\nexport function isPowerlineGlyph(codepoint: number): boolean {\n  // Only return true for Powerline symbols which require\n  // different padding and should be excluded from minimum contrast\n  // ratio standards\n  return 0xE0A4 <= codepoint && codepoint <= 0xE0D6;\n}\n\nexport function isRestrictedPowerlineGlyph(codepoint: number): boolean {\n  return 0xE0B0 <= codepoint && codepoint <= 0xE0B7;\n}\n\nfunction isBoxOrBlockGlyph(codepoint: number): boolean {\n  return 0x2500 <= codepoint && codepoint <= 0x259F;\n}\n\nexport function excludeFromContrastRatioDemands(codepoint: number): boolean {\n  return isPowerlineGlyph(codepoint) || isBoxOrBlockGlyph(codepoint);\n}\n\nexport function createRenderDimensions(): IRenderDimensions {\n  return {\n    css: {\n      canvas: createDimension(),\n      cell: createDimension()\n    },\n    device: {\n      canvas: createDimension(),\n      cell: createDimension(),\n      char: {\n        width: 0,\n        height: 0,\n        left: 0,\n        top: 0\n      }\n    }\n  };\n}\n\nfunction createDimension(): IDimensions {\n  return {\n    width: 0,\n    height: 0\n  };\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ISelectionRenderModel } from 'browser/renderer/shared/Types';\nimport { Terminal } from 'xterm';\n\nclass SelectionRenderModel implements ISelectionRenderModel {\n  public hasSelection!: boolean;\n  public columnSelectMode!: boolean;\n  public viewportStartRow!: number;\n  public viewportEndRow!: number;\n  public viewportCappedStartRow!: number;\n  public viewportCappedEndRow!: number;\n  public startCol!: number;\n  public endCol!: number;\n  public selectionStart: [number, number] | undefined;\n  public selectionEnd: [number, number] | undefined;\n\n  constructor() {\n    this.clear();\n  }\n\n  public clear(): void {\n    this.hasSelection = false;\n    this.columnSelectMode = false;\n    this.viewportStartRow = 0;\n    this.viewportEndRow = 0;\n    this.viewportCappedStartRow = 0;\n    this.viewportCappedEndRow = 0;\n    this.startCol = 0;\n    this.endCol = 0;\n    this.selectionStart = undefined;\n    this.selectionEnd = undefined;\n  }\n\n  public update(terminal: Terminal, start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean = false): void {\n    this.selectionStart = start;\n    this.selectionEnd = end;\n    // Selection does not exist\n    if (!start || !end || (start[0] === end[0] && start[1] === end[1])) {\n      this.clear();\n      return;\n    }\n\n    // Translate from buffer position to viewport position\n    const viewportStartRow = start[1] - terminal.buffer.active.viewportY;\n    const viewportEndRow = end[1] - terminal.buffer.active.viewportY;\n    const viewportCappedStartRow = Math.max(viewportStartRow, 0);\n    const viewportCappedEndRow = Math.min(viewportEndRow, terminal.rows - 1);\n\n    // No need to draw the selection\n    if (viewportCappedStartRow >= terminal.rows || viewportCappedEndRow < 0) {\n      this.clear();\n      return;\n    }\n\n    this.hasSelection = true;\n    this.columnSelectMode = columnSelectMode;\n    this.viewportStartRow = viewportStartRow;\n    this.viewportEndRow = viewportEndRow;\n    this.viewportCappedStartRow = viewportCappedStartRow;\n    this.viewportCappedEndRow = viewportCappedEndRow;\n    this.startCol = start[0];\n    this.endCol = end[0];\n  }\n\n  public isCellSelected(terminal: Terminal, x: number, y: number): boolean {\n    if (!this.hasSelection) {\n      return false;\n    }\n    y -= terminal.buffer.active.viewportY;\n    if (this.columnSelectMode) {\n      if (this.startCol <= this.endCol) {\n        return x >= this.startCol && y >= this.viewportCappedStartRow &&\n          x < this.endCol && y <= this.viewportCappedEndRow;\n      }\n      return x < this.startCol && y >= this.viewportCappedStartRow &&\n        x >= this.endCol && y <= this.viewportCappedEndRow;\n    }\n    return (y > this.viewportStartRow && y < this.viewportEndRow) ||\n      (this.viewportStartRow === this.viewportEndRow && y === this.viewportStartRow && x >= this.startCol && x < this.endCol) ||\n      (this.viewportStartRow < this.viewportEndRow && y === this.viewportEndRow && x < this.endCol) ||\n      (this.viewportStartRow < this.viewportEndRow && y === this.viewportStartRow && x >= this.startCol);\n  }\n}\n\nexport function createSelectionRenderModel(): ISelectionRenderModel {\n  return new SelectionRenderModel();\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { DIM_OPACITY, TEXT_BASELINE } from 'browser/renderer/shared/Constants';\nimport { DEFAULT_COLOR, Attributes, DEFAULT_EXT, UnderlineStyle } from 'common/buffer/Constants';\nimport { IColor } from 'common/Types';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { color, NULL_COLOR, rgba } from 'common/Color';\nimport { tryDrawCustomChar } from 'browser/renderer/shared/CustomGlyphs';\nimport { excludeFromContrastRatioDemands, isPowerlineGlyph, isRestrictedPowerlineGlyph, throwIfFalsy } from 'browser/renderer/shared/RendererUtils';\nimport { IUnicodeService } from 'common/services/Services';\nimport { FourKeyMap } from 'common/MultiKeyMap';\nimport { IdleTaskQueue } from 'common/TaskQueue';\nimport { IBoundingBox, ICharAtlasConfig, IRasterizedGlyph, IRequestRedrawEvent, ITextureAtlas } from 'browser/renderer/shared/Types';\nimport { EventEmitter } from 'common/EventEmitter';\n\n/**\n * A shared object which is used to draw nothing for a particular cell.\n */\nconst NULL_RASTERIZED_GLYPH: IRasterizedGlyph = {\n  texturePage: 0,\n  texturePosition: { x: 0, y: 0 },\n  texturePositionClipSpace: { x: 0, y: 0 },\n  offset: { x: 0, y: 0 },\n  size: { x: 0, y: 0 },\n  sizeClipSpace: { x: 0, y: 0 }\n};\n\nconst TMP_CANVAS_GLYPH_PADDING = 2;\n\nconst enum Constants {\n  /**\n   * The amount of pixel padding to allow in each row. Setting this to zero would make the atlas\n   * page pack as tightly as possible, but more pages would end up being created as a result.\n   */\n  ROW_PIXEL_THRESHOLD = 2,\n  /**\n   * The maximum texture size regardless of what the actual hardware maximum turns out to be. This\n   * is enforced to ensure uploading the texture still finishes in a reasonable amount of time. A\n   * 4096 squared image takes up 16MB of GPU memory.\n   */\n  FORCED_MAX_TEXTURE_SIZE = 4096\n}\n\ninterface ICharAtlasActiveRow {\n  x: number;\n  y: number;\n  height: number;\n}\n\n// Work variables to avoid garbage collection\nlet $glyph = undefined;\n\nexport class TextureAtlas implements ITextureAtlas {\n  private _didWarmUp: boolean = false;\n\n  private _cacheMap: FourKeyMap<number, number, number, number, IRasterizedGlyph> = new FourKeyMap();\n  private _cacheMapCombined: FourKeyMap<string, number, number, number, IRasterizedGlyph> = new FourKeyMap();\n\n  // The texture that the atlas is drawn to\n  private _pages: AtlasPage[] = [];\n  public get pages(): { canvas: HTMLCanvasElement, version: number }[] { return this._pages; }\n\n  // The set of atlas pages that can be written to\n  private _activePages: AtlasPage[] = [];\n\n  private _tmpCanvas: HTMLCanvasElement;\n  // A temporary context that glyphs are drawn to before being transfered to the atlas.\n  private _tmpCtx: CanvasRenderingContext2D;\n\n  private _workBoundingBox: IBoundingBox = { top: 0, left: 0, bottom: 0, right: 0 };\n  private _workAttributeData: AttributeData = new AttributeData();\n\n  private _textureSize: number = 512;\n\n  public static maxAtlasPages: number | undefined;\n  public static maxTextureSize: number | undefined;\n\n  private readonly _onAddTextureAtlasCanvas = new EventEmitter<HTMLCanvasElement>();\n  public readonly onAddTextureAtlasCanvas = this._onAddTextureAtlasCanvas.event;\n  private readonly _onRemoveTextureAtlasCanvas = new EventEmitter<HTMLCanvasElement>();\n  public readonly onRemoveTextureAtlasCanvas = this._onRemoveTextureAtlasCanvas.event;\n\n  constructor(\n    private readonly _document: Document,\n    private readonly _config: ICharAtlasConfig,\n    private readonly _unicodeService: IUnicodeService\n  ) {\n    this._createNewPage();\n    this._tmpCanvas = createCanvas(\n      _document,\n      this._config.deviceCellWidth * 4 + TMP_CANVAS_GLYPH_PADDING * 2,\n      this._config.deviceCellHeight + TMP_CANVAS_GLYPH_PADDING * 2\n    );\n    this._tmpCtx = throwIfFalsy(this._tmpCanvas.getContext('2d', {\n      alpha: this._config.allowTransparency,\n      willReadFrequently: true\n    }));\n  }\n\n  public dispose(): void {\n    for (const page of this.pages) {\n      page.canvas.remove();\n    }\n    this._onAddTextureAtlasCanvas.dispose();\n  }\n\n  public warmUp(): void {\n    if (!this._didWarmUp) {\n      this._doWarmUp();\n      this._didWarmUp = true;\n    }\n  }\n\n  private _doWarmUp(): void {\n    // Pre-fill with ASCII 33-126, this is not urgent and done in idle callbacks\n    const queue = new IdleTaskQueue();\n    for (let i = 33; i < 126; i++) {\n      queue.enqueue(() => {\n        if (!this._cacheMap.get(i, DEFAULT_COLOR, DEFAULT_COLOR, DEFAULT_EXT)) {\n          const rasterizedGlyph = this._drawToCache(i, DEFAULT_COLOR, DEFAULT_COLOR, DEFAULT_EXT);\n          this._cacheMap.set(i, DEFAULT_COLOR, DEFAULT_COLOR, DEFAULT_EXT, rasterizedGlyph);\n        }\n      });\n    }\n  }\n\n  private _requestClearModel = false;\n  public beginFrame(): boolean {\n    return this._requestClearModel;\n  }\n\n  public clearTexture(): void {\n    if (this._pages[0].currentRow.x === 0 && this._pages[0].currentRow.y === 0) {\n      return;\n    }\n    for (const page of this._pages) {\n      page.clear();\n    }\n    this._cacheMap.clear();\n    this._cacheMapCombined.clear();\n    this._didWarmUp = false;\n  }\n\n  private _createNewPage(): AtlasPage {\n    // Try merge the set of the 4 most used pages of the largest size. This is is deferred to a\n    // microtask to ensure it does not interrupt textures that will be rendered in the current\n    // animation frame which would result in blank rendered areas. This is actually not that\n    // expensive relative to drawing the glyphs, so there is no need to wait for an idle callback.\n    if (TextureAtlas.maxAtlasPages && this._pages.length >= Math.max(4, TextureAtlas.maxAtlasPages / 2)) {\n      queueMicrotask(() => {\n        // Find the set of the largest 4 images, below the maximum size, with the highest\n        // percentages used\n        const pagesBySize = this._pages.filter(e => {\n          return e.canvas.width * 2 <= (TextureAtlas.maxTextureSize || Constants.FORCED_MAX_TEXTURE_SIZE);\n        }).sort((a, b) => {\n          if (b.canvas.width !== a.canvas.width) {\n            return b.canvas.width - a.canvas.width;\n          }\n          return b.percentageUsed - a.percentageUsed;\n        });\n        let sameSizeI = -1;\n        let size = 0;\n        for (let i = 0; i < pagesBySize.length; i++) {\n          if (pagesBySize[i].canvas.width !== size) {\n            sameSizeI = i;\n            size = pagesBySize[i].canvas.width;\n          } else if (i - sameSizeI === 3) {\n            break;\n          }\n        }\n\n        // Gather details of the merge\n        const mergingPages = pagesBySize.slice(sameSizeI, sameSizeI + 4);\n        const sortedMergingPagesIndexes = mergingPages.map(e => e.glyphs[0].texturePage).sort((a, b) => a > b ? 1 : -1);\n        const mergedPageIndex = sortedMergingPagesIndexes[0];\n\n        // Merge into the new page\n        const mergedPage = this._mergePages(mergingPages, mergedPageIndex);\n        mergedPage.version++;\n\n        // Replace the first _merging_ page with the _merged_ page\n        this._pages[mergedPageIndex] = mergedPage;\n\n        // Delete the other 3 pages, shifting glyph texture pages as needed\n        for (let i = sortedMergingPagesIndexes.length - 1; i >= 1; i--) {\n          this._deletePage(sortedMergingPagesIndexes[i]);\n        }\n\n        // Request the model to be cleared to refresh all texture pages.\n        this._requestClearModel = true;\n        this._onAddTextureAtlasCanvas.fire(mergedPage.canvas);\n      });\n    }\n\n    // All new atlas pages are created small as they are highly dynamic\n    const newPage = new AtlasPage(this._document, this._textureSize);\n    this._pages.push(newPage);\n    this._activePages.push(newPage);\n    this._onAddTextureAtlasCanvas.fire(newPage.canvas);\n    return newPage;\n  }\n\n  private _mergePages(mergingPages: AtlasPage[], mergedPageIndex: number): AtlasPage {\n    const mergedSize = mergingPages[0].canvas.width * 2;\n    const mergedPage = new AtlasPage(this._document, mergedSize, mergingPages);\n    for (const [i, p] of mergingPages.entries()) {\n      const xOffset = i * p.canvas.width % mergedSize;\n      const yOffset = Math.floor(i / 2) * p.canvas.height;\n      mergedPage.ctx.drawImage(p.canvas, xOffset, yOffset);\n      for (const g of p.glyphs) {\n        g.texturePage = mergedPageIndex;\n        g.sizeClipSpace.x = g.size.x / mergedSize;\n        g.sizeClipSpace.y = g.size.y / mergedSize;\n        g.texturePosition.x += xOffset;\n        g.texturePosition.y += yOffset;\n        g.texturePositionClipSpace.x = g.texturePosition.x / mergedSize;\n        g.texturePositionClipSpace.y = g.texturePosition.y / mergedSize;\n      }\n\n      this._onRemoveTextureAtlasCanvas.fire(p.canvas);\n\n      // Remove the merging page from active pages if it was there\n      const index = this._activePages.indexOf(p);\n      if (index !== -1) {\n        this._activePages.splice(index, 1);\n      }\n    }\n    return mergedPage;\n  }\n\n  private _deletePage(pageIndex: number): void {\n    this._pages.splice(pageIndex, 1);\n    for (let j = pageIndex; j < this._pages.length; j++) {\n      const adjustingPage = this._pages[j];\n      for (const g of adjustingPage.glyphs) {\n        g.texturePage--;\n      }\n      adjustingPage.version++;\n    }\n  }\n\n  public getRasterizedGlyphCombinedChar(chars: string, bg: number, fg: number, ext: number): IRasterizedGlyph {\n    return this._getFromCacheMap(this._cacheMapCombined, chars, bg, fg, ext);\n  }\n\n  public getRasterizedGlyph(code: number, bg: number, fg: number, ext: number): IRasterizedGlyph {\n    return this._getFromCacheMap(this._cacheMap, code, bg, fg, ext);\n  }\n\n  /**\n   * Gets the glyphs texture coords, drawing the texture if it's not already\n   */\n  private _getFromCacheMap(\n    cacheMap: FourKeyMap<string | number, number, number, number, IRasterizedGlyph>,\n    key: string | number,\n    bg: number,\n    fg: number,\n    ext: number\n  ): IRasterizedGlyph {\n    $glyph = cacheMap.get(key, bg, fg, ext);\n    if (!$glyph) {\n      $glyph = this._drawToCache(key, bg, fg, ext);\n      cacheMap.set(key, bg, fg, ext, $glyph);\n    }\n    return $glyph;\n  }\n\n  private _getColorFromAnsiIndex(idx: number): IColor {\n    if (idx >= this._config.colors.ansi.length) {\n      throw new Error('No color found for idx ' + idx);\n    }\n    return this._config.colors.ansi[idx];\n  }\n\n  private _getBackgroundColor(bgColorMode: number, bgColor: number, inverse: boolean, dim: boolean): IColor {\n    if (this._config.allowTransparency) {\n      // The background color might have some transparency, so we need to render it as fully\n      // transparent in the atlas. Otherwise we'd end up drawing the transparent background twice\n      // around the anti-aliased edges of the glyph, and it would look too dark.\n      return NULL_COLOR;\n    }\n\n    let result: IColor;\n    switch (bgColorMode) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:\n        result = this._getColorFromAnsiIndex(bgColor);\n        break;\n      case Attributes.CM_RGB:\n        const arr = AttributeData.toColorRGB(bgColor);\n        // TODO: This object creation is slow\n        result = rgba.toColor(arr[0], arr[1], arr[2]);\n        break;\n      case Attributes.CM_DEFAULT:\n      default:\n        if (inverse) {\n          result = this._config.colors.foreground;\n        } else {\n          result = this._config.colors.background;\n        }\n        break;\n    }\n\n    if (dim) {\n      // Blend here instead of using opacity because transparent colors mess with clipping the\n      // glyph's bounding box\n      result = color.blend(this._config.colors.background, color.multiplyOpacity(result, DIM_OPACITY));\n    }\n\n    return result;\n  }\n\n  private _getForegroundColor(bg: number, bgColorMode: number, bgColor: number, fg: number, fgColorMode: number, fgColor: number, inverse: boolean, dim: boolean, bold: boolean, excludeFromContrastRatioDemands: boolean): IColor {\n    // TODO: Pass dim along to get min contrast?\n    const minimumContrastColor = this._getMinimumContrastColor(bg, bgColorMode, bgColor, fg, fgColorMode, fgColor, false, bold, excludeFromContrastRatioDemands);\n    if (minimumContrastColor) {\n      return minimumContrastColor;\n    }\n\n    let result: IColor;\n    switch (fgColorMode) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:\n        if (this._config.drawBoldTextInBrightColors && bold && fgColor < 8) {\n          fgColor += 8;\n        }\n        result = this._getColorFromAnsiIndex(fgColor);\n        break;\n      case Attributes.CM_RGB:\n        const arr = AttributeData.toColorRGB(fgColor);\n        result = rgba.toColor(arr[0], arr[1], arr[2]);\n        break;\n      case Attributes.CM_DEFAULT:\n      default:\n        if (inverse) {\n          result = this._config.colors.background;\n        } else {\n          result = this._config.colors.foreground;\n        }\n    }\n\n    // Always use an opaque color regardless of allowTransparency\n    if (this._config.allowTransparency) {\n      result = color.opaque(result);\n    }\n\n    // Apply dim to the color, opacity is fine to use for the foreground color\n    if (dim) {\n      result = color.multiplyOpacity(result, DIM_OPACITY);\n    }\n\n    return result;\n  }\n\n  private _resolveBackgroundRgba(bgColorMode: number, bgColor: number, inverse: boolean): number {\n    switch (bgColorMode) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:\n        return this._getColorFromAnsiIndex(bgColor).rgba;\n      case Attributes.CM_RGB:\n        return bgColor << 8;\n      case Attributes.CM_DEFAULT:\n      default:\n        if (inverse) {\n          return this._config.colors.foreground.rgba;\n        }\n        return this._config.colors.background.rgba;\n    }\n  }\n\n  private _resolveForegroundRgba(fgColorMode: number, fgColor: number, inverse: boolean, bold: boolean): number {\n    switch (fgColorMode) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:\n        if (this._config.drawBoldTextInBrightColors && bold && fgColor < 8) {\n          fgColor += 8;\n        }\n        return this._getColorFromAnsiIndex(fgColor).rgba;\n      case Attributes.CM_RGB:\n        return fgColor << 8;\n      case Attributes.CM_DEFAULT:\n      default:\n        if (inverse) {\n          return this._config.colors.background.rgba;\n        }\n        return this._config.colors.foreground.rgba;\n    }\n  }\n\n  private _getMinimumContrastColor(bg: number, bgColorMode: number, bgColor: number, fg: number, fgColorMode: number, fgColor: number, inverse: boolean, bold: boolean, excludeFromContrastRatioDemands: boolean): IColor | undefined {\n    if (this._config.minimumContrastRatio === 1 || excludeFromContrastRatioDemands) {\n      return undefined;\n    }\n\n    // Try get from cache first\n    const adjustedColor = this._config.colors.contrastCache.getColor(bg, fg);\n    if (adjustedColor !== undefined) {\n      return adjustedColor || undefined;\n    }\n\n    const bgRgba = this._resolveBackgroundRgba(bgColorMode, bgColor, inverse);\n    const fgRgba = this._resolveForegroundRgba(fgColorMode, fgColor, inverse, bold);\n    const result = rgba.ensureContrastRatio(bgRgba, fgRgba, this._config.minimumContrastRatio);\n\n    if (!result) {\n      this._config.colors.contrastCache.setColor(bg, fg, null);\n      return undefined;\n    }\n\n    const color = rgba.toColor(\n      (result >> 24) & 0xFF,\n      (result >> 16) & 0xFF,\n      (result >> 8) & 0xFF\n    );\n    this._config.colors.contrastCache.setColor(bg, fg, color);\n\n    return color;\n  }\n\n  private _drawToCache(codeOrChars: number | string, bg: number, fg: number, ext: number): IRasterizedGlyph {\n    const chars = typeof codeOrChars === 'number' ? String.fromCharCode(codeOrChars) : codeOrChars;\n\n    // Uncomment for debugging\n    // console.log(`draw to cache \"${chars}\"`, bg, fg, ext);\n\n    // Allow 1 cell width per character, with a minimum of 2 (CJK), plus some padding. This is used\n    // to draw the glyph to the canvas as well as to restrict the bounding box search to ensure\n    // giant ligatures (eg. =====>) don't impact overall performance.\n    const allowedWidth = this._config.deviceCellWidth * Math.max(chars.length, 2) + TMP_CANVAS_GLYPH_PADDING * 2;\n    if (this._tmpCanvas.width < allowedWidth) {\n      this._tmpCanvas.width = allowedWidth;\n    }\n    // Include line height when drawing glyphs\n    const allowedHeight = this._config.deviceCellHeight + TMP_CANVAS_GLYPH_PADDING * 4;\n    if (this._tmpCanvas.height < allowedHeight) {\n      this._tmpCanvas.height = allowedHeight;\n    }\n    this._tmpCtx.save();\n\n    this._workAttributeData.fg = fg;\n    this._workAttributeData.bg = bg;\n    this._workAttributeData.extended.ext = ext;\n\n    const invisible = !!this._workAttributeData.isInvisible();\n    if (invisible) {\n      return NULL_RASTERIZED_GLYPH;\n    }\n\n    const bold = !!this._workAttributeData.isBold();\n    const inverse = !!this._workAttributeData.isInverse();\n    const dim = !!this._workAttributeData.isDim();\n    const italic = !!this._workAttributeData.isItalic();\n    const underline = !!this._workAttributeData.isUnderline();\n    const strikethrough = !!this._workAttributeData.isStrikethrough();\n    let fgColor = this._workAttributeData.getFgColor();\n    let fgColorMode = this._workAttributeData.getFgColorMode();\n    let bgColor = this._workAttributeData.getBgColor();\n    let bgColorMode = this._workAttributeData.getBgColorMode();\n    if (inverse) {\n      const temp = fgColor;\n      fgColor = bgColor;\n      bgColor = temp;\n      const temp2 = fgColorMode;\n      fgColorMode = bgColorMode;\n      bgColorMode = temp2;\n    }\n\n    // draw the background\n    const backgroundColor = this._getBackgroundColor(bgColorMode, bgColor, inverse, dim);\n    // Use a 'copy' composite operation to clear any existing glyph out of _tmpCtxWithAlpha, regardless of\n    // transparency in backgroundColor\n    this._tmpCtx.globalCompositeOperation = 'copy';\n    this._tmpCtx.fillStyle = backgroundColor.css;\n    this._tmpCtx.fillRect(0, 0, this._tmpCanvas.width, this._tmpCanvas.height);\n    this._tmpCtx.globalCompositeOperation = 'source-over';\n\n    // draw the foreground/glyph\n    const fontWeight = bold ? this._config.fontWeightBold : this._config.fontWeight;\n    const fontStyle = italic ? 'italic' : '';\n    this._tmpCtx.font =\n      `${fontStyle} ${fontWeight} ${this._config.fontSize * this._config.devicePixelRatio}px ${this._config.fontFamily}`;\n    this._tmpCtx.textBaseline = TEXT_BASELINE;\n\n    const powerlineGlyph = chars.length === 1 && isPowerlineGlyph(chars.charCodeAt(0));\n    const restrictedPowerlineGlyph = chars.length === 1 && isRestrictedPowerlineGlyph(chars.charCodeAt(0));\n    const foregroundColor = this._getForegroundColor(bg, bgColorMode, bgColor, fg, fgColorMode, fgColor, inverse, dim, bold, excludeFromContrastRatioDemands(chars.charCodeAt(0)));\n    this._tmpCtx.fillStyle = foregroundColor.css;\n\n    // For powerline glyphs left/top padding is excluded (https://github.com/microsoft/vscode/issues/120129)\n    const padding = restrictedPowerlineGlyph ? 0 : TMP_CANVAS_GLYPH_PADDING * 2;\n\n    // Draw custom characters if applicable\n    let customGlyph = false;\n    if (this._config.customGlyphs !== false) {\n      customGlyph = tryDrawCustomChar(this._tmpCtx, chars, padding, padding, this._config.deviceCellWidth, this._config.deviceCellHeight, this._config.fontSize, this._config.devicePixelRatio);\n    }\n\n    // Whether to clear pixels based on a threshold difference between the glyph color and the\n    // background color. This should be disabled when the glyph contains multiple colors such as\n    // underline colors to prevent important colors could get cleared.\n    let enableClearThresholdCheck = !powerlineGlyph;\n\n    let chWidth: number;\n    if (typeof codeOrChars === 'number') {\n      chWidth = this._unicodeService.wcwidth(codeOrChars);\n    } else {\n      chWidth = this._unicodeService.getStringCellWidth(codeOrChars);\n    }\n\n    // Draw underline\n    if (underline) {\n      this._tmpCtx.save();\n      const lineWidth = Math.max(1, Math.floor(this._config.fontSize * this._config.devicePixelRatio / 15));\n      // When the line width is odd, draw at a 0.5 position\n      const yOffset = lineWidth % 2 === 1 ? 0.5 : 0;\n      this._tmpCtx.lineWidth = lineWidth;\n\n      // Underline color\n      if (this._workAttributeData.isUnderlineColorDefault()) {\n        this._tmpCtx.strokeStyle = this._tmpCtx.fillStyle;\n      } else if (this._workAttributeData.isUnderlineColorRGB()) {\n        enableClearThresholdCheck = false;\n        this._tmpCtx.strokeStyle = `rgb(${AttributeData.toColorRGB(this._workAttributeData.getUnderlineColor()).join(',')})`;\n      } else {\n        enableClearThresholdCheck = false;\n        let fg = this._workAttributeData.getUnderlineColor();\n        if (this._config.drawBoldTextInBrightColors && this._workAttributeData.isBold() && fg < 8) {\n          fg += 8;\n        }\n        this._tmpCtx.strokeStyle = this._getColorFromAnsiIndex(fg).css;\n      }\n\n      // Underline style/stroke\n      this._tmpCtx.beginPath();\n      const xLeft = padding;\n      const yTop = Math.ceil(padding + this._config.deviceCharHeight) - yOffset;\n      const yMid = padding + this._config.deviceCharHeight + lineWidth - yOffset;\n      const yBot = Math.ceil(padding + this._config.deviceCharHeight + lineWidth * 2) - yOffset;\n\n      for (let i = 0; i < chWidth; i++) {\n        this._tmpCtx.save();\n        const xChLeft = xLeft + i * this._config.deviceCellWidth;\n        const xChRight = xLeft + (i + 1) * this._config.deviceCellWidth;\n        const xChMid = xChLeft + this._config.deviceCellWidth / 2;\n        switch (this._workAttributeData.extended.underlineStyle) {\n          case UnderlineStyle.DOUBLE:\n            this._tmpCtx.moveTo(xChLeft, yTop);\n            this._tmpCtx.lineTo(xChRight, yTop);\n            this._tmpCtx.moveTo(xChLeft, yBot);\n            this._tmpCtx.lineTo(xChRight, yBot);\n            break;\n          case UnderlineStyle.CURLY:\n            // Choose the bezier top and bottom based on the device pixel ratio, the curly line is\n            // made taller when the line width is  as otherwise it's not very clear otherwise.\n            const yCurlyBot = lineWidth <= 1 ? yBot : Math.ceil(padding + this._config.deviceCharHeight - lineWidth / 2) - yOffset;\n            const yCurlyTop = lineWidth <= 1 ? yTop : Math.ceil(padding + this._config.deviceCharHeight + lineWidth / 2) - yOffset;\n            // Clip the left and right edges of the underline such that it can be drawn just outside\n            // the edge of the cell to ensure a continuous stroke when there are multiple underlined\n            // glyphs adjacent to one another.\n            const clipRegion = new Path2D();\n            clipRegion.rect(xChLeft, yTop, this._config.deviceCellWidth, yBot - yTop);\n            this._tmpCtx.clip(clipRegion);\n            // Start 1/2 cell before and end 1/2 cells after to ensure a smooth curve with other cells\n            this._tmpCtx.moveTo(xChLeft - this._config.deviceCellWidth / 2, yMid);\n            this._tmpCtx.bezierCurveTo(\n              xChLeft - this._config.deviceCellWidth / 2, yCurlyTop,\n              xChLeft, yCurlyTop,\n              xChLeft, yMid\n            );\n            this._tmpCtx.bezierCurveTo(\n              xChLeft, yCurlyBot,\n              xChMid, yCurlyBot,\n              xChMid, yMid\n            );\n            this._tmpCtx.bezierCurveTo(\n              xChMid, yCurlyTop,\n              xChRight, yCurlyTop,\n              xChRight, yMid\n            );\n            this._tmpCtx.bezierCurveTo(\n              xChRight, yCurlyBot,\n              xChRight + this._config.deviceCellWidth / 2, yCurlyBot,\n              xChRight + this._config.deviceCellWidth / 2, yMid\n            );\n            break;\n          case UnderlineStyle.DOTTED:\n            this._tmpCtx.setLineDash([this._config.devicePixelRatio * 2, this._config.devicePixelRatio]);\n            this._tmpCtx.moveTo(xChLeft, yTop);\n            this._tmpCtx.lineTo(xChRight, yTop);\n            break;\n          case UnderlineStyle.DASHED:\n            this._tmpCtx.setLineDash([this._config.devicePixelRatio * 4, this._config.devicePixelRatio * 3]);\n            this._tmpCtx.moveTo(xChLeft, yTop);\n            this._tmpCtx.lineTo(xChRight, yTop);\n            break;\n          case UnderlineStyle.SINGLE:\n          default:\n            this._tmpCtx.moveTo(xChLeft, yTop);\n            this._tmpCtx.lineTo(xChRight, yTop);\n            break;\n        }\n        this._tmpCtx.stroke();\n        this._tmpCtx.restore();\n      }\n      this._tmpCtx.restore();\n\n      // Draw stroke in the background color for non custom characters in order to give an outline\n      // between the text and the underline. Only do this when font size is >= 12 as the underline\n      // looks odd when the font size is too small\n      if (!customGlyph && this._config.fontSize >= 12) {\n        // This only works when transparency is disabled because it's not clear how to clear stroked\n        // text\n        if (!this._config.allowTransparency && chars !== ' ') {\n          // Measure the text, only draw the stroke if there is a descent beyond an alphabetic text\n          // baseline\n          this._tmpCtx.save();\n          this._tmpCtx.textBaseline = 'alphabetic';\n          const metrics = this._tmpCtx.measureText(chars);\n          this._tmpCtx.restore();\n          if ('actualBoundingBoxDescent' in metrics && metrics.actualBoundingBoxDescent > 0) {\n            // This translates to 1/2 the line width in either direction\n            this._tmpCtx.save();\n            // Clip the region to only draw in valid pixels near the underline to avoid a slight\n            // outline around the whole glyph, as well as additional pixels in the glyph at the top\n            // which would increase GPU memory demands\n            const clipRegion = new Path2D();\n            clipRegion.rect(xLeft, yTop - Math.ceil(lineWidth / 2), this._config.deviceCellWidth, yBot - yTop + Math.ceil(lineWidth / 2));\n            this._tmpCtx.clip(clipRegion);\n            this._tmpCtx.lineWidth = this._config.devicePixelRatio * 3;\n            this._tmpCtx.strokeStyle = backgroundColor.css;\n            this._tmpCtx.strokeText(chars, padding, padding + this._config.deviceCharHeight);\n            this._tmpCtx.restore();\n          }\n        }\n      }\n    }\n\n    // Draw the character\n    if (!customGlyph) {\n      this._tmpCtx.fillText(chars, padding, padding + this._config.deviceCharHeight);\n    }\n\n    // If this charcater is underscore and beyond the cell bounds, shift it up until it is visible\n    // even on the bottom row, try for a maximum of 5 pixels.\n    if (chars === '_' && !this._config.allowTransparency) {\n      let isBeyondCellBounds = clearColor(this._tmpCtx.getImageData(padding, padding, this._config.deviceCellWidth, this._config.deviceCellHeight), backgroundColor, foregroundColor, enableClearThresholdCheck);\n      if (isBeyondCellBounds) {\n        for (let offset = 1; offset <= 5; offset++) {\n          this._tmpCtx.save();\n          this._tmpCtx.fillStyle = backgroundColor.css;\n          this._tmpCtx.fillRect(0, 0, this._tmpCanvas.width, this._tmpCanvas.height);\n          this._tmpCtx.restore();\n          this._tmpCtx.fillText(chars, padding, padding + this._config.deviceCharHeight - offset);\n          isBeyondCellBounds = clearColor(this._tmpCtx.getImageData(padding, padding, this._config.deviceCellWidth, this._config.deviceCellHeight), backgroundColor, foregroundColor, enableClearThresholdCheck);\n          if (!isBeyondCellBounds) {\n            break;\n          }\n        }\n      }\n    }\n\n    // Draw strokethrough\n    if (strikethrough) {\n      const lineWidth = Math.max(1, Math.floor(this._config.fontSize * this._config.devicePixelRatio / 10));\n      const yOffset = this._tmpCtx.lineWidth % 2 === 1 ? 0.5 : 0; // When the width is odd, draw at 0.5 position\n      this._tmpCtx.lineWidth = lineWidth;\n      this._tmpCtx.strokeStyle = this._tmpCtx.fillStyle;\n      this._tmpCtx.beginPath();\n      this._tmpCtx.moveTo(padding, padding + Math.floor(this._config.deviceCharHeight / 2) - yOffset);\n      this._tmpCtx.lineTo(padding + this._config.deviceCharWidth * chWidth, padding + Math.floor(this._config.deviceCharHeight / 2) - yOffset);\n      this._tmpCtx.stroke();\n    }\n\n    this._tmpCtx.restore();\n\n    // clear the background from the character to avoid issues with drawing over the previous\n    // character if it extends past it's bounds\n    const imageData = this._tmpCtx.getImageData(\n      0, 0, this._tmpCanvas.width, this._tmpCanvas.height\n    );\n\n    // Clear out the background color and determine if the glyph is empty.\n    let isEmpty: boolean;\n    if (!this._config.allowTransparency) {\n      isEmpty = clearColor(imageData, backgroundColor, foregroundColor, enableClearThresholdCheck);\n    } else {\n      isEmpty = checkCompletelyTransparent(imageData);\n    }\n\n    // Handle empty glyphs\n    if (isEmpty) {\n      return NULL_RASTERIZED_GLYPH;\n    }\n\n    const rasterizedGlyph = this._findGlyphBoundingBox(imageData, this._workBoundingBox, allowedWidth, restrictedPowerlineGlyph, customGlyph, padding);\n\n    // Find the best atlas row to use\n    let activePage: AtlasPage;\n    let activeRow: ICharAtlasActiveRow;\n    while (true) {\n      // If there are no active pages (the last smallest 4 were merged), create a new one\n      if (this._activePages.length === 0) {\n        const newPage = this._createNewPage();\n        activePage = newPage;\n        activeRow = newPage.currentRow;\n        activeRow.height = rasterizedGlyph.size.y;\n        break;\n      }\n\n      // Get the best current row from all active pages\n      activePage = this._activePages[this._activePages.length - 1];\n      activeRow = activePage.currentRow;\n      for (const p of this._activePages) {\n        if (rasterizedGlyph.size.y <= p.currentRow.height) {\n          activePage = p;\n          activeRow = p.currentRow;\n        }\n      }\n\n      // TODO: This algorithm could be simplified:\n      // - Search for the page with ROW_PIXEL_THRESHOLD in mind\n      // - Keep track of current/fixed rows in a Map\n\n      // Replace the best current row with a fixed row if there is one at least as good as the\n      // current row. Search in reverse to prioritize filling in older pages.\n      for (let i = this._activePages.length - 1; i >= 0; i--) {\n        for (const row of this._activePages[i].fixedRows) {\n          if (row.height <= activeRow.height && rasterizedGlyph.size.y <= row.height) {\n            activePage = this._activePages[i];\n            activeRow = row;\n          }\n        }\n      }\n\n      // Create a new one if too much vertical space would be wasted or there is not enough room\n      // left in the page. The previous active row will become fixed in the process as it now has a\n      // fixed height\n      if (activeRow.y + rasterizedGlyph.size.y >= activePage.canvas.height || activeRow.height > rasterizedGlyph.size.y + Constants.ROW_PIXEL_THRESHOLD) {\n        // Create the new fixed height row, creating a new page if there isn't enough room on the\n        // current page\n        let wasNewPageCreated = false;\n        if (activePage.currentRow.y + activePage.currentRow.height + rasterizedGlyph.size.y >= activePage.canvas.height) {\n          // Find the first page with room to create the new row on\n          let candidatePage: AtlasPage | undefined;\n          for (const p of this._activePages) {\n            if (p.currentRow.y + p.currentRow.height + rasterizedGlyph.size.y < p.canvas.height) {\n              candidatePage = p;\n              break;\n            }\n          }\n          if (candidatePage) {\n            activePage = candidatePage;\n          } else {\n            // Create a new page if there is no room\n            const newPage = this._createNewPage();\n            activePage = newPage;\n            activeRow = newPage.currentRow;\n            activeRow.height = rasterizedGlyph.size.y;\n            wasNewPageCreated = true;\n          }\n        }\n        if (!wasNewPageCreated) {\n          // Fix the current row as the new row is being added below\n          if (activePage.currentRow.height > 0) {\n            activePage.fixedRows.push(activePage.currentRow);\n          }\n          activeRow = {\n            x: 0,\n            y: activePage.currentRow.y + activePage.currentRow.height,\n            height: rasterizedGlyph.size.y\n          };\n          activePage.fixedRows.push(activeRow);\n\n          // Create the new current row below the new fixed height row\n          activePage.currentRow = {\n            x: 0,\n            y: activeRow.y + activeRow.height,\n            height: 0\n          };\n        }\n        // TODO: Remove pages from _activePages when all rows are filled\n      }\n\n      // Exit the loop if there is enough room in the row\n      if (activeRow.x + rasterizedGlyph.size.x <= activePage.canvas.width) {\n        break;\n      }\n\n      // If there is not enough room in the current row, finish it and try again\n      if (activeRow === activePage.currentRow) {\n        activeRow.x = 0;\n        activeRow.y += activeRow.height;\n        activeRow.height = 0;\n      } else {\n        activePage.fixedRows.splice(activePage.fixedRows.indexOf(activeRow), 1);\n      }\n    }\n\n    // Record texture position\n    rasterizedGlyph.texturePage = this._pages.indexOf(activePage);\n    rasterizedGlyph.texturePosition.x = activeRow.x;\n    rasterizedGlyph.texturePosition.y = activeRow.y;\n    rasterizedGlyph.texturePositionClipSpace.x = activeRow.x / activePage.canvas.width;\n    rasterizedGlyph.texturePositionClipSpace.y = activeRow.y / activePage.canvas.height;\n\n    // Fix the clipspace position as pages may be of differing size\n    rasterizedGlyph.sizeClipSpace.x /= activePage.canvas.width;\n    rasterizedGlyph.sizeClipSpace.y /= activePage.canvas.height;\n\n    // Update atlas current row, for fixed rows the glyph height will never be larger than the row\n    // height\n    activeRow.height = Math.max(activeRow.height, rasterizedGlyph.size.y);\n    activeRow.x += rasterizedGlyph.size.x;\n\n    // putImageData doesn't do any blending, so it will overwrite any existing cache entry for us\n    activePage.ctx.putImageData(\n      imageData,\n      rasterizedGlyph.texturePosition.x - this._workBoundingBox.left,\n      rasterizedGlyph.texturePosition.y - this._workBoundingBox.top,\n      this._workBoundingBox.left,\n      this._workBoundingBox.top,\n      rasterizedGlyph.size.x,\n      rasterizedGlyph.size.y\n    );\n    activePage.addGlyph(rasterizedGlyph);\n    activePage.version++;\n\n    return rasterizedGlyph;\n  }\n\n  /**\n   * Given an ImageData object, find the bounding box of the non-transparent\n   * portion of the texture and return an IRasterizedGlyph with these\n   * dimensions.\n   * @param imageData The image data to read.\n   * @param boundingBox An IBoundingBox to put the clipped bounding box values.\n   */\n  private _findGlyphBoundingBox(imageData: ImageData, boundingBox: IBoundingBox, allowedWidth: number, restrictedGlyph: boolean, customGlyph: boolean, padding: number): IRasterizedGlyph {\n    boundingBox.top = 0;\n    const height = restrictedGlyph ? this._config.deviceCellHeight : this._tmpCanvas.height;\n    const width = restrictedGlyph ? this._config.deviceCellWidth : allowedWidth;\n    let found = false;\n    for (let y = 0; y < height; y++) {\n      for (let x = 0; x < width; x++) {\n        const alphaOffset = y * this._tmpCanvas.width * 4 + x * 4 + 3;\n        if (imageData.data[alphaOffset] !== 0) {\n          boundingBox.top = y;\n          found = true;\n          break;\n        }\n      }\n      if (found) {\n        break;\n      }\n    }\n    boundingBox.left = 0;\n    found = false;\n    for (let x = 0; x < padding + width; x++) {\n      for (let y = 0; y < height; y++) {\n        const alphaOffset = y * this._tmpCanvas.width * 4 + x * 4 + 3;\n        if (imageData.data[alphaOffset] !== 0) {\n          boundingBox.left = x;\n          found = true;\n          break;\n        }\n      }\n      if (found) {\n        break;\n      }\n    }\n    boundingBox.right = width;\n    found = false;\n    for (let x = padding + width - 1; x >= padding; x--) {\n      for (let y = 0; y < height; y++) {\n        const alphaOffset = y * this._tmpCanvas.width * 4 + x * 4 + 3;\n        if (imageData.data[alphaOffset] !== 0) {\n          boundingBox.right = x;\n          found = true;\n          break;\n        }\n      }\n      if (found) {\n        break;\n      }\n    }\n    boundingBox.bottom = height;\n    found = false;\n    for (let y = height - 1; y >= 0; y--) {\n      for (let x = 0; x < width; x++) {\n        const alphaOffset = y * this._tmpCanvas.width * 4 + x * 4 + 3;\n        if (imageData.data[alphaOffset] !== 0) {\n          boundingBox.bottom = y;\n          found = true;\n          break;\n        }\n      }\n      if (found) {\n        break;\n      }\n    }\n    return {\n      texturePage: 0,\n      texturePosition: { x: 0, y: 0 },\n      texturePositionClipSpace: { x: 0, y: 0 },\n      size: {\n        x: boundingBox.right - boundingBox.left + 1,\n        y: boundingBox.bottom - boundingBox.top + 1\n      },\n      sizeClipSpace: {\n        x: (boundingBox.right - boundingBox.left + 1),\n        y: (boundingBox.bottom - boundingBox.top + 1)\n      },\n      offset: {\n        x: -boundingBox.left + padding + ((restrictedGlyph || customGlyph) ? Math.floor((this._config.deviceCellWidth - this._config.deviceCharWidth) / 2) : 0),\n        y: -boundingBox.top + padding + ((restrictedGlyph || customGlyph) ? this._config.lineHeight === 1 ? 0 : Math.round((this._config.deviceCellHeight - this._config.deviceCharHeight) / 2) : 0)\n      }\n    };\n  }\n}\n\nclass AtlasPage {\n  public readonly canvas: HTMLCanvasElement;\n  public readonly ctx: CanvasRenderingContext2D;\n\n  private _usedPixels: number = 0;\n  public get percentageUsed(): number { return this._usedPixels / (this.canvas.width * this.canvas.height); }\n\n  private readonly _glyphs: IRasterizedGlyph[] = [];\n  public get glyphs(): ReadonlyArray<IRasterizedGlyph> { return this._glyphs; }\n  public addGlyph(glyph: IRasterizedGlyph): void {\n    this._glyphs.push(glyph);\n    this._usedPixels += glyph.size.x * glyph.size.y;\n  }\n\n  /**\n   * Used to check whether the canvas of the atlas page has changed.\n   */\n  public version = 0;\n\n  // Texture atlas current positioning data. The texture packing strategy used is to fill from\n  // left-to-right and top-to-bottom. When the glyph being written is less than half of the current\n  // row's height, the following happens:\n  //\n  // - The current row becomes the fixed height row A\n  // - A new fixed height row B the exact size of the glyph is created below the current row\n  // - A new dynamic height current row is created below B\n  //\n  // This strategy does a good job preventing space being wasted for very short glyphs such as\n  // underscores, hyphens etc. or those with underlines rendered.\n  public currentRow: ICharAtlasActiveRow = {\n    x: 0,\n    y: 0,\n    height: 0\n  };\n  public readonly fixedRows: ICharAtlasActiveRow[] = [];\n\n  constructor(\n    document: Document,\n    size: number,\n    sourcePages?: AtlasPage[]\n  ) {\n    if (sourcePages) {\n      for (const p of sourcePages) {\n        this._glyphs.push(...p.glyphs);\n        this._usedPixels += p._usedPixels;\n      }\n    }\n    this.canvas = createCanvas(document, size, size);\n    // The canvas needs alpha because we use clearColor to convert the background color to alpha.\n    // It might also contain some characters with transparent backgrounds if allowTransparency is\n    // set.\n    this.ctx = throwIfFalsy(this.canvas.getContext('2d', { alpha: true }));\n  }\n\n  public clear(): void {\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    this.currentRow.x = 0;\n    this.currentRow.y = 0;\n    this.currentRow.height = 0;\n    this.fixedRows.length = 0;\n    this.version++;\n  }\n}\n\n/**\n * Makes a particular rgb color and colors that are nearly the same in an ImageData completely\n * transparent.\n * @returns True if the result is \"empty\", meaning all pixels are fully transparent.\n */\nfunction clearColor(imageData: ImageData, bg: IColor, fg: IColor, enableThresholdCheck: boolean): boolean {\n  // Get color channels\n  const r = bg.rgba >>> 24;\n  const g = bg.rgba >>> 16 & 0xFF;\n  const b = bg.rgba >>> 8 & 0xFF;\n  const fgR = fg.rgba >>> 24;\n  const fgG = fg.rgba >>> 16 & 0xFF;\n  const fgB = fg.rgba >>> 8 & 0xFF;\n\n  // Calculate a threshold that when below a color will be treated as transpart when the sum of\n  // channel value differs. This helps improve rendering when glyphs overlap with others. This\n  // threshold is calculated relative to the difference between the background and foreground to\n  // ensure important details of the glyph are always shown, even when the contrast ratio is low.\n  // The number 12 is largely arbitrary to ensure the pixels that escape the cell in the test case\n  // were covered (fg=#8ae234, bg=#c4a000).\n  const threshold = Math.floor((Math.abs(r - fgR) + Math.abs(g - fgG) + Math.abs(b - fgB)) / 12);\n\n  // Set alpha channel of relevent pixels to 0\n  let isEmpty = true;\n  for (let offset = 0; offset < imageData.data.length; offset += 4) {\n    // Check exact match\n    if (imageData.data[offset] === r &&\n        imageData.data[offset + 1] === g &&\n        imageData.data[offset + 2] === b) {\n      imageData.data[offset + 3] = 0;\n    } else {\n      // Check the threshold based difference\n      if (enableThresholdCheck &&\n          (Math.abs(imageData.data[offset] - r) +\n          Math.abs(imageData.data[offset + 1] - g) +\n          Math.abs(imageData.data[offset + 2] - b)) < threshold) {\n        imageData.data[offset + 3] = 0;\n      } else {\n        isEmpty = false;\n      }\n    }\n  }\n\n  return isEmpty;\n}\n\nfunction checkCompletelyTransparent(imageData: ImageData): boolean {\n  for (let offset = 0; offset < imageData.data.length; offset += 4) {\n    if (imageData.data[offset + 3] > 0) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction createCanvas(document: Document, width: number, height: number): HTMLCanvasElement {\n  const canvas = document.createElement('canvas');\n  canvas.width = width;\n  canvas.height = height;\n  return canvas;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine, ICellData, CharData } from 'common/Types';\nimport { ICharacterJoiner } from 'browser/Types';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { WHITESPACE_CELL_CHAR, Content } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService } from 'common/services/Services';\nimport { ICharacterJoinerService } from 'browser/services/Services';\n\nexport class JoinedCellData extends AttributeData implements ICellData {\n  private _width: number;\n  // .content carries no meaning for joined CellData, simply nullify it\n  // thus we have to overload all other .content accessors\n  public content: number = 0;\n  public fg: number;\n  public bg: number;\n  public combinedData: string = '';\n\n  constructor(firstCell: ICellData, chars: string, width: number) {\n    super();\n    this.fg = firstCell.fg;\n    this.bg = firstCell.bg;\n    this.combinedData = chars;\n    this._width = width;\n  }\n\n  public isCombined(): number {\n    // always mark joined cell data as combined\n    return Content.IS_COMBINED_MASK;\n  }\n\n  public getWidth(): number {\n    return this._width;\n  }\n\n  public getChars(): string {\n    return this.combinedData;\n  }\n\n  public getCode(): number {\n    // code always gets the highest possible fake codepoint (read as -1)\n    // this is needed as code is used by caches as identifier\n    return 0x1FFFFF;\n  }\n\n  public setFromCharData(value: CharData): void {\n    throw new Error('not implemented');\n  }\n\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n\nexport class CharacterJoinerService implements ICharacterJoinerService {\n  public serviceBrand: undefined;\n\n  private _characterJoiners: ICharacterJoiner[] = [];\n  private _nextCharacterJoinerId: number = 0;\n  private _workCell: CellData = new CellData();\n\n  constructor(\n    @IBufferService private _bufferService: IBufferService\n  ) { }\n\n  public register(handler: (text: string) => [number, number][]): number {\n    const joiner: ICharacterJoiner = {\n      id: this._nextCharacterJoinerId++,\n      handler\n    };\n\n    this._characterJoiners.push(joiner);\n    return joiner.id;\n  }\n\n  public deregister(joinerId: number): boolean {\n    for (let i = 0; i < this._characterJoiners.length; i++) {\n      if (this._characterJoiners[i].id === joinerId) {\n        this._characterJoiners.splice(i, 1);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  public getJoinedCharacters(row: number): [number, number][] {\n    if (this._characterJoiners.length === 0) {\n      return [];\n    }\n\n    const line = this._bufferService.buffer.lines.get(row);\n    if (!line || line.length === 0) {\n      return [];\n    }\n\n    const ranges: [number, number][] = [];\n    const lineStr = line.translateToString(true);\n\n    // Because some cells can be represented by multiple javascript characters,\n    // we track the cell and the string indexes separately. This allows us to\n    // translate the string ranges we get from the joiners back into cell ranges\n    // for use when rendering\n    let rangeStartColumn = 0;\n    let currentStringIndex = 0;\n    let rangeStartStringIndex = 0;\n    let rangeAttrFG = line.getFg(0);\n    let rangeAttrBG = line.getBg(0);\n\n    for (let x = 0; x < line.getTrimmedLength(); x++) {\n      line.loadCell(x, this._workCell);\n\n      if (this._workCell.getWidth() === 0) {\n        // If this character is of width 0, skip it.\n        continue;\n      }\n\n      // End of range\n      if (this._workCell.fg !== rangeAttrFG || this._workCell.bg !== rangeAttrBG) {\n        // If we ended up with a sequence of more than one character,\n        // look for ranges to join.\n        if (x - rangeStartColumn > 1) {\n          const joinedRanges = this._getJoinedRanges(\n            lineStr,\n            rangeStartStringIndex,\n            currentStringIndex,\n            line,\n            rangeStartColumn\n          );\n          for (let i = 0; i < joinedRanges.length; i++) {\n            ranges.push(joinedRanges[i]);\n          }\n        }\n\n        // Reset our markers for a new range.\n        rangeStartColumn = x;\n        rangeStartStringIndex = currentStringIndex;\n        rangeAttrFG = this._workCell.fg;\n        rangeAttrBG = this._workCell.bg;\n      }\n\n      currentStringIndex += this._workCell.getChars().length || WHITESPACE_CELL_CHAR.length;\n    }\n\n    // Process any trailing ranges.\n    if (this._bufferService.cols - rangeStartColumn > 1) {\n      const joinedRanges = this._getJoinedRanges(\n        lineStr,\n        rangeStartStringIndex,\n        currentStringIndex,\n        line,\n        rangeStartColumn\n      );\n      for (let i = 0; i < joinedRanges.length; i++) {\n        ranges.push(joinedRanges[i]);\n      }\n    }\n\n    return ranges;\n  }\n\n  /**\n   * Given a segment of a line of text, find all ranges of text that should be\n   * joined in a single rendering unit. Ranges are internally converted to\n   * column ranges, rather than string ranges.\n   * @param line String representation of the full line of text\n   * @param startIndex Start position of the range to search in the string (inclusive)\n   * @param endIndex End position of the range to search in the string (exclusive)\n   */\n  private _getJoinedRanges(line: string, startIndex: number, endIndex: number, lineData: IBufferLine, startCol: number): [number, number][] {\n    const text = line.substring(startIndex, endIndex);\n    // At this point we already know that there is at least one joiner so\n    // we can just pull its value and assign it directly rather than\n    // merging it into an empty array, which incurs unnecessary writes.\n    let allJoinedRanges: [number, number][] = [];\n    try {\n      allJoinedRanges = this._characterJoiners[0].handler(text);\n    } catch (error) {\n      console.error(error);\n    }\n    for (let i = 1; i < this._characterJoiners.length; i++) {\n      // We merge any overlapping ranges across the different joiners\n      try {\n        const joinerRanges = this._characterJoiners[i].handler(text);\n        for (let j = 0; j < joinerRanges.length; j++) {\n          CharacterJoinerService._mergeRanges(allJoinedRanges, joinerRanges[j]);\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    this._stringRangesToCellRanges(allJoinedRanges, lineData, startCol);\n    return allJoinedRanges;\n  }\n\n  /**\n   * Modifies the provided ranges in-place to adjust for variations between\n   * string length and cell width so that the range represents a cell range,\n   * rather than the string range the joiner provides.\n   * @param ranges String ranges containing start (inclusive) and end (exclusive) index\n   * @param line Cell data for the relevant line in the terminal\n   * @param startCol Offset within the line to start from\n   */\n  private _stringRangesToCellRanges(ranges: [number, number][], line: IBufferLine, startCol: number): void {\n    let currentRangeIndex = 0;\n    let currentRangeStarted = false;\n    let currentStringIndex = 0;\n    let currentRange = ranges[currentRangeIndex];\n\n    // If we got through all of the ranges, stop searching\n    if (!currentRange) {\n      return;\n    }\n\n    for (let x = startCol; x < this._bufferService.cols; x++) {\n      const width = line.getWidth(x);\n      const length = line.getString(x).length || WHITESPACE_CELL_CHAR.length;\n\n      // We skip zero-width characters when creating the string to join the text\n      // so we do the same here\n      if (width === 0) {\n        continue;\n      }\n\n      // Adjust the start of the range\n      if (!currentRangeStarted && currentRange[0] <= currentStringIndex) {\n        currentRange[0] = x;\n        currentRangeStarted = true;\n      }\n\n      // Adjust the end of the range\n      if (currentRange[1] <= currentStringIndex) {\n        currentRange[1] = x;\n\n        // We're finished with this range, so we move to the next one\n        currentRange = ranges[++currentRangeIndex];\n\n        // If there are no more ranges left, stop searching\n        if (!currentRange) {\n          break;\n        }\n\n        // Ranges can be on adjacent characters. Because the end index of the\n        // ranges are exclusive, this means that the index for the start of a\n        // range can be the same as the end index of the previous range. To\n        // account for the start of the next range, we check here just in case.\n        if (currentRange[0] <= currentStringIndex) {\n          currentRange[0] = x;\n          currentRangeStarted = true;\n        } else {\n          currentRangeStarted = false;\n        }\n      }\n\n      // Adjust the string index based on the character length to line up with\n      // the column adjustment\n      currentStringIndex += length;\n    }\n\n    // If there is still a range left at the end, it must extend all the way to\n    // the end of the line.\n    if (currentRange) {\n      currentRange[1] = this._bufferService.cols;\n    }\n  }\n\n  /**\n   * Merges the range defined by the provided start and end into the list of\n   * existing ranges. The merge is done in place on the existing range for\n   * performance and is also returned.\n   * @param ranges Existing range list\n   * @param newRange Tuple of two numbers representing the new range to merge in.\n   * @returns The ranges input with the new range merged in place\n   */\n  private static _mergeRanges(ranges: [number, number][], newRange: [number, number]): [number, number][] {\n    let inRange = false;\n    for (let i = 0; i < ranges.length; i++) {\n      const range = ranges[i];\n      if (!inRange) {\n        if (newRange[1] <= range[0]) {\n          // Case 1: New range is before the search range\n          ranges.splice(i, 0, newRange);\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 2: New range is either wholly contained within the\n          // search range or overlaps with the front of it\n          range[0] = Math.min(newRange[0], range[0]);\n          return ranges;\n        }\n\n        if (newRange[0] < range[1]) {\n          // Case 3: New range either wholly contains the search range\n          // or overlaps with the end of it\n          range[0] = Math.min(newRange[0], range[0]);\n          inRange = true;\n        }\n\n        // Case 4: New range starts after the search range\n        continue;\n      } else {\n        if (newRange[1] <= range[0]) {\n          // Case 5: New range extends from previous range but doesn't\n          // reach the current one\n          ranges[i - 1][1] = newRange[1];\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 6: New range extends from prvious range into the\n          // current range\n          ranges[i - 1][1] = Math.max(newRange[1], range[1]);\n          ranges.splice(i, 1);\n          return ranges;\n        }\n\n        // Case 7: New range extends from previous range past the\n        // end of the current range\n        ranges.splice(i, 1);\n        i--;\n      }\n    }\n\n    if (inRange) {\n      // Case 8: New range extends past the last existing range\n      ranges[ranges.length - 1][1] = newRange[1];\n    } else {\n      // Case 9: New range starts after the last existing range\n      ranges.push(newRange);\n    }\n\n    return ranges;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isNode } from 'common/Platform';\nimport { IColor, IColorRGB } from 'common/Types';\n\nlet $r = 0;\nlet $g = 0;\nlet $b = 0;\nlet $a = 0;\n\nexport const NULL_COLOR: IColor = {\n  css: '#00000000',\n  rgba: 0\n};\n\n/**\n * Helper functions where the source type is \"channels\" (individual color channels as numbers).\n */\nexport namespace channels {\n  export function toCss(r: number, g: number, b: number, a?: number): string {\n    if (a !== undefined) {\n      return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}${toPaddedHex(a)}`;\n    }\n    return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}`;\n  }\n\n  export function toRgba(r: number, g: number, b: number, a: number = 0xFF): number {\n    // Note: The aggregated number is RGBA32 (BE), thus needs to be converted to ABGR32\n    // on LE systems, before it can be used for direct 32-bit buffer writes.\n    // >>> 0 forces an unsigned int\n    return (r << 24 | g << 16 | b << 8 | a) >>> 0;\n  }\n}\n\n/**\n * Helper functions where the source type is `IColor`.\n */\nexport namespace color {\n  export function blend(bg: IColor, fg: IColor): IColor {\n    $a = (fg.rgba & 0xFF) / 255;\n    if ($a === 1) {\n      return {\n        css: fg.css,\n        rgba: fg.rgba\n      };\n    }\n    const fgR = (fg.rgba >> 24) & 0xFF;\n    const fgG = (fg.rgba >> 16) & 0xFF;\n    const fgB = (fg.rgba >> 8) & 0xFF;\n    const bgR = (bg.rgba >> 24) & 0xFF;\n    const bgG = (bg.rgba >> 16) & 0xFF;\n    const bgB = (bg.rgba >> 8) & 0xFF;\n    $r = bgR + Math.round((fgR - bgR) * $a);\n    $g = bgG + Math.round((fgG - bgG) * $a);\n    $b = bgB + Math.round((fgB - bgB) * $a);\n    const css = channels.toCss($r, $g, $b);\n    const rgba = channels.toRgba($r, $g, $b);\n    return { css, rgba };\n  }\n\n  export function isOpaque(color: IColor): boolean {\n    return (color.rgba & 0xFF) === 0xFF;\n  }\n\n  export function ensureContrastRatio(bg: IColor, fg: IColor, ratio: number): IColor | undefined {\n    const result = rgba.ensureContrastRatio(bg.rgba, fg.rgba, ratio);\n    if (!result) {\n      return undefined;\n    }\n    return rgba.toColor(\n      (result >> 24 & 0xFF),\n      (result >> 16 & 0xFF),\n      (result >> 8  & 0xFF)\n    );\n  }\n\n  export function opaque(color: IColor): IColor {\n    const rgbaColor = (color.rgba | 0xFF) >>> 0;\n    [$r, $g, $b] = rgba.toChannels(rgbaColor);\n    return {\n      css: channels.toCss($r, $g, $b),\n      rgba: rgbaColor\n    };\n  }\n\n  export function opacity(color: IColor, opacity: number): IColor {\n    $a = Math.round(opacity * 0xFF);\n    [$r, $g, $b] = rgba.toChannels(color.rgba);\n    return {\n      css: channels.toCss($r, $g, $b, $a),\n      rgba: channels.toRgba($r, $g, $b, $a)\n    };\n  }\n\n  export function multiplyOpacity(color: IColor, factor: number): IColor {\n    $a = color.rgba & 0xFF;\n    return opacity(color, ($a * factor) / 0xFF);\n  }\n\n  export function toColorRGB(color: IColor): IColorRGB {\n    return [(color.rgba >> 24) & 0xFF, (color.rgba >> 16) & 0xFF, (color.rgba >> 8) & 0xFF];\n  }\n}\n\n/**\n * Helper functions where the source type is \"css\" (string: '#rgb', '#rgba', '#rrggbb', '#rrggbbaa').\n */\nexport namespace css {\n  let $ctx: CanvasRenderingContext2D | undefined;\n  let $litmusColor: CanvasGradient | undefined;\n  if (!isNode) {\n    const canvas = document.createElement('canvas');\n    canvas.width = 1;\n    canvas.height = 1;\n    const ctx = canvas.getContext('2d', {\n      willReadFrequently: true\n    });\n    if (ctx) {\n      $ctx = ctx;\n      $ctx.globalCompositeOperation = 'copy';\n      $litmusColor = $ctx.createLinearGradient(0, 0, 1, 1);\n    }\n  }\n\n  /**\n   * Converts a css string to an IColor, this should handle all valid CSS color strings and will\n   * throw if it's invalid. The ideal format to use is `#rrggbb[aa]` as it's the fastest to parse.\n   *\n   * Only `#rgb[a]`, `#rrggbb[aa]`, `rgb()` and `rgba()` formats are supported when run in a Node\n   * environment.\n   */\n  export function toColor(css: string): IColor {\n    // Formats: #rgb[a] and #rrggbb[aa]\n    if (css.match(/#[\\da-f]{3,8}/i)) {\n      switch (css.length) {\n        case 4: { // #rgb\n          $r = parseInt(css.slice(1, 2).repeat(2), 16);\n          $g = parseInt(css.slice(2, 3).repeat(2), 16);\n          $b = parseInt(css.slice(3, 4).repeat(2), 16);\n          return rgba.toColor($r, $g, $b);\n        }\n        case 5: { // #rgba\n          $r = parseInt(css.slice(1, 2).repeat(2), 16);\n          $g = parseInt(css.slice(2, 3).repeat(2), 16);\n          $b = parseInt(css.slice(3, 4).repeat(2), 16);\n          $a = parseInt(css.slice(4, 5).repeat(2), 16);\n          return rgba.toColor($r, $g, $b, $a);\n        }\n        case 7: // #rrggbb\n          return {\n            css,\n            rgba: (parseInt(css.slice(1), 16) << 8 | 0xFF) >>> 0\n          };\n        case 9: // #rrggbbaa\n          return {\n            css,\n            rgba: parseInt(css.slice(1), 16) >>> 0\n          };\n      }\n    }\n\n    // Formats: rgb() or rgba()\n    const rgbaMatch = css.match(/rgba?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*(,\\s*(0|1|\\d?\\.(\\d+))\\s*)?\\)/);\n    if (rgbaMatch) {\n      $r = parseInt(rgbaMatch[1]);\n      $g = parseInt(rgbaMatch[2]);\n      $b = parseInt(rgbaMatch[3]);\n      $a = Math.round((rgbaMatch[5] === undefined ? 1 : parseFloat(rgbaMatch[5])) * 0xFF);\n      return rgba.toColor($r, $g, $b, $a);\n    }\n\n    // Validate the context is available for canvas-based color parsing\n    if (!$ctx || !$litmusColor) {\n      throw new Error('css.toColor: Unsupported css format');\n    }\n\n    // Validate the color using canvas fillStyle\n    // See https://html.spec.whatwg.org/multipage/canvas.html#fill-and-stroke-styles\n    $ctx.fillStyle = $litmusColor;\n    $ctx.fillStyle = css;\n    if (typeof $ctx.fillStyle !== 'string') {\n      throw new Error('css.toColor: Unsupported css format');\n    }\n\n    $ctx.fillRect(0, 0, 1, 1);\n    [$r, $g, $b, $a] = $ctx.getImageData(0, 0, 1, 1).data;\n\n    // Validate the color is non-transparent as color hue gets lost when drawn to the canvas\n    if ($a !== 0xFF) {\n      throw new Error('css.toColor: Unsupported css format');\n    }\n\n    // Extract the color from the canvas' fillStyle property which exposes the color value in rgba()\n    // format\n    // See https://html.spec.whatwg.org/multipage/canvas.html#serialisation-of-a-color\n    return {\n      rgba: channels.toRgba($r, $g, $b, $a),\n      css\n    };\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgb\" (number: 0xrrggbb).\n */\nexport namespace rgb {\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param rgb The color to use.\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance(rgb: number): number {\n    return relativeLuminance2(\n      (rgb >> 16) & 0xFF,\n      (rgb >> 8 ) & 0xFF,\n      (rgb      ) & 0xFF);\n  }\n\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param r The red channel (0x00 to 0xFF).\n   * @param g The green channel (0x00 to 0xFF).\n   * @param b The blue channel (0x00 to 0xFF).\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance2(r: number, g: number, b: number): number {\n    const rs = r / 255;\n    const gs = g / 255;\n    const bs = b / 255;\n    const rr = rs <= 0.03928 ? rs / 12.92 : Math.pow((rs + 0.055) / 1.055, 2.4);\n    const rg = gs <= 0.03928 ? gs / 12.92 : Math.pow((gs + 0.055) / 1.055, 2.4);\n    const rb = bs <= 0.03928 ? bs / 12.92 : Math.pow((bs + 0.055) / 1.055, 2.4);\n    return rr * 0.2126 + rg * 0.7152 + rb * 0.0722;\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgba\" (number: 0xrrggbbaa).\n */\nexport namespace rgba {\n  /**\n   * Given a foreground color and a background color, either increase or reduce the luminance of the\n   * foreground color until the specified contrast ratio is met. If pure white or black is hit\n   * without the contrast ratio being met, go the other direction using the background color as the\n   * foreground color and take either the first or second result depending on which has the higher\n   * contrast ratio.\n   *\n   * `undefined` will be returned if the contrast ratio is already met.\n   *\n   * @param bgRgba The background color in rgba format.\n   * @param fgRgba The foreground color in rgba format.\n   * @param ratio The contrast ratio to achieve.\n   */\n  export function ensureContrastRatio(bgRgba: number, fgRgba: number, ratio: number): number | undefined {\n    const bgL = rgb.relativeLuminance(bgRgba >> 8);\n    const fgL = rgb.relativeLuminance(fgRgba >> 8);\n    const cr = contrastRatio(bgL, fgL);\n    if (cr < ratio) {\n      if (fgL < bgL) {\n        const resultA = reduceLuminance(bgRgba, fgRgba, ratio);\n        const resultARatio = contrastRatio(bgL, rgb.relativeLuminance(resultA >> 8));\n        if (resultARatio < ratio) {\n          const resultB = increaseLuminance(bgRgba, fgRgba, ratio);\n          const resultBRatio = contrastRatio(bgL, rgb.relativeLuminance(resultB >> 8));\n          return resultARatio > resultBRatio ? resultA : resultB;\n        }\n        return resultA;\n      }\n      const resultA = increaseLuminance(bgRgba, fgRgba, ratio);\n      const resultARatio = contrastRatio(bgL, rgb.relativeLuminance(resultA >> 8));\n      if (resultARatio < ratio) {\n        const resultB = reduceLuminance(bgRgba, fgRgba, ratio);\n        const resultBRatio = contrastRatio(bgL, rgb.relativeLuminance(resultB >> 8));\n        return resultARatio > resultBRatio ? resultA : resultB;\n      }\n      return resultA;\n    }\n    return undefined;\n  }\n\n  export function reduceLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to reducing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR > 0 || fgG > 0 || fgB > 0)) {\n      // Reduce by 10% until the ratio is hit\n      fgR -= Math.max(0, Math.ceil(fgR * 0.1));\n      fgG -= Math.max(0, Math.ceil(fgG * 0.1));\n      fgB -= Math.max(0, Math.ceil(fgB * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  export function increaseLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to increasing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR < 0xFF || fgG < 0xFF || fgB < 0xFF)) {\n      // Increase by 10% until the ratio is hit\n      fgR = Math.min(0xFF, fgR + Math.ceil((255 - fgR) * 0.1));\n      fgG = Math.min(0xFF, fgG + Math.ceil((255 - fgG) * 0.1));\n      fgB = Math.min(0xFF, fgB + Math.ceil((255 - fgB) * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  // FIXME: Move this to channels NS?\n  export function toChannels(value: number): [number, number, number, number] {\n    return [(value >> 24) & 0xFF, (value >> 16) & 0xFF, (value >> 8) & 0xFF, value & 0xFF];\n  }\n\n  export function toColor(r: number, g: number, b: number, a?: number): IColor {\n    return {\n      css: channels.toCss(r, g, b, a),\n      rgba: channels.toRgba(r, g, b, a)\n    };\n  }\n}\n\nexport function toPaddedHex(c: number): string {\n  const s = c.toString(16);\n  return s.length < 2 ? '0' + s : s;\n}\n\n/**\n * Gets the contrast ratio between two relative luminance values.\n * @param l1 The first relative luminance.\n * @param l2 The first relative luminance.\n * @see https://www.w3.org/TR/WCAG20/#contrast-ratiodef\n */\nexport function contrastRatio(l1: number, l2: number): number {\n  if (l1 < l2) {\n    return (l2 + 0.05) / (l1 + 0.05);\n  }\n  return (l1 + 0.05) / (l2 + 0.05);\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\ninterface IListener<T, U = void> {\n  (arg1: T, arg2: U): void;\n}\n\nexport interface IEvent<T, U = void> {\n  (listener: (arg1: T, arg2: U) => any): IDisposable;\n}\n\nexport interface IEventEmitter<T, U = void> {\n  event: IEvent<T, U>;\n  fire(arg1: T, arg2: U): void;\n  dispose(): void;\n}\n\nexport class EventEmitter<T, U = void> implements IEventEmitter<T, U> {\n  private _listeners: IListener<T, U>[] = [];\n  private _event?: IEvent<T, U>;\n  private _disposed: boolean = false;\n\n  public get event(): IEvent<T, U> {\n    if (!this._event) {\n      this._event = (listener: (arg1: T, arg2: U) => any) => {\n        this._listeners.push(listener);\n        const disposable = {\n          dispose: () => {\n            if (!this._disposed) {\n              for (let i = 0; i < this._listeners.length; i++) {\n                if (this._listeners[i] === listener) {\n                  this._listeners.splice(i, 1);\n                  return;\n                }\n              }\n            }\n          }\n        };\n        return disposable;\n      };\n    }\n    return this._event;\n  }\n\n  public fire(arg1: T, arg2: U): void {\n    const queue: IListener<T, U>[] = [];\n    for (let i = 0; i < this._listeners.length; i++) {\n      queue.push(this._listeners[i]);\n    }\n    for (let i = 0; i < queue.length; i++) {\n      queue[i].call(undefined, arg1, arg2);\n    }\n  }\n\n  public dispose(): void {\n    if (this._listeners) {\n      this._listeners.length = 0;\n    }\n    this._disposed = true;\n  }\n}\n\nexport function forwardEvent<T>(from: IEvent<T>, to: IEventEmitter<T>): IDisposable {\n  return from(e => to.fire(e));\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * A base class that can be extended to provide convenience methods for managing the lifecycle of an\n * object and its components.\n */\nexport abstract class Disposable implements IDisposable {\n  protected _disposables: IDisposable[] = [];\n  protected _isDisposed: boolean = false;\n\n  constructor() {\n  }\n\n  /**\n   * Disposes the object, triggering the `dispose` method on all registered IDisposables.\n   */\n  public dispose(): void {\n    this._isDisposed = true;\n    for (const d of this._disposables) {\n      d.dispose();\n    }\n    this._disposables.length = 0;\n  }\n\n  /**\n   * Registers a disposable object.\n   * @param d The disposable to register.\n   * @returns The disposable.\n   */\n  public register<T extends IDisposable>(d: T): T {\n    this._disposables.push(d);\n    return d;\n  }\n\n  /**\n   * Unregisters a disposable object if it has been registered, if not do\n   * nothing.\n   * @param d The disposable to unregister.\n   */\n  public unregister<T extends IDisposable>(d: T): void {\n    const index = this._disposables.indexOf(d);\n    if (index !== -1) {\n      this._disposables.splice(index, 1);\n    }\n  }\n}\n\n/**\n * Wrap a function in a disposable.\n */\nexport function toDisposable(f: () => void): IDisposable {\n  return { dispose: f };\n}\n\n/**\n * Dispose of all disposables in an array and set its length to 0.\n */\nexport function disposeArray(disposables: IDisposable[]): void {\n  for (const d of disposables) {\n    d.dispose();\n  }\n  disposables.length = 0;\n}\n\n/**\n * Creates a disposable that will dispose of an array of disposables when disposed.\n */\nexport function getDisposeArrayDisposable(array: IDisposable[]): IDisposable {\n  return { dispose: () => disposeArray(array) };\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport class TwoKeyMap<TFirst extends string | number, TSecond extends string | number, TValue> {\n  private _data: { [bg: string | number]: { [fg: string | number]: TValue | undefined } | undefined } = {};\n\n  public set(first: TFirst, second: TSecond, value: TValue): void {\n    if (!this._data[first]) {\n      this._data[first] = {};\n    }\n    this._data[first as string | number]![second] = value;\n  }\n\n  public get(first: TFirst, second: TSecond): TValue | undefined {\n    return this._data[first as string | number] ? this._data[first as string | number]![second] : undefined;\n  }\n\n  public clear(): void {\n    this._data = {};\n  }\n}\n\nexport class FourKeyMap<TFirst extends string | number, TSecond extends string | number, TThird extends string | number, TFourth extends string | number, TValue> {\n  private _data: TwoKeyMap<TFirst, TSecond, TwoKeyMap<TThird, TFourth, TValue>> = new TwoKeyMap();\n\n  public set(first: TFirst, second: TSecond, third: TThird, fourth: TFourth, value: TValue): void {\n    if (!this._data.get(first, second)) {\n      this._data.set(first, second, new TwoKeyMap());\n    }\n    this._data.get(first, second)!.set(third, fourth, value);\n  }\n\n  public get(first: TFirst, second: TSecond, third: TThird, fourth: TFourth): TValue | undefined {\n    return this._data.get(first, second)?.get(third, fourth);\n  }\n\n  public clear(): void {\n    this._data.clear();\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ninterface INavigator {\n  userAgent: string;\n  language: string;\n  platform: string;\n}\n\n// We're declaring a navigator global here as we expect it in all runtimes (node and browser), but\n// we want this module to live in common.\ndeclare const navigator: INavigator;\n\nexport const isNode = (typeof navigator === 'undefined') ? true : false;\nconst userAgent = (isNode) ? 'node' : navigator.userAgent;\nconst platform = (isNode) ? 'node' : navigator.platform;\n\nexport const isFirefox = userAgent.includes('Firefox');\nexport const isLegacyEdge = userAgent.includes('Edge');\nexport const isSafari = /^((?!chrome|android).)*safari/i.test(userAgent);\nexport function getSafariVersion(): number {\n  if (!isSafari) {\n    return 0;\n  }\n  const majorVersion = userAgent.match(/Version\\/(\\d+)/);\n  if (majorVersion === null || majorVersion.length < 2) {\n    return 0;\n  }\n  return parseInt(majorVersion[1]);\n}\n\n// Find the users platform. We use this to interpret the meta key\n// and ISO third level shifts.\n// http://stackoverflow.com/q/19877924/577598\nexport const isMac = ['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K'].includes(platform);\nexport const isIpad = platform === 'iPad';\nexport const isIphone = platform === 'iPhone';\nexport const isWindows = ['Windows', 'Win16', 'Win32', 'WinCE'].includes(platform);\nexport const isLinux = platform.indexOf('Linux') >= 0;\n// Note that when this is true, isLinux will also be true.\nexport const isChromeOS = /\\bCrOS\\b/.test(userAgent);\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isNode } from 'common/Platform';\n\ninterface ITaskQueue {\n  /**\n   * Adds a task to the queue which will run in a future idle callback.\n   * To avoid perceivable stalls on the mainthread, tasks with heavy workload\n   * should split their work into smaller pieces and return `true` to get\n   * called again until the work is done (on falsy return value).\n   */\n  enqueue(task: () => boolean | void): void;\n\n  /**\n   * Flushes the queue, running all remaining tasks synchronously.\n   */\n  flush(): void;\n\n  /**\n   * Clears any remaining tasks from the queue, these will not be run.\n   */\n  clear(): void;\n}\n\ninterface ITaskDeadline {\n  timeRemaining(): number;\n}\ntype CallbackWithDeadline = (deadline: ITaskDeadline) => void;\n\nabstract class TaskQueue implements ITaskQueue {\n  private _tasks: (() => boolean | void)[] = [];\n  private _idleCallback?: number;\n  private _i = 0;\n\n  protected abstract _requestCallback(callback: CallbackWithDeadline): number;\n  protected abstract _cancelCallback(identifier: number): void;\n\n  public enqueue(task: () => boolean | void): void {\n    this._tasks.push(task);\n    this._start();\n  }\n\n  public flush(): void {\n    while (this._i < this._tasks.length) {\n      if (!this._tasks[this._i]()) {\n        this._i++;\n      }\n    }\n    this.clear();\n  }\n\n  public clear(): void {\n    if (this._idleCallback) {\n      this._cancelCallback(this._idleCallback);\n      this._idleCallback = undefined;\n    }\n    this._i = 0;\n    this._tasks.length = 0;\n  }\n\n  private _start(): void {\n    if (!this._idleCallback) {\n      this._idleCallback = this._requestCallback(this._process.bind(this));\n    }\n  }\n\n  private _process(deadline: ITaskDeadline): void {\n    this._idleCallback = undefined;\n    let taskDuration = 0;\n    let longestTask = 0;\n    let lastDeadlineRemaining = deadline.timeRemaining();\n    let deadlineRemaining = 0;\n    while (this._i < this._tasks.length) {\n      taskDuration = Date.now();\n      if (!this._tasks[this._i]()) {\n        this._i++;\n      }\n      // other than performance.now, Date.now might not be stable (changes on wall clock changes),\n      // this is not an issue here as a clock change during a short running task is very unlikely\n      // in case it still happened and leads to negative duration, simply assume 1 msec\n      taskDuration = Math.max(1, Date.now() - taskDuration);\n      longestTask = Math.max(taskDuration, longestTask);\n      // Guess the following task will take a similar time to the longest task in this batch, allow\n      // additional room to try avoid exceeding the deadline\n      deadlineRemaining = deadline.timeRemaining();\n      if (longestTask * 1.5 > deadlineRemaining) {\n        // Warn when the time exceeding the deadline is over 20ms, if this happens in practice the\n        // task should be split into sub-tasks to ensure the UI remains responsive.\n        if (lastDeadlineRemaining - taskDuration < -20) {\n          console.warn(`task queue exceeded allotted deadline by ${Math.abs(Math.round(lastDeadlineRemaining - taskDuration))}ms`);\n        }\n        this._start();\n        return;\n      }\n      lastDeadlineRemaining = deadlineRemaining;\n    }\n    this.clear();\n  }\n}\n\n/**\n * A queue of that runs tasks over several tasks via setTimeout, trying to maintain above 60 frames\n * per second. The tasks will run in the order they are enqueued, but they will run some time later,\n * and care should be taken to ensure they're non-urgent and will not introduce race conditions.\n */\nexport class PriorityTaskQueue extends TaskQueue {\n  protected _requestCallback(callback: CallbackWithDeadline): number {\n    return setTimeout(() => callback(this._createDeadline(16)));\n  }\n\n  protected _cancelCallback(identifier: number): void {\n    clearTimeout(identifier);\n  }\n\n  private _createDeadline(duration: number): ITaskDeadline {\n    const end = Date.now() + duration;\n    return {\n      timeRemaining: () => Math.max(0, end - Date.now())\n    };\n  }\n}\n\nclass IdleTaskQueueInternal extends TaskQueue {\n  protected _requestCallback(callback: IdleRequestCallback): number {\n    return requestIdleCallback(callback);\n  }\n\n  protected _cancelCallback(identifier: number): void {\n    cancelIdleCallback(identifier);\n  }\n}\n\n/**\n * A queue of that runs tasks over several idle callbacks, trying to respect the idle callback's\n * deadline given by the environment. The tasks will run in the order they are enqueued, but they\n * will run some time later, and care should be taken to ensure they're non-urgent and will not\n * introduce race conditions.\n *\n * This reverts to a {@link PriorityTaskQueue} if the environment does not support idle callbacks.\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const IdleTaskQueue = (!isNode && 'requestIdleCallback' in window) ? IdleTaskQueueInternal : PriorityTaskQueue;\n\n/**\n * An object that tracks a single debounced task that will run on the next idle frame. When called\n * multiple times, only the last set task will run.\n */\nexport class DebouncedIdleTask {\n  private _queue: ITaskQueue;\n\n  constructor() {\n    this._queue = new IdleTaskQueue();\n  }\n\n  public set(task: () => boolean | void): void {\n    this._queue.clear();\n    this._queue.enqueue(task);\n  }\n\n  public flush(): void {\n    this._queue.flush();\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IAttributeData, IColorRGB, IExtendedAttrs } from 'common/Types';\nimport { Attributes, FgFlags, BgFlags, UnderlineStyle, ExtFlags } from 'common/buffer/Constants';\n\nexport class AttributeData implements IAttributeData {\n  public static toColorRGB(value: number): IColorRGB {\n    return [\n      value >>> Attributes.RED_SHIFT & 255,\n      value >>> Attributes.GREEN_SHIFT & 255,\n      value & 255\n    ];\n  }\n\n  public static fromColorRGB(value: IColorRGB): number {\n    return (value[0] & 255) << Attributes.RED_SHIFT | (value[1] & 255) << Attributes.GREEN_SHIFT | value[2] & 255;\n  }\n\n  public clone(): IAttributeData {\n    const newObj = new AttributeData();\n    newObj.fg = this.fg;\n    newObj.bg = this.bg;\n    newObj.extended = this.extended.clone();\n    return newObj;\n  }\n\n  // data\n  public fg = 0;\n  public bg = 0;\n  public extended: IExtendedAttrs = new ExtendedAttrs();\n\n  // flags\n  public isInverse(): number       { return this.fg & FgFlags.INVERSE; }\n  public isBold(): number          { return this.fg & FgFlags.BOLD; }\n  public isUnderline(): number     {\n    if (this.hasExtendedAttrs() && this.extended.underlineStyle !== UnderlineStyle.NONE) {\n      return 1;\n    }\n    return this.fg & FgFlags.UNDERLINE;\n  }\n  public isBlink(): number         { return this.fg & FgFlags.BLINK; }\n  public isInvisible(): number     { return this.fg & FgFlags.INVISIBLE; }\n  public isItalic(): number        { return this.bg & BgFlags.ITALIC; }\n  public isDim(): number           { return this.bg & BgFlags.DIM; }\n  public isStrikethrough(): number { return this.fg & FgFlags.STRIKETHROUGH; }\n  public isProtected(): number     { return this.bg & BgFlags.PROTECTED; }\n\n  // color modes\n  public getFgColorMode(): number { return this.fg & Attributes.CM_MASK; }\n  public getBgColorMode(): number { return this.bg & Attributes.CM_MASK; }\n  public isFgRGB(): boolean       { return (this.fg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isBgRGB(): boolean       { return (this.bg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isFgPalette(): boolean   { return (this.fg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.fg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isBgPalette(): boolean   { return (this.bg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.bg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isFgDefault(): boolean   { return (this.fg & Attributes.CM_MASK) === 0; }\n  public isBgDefault(): boolean   { return (this.bg & Attributes.CM_MASK) === 0; }\n  public isAttributeDefault(): boolean { return this.fg === 0 && this.bg === 0; }\n\n  // colors\n  public getFgColor(): number {\n    switch (this.fg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.fg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.fg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n  public getBgColor(): number {\n    switch (this.bg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.bg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.bg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n\n  // extended attrs\n  public hasExtendedAttrs(): number {\n    return this.bg & BgFlags.HAS_EXTENDED;\n  }\n  public updateExtended(): void {\n    if (this.extended.isEmpty()) {\n      this.bg &= ~BgFlags.HAS_EXTENDED;\n    } else {\n      this.bg |= BgFlags.HAS_EXTENDED;\n    }\n  }\n  public getUnderlineColor(): number {\n    if ((this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor) {\n      switch (this.extended.underlineColor & Attributes.CM_MASK) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:  return this.extended.underlineColor & Attributes.PCOLOR_MASK;\n        case Attributes.CM_RGB:   return this.extended.underlineColor & Attributes.RGB_MASK;\n        default:                  return this.getFgColor();\n      }\n    }\n    return this.getFgColor();\n  }\n  public getUnderlineColorMode(): number {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? this.extended.underlineColor & Attributes.CM_MASK\n      : this.getFgColorMode();\n  }\n  public isUnderlineColorRGB(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_RGB\n      : this.isFgRGB();\n  }\n  public isUnderlineColorPalette(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P16\n          || (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P256\n      : this.isFgPalette();\n  }\n  public isUnderlineColorDefault(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === 0\n      : this.isFgDefault();\n  }\n  public getUnderlineStyle(): UnderlineStyle {\n    return this.fg & FgFlags.UNDERLINE\n      ? (this.bg & BgFlags.HAS_EXTENDED ? this.extended.underlineStyle : UnderlineStyle.SINGLE)\n      : UnderlineStyle.NONE;\n  }\n}\n\n\n/**\n * Extended attributes for a cell.\n * Holds information about different underline styles and color.\n */\nexport class ExtendedAttrs implements IExtendedAttrs {\n  private _ext: number = 0;\n  public get ext(): number {\n    if (this._urlId) {\n      return (\n        (this._ext & ~ExtFlags.UNDERLINE_STYLE) |\n        (this.underlineStyle << 26)\n      );\n    }\n    return this._ext;\n  }\n  public set ext(value: number) { this._ext = value; }\n\n  public get underlineStyle(): UnderlineStyle {\n    // Always return the URL style if it has one\n    if (this._urlId) {\n      return UnderlineStyle.DASHED;\n    }\n    return (this._ext & ExtFlags.UNDERLINE_STYLE) >> 26;\n  }\n  public set underlineStyle(value: UnderlineStyle) {\n    this._ext &= ~ExtFlags.UNDERLINE_STYLE;\n    this._ext |= (value << 26) & ExtFlags.UNDERLINE_STYLE;\n  }\n\n  public get underlineColor(): number {\n    return this._ext & (Attributes.CM_MASK | Attributes.RGB_MASK);\n  }\n  public set underlineColor(value: number) {\n    this._ext &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n    this._ext |= value & (Attributes.CM_MASK | Attributes.RGB_MASK);\n  }\n\n  private _urlId: number = 0;\n  public get urlId(): number {\n    return this._urlId;\n  }\n  public set urlId(value: number) {\n    this._urlId = value;\n  }\n\n  constructor(\n    ext: number = 0,\n    urlId: number = 0\n  ) {\n    this._ext = ext;\n    this._urlId = urlId;\n  }\n\n  public clone(): IExtendedAttrs {\n    return new ExtendedAttrs(this._ext, this._urlId);\n  }\n\n  /**\n   * Convenient method to indicate whether the object holds no additional information,\n   * that needs to be persistant in the buffer.\n   */\n  public isEmpty(): boolean {\n    return this.underlineStyle === UnderlineStyle.NONE && this._urlId === 0;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, ICellData, IExtendedAttrs } from 'common/Types';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\nimport { CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_ATTR_INDEX, Content } from 'common/buffer/Constants';\nimport { AttributeData, ExtendedAttrs } from 'common/buffer/AttributeData';\n\n/**\n * CellData - represents a single Cell in the terminal buffer.\n */\nexport class CellData extends AttributeData implements ICellData {\n  /** Helper to create CellData from CharData. */\n  public static fromCharData(value: CharData): CellData {\n    const obj = new CellData();\n    obj.setFromCharData(value);\n    return obj;\n  }\n  /** Primitives from terminal buffer. */\n  public content = 0;\n  public fg = 0;\n  public bg = 0;\n  public extended: IExtendedAttrs = new ExtendedAttrs();\n  public combinedData = '';\n  /** Whether cell contains a combined string. */\n  public isCombined(): number {\n    return this.content & Content.IS_COMBINED_MASK;\n  }\n  /** Width of the cell. */\n  public getWidth(): number {\n    return this.content >> Content.WIDTH_SHIFT;\n  }\n  /** JS string of the content. */\n  public getChars(): string {\n    if (this.content & Content.IS_COMBINED_MASK) {\n      return this.combinedData;\n    }\n    if (this.content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(this.content & Content.CODEPOINT_MASK);\n    }\n    return '';\n  }\n  /**\n   * Codepoint of cell\n   * Note this returns the UTF32 codepoint of single chars,\n   * if content is a combined string it returns the codepoint\n   * of the last char in string to be in line with code in CharData.\n   */\n  public getCode(): number {\n    return (this.isCombined())\n      ? this.combinedData.charCodeAt(this.combinedData.length - 1)\n      : this.content & Content.CODEPOINT_MASK;\n  }\n  /** Set data from CharData */\n  public setFromCharData(value: CharData): void {\n    this.fg = value[CHAR_DATA_ATTR_INDEX];\n    this.bg = 0;\n    let combined = false;\n    // surrogates and combined strings need special treatment\n    if (value[CHAR_DATA_CHAR_INDEX].length > 2) {\n      combined = true;\n    }\n    else if (value[CHAR_DATA_CHAR_INDEX].length === 2) {\n      const code = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0);\n      // if the 2-char string is a surrogate create single codepoint\n      // everything else is combined\n      if (0xD800 <= code && code <= 0xDBFF) {\n        const second = value[CHAR_DATA_CHAR_INDEX].charCodeAt(1);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          this.content = ((code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n        }\n        else {\n          combined = true;\n        }\n      }\n      else {\n        combined = true;\n      }\n    }\n    else {\n      this.content = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n    if (combined) {\n      this.combinedData = value[CHAR_DATA_CHAR_INDEX];\n      this.content = Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n  /** Get data as CharData. */\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport const DEFAULT_COLOR = 0;\nexport const DEFAULT_ATTR = (0 << 18) | (DEFAULT_COLOR << 9) | (256 << 0);\nexport const DEFAULT_EXT = 0;\n\nexport const CHAR_DATA_ATTR_INDEX = 0;\nexport const CHAR_DATA_CHAR_INDEX = 1;\nexport const CHAR_DATA_WIDTH_INDEX = 2;\nexport const CHAR_DATA_CODE_INDEX = 3;\n\n/**\n * Null cell - a real empty cell (containing nothing).\n * Note that code should always be 0 for a null cell as\n * several test condition of the buffer line rely on this.\n */\nexport const NULL_CELL_CHAR = '';\nexport const NULL_CELL_WIDTH = 1;\nexport const NULL_CELL_CODE = 0;\n\n/**\n * Whitespace cell.\n * This is meant as a replacement for empty cells when needed\n * during rendering lines to preserve correct aligment.\n */\nexport const WHITESPACE_CELL_CHAR = ' ';\nexport const WHITESPACE_CELL_WIDTH = 1;\nexport const WHITESPACE_CELL_CODE = 32;\n\n/**\n * Bitmasks for accessing data in `content`.\n */\nexport const enum Content {\n  /**\n   * bit 1..21    codepoint, max allowed in UTF32 is 0x10FFFF (21 bits taken)\n   *              read:   `codepoint = content & Content.codepointMask;`\n   *              write:  `content |= codepoint & Content.codepointMask;`\n   *                      shortcut if precondition `codepoint <= 0x10FFFF` is met:\n   *                      `content |= codepoint;`\n   */\n  CODEPOINT_MASK = 0x1FFFFF,\n\n  /**\n   * bit 22       flag indication whether a cell contains combined content\n   *              read:   `isCombined = content & Content.isCombined;`\n   *              set:    `content |= Content.isCombined;`\n   *              clear:  `content &= ~Content.isCombined;`\n   */\n  IS_COMBINED_MASK = 0x200000,  // 1 << 21\n\n  /**\n   * bit 1..22    mask to check whether a cell contains any string data\n   *              we need to check for codepoint and isCombined bits to see\n   *              whether a cell contains anything\n   *              read:   `isEmpty = !(content & Content.hasContent)`\n   */\n  HAS_CONTENT_MASK = 0x3FFFFF,\n\n  /**\n   * bit 23..24   wcwidth value of cell, takes 2 bits (ranges from 0..2)\n   *              read:   `width = (content & Content.widthMask) >> Content.widthShift;`\n   *                      `hasWidth = content & Content.widthMask;`\n   *                      as long as wcwidth is highest value in `content`:\n   *                      `width = content >> Content.widthShift;`\n   *              write:  `content |= (width << Content.widthShift) & Content.widthMask;`\n   *                      shortcut if precondition `0 <= width <= 3` is met:\n   *                      `content |= width << Content.widthShift;`\n   */\n  WIDTH_MASK = 0xC00000,   // 3 << 22\n  WIDTH_SHIFT = 22\n}\n\nexport const enum Attributes {\n  /**\n   * bit 1..8     blue in RGB, color in P256 and P16\n   */\n  BLUE_MASK = 0xFF,\n  BLUE_SHIFT = 0,\n  PCOLOR_MASK = 0xFF,\n  PCOLOR_SHIFT = 0,\n\n  /**\n   * bit 9..16    green in RGB\n   */\n  GREEN_MASK = 0xFF00,\n  GREEN_SHIFT = 8,\n\n  /**\n   * bit 17..24   red in RGB\n   */\n  RED_MASK = 0xFF0000,\n  RED_SHIFT = 16,\n\n  /**\n   * bit 25..26   color mode: DEFAULT (0) | P16 (1) | P256 (2) | RGB (3)\n   */\n  CM_MASK = 0x3000000,\n  CM_DEFAULT = 0,\n  CM_P16 = 0x1000000,\n  CM_P256 = 0x2000000,\n  CM_RGB = 0x3000000,\n\n  /**\n   * bit 1..24  RGB room\n   */\n  RGB_MASK = 0xFFFFFF\n}\n\nexport const enum FgFlags {\n  /**\n   * bit 27..32\n   */\n  INVERSE = 0x4000000,\n  BOLD = 0x8000000,\n  UNDERLINE = 0x10000000,\n  BLINK = 0x20000000,\n  INVISIBLE = 0x40000000,\n  STRIKETHROUGH = 0x80000000,\n}\n\nexport const enum BgFlags {\n  /**\n   * bit 27..32 (upper 2 unused)\n   */\n  ITALIC = 0x4000000,\n  DIM = 0x8000000,\n  HAS_EXTENDED = 0x10000000,\n  PROTECTED = 0x20000000\n}\n\nexport const enum ExtFlags {\n  /**\n   * bit 27..32 (upper 3 unused)\n   */\n  UNDERLINE_STYLE = 0x1C000000\n}\n\nexport const enum UnderlineStyle {\n  NONE = 0,\n  SINGLE = 1,\n  DOUBLE = 2,\n  CURLY = 3,\n  DOTTED = 4,\n  DASHED = 5\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Polyfill - Convert UTF32 codepoint into JS string.\n * Note: The built-in String.fromCodePoint happens to be much slower\n *       due to additional sanity checks. We can avoid them since\n *       we always operate on legal UTF32 (granted by the input decoders)\n *       and use this faster version instead.\n */\nexport function stringFromCodePoint(codePoint: number): string {\n  if (codePoint > 0xFFFF) {\n    codePoint -= 0x10000;\n    return String.fromCharCode((codePoint >> 10) + 0xD800) + String.fromCharCode((codePoint % 0x400) + 0xDC00);\n  }\n  return String.fromCharCode(codePoint);\n}\n\n/**\n * Convert UTF32 char codes into JS string.\n * Basically the same as `stringFromCodePoint` but for multiple codepoints\n * in a loop (which is a lot faster).\n */\nexport function utf32ToString(data: Uint32Array, start: number = 0, end: number = data.length): string {\n  let result = '';\n  for (let i = start; i < end; ++i) {\n    let codepoint = data[i];\n    if (codepoint > 0xFFFF) {\n      // JS strings are encoded as UTF16, thus a non BMP codepoint gets converted into a surrogate pair\n      // conversion rules:\n      //  - subtract 0x10000 from code point, leaving a 20 bit number\n      //  - add high 10 bits to 0xD800  --> first surrogate\n      //  - add low 10 bits to 0xDC00   --> second surrogate\n      codepoint -= 0x10000;\n      result += String.fromCharCode((codepoint >> 10) + 0xD800) + String.fromCharCode((codepoint % 0x400) + 0xDC00);\n    } else {\n      result += String.fromCharCode(codepoint);\n    }\n  }\n  return result;\n}\n\n/**\n * StringToUtf32 - decodes UTF16 sequences into UTF32 codepoints.\n * To keep the decoder in line with JS strings it handles single surrogates as UCS2.\n */\nexport class StringToUtf32 {\n  private _interim: number = 0;\n\n  /**\n   * Clears interim and resets decoder to clean state.\n   */\n  public clear(): void {\n    this._interim = 0;\n  }\n\n  /**\n   * Decode JS string to UTF32 codepoints.\n   * The methods assumes stream input and will store partly transmitted\n   * surrogate pairs and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided input data does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: string, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let startPos = 0;\n\n    // handle leftover surrogate high\n    if (this._interim) {\n      const second = input.charCodeAt(startPos++);\n      if (0xDC00 <= second && second <= 0xDFFF) {\n        target[size++] = (this._interim - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n      } else {\n        // illegal codepoint (USC2 handling)\n        target[size++] = this._interim;\n        target[size++] = second;\n      }\n      this._interim = 0;\n    }\n\n    for (let i = startPos; i < length; ++i) {\n      const code = input.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          this._interim = code;\n          return size;\n        }\n        const second = input.charCodeAt(i);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          target[size++] = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          // illegal codepoint (USC2 handling)\n          target[size++] = code;\n          target[size++] = second;\n        }\n        continue;\n      }\n      if (code === 0xFEFF) {\n        // BOM\n        continue;\n      }\n      target[size++] = code;\n    }\n    return size;\n  }\n}\n\n/**\n * Utf8Decoder - decodes UTF8 byte sequences into UTF32 codepoints.\n */\nexport class Utf8ToUtf32 {\n  public interim: Uint8Array = new Uint8Array(3);\n\n  /**\n   * Clears interim bytes and resets decoder to clean state.\n   */\n  public clear(): void {\n    this.interim.fill(0);\n  }\n\n  /**\n   * Decodes UTF8 byte sequences in `input` to UTF32 codepoints in `target`.\n   * The methods assumes stream input and will store partly transmitted bytes\n   * and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided data chunk does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: Uint8Array, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let byte1: number;\n    let byte2: number;\n    let byte3: number;\n    let byte4: number;\n    let codepoint = 0;\n    let startPos = 0;\n\n    // handle leftover bytes\n    if (this.interim[0]) {\n      let discardInterim = false;\n      let cp = this.interim[0];\n      cp &= ((((cp & 0xE0) === 0xC0)) ? 0x1F : (((cp & 0xF0) === 0xE0)) ? 0x0F : 0x07);\n      let pos = 0;\n      let tmp: number;\n      while ((tmp = this.interim[++pos] & 0x3F) && pos < 4) {\n        cp <<= 6;\n        cp |= tmp;\n      }\n      // missing bytes - read ahead from input\n      const type = (((this.interim[0] & 0xE0) === 0xC0)) ? 2 : (((this.interim[0] & 0xF0) === 0xE0)) ? 3 : 4;\n      const missing = type - pos;\n      while (startPos < missing) {\n        if (startPos >= length) {\n          return 0;\n        }\n        tmp = input[startPos++];\n        if ((tmp & 0xC0) !== 0x80) {\n          // wrong continuation, discard interim bytes completely\n          startPos--;\n          discardInterim = true;\n          break;\n        } else {\n          // need to save so we can continue short inputs in next call\n          this.interim[pos++] = tmp;\n          cp <<= 6;\n          cp |= tmp & 0x3F;\n        }\n      }\n      if (!discardInterim) {\n        // final test is type dependent\n        if (type === 2) {\n          if (cp < 0x80) {\n            // wrong starter byte\n            startPos--;\n          } else {\n            target[size++] = cp;\n          }\n        } else if (type === 3) {\n          if (cp < 0x0800 || (cp >= 0xD800 && cp <= 0xDFFF) || cp === 0xFEFF) {\n            // illegal codepoint or BOM\n          } else {\n            target[size++] = cp;\n          }\n        } else {\n          if (cp < 0x010000 || cp > 0x10FFFF) {\n            // illegal codepoint\n          } else {\n            target[size++] = cp;\n          }\n        }\n      }\n      this.interim.fill(0);\n    }\n\n    // loop through input\n    const fourStop = length - 4;\n    let i = startPos;\n    while (i < length) {\n      /**\n       * ASCII shortcut with loop unrolled to 4 consecutive ASCII chars.\n       * This is a compromise between speed gain for ASCII\n       * and penalty for non ASCII:\n       * For best ASCII performance the char should be stored directly into target,\n       * but even a single attempt to write to target and compare afterwards\n       * penalizes non ASCII really bad (-50%), thus we load the char into byteX first,\n       * which reduces ASCII performance by ~15%.\n       * This trial for ASCII reduces non ASCII performance by ~10% which seems acceptible\n       * compared to the gains.\n       * Note that this optimization only takes place for 4 consecutive ASCII chars,\n       * for any shorter it bails out. Worst case - all 4 bytes being read but\n       * thrown away due to the last being a non ASCII char (-10% performance).\n       */\n      while (i < fourStop\n        && !((byte1 = input[i]) & 0x80)\n        && !((byte2 = input[i + 1]) & 0x80)\n        && !((byte3 = input[i + 2]) & 0x80)\n        && !((byte4 = input[i + 3]) & 0x80))\n      {\n        target[size++] = byte1;\n        target[size++] = byte2;\n        target[size++] = byte3;\n        target[size++] = byte4;\n        i += 4;\n      }\n\n      // reread byte1\n      byte1 = input[i++];\n\n      // 1 byte\n      if (byte1 < 0x80) {\n        target[size++] = byte1;\n\n        // 2 bytes\n      } else if ((byte1 & 0xE0) === 0xC0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x1F) << 6 | (byte2 & 0x3F);\n        if (codepoint < 0x80) {\n          // wrong starter byte\n          i--;\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 3 bytes\n      } else if ((byte1 & 0xF0) === 0xE0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x0F) << 12 | (byte2 & 0x3F) << 6 | (byte3 & 0x3F);\n        if (codepoint < 0x0800 || (codepoint >= 0xD800 && codepoint <= 0xDFFF) || codepoint === 0xFEFF) {\n          // illegal codepoint or BOM, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 4 bytes\n      } else if ((byte1 & 0xF8) === 0xF0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          this.interim[2] = byte3;\n          return size;\n        }\n        byte4 = input[i++];\n        if ((byte4 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x07) << 18 | (byte2 & 0x3F) << 12 | (byte3 & 0x3F) << 6 | (byte4 & 0x3F);\n        if (codepoint < 0x010000 || codepoint > 0x10FFFF) {\n          // illegal codepoint, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n      } else {\n        // illegal byte, just skip\n      }\n    }\n    return size;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IServiceIdentifier } from 'common/services/Services';\n\nconst DI_TARGET = 'di$target';\nconst DI_DEPENDENCIES = 'di$dependencies';\n\nexport const serviceRegistry: Map<string, IServiceIdentifier<any>> = new Map();\n\nexport function getServiceDependencies(ctor: any): { id: IServiceIdentifier<any>, index: number, optional: boolean }[] {\n  return ctor[DI_DEPENDENCIES] || [];\n}\n\nexport function createDecorator<T>(id: string): IServiceIdentifier<T> {\n  if (serviceRegistry.has(id)) {\n    return serviceRegistry.get(id)!;\n  }\n\n  const decorator: any = function (target: Function, key: string, index: number): any {\n    if (arguments.length !== 3) {\n      throw new Error('@IServiceName-decorator can only be used to decorate a parameter');\n    }\n\n    storeServiceDependency(decorator, target, index);\n  };\n\n  decorator.toString = () => id;\n\n  serviceRegistry.set(id, decorator);\n  return decorator;\n}\n\nfunction storeServiceDependency(id: Function, target: Function, index: number): void {\n  if ((target as any)[DI_TARGET] === target) {\n    (target as any)[DI_DEPENDENCIES].push({ id, index });\n  } else {\n    (target as any)[DI_DEPENDENCIES] = [{ id, index }];\n    (target as any)[DI_TARGET] = target;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent, IEventEmitter } from 'common/EventEmitter';\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IDecPrivateModes, ICoreMouseEvent, CoreMouseEncoding, ICoreMouseProtocol, CoreMouseEventType, ICharset, IWindowOptions, IModes, IAttributeData, ScrollSource, IDisposable, IColor, CursorStyle, IOscLinkData } from 'common/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\nimport { IDecorationOptions, IDecoration, ILinkHandler } from 'xterm';\n\nexport const IBufferService = createDecorator<IBufferService>('BufferService');\nexport interface IBufferService {\n  serviceBrand: undefined;\n\n  readonly cols: number;\n  readonly rows: number;\n  readonly buffer: IBuffer;\n  readonly buffers: IBufferSet;\n  isUserScrolling: boolean;\n  onResize: IEvent<{ cols: number, rows: number }>;\n  onScroll: IEvent<number>;\n  scroll(eraseAttr: IAttributeData, isWrapped?: boolean): void;\n  scrollToBottom(): void;\n  scrollToTop(): void;\n  scrollToLine(line: number): void;\n  scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void;\n  scrollPages(pageCount: number): void;\n  resize(cols: number, rows: number): void;\n  reset(): void;\n}\n\nexport const ICoreMouseService = createDecorator<ICoreMouseService>('CoreMouseService');\nexport interface ICoreMouseService {\n  activeProtocol: string;\n  activeEncoding: string;\n  areMouseEventsActive: boolean;\n  addProtocol(name: string, protocol: ICoreMouseProtocol): void;\n  addEncoding(name: string, encoding: CoreMouseEncoding): void;\n  reset(): void;\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  triggerMouseEvent(event: ICoreMouseEvent): boolean;\n\n  /**\n   * Event to announce changes in mouse tracking.\n   */\n  onProtocolChange: IEvent<CoreMouseEventType>;\n\n  /**\n   * Human readable version of mouse events.\n   */\n  explainEvents(events: CoreMouseEventType): { [event: string]: boolean };\n}\n\nexport const ICoreService = createDecorator<ICoreService>('CoreService');\nexport interface ICoreService {\n  serviceBrand: undefined;\n\n  /**\n   * Initially the cursor will not be visible until the first time the terminal\n   * is focused.\n   */\n  isCursorInitialized: boolean;\n  isCursorHidden: boolean;\n\n  readonly modes: IModes;\n  readonly decPrivateModes: IDecPrivateModes;\n\n  readonly onData: IEvent<string>;\n  readonly onUserInput: IEvent<void>;\n  readonly onBinary: IEvent<string>;\n  readonly onRequestScrollToBottom: IEvent<void>;\n\n  reset(): void;\n\n  /**\n   * Triggers the onData event in the public API.\n   * @param data The data that is being emitted.\n   * @param wasUserInput Whether the data originated from the user (as opposed to\n   * resulting from parsing incoming data). When true this will also:\n   * - Scroll to the bottom of the buffer if option scrollOnUserInput is true.\n   * - Fire the `onUserInput` event (so selection can be cleared).\n   */\n  triggerDataEvent(data: string, wasUserInput?: boolean): void;\n\n  /**\n   * Triggers the onBinary event in the public API.\n   * @param data The data that is being emitted.\n   */\n  triggerBinaryEvent(data: string): void;\n}\n\nexport const ICharsetService = createDecorator<ICharsetService>('CharsetService');\nexport interface ICharsetService {\n  serviceBrand: undefined;\n\n  charset: ICharset | undefined;\n  readonly glevel: number;\n\n  reset(): void;\n\n  /**\n   * Set the G level of the terminal.\n   * @param g\n   */\n  setgLevel(g: number): void;\n\n  /**\n   * Set the charset for the given G level of the terminal.\n   * @param g\n   * @param charset\n   */\n  setgCharset(g: number, charset: ICharset | undefined): void;\n}\n\nexport interface IServiceIdentifier<T> {\n  (...args: any[]): void;\n  type: T;\n}\n\nexport interface IBrandedService {\n  serviceBrand: undefined;\n}\n\ntype GetLeadingNonServiceArgs<Args> =\n  Args extends [...IBrandedService[]] ? []\n    : Args extends [infer A1, ...IBrandedService[]] ? [A1]\n      : Args extends [infer A1, infer A2, ...IBrandedService[]] ? [A1, A2]\n        : Args extends [infer A1, infer A2, infer A3, ...IBrandedService[]] ? [A1, A2, A3]\n          : Args extends [infer A1, infer A2, infer A3, infer A4, ...IBrandedService[]] ? [A1, A2, A3, A4]\n            : Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, ...IBrandedService[]] ? [A1, A2, A3, A4, A5]\n              : Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, ...IBrandedService[]] ? [A1, A2, A3, A4, A5, A6]\n                : Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, infer A7, ...IBrandedService[]] ? [A1, A2, A3, A4, A5, A6, A7]\n                  : Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, infer A7, infer A8, ...IBrandedService[]] ? [A1, A2, A3, A4, A5, A6, A7, A8]\n                    : never;\n\nexport const IInstantiationService = createDecorator<IInstantiationService>('InstantiationService');\nexport interface IInstantiationService {\n  serviceBrand: undefined;\n\n  setService<T>(id: IServiceIdentifier<T>, instance: T): void;\n  getService<T>(id: IServiceIdentifier<T>): T | undefined;\n  createInstance<Ctor extends new (...args: any[]) => any, R extends InstanceType<Ctor>>(t: Ctor, ...args: GetLeadingNonServiceArgs<ConstructorParameters<Ctor>>): R;\n}\n\nexport enum LogLevelEnum {\n  DEBUG = 0,\n  INFO = 1,\n  WARN = 2,\n  ERROR = 3,\n  OFF = 4\n}\n\nexport const ILogService = createDecorator<ILogService>('LogService');\nexport interface ILogService {\n  serviceBrand: undefined;\n\n  logLevel: LogLevelEnum;\n\n  debug(message: any, ...optionalParams: any[]): void;\n  info(message: any, ...optionalParams: any[]): void;\n  warn(message: any, ...optionalParams: any[]): void;\n  error(message: any, ...optionalParams: any[]): void;\n}\n\nexport const IOptionsService = createDecorator<IOptionsService>('OptionsService');\nexport interface IOptionsService {\n  serviceBrand: undefined;\n\n  /**\n   * Read only access to the raw options object, this is an internal-only fast path for accessing\n   * single options without any validation as we trust TypeScript to enforce correct usage\n   * internally.\n   */\n  readonly rawOptions: Required<ITerminalOptions>;\n\n  /**\n   * Options as exposed through the public API, this property uses getters and setters with\n   * validation which makes it safer but slower. {@link rawOptions} should be used for pretty much\n   * all internal usage for performance reasons.\n   */\n  readonly options: Required<ITerminalOptions>;\n\n  /**\n   * Adds an event listener for when any option changes.\n   */\n  readonly onOptionChange: IEvent<keyof ITerminalOptions>;\n\n  /**\n   * Adds an event listener for when a specific option changes, this is a convenience method that is\n   * preferred over {@link onOptionChange} when only a single option is being listened to.\n   */\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  onSpecificOptionChange<T extends keyof ITerminalOptions>(key: T, listener: (arg1: Required<ITerminalOptions>[T]) => any): IDisposable;\n\n  /**\n   * Adds an event listener for when a set of specific options change, this is a convenience method\n   * that is preferred over {@link onOptionChange} when multiple options are being listened to and\n   * handled the same way.\n   */\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  onMultipleOptionChange(keys: (keyof ITerminalOptions)[], listener: () => any): IDisposable;\n}\n\nexport type FontWeight = 'normal' | 'bold' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | number;\nexport type LogLevel = 'debug' | 'info' | 'warn' | 'error' | 'off';\n\nexport interface ITerminalOptions {\n  allowProposedApi?: boolean;\n  allowTransparency?: boolean;\n  altClickMovesCursor?: boolean;\n  cols?: number;\n  convertEol?: boolean;\n  cursorBlink?: boolean;\n  cursorStyle?: CursorStyle;\n  cursorWidth?: number;\n  customGlyphs?: boolean;\n  disableStdin?: boolean;\n  drawBoldTextInBrightColors?: boolean;\n  fastScrollModifier?: 'none' | 'alt' | 'ctrl' | 'shift';\n  fastScrollSensitivity?: number;\n  fontSize?: number;\n  fontFamily?: string;\n  fontWeight?: FontWeight;\n  fontWeightBold?: FontWeight;\n  letterSpacing?: number;\n  lineHeight?: number;\n  linkHandler?: ILinkHandler | null;\n  logLevel?: LogLevel;\n  macOptionIsMeta?: boolean;\n  macOptionClickForcesSelection?: boolean;\n  minimumContrastRatio?: number;\n  rightClickSelectsWord?: boolean;\n  rows?: number;\n  screenReaderMode?: boolean;\n  scrollback?: number;\n  scrollOnUserInput?: boolean;\n  scrollSensitivity?: number;\n  smoothScrollDuration?: number;\n  tabStopWidth?: number;\n  theme?: ITheme;\n  windowsMode?: boolean;\n  windowOptions?: IWindowOptions;\n  wordSeparator?: string;\n  overviewRulerWidth?: number;\n\n  [key: string]: any;\n  cancelEvents: boolean;\n  termName: string;\n}\n\nexport interface ITheme {\n  foreground?: string;\n  background?: string;\n  cursor?: string;\n  cursorAccent?: string;\n  selectionForeground?: string;\n  selectionBackground?: string;\n  selectionInactiveBackground?: string;\n  black?: string;\n  red?: string;\n  green?: string;\n  yellow?: string;\n  blue?: string;\n  magenta?: string;\n  cyan?: string;\n  white?: string;\n  brightBlack?: string;\n  brightRed?: string;\n  brightGreen?: string;\n  brightYellow?: string;\n  brightBlue?: string;\n  brightMagenta?: string;\n  brightCyan?: string;\n  brightWhite?: string;\n  extendedAnsi?: string[];\n}\n\nexport const IOscLinkService = createDecorator<IOscLinkService>('OscLinkService');\nexport interface IOscLinkService {\n  serviceBrand: undefined;\n  /**\n   * Registers a link to the service, returning the link ID. The link data is managed by this\n   * service and will be freed when this current cursor position is trimmed off the buffer.\n   */\n  registerLink(linkData: IOscLinkData): number;\n  /**\n   * Adds a line to a link if needed.\n   */\n  addLineToLink(linkId: number, y: number): void;\n  /** Get the link data associated with a link ID. */\n  getLinkData(linkId: number): IOscLinkData | undefined;\n}\n\nexport const IUnicodeService = createDecorator<IUnicodeService>('UnicodeService');\nexport interface IUnicodeService {\n  serviceBrand: undefined;\n  /** Register an Unicode version provider. */\n  register(provider: IUnicodeVersionProvider): void;\n  /** Registered Unicode versions. */\n  readonly versions: string[];\n  /** Currently active version. */\n  activeVersion: string;\n  /** Event triggered, when activate version changed. */\n  readonly onChange: IEvent<string>;\n\n  /**\n   * Unicode version dependent\n   */\n  wcwidth(codepoint: number): number;\n  getStringCellWidth(s: string): number;\n}\n\nexport interface IUnicodeVersionProvider {\n  readonly version: string;\n  wcwidth(ucs: number): 0 | 1 | 2;\n}\n\nexport const IDecorationService = createDecorator<IDecorationService>('DecorationService');\nexport interface IDecorationService extends IDisposable {\n  serviceBrand: undefined;\n  readonly decorations: IterableIterator<IInternalDecoration>;\n  readonly onDecorationRegistered: IEvent<IInternalDecoration>;\n  readonly onDecorationRemoved: IEvent<IInternalDecoration>;\n  registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined;\n  reset(): void;\n  /**\n   * Trigger a callback over the decoration at a cell (in no particular order). This uses a callback\n   * instead of an iterator as it's typically used in hot code paths.\n   */\n  forEachDecorationAtCell(x: number, line: number, layer: 'bottom' | 'top' | undefined, callback: (decoration: IInternalDecoration) => void): void;\n}\nexport interface IInternalDecoration extends IDecoration {\n  readonly options: IDecorationOptions;\n  readonly backgroundColorRGB: IColor | undefined;\n  readonly foregroundColorRGB: IColor | undefined;\n  readonly onRenderEmitter: IEventEmitter<HTMLElement>;\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharacterJoinerService, ICharSizeService, ICoreBrowserService, IRenderService, IThemeService } from 'browser/services/Services';\nimport { IColorSet, ITerminal } from 'browser/Types';\nimport { CanvasRenderer } from './CanvasRenderer';\nimport { IBufferService, ICoreService, IDecorationService, IOptionsService } from 'common/services/Services';\nimport { ITerminalAddon, Terminal } from 'xterm';\nimport { EventEmitter, forwardEvent } from 'common/EventEmitter';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\n\nexport class CanvasAddon extends Disposable implements ITerminalAddon {\n  private _terminal?: Terminal;\n  private _renderer?: CanvasRenderer;\n\n  private readonly _onChangeTextureAtlas = this.register(new EventEmitter<HTMLCanvasElement>());\n  public readonly onChangeTextureAtlas = this._onChangeTextureAtlas.event;\n  private readonly _onAddTextureAtlasCanvas = this.register(new EventEmitter<HTMLCanvasElement>());\n  public readonly onAddTextureAtlasCanvas = this._onAddTextureAtlasCanvas.event;\n\n  public get textureAtlas(): HTMLCanvasElement | undefined {\n    return this._renderer?.textureAtlas;\n  }\n\n  public activate(terminal: Terminal): void {\n    const core = (terminal as any)._core as ITerminal;\n    if (!terminal.element) {\n      this.register(core.onWillOpen(() => this.activate(terminal)));\n      return;\n    }\n\n    this._terminal = terminal;\n    const coreService = core.coreService;\n    const optionsService = core.optionsService;\n    const screenElement = core.screenElement!;\n    const linkifier = core.linkifier2;\n\n    const unsafeCore = core as any;\n    const bufferService: IBufferService = unsafeCore._bufferService;\n    const renderService: IRenderService = unsafeCore._renderService;\n    const characterJoinerService: ICharacterJoinerService = unsafeCore._characterJoinerService;\n    const charSizeService: ICharSizeService = unsafeCore._charSizeService;\n    const coreBrowserService: ICoreBrowserService = unsafeCore._coreBrowserService;\n    const decorationService: IDecorationService = unsafeCore._decorationService;\n    const themeService: IThemeService = unsafeCore._themeService;\n\n    this._renderer = new CanvasRenderer(terminal, screenElement, linkifier, bufferService, charSizeService, optionsService, characterJoinerService, coreService, coreBrowserService, decorationService, themeService);\n    this.register(forwardEvent(this._renderer.onChangeTextureAtlas, this._onChangeTextureAtlas));\n    this.register(forwardEvent(this._renderer.onAddTextureAtlasCanvas, this._onAddTextureAtlasCanvas));\n    renderService.setRenderer(this._renderer);\n    renderService.handleResize(bufferService.cols, bufferService.rows);\n\n    this.register(toDisposable(() => {\n      renderService.setRenderer((this._terminal as any)._core._createRenderer());\n      renderService.handleResize(terminal.cols, terminal.rows);\n      this._renderer?.dispose();\n      this._renderer = undefined;\n    }));\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
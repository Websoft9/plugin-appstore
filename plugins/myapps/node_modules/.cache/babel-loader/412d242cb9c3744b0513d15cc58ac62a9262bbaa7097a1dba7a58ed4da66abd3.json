{"ast":null,"code":"import _defineProperty from \"/data/stackhub-web/plugins/myapps/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport getBasePlacement from '../utils/getBasePlacement';\nimport getLayoutRect from '../dom-utils/getLayoutRect';\nimport contains from '../dom-utils/contains';\nimport getOffsetParent from '../dom-utils/getOffsetParent';\nimport getMainAxisFromPlacement from '../utils/getMainAxisFromPlacement';\nimport within from '../utils/within';\nimport mergePaddingObject from '../utils/mergePaddingObject';\nimport expandToHashMap from '../utils/expandToHashMap';\nimport { left, right, basePlacements, top, bottom } from '../enums';\nimport { isHTMLElement } from '../dom-utils/instanceOf';\n/**\n *\n */\nfunction arrow(_ref) {\n  var _state$modifiersData$;\n  var state = _ref.state,\n    name = _ref.name;\n  var arrowElement = state.elements.arrow;\n  var popperOffsets = state.modifiersData.popperOffsets;\n  var basePlacement = getBasePlacement(state.placement);\n  var axis = getMainAxisFromPlacement(basePlacement);\n  var isVertical = [left, right].indexOf(basePlacement) >= 0;\n  var len = isVertical ? 'height' : 'width';\n  if (!arrowElement || !popperOffsets) {\n    return;\n  }\n  var paddingObject = state.modifiersData[\"\".concat(name, \"#persistent\")].padding;\n  var arrowRect = getLayoutRect(arrowElement);\n  var minProp = axis === 'y' ? top : left;\n  var maxProp = axis === 'y' ? bottom : right;\n  var endDiff = state.rects.reference[len] + state.rects.reference[axis] - popperOffsets[axis] - state.rects.popper[len];\n  var startDiff = popperOffsets[axis] - state.rects.reference[axis];\n  var arrowOffsetParent = getOffsetParent(arrowElement);\n  var clientSize = arrowOffsetParent ? axis === 'y' ? arrowOffsetParent.clientHeight || 0 : arrowOffsetParent.clientWidth || 0 : 0;\n  var centerToReference = endDiff / 2 - startDiff / 2;\n  // Make sure the arrow doesn't overflow the popper if the center point is\n  // outside of the popper bounds\n  var min = paddingObject[minProp];\n  var max = clientSize - arrowRect[len] - paddingObject[maxProp];\n  var center = clientSize / 2 - arrowRect[len] / 2 + centerToReference;\n  var offset = within(min, center, max);\n  // Prevents breaking syntax highlighting...\n  var axisProp = axis;\n  state.modifiersData[name] = (_state$modifiersData$ = {}, _defineProperty(_state$modifiersData$, axisProp, offset), _defineProperty(_state$modifiersData$, \"centerOffset\", offset - center), _state$modifiersData$);\n}\n/**\n *\n */\nfunction effect(_ref2) {\n  var state = _ref2.state,\n    options = _ref2.options,\n    name = _ref2.name;\n  var _options$element = options.element,\n    arrowElement = _options$element === void 0 ? '[data-popper-arrow]' : _options$element,\n    _options$padding = options.padding,\n    padding = _options$padding === void 0 ? 0 : _options$padding;\n  if (arrowElement == null) {\n    return;\n  }\n  // CSS selector\n  if (typeof arrowElement === 'string') {\n    arrowElement = state.elements.popper.querySelector(arrowElement);\n    if (!arrowElement) {\n      return;\n    }\n  }\n  if (false /* __DEV__*/) {\n    if (!isHTMLElement(arrowElement)) {\n      console.error(['Popper: \"arrow\" element must be an HTMLElement (not an SVGElement).', 'To use an SVG arrow, wrap it in an HTMLElement that will be used as', 'the arrow.'].join(' '));\n    }\n  }\n  if (!contains(state.elements.popper, arrowElement)) {\n    if (false /* __DEV__*/) {\n      console.error(['Popper: \"arrow\" modifier\\'s `element` must be a child of the popper', 'element.'].join(' '));\n    }\n    return;\n  }\n  state.elements.arrow = arrowElement;\n  state.modifiersData[\"\".concat(name, \"#persistent\")] = {\n    padding: mergePaddingObject(typeof padding !== 'number' ? padding : expandToHashMap(padding, basePlacements))\n  };\n}\nexport default {\n  name: 'arrow',\n  enabled: true,\n  phase: 'main',\n  fn: arrow,\n  effect: effect,\n  requires: ['popperOffsets'],\n  requiresIfExists: ['preventOverflow']\n};","map":{"version":3,"names":["getBasePlacement","getLayoutRect","contains","getOffsetParent","getMainAxisFromPlacement","within","mergePaddingObject","expandToHashMap","left","right","basePlacements","top","bottom","isHTMLElement","arrow","_ref","_state$modifiersData$","state","name","arrowElement","elements","popperOffsets","modifiersData","basePlacement","placement","axis","isVertical","indexOf","len","paddingObject","concat","padding","arrowRect","minProp","maxProp","endDiff","rects","reference","popper","startDiff","arrowOffsetParent","clientSize","clientHeight","clientWidth","centerToReference","min","max","center","offset","axisProp","_defineProperty","effect","_ref2","options","_options$element","element","_options$padding","querySelector","console","error","join","enabled","phase","fn","requires","requiresIfExists"],"sources":["/data/stackhub-web/plugins/myapps/node_modules/@patternfly/react-core/src/helpers/Popper/thirdparty/popper-core/modifiers/arrow.ts"],"sourcesContent":["// @ts-nocheck\nimport { Modifier, ModifierArguments, Padding } from '../types';\nimport getBasePlacement from '../utils/getBasePlacement';\nimport getLayoutRect from '../dom-utils/getLayoutRect';\nimport contains from '../dom-utils/contains';\nimport getOffsetParent from '../dom-utils/getOffsetParent';\nimport getMainAxisFromPlacement from '../utils/getMainAxisFromPlacement';\nimport within from '../utils/within';\nimport mergePaddingObject from '../utils/mergePaddingObject';\nimport expandToHashMap from '../utils/expandToHashMap';\nimport { left, right, basePlacements, top, bottom } from '../enums';\nimport { isHTMLElement } from '../dom-utils/instanceOf';\n\n// eslint-disable-next-line import/no-unused-modules\nexport interface Options {\n  element: HTMLElement | string | null;\n  padding: Padding;\n}\n\n/**\n *\n */\nfunction arrow({ state, name }: ModifierArguments<Options>) {\n  const arrowElement = state.elements.arrow;\n  const popperOffsets = state.modifiersData.popperOffsets;\n  const basePlacement = getBasePlacement(state.placement);\n  const axis = getMainAxisFromPlacement(basePlacement);\n  const isVertical = [left, right].indexOf(basePlacement) >= 0;\n  const len = isVertical ? 'height' : 'width';\n\n  if (!arrowElement || !popperOffsets) {\n    return;\n  }\n\n  const paddingObject = state.modifiersData[`${name}#persistent`].padding;\n  const arrowRect = getLayoutRect(arrowElement);\n  const minProp = axis === 'y' ? top : left;\n  const maxProp = axis === 'y' ? bottom : right;\n\n  const endDiff =\n    state.rects.reference[len] + state.rects.reference[axis] - popperOffsets[axis] - state.rects.popper[len];\n  const startDiff = popperOffsets[axis] - state.rects.reference[axis];\n\n  const arrowOffsetParent = getOffsetParent(arrowElement);\n  const clientSize = arrowOffsetParent\n    ? axis === 'y'\n      ? arrowOffsetParent.clientHeight || 0\n      : arrowOffsetParent.clientWidth || 0\n    : 0;\n\n  const centerToReference = endDiff / 2 - startDiff / 2;\n\n  // Make sure the arrow doesn't overflow the popper if the center point is\n  // outside of the popper bounds\n  const min = paddingObject[minProp];\n  const max = clientSize - arrowRect[len] - paddingObject[maxProp];\n  const center = clientSize / 2 - arrowRect[len] / 2 + centerToReference;\n  const offset = within(min, center, max);\n\n  // Prevents breaking syntax highlighting...\n  const axisProp: string = axis;\n  state.modifiersData[name] = {\n    [axisProp]: offset,\n    centerOffset: offset - center\n  };\n}\n\n/**\n *\n */\nfunction effect({ state, options, name }: ModifierArguments<Options>) {\n  let { element: arrowElement = '[data-popper-arrow]', padding = 0 } = options;\n\n  if (arrowElement == null) {\n    return;\n  }\n\n  // CSS selector\n  if (typeof arrowElement === 'string') {\n    arrowElement = state.elements.popper.querySelector(arrowElement);\n\n    if (!arrowElement) {\n      return;\n    }\n  }\n\n  if (false /* __DEV__*/) {\n    if (!isHTMLElement(arrowElement)) {\n      console.error(\n        [\n          'Popper: \"arrow\" element must be an HTMLElement (not an SVGElement).',\n          'To use an SVG arrow, wrap it in an HTMLElement that will be used as',\n          'the arrow.'\n        ].join(' ')\n      );\n    }\n  }\n\n  if (!contains(state.elements.popper, arrowElement)) {\n    if (false /* __DEV__*/) {\n      console.error(['Popper: \"arrow\" modifier\\'s `element` must be a child of the popper', 'element.'].join(' '));\n    }\n\n    return;\n  }\n\n  state.elements.arrow = arrowElement;\n  state.modifiersData[`${name}#persistent`] = {\n    padding: mergePaddingObject(typeof padding !== 'number' ? padding : expandToHashMap(padding, basePlacements))\n  };\n}\n\n// eslint-disable-next-line import/no-unused-modules\nexport type ArrowModifier = Modifier<'arrow', Options>;\nexport default {\n  name: 'arrow',\n  enabled: true,\n  phase: 'main',\n  fn: arrow,\n  effect,\n  requires: ['popperOffsets'],\n  requiresIfExists: ['preventOverflow']\n} as ArrowModifier;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
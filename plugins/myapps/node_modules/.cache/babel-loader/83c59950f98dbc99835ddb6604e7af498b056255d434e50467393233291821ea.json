{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Select/select';\nimport { css } from '@patternfly/react-styles';\nimport { SelectConsumer, SelectVariant } from './selectConstants';\nexport var SelectGroup = function SelectGroup(_a) {\n  var _a$children = _a.children,\n    children = _a$children === void 0 ? [] : _a$children,\n    _a$className = _a.className,\n    className = _a$className === void 0 ? '' : _a$className,\n    _a$label = _a.label,\n    label = _a$label === void 0 ? '' : _a$label,\n    _a$titleId = _a.titleId,\n    titleId = _a$titleId === void 0 ? '' : _a$titleId,\n    props = __rest(_a, [\"children\", \"className\", \"label\", \"titleId\"]);\n  return React.createElement(SelectConsumer, null, function (_ref) {\n    var variant = _ref.variant;\n    return React.createElement(\"div\", Object.assign({}, props, {\n      className: css(styles.selectMenuGroup, className)\n    }), React.createElement(\"div\", {\n      className: css(styles.selectMenuGroupTitle),\n      id: titleId,\n      \"aria-hidden\": true\n    }, label), variant === SelectVariant.checkbox ? children : React.createElement(\"ul\", {\n      role: \"listbox\"\n    }, children));\n  });\n};\nSelectGroup.displayName = 'SelectGroup';","map":{"version":3,"names":["React","styles","css","SelectConsumer","SelectVariant","SelectGroup","_a","children","_a$children","_a$className","className","_a$label","label","_a$titleId","titleId","props","__rest","createElement","_ref","variant","Object","assign","selectMenuGroup","selectMenuGroupTitle","id","checkbox","role","displayName"],"sources":["/data/stackhub-web/plugins/myapps/node_modules/@patternfly/react-core/src/components/Select/SelectGroup.tsx"],"sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Select/select';\nimport { css } from '@patternfly/react-styles';\n\nimport { SelectConsumer, SelectVariant } from './selectConstants';\n\nexport interface SelectGroupProps extends React.HTMLProps<HTMLDivElement> {\n  /** Checkboxes within group. Must be React.ReactElement<SelectOptionProps>[] */\n  children?: React.ReactNode;\n  /** Additional classes added to the CheckboxSelectGroup control */\n  className?: string;\n  /** Group label */\n  label?: string;\n  /** ID for title label */\n  titleId?: string;\n}\n\nexport const SelectGroup: React.FunctionComponent<SelectGroupProps> = ({\n  children = [],\n  className = '',\n  label = '',\n  titleId = '',\n  ...props\n}: SelectGroupProps) => (\n  <SelectConsumer>\n    {({ variant }) => (\n      <div {...props} className={css(styles.selectMenuGroup, className)}>\n        <div className={css(styles.selectMenuGroupTitle)} id={titleId} aria-hidden>\n          {label}\n        </div>\n        {variant === SelectVariant.checkbox ? children : <ul role=\"listbox\">{children}</ul>}\n      </div>\n    )}\n  </SelectConsumer>\n);\nSelectGroup.displayName = 'SelectGroup';\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,MAAM,MAAM,uDAAuD;AAC1E,SAASC,GAAG,QAAQ,0BAA0B;AAE9C,SAASC,cAAc,EAAEC,aAAa,QAAQ,mBAAmB;AAajE,OAAO,IAAMC,WAAW,GAA8C,SAAzDA,WAAWA,CAA+CC,EAMpD,EAAI;oBAFTA,EAEK,CALjBC,QAAQ;IAARA,QAAQ,GAAAC,WAAA,cAAG,EAAE,GAAAA,WAAA;IAAAC,YAAA,GAGDH,EAEK,CAJjBI,SAAS;IAATA,SAAS,GAAAD,YAAA,cAAG,EAAE,GAAAA,YAAA;IAAAE,QAAA,GAEFL,EAEK,CAHjBM,KAAK;IAALA,KAAK,GAAAD,QAAA,cAAG,EAAE,GAAAA,QAAA;IAAAE,UAAA,GACEP,EAEK,CAFjBQ,OAAO;IAAPA,OAAO,GAAAD,UAAA,cAAG,EAAE,GAAAA,UAAA;IACTE,KAAK,GAAAC,MAAA,CAAAV,EAAA,EAL6D,6CAMtE,CADS;EACc,OACtBN,KAAA,CAAAiB,aAAA,CAACd,cAAc,QACZ,UAAAe,IAAA;IAAA,IAAGC,OAAO,GAAAD,IAAA,CAAPC,OAAO;IAAA,OACTnB,KAAA,CAAAiB,aAAA,QAAAG,MAAA,CAAAC,MAAA,KAASN,KAAK;MAAEL,SAAS,EAAER,GAAG,CAACD,MAAM,CAACqB,eAAe,EAAEZ,SAAS;IAAC,IAC/DV,KAAA,CAAAiB,aAAA;MAAKP,SAAS,EAAER,GAAG,CAACD,MAAM,CAACsB,oBAAoB,CAAC;MAAEC,EAAE,EAAEV,OAAO;MAAA;IAAA,GAC1DF,KAAK,CACF,EACLO,OAAO,KAAKf,aAAa,CAACqB,QAAQ,GAAGlB,QAAQ,GAAGP,KAAA,CAAAiB,aAAA;MAAIS,IAAI,EAAC;IAAS,GAAEnB,QAAQ,CAAM,CAC/E;EAAA,CACP,CACc;CAClB;AACDF,WAAW,CAACsB,WAAW,GAAG,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/NotificationDrawer/notification-drawer';\nimport TimesIcon from '@patternfly/react-icons/dist/esm/icons/times-icon';\nimport { Text, TextVariants } from '../Text';\nimport { Button, ButtonVariant } from '../Button';\nexport var NotificationDrawerHeader = function NotificationDrawerHeader(_a) {\n  var children = _a.children,\n    _a$className = _a.className,\n    className = _a$className === void 0 ? '' : _a$className,\n    count = _a.count,\n    _a$closeButtonAriaLab = _a.closeButtonAriaLabel,\n    closeButtonAriaLabel = _a$closeButtonAriaLab === void 0 ? 'Close' : _a$closeButtonAriaLab,\n    customText = _a.customText,\n    onClose = _a.onClose,\n    _a$title = _a.title,\n    title = _a$title === void 0 ? 'Notifications' : _a$title,\n    _a$unreadText = _a.unreadText,\n    unreadText = _a$unreadText === void 0 ? 'unread' : _a$unreadText,\n    props = __rest(_a, [\"children\", \"className\", \"count\", \"closeButtonAriaLabel\", \"customText\", \"onClose\", \"title\", \"unreadText\"]);\n  return React.createElement(\"div\", Object.assign({}, props, {\n    className: css(styles.notificationDrawerHeader, className)\n  }), React.createElement(Text, {\n    component: TextVariants.h1,\n    className: css(styles.notificationDrawerHeaderTitle)\n  }, title), (customText !== undefined || count !== undefined) && React.createElement(\"span\", {\n    className: css(styles.notificationDrawerHeaderStatus)\n  }, customText || \"\".concat(count, \" \").concat(unreadText)), (children || onClose) && React.createElement(\"div\", {\n    className: css(styles.notificationDrawerHeaderAction)\n  }, children, onClose && React.createElement(\"div\", null, React.createElement(Button, {\n    variant: ButtonVariant.plain,\n    \"aria-label\": closeButtonAriaLabel,\n    onClick: onClose\n  }, React.createElement(TimesIcon, {\n    \"aria-hidden\": \"true\"\n  })))));\n};\nNotificationDrawerHeader.displayName = 'NotificationDrawerHeader';","map":{"version":3,"names":["React","css","styles","TimesIcon","Text","TextVariants","Button","ButtonVariant","NotificationDrawerHeader","_a","children","_a$className","className","count","_a$closeButtonAriaLab","closeButtonAriaLabel","customText","onClose","_a$title","title","_a$unreadText","unreadText","props","__rest","createElement","Object","assign","notificationDrawerHeader","component","h1","notificationDrawerHeaderTitle","undefined","notificationDrawerHeaderStatus","concat","notificationDrawerHeaderAction","variant","plain","onClick","displayName"],"sources":["/data/stackhub-web/plugins/myapps/node_modules/@patternfly/react-core/src/components/NotificationDrawer/NotificationDrawerHeader.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/NotificationDrawer/notification-drawer';\nimport TimesIcon from '@patternfly/react-icons/dist/esm/icons/times-icon';\n\nimport { Text, TextVariants } from '../Text';\nimport { Button, ButtonVariant } from '../Button';\n\nexport interface NotificationDrawerHeaderProps extends React.HTMLProps<HTMLDivElement> {\n  /**  Content rendered inside the drawer */\n  children?: React.ReactNode;\n  /**  Additional classes for notification drawer header. */\n  className?: string;\n  /** Adds custom accessible text to the notification drawer close button. */\n  closeButtonAriaLabel?: string;\n  /**  Notification drawer heading count */\n  count?: number;\n  /**  Notification drawer heading custom text which can be used instead of providing count/unreadText */\n  customText?: string;\n  /**  Callback for when close button is clicked */\n  onClose?: () => void;\n  /**  Notification drawer heading title */\n  title?: string;\n  /**  Notification drawer heading unread text used in combination with a count */\n  unreadText?: string;\n}\n\nexport const NotificationDrawerHeader: React.FunctionComponent<NotificationDrawerHeaderProps> = ({\n  children,\n  className = '',\n  count,\n  closeButtonAriaLabel = 'Close',\n  customText,\n  onClose,\n  title = 'Notifications',\n  unreadText = 'unread',\n  ...props\n}: NotificationDrawerHeaderProps) => (\n  <div {...props} className={css(styles.notificationDrawerHeader, className)}>\n    <Text component={TextVariants.h1} className={css(styles.notificationDrawerHeaderTitle)}>\n      {title}\n    </Text>\n    {(customText !== undefined || count !== undefined) && (\n      <span className={css(styles.notificationDrawerHeaderStatus)}>{customText || `${count} ${unreadText}`}</span>\n    )}\n    {(children || onClose) && (\n      <div className={css(styles.notificationDrawerHeaderAction)}>\n        {children}\n        {onClose && (\n          <div>\n            <Button variant={ButtonVariant.plain} aria-label={closeButtonAriaLabel} onClick={onClose}>\n              <TimesIcon aria-hidden=\"true\" />\n            </Button>\n          </div>\n        )}\n      </div>\n    )}\n  </div>\n);\nNotificationDrawerHeader.displayName = 'NotificationDrawerHeader';\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAE9B,SAASC,GAAG,QAAQ,0BAA0B;AAC9C,OAAOC,MAAM,MAAM,gFAAgF;AACnG,OAAOC,SAAS,MAAM,mDAAmD;AAEzE,SAASC,IAAI,EAAEC,YAAY,QAAQ,SAAS;AAC5C,SAASC,MAAM,EAAEC,aAAa,QAAQ,WAAW;AAqBjD,OAAO,IAAMC,wBAAwB,GAA2D,SAAnFA,wBAAwBA,CAA4DC,EAUjE,EAAI;MATlCC,QAAQ,GAOaD,EAES,CAT9BC,QAAQ;IAAAC,YAAA,GAOaF,EAES,CAR9BG,SAAS;IAATA,SAAS,GAAAD,YAAA,cAAG,EAAE,GAAAA,YAAA;IACdE,KAAK,GAKgBJ,EAES,CAP9BI,KAAK;IAAAC,qBAAA,GAKgBL,EAES,CAN9BM,oBAAoB;IAApBA,oBAAoB,GAAAD,qBAAA,cAAG,OAAO,GAAAA,qBAAA;IAC9BE,UAAU,GAGWP,EAES,CAL9BO,UAAU;IACVC,OAAO,GAEcR,EAES,CAJ9BQ,OAAO;IAAAC,QAAA,GAEcT,EAES,CAH9BU,KAAK;IAALA,KAAK,GAAAD,QAAA,cAAG,eAAe,GAAAA,QAAA;IAAAE,aAAA,GACFX,EAES,CAF9BY,UAAU;IAAVA,UAAU,GAAAD,aAAA,cAAG,QAAQ,GAAAA,aAAA;IAClBE,KAAK,GAAAC,MAAA,CAAAd,EAAA,EATuF,0GAUhG,CADS;EAC2B,OACnCT,KAAA,CAAAwB,aAAA,QAAAC,MAAA,CAAAC,MAAA,KAASJ,KAAK;IAAEV,SAAS,EAAEX,GAAG,CAACC,MAAM,CAACyB,wBAAwB,EAAEf,SAAS;EAAC,IACxEZ,KAAA,CAAAwB,aAAA,CAACpB,IAAI;IAACwB,SAAS,EAAEvB,YAAY,CAACwB,EAAE;IAAEjB,SAAS,EAAEX,GAAG,CAACC,MAAM,CAAC4B,6BAA6B;EAAC,GACnFX,KAAK,CACD,EACN,CAACH,UAAU,KAAKe,SAAS,IAAIlB,KAAK,KAAKkB,SAAS,KAC/C/B,KAAA,CAAAwB,aAAA;IAAMZ,SAAS,EAAEX,GAAG,CAACC,MAAM,CAAC8B,8BAA8B;EAAC,GAAGhB,UAAU,OAAAiB,MAAA,CAAOpB,KAAK,OAAAoB,MAAA,CAAIZ,UAAU,CAAE,CACrG,EACA,CAACX,QAAQ,IAAIO,OAAO,KACnBjB,KAAA,CAAAwB,aAAA;IAAKZ,SAAS,EAAEX,GAAG,CAACC,MAAM,CAACgC,8BAA8B;EAAC,GACvDxB,QAAQ,EACRO,OAAO,IACNjB,KAAA,CAAAwB,aAAA,cACExB,KAAA,CAAAwB,aAAA,CAAClB,MAAM;IAAC6B,OAAO,EAAE5B,aAAa,CAAC6B,KAAK;IAAA,cAAcrB,oBAAoB;IAAEsB,OAAO,EAAEpB;EAAO,GACtFjB,KAAA,CAAAwB,aAAA,CAACrB,SAAS;IAAA,eAAa;EAAM,EAAG,CACzB,CAEZ,CAEJ,CACG;CACP;AACDK,wBAAwB,CAAC8B,WAAW,GAAG,0BAA0B"},"metadata":{},"sourceType":"module","externalDependencies":[]}
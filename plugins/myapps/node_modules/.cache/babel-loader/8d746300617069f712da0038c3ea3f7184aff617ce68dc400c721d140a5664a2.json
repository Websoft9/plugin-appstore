{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Menu/menu';\nimport { css } from '@patternfly/react-styles';\nimport { MenuContext } from './MenuContext';\nexport var MenuContent = React.forwardRef(function (props, ref) {\n  var getHeight = props.getHeight,\n    children = props.children,\n    menuHeight = props.menuHeight,\n    maxMenuHeight = props.maxMenuHeight,\n    rest = __rest(props, [\"getHeight\", \"children\", \"menuHeight\", \"maxMenuHeight\"]);\n  var menuContentRef = React.createRef();\n  var refCallback = function refCallback(el, menuId, onGetMenuHeight) {\n    if (el) {\n      var clientHeight = el.clientHeight;\n      // if this menu is a submenu, we need to account for the root menu list's padding and root menu content's border.\n      var rootMenuList = null;\n      var parentEl = el.closest(\".\".concat(styles.menuList));\n      while (parentEl !== null && parentEl.nodeType === 1) {\n        if (parentEl.classList.contains(styles.menuList)) {\n          rootMenuList = parentEl;\n        }\n        parentEl = parentEl.parentElement;\n      }\n      if (rootMenuList) {\n        var rootMenuListStyles = getComputedStyle(rootMenuList);\n        var rootMenuListPaddingOffset = parseFloat(rootMenuListStyles.getPropertyValue('padding-top').replace(/px/g, '')) + parseFloat(rootMenuListStyles.getPropertyValue('padding-bottom').replace(/px/g, '')) + parseFloat(getComputedStyle(rootMenuList.parentElement).getPropertyValue('border-bottom-width').replace(/px/g, ''));\n        clientHeight = clientHeight + rootMenuListPaddingOffset;\n      }\n      onGetMenuHeight && onGetMenuHeight(menuId, clientHeight);\n      getHeight && getHeight(clientHeight.toString());\n    }\n    return ref || menuContentRef;\n  };\n  return React.createElement(MenuContext.Consumer, null, function (_ref) {\n    var menuId = _ref.menuId,\n      onGetMenuHeight = _ref.onGetMenuHeight;\n    return React.createElement(\"div\", Object.assign({}, rest, {\n      className: css(styles.menuContent, props.className),\n      ref: function ref(el) {\n        return refCallback(el, menuId, onGetMenuHeight);\n      },\n      style: Object.assign(Object.assign({}, menuHeight && {\n        '--pf-c-menu__content--Height': menuHeight\n      }), maxMenuHeight && {\n        '--pf-c-menu__content--MaxHeight': maxMenuHeight\n      })\n    }), children);\n  });\n});\nMenuContent.displayName = 'MenuContent';","map":{"version":3,"names":["React","styles","css","MenuContext","MenuContent","forwardRef","props","ref","getHeight","children","menuHeight","maxMenuHeight","rest","__rest","menuContentRef","createRef","refCallback","el","menuId","onGetMenuHeight","clientHeight","rootMenuList","parentEl","closest","concat","menuList","nodeType","classList","contains","parentElement","rootMenuListStyles","getComputedStyle","rootMenuListPaddingOffset","parseFloat","getPropertyValue","replace","toString","createElement","Consumer","_ref","Object","assign","className","menuContent","style","displayName"],"sources":["/data/stackhub-web/plugins/myapps/node_modules/@patternfly/react-core/src/components/Menu/MenuContent.tsx"],"sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Menu/menu';\nimport { css } from '@patternfly/react-styles';\nimport { MenuContext } from './MenuContext';\n\nexport interface MenuContentProps extends React.HTMLProps<HTMLElement> {\n  /** Items within group */\n  children?: React.ReactNode;\n  /** Forwarded ref */\n  innerRef?: React.Ref<any>;\n  /** Height of the menu content */\n  menuHeight?: string;\n  /** Maximum height of menu content */\n  maxMenuHeight?: string;\n  /** Callback to return the height of the menu content */\n  getHeight?: (height: string) => void;\n}\n\nexport const MenuContent = React.forwardRef((props: MenuContentProps, ref: React.Ref<HTMLDivElement>) => {\n  const { getHeight, children, menuHeight, maxMenuHeight, ...rest } = props;\n  const menuContentRef = React.createRef<HTMLDivElement>();\n  const refCallback = (el: HTMLElement, menuId: string, onGetMenuHeight: (menuId: string, height: number) => void) => {\n    if (el) {\n      let clientHeight = el.clientHeight;\n\n      // if this menu is a submenu, we need to account for the root menu list's padding and root menu content's border.\n      let rootMenuList = null;\n      let parentEl = el.closest(`.${styles.menuList}`);\n      while (parentEl !== null && parentEl.nodeType === 1) {\n        if (parentEl.classList.contains(styles.menuList)) {\n          rootMenuList = parentEl;\n        }\n        parentEl = parentEl.parentElement;\n      }\n\n      if (rootMenuList) {\n        const rootMenuListStyles = getComputedStyle(rootMenuList);\n        const rootMenuListPaddingOffset =\n          parseFloat(rootMenuListStyles.getPropertyValue('padding-top').replace(/px/g, '')) +\n          parseFloat(rootMenuListStyles.getPropertyValue('padding-bottom').replace(/px/g, '')) +\n          parseFloat(\n            getComputedStyle(rootMenuList.parentElement)\n              .getPropertyValue('border-bottom-width')\n              .replace(/px/g, '')\n          );\n        clientHeight = clientHeight + rootMenuListPaddingOffset;\n      }\n\n      onGetMenuHeight && onGetMenuHeight(menuId, clientHeight);\n      getHeight && getHeight(clientHeight.toString());\n    }\n    return ref || menuContentRef;\n  };\n  return (\n    <MenuContext.Consumer>\n      {({ menuId, onGetMenuHeight }) => (\n        <div\n          {...rest}\n          className={css(styles.menuContent, props.className)}\n          ref={el => refCallback(el, menuId, onGetMenuHeight)}\n          style={\n            {\n              ...(menuHeight && { '--pf-c-menu__content--Height': menuHeight }),\n              ...(maxMenuHeight && { '--pf-c-menu__content--MaxHeight': maxMenuHeight })\n            } as React.CSSProperties\n          }\n        >\n          {children}\n        </div>\n      )}\n    </MenuContext.Consumer>\n  );\n});\nMenuContent.displayName = 'MenuContent';\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
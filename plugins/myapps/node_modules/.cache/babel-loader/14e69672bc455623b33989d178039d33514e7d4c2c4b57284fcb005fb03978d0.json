{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Drawer/drawer';\nimport { css } from '@patternfly/react-styles';\nimport { Button } from '../Button';\nimport TimesIcon from '@patternfly/react-icons/dist/esm/icons/times-icon';\nexport var DrawerCloseButton = function DrawerCloseButton(_a) {\n  var _a$className = _a.className,\n    className = _a$className === void 0 ? '' : _a$className,\n    _a$onClose = _a.onClose,\n    onClose = _a$onClose === void 0 ? function () {\n      return undefined;\n    } : _a$onClose,\n    _a$ariaLabel = _a['aria-label'],\n    ariaLabel = _a$ariaLabel === void 0 ? 'Close drawer panel' : _a$ariaLabel,\n    props = __rest(_a, [\"className\", \"onClose\", 'aria-label']);\n  return React.createElement(\"div\", Object.assign({\n    className: css(styles.drawerClose, className)\n  }, props), React.createElement(Button, {\n    variant: \"plain\",\n    onClick: onClose,\n    \"aria-label\": ariaLabel\n  }, React.createElement(TimesIcon, null)));\n};\nDrawerCloseButton.displayName = 'DrawerCloseButton';","map":{"version":3,"names":["React","styles","css","Button","TimesIcon","DrawerCloseButton","_a","className","_a$className","_a$onClose","onClose","undefined","_a$ariaLabel","ariaLabel","props","__rest","createElement","Object","assign","drawerClose","variant","onClick","displayName"],"sources":["/data/stackhub-web/plugins/myapps/node_modules/@patternfly/react-core/src/components/Drawer/DrawerCloseButton.tsx"],"sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Drawer/drawer';\nimport { css } from '@patternfly/react-styles';\nimport { Button } from '../Button';\nimport TimesIcon from '@patternfly/react-icons/dist/esm/icons/times-icon';\n\nexport interface DrawerCloseButtonProps extends React.HTMLProps<HTMLDivElement> {\n  /** Additional classes added to the drawer close button outer <div>. */\n  className?: string;\n  /** A callback for when the close button is clicked  */\n  onClose?: () => void;\n  /** Accessible label for the drawer close button */\n  'aria-label'?: string;\n}\n\nexport const DrawerCloseButton: React.FunctionComponent<DrawerCloseButtonProps> = ({\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  className = '',\n  onClose = () => undefined as any,\n  'aria-label': ariaLabel = 'Close drawer panel',\n  ...props\n}: DrawerCloseButtonProps) => (\n  <div className={css(styles.drawerClose, className)} {...props}>\n    <Button variant=\"plain\" onClick={onClose} aria-label={ariaLabel}>\n      <TimesIcon />\n    </Button>\n  </div>\n);\nDrawerCloseButton.displayName = 'DrawerCloseButton';\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,MAAM,MAAM,uDAAuD;AAC1E,SAASC,GAAG,QAAQ,0BAA0B;AAC9C,SAASC,MAAM,QAAQ,WAAW;AAClC,OAAOC,SAAS,MAAM,mDAAmD;AAWzE,OAAO,IAAMC,iBAAiB,GAAoD,SAArEA,iBAAiBA,CAAqDC,EAM1D,EAAI;qBAFmBA,EAEvB,CAJvBC,SAAS;IAATA,SAAS,GAAAC,YAAA,cAAG,EAAE,GAAAA,YAAA;IAAAC,UAAA,GAEgCH,EAEvB,CAHvBI,OAAO;IAAPA,OAAO,GAAAD,UAAA,cAAG;MAAA,OAAME,SAAgB;IAAA,IAAAF,UAAA;IAAAG,YAAA,GACcN,EAEvB,CAFvB,YAAY;IAAEO,SAAS,GAAAD,YAAA,cAAG,oBAAoB,GAAAA,YAAA;IAC3CE,KAAK,GAAAC,MAAA,CAAAT,EAAA,EALyE,sCAMlF,CADS;EACoB,OAC5BN,KAAA,CAAAgB,aAAA,QAAAC,MAAA,CAAAC,MAAA;IAAKX,SAAS,EAAEL,GAAG,CAACD,MAAM,CAACkB,WAAW,EAAEZ,SAAS;EAAC,GAAMO,KAAK,GAC3Dd,KAAA,CAAAgB,aAAA,CAACb,MAAM;IAACiB,OAAO,EAAC,OAAO;IAACC,OAAO,EAAEX,OAAO;IAAA,cAAcG;EAAS,GAC7Db,KAAA,CAAAgB,aAAA,CAACZ,SAAS,OAAG,CACN,CACL;CACP;AACDC,iBAAiB,CAACiB,WAAW,GAAG,mBAAmB"},"metadata":{},"sourceType":"module","externalDependencies":[]}
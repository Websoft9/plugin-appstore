{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/OverflowMenu/overflow-menu';\nimport { OverflowMenuContext } from './OverflowMenuContext';\nexport var OverflowMenuControl = function OverflowMenuControl(_a) {\n  var className = _a.className,\n    children = _a.children,\n    hasAdditionalOptions = _a.hasAdditionalOptions,\n    props = __rest(_a, [\"className\", \"children\", \"hasAdditionalOptions\"]);\n  return React.createElement(OverflowMenuContext.Consumer, null, function (value) {\n    return (value.isBelowBreakpoint || hasAdditionalOptions) && React.createElement(\"div\", Object.assign({\n      className: css(styles.overflowMenuControl, className)\n    }, props), ' ', children, ' ');\n  });\n};\nOverflowMenuControl.displayName = 'OverflowMenuControl';","map":{"version":3,"names":["React","css","styles","OverflowMenuContext","OverflowMenuControl","_a","className","children","hasAdditionalOptions","props","__rest","createElement","Consumer","value","isBelowBreakpoint","Object","assign","overflowMenuControl","displayName"],"sources":["/data/stackhub-web/plugins/myapps/node_modules/@patternfly/react-core/src/components/OverflowMenu/OverflowMenuControl.tsx"],"sourcesContent":["import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/OverflowMenu/overflow-menu';\nimport { OverflowMenuContext } from './OverflowMenuContext';\n\nexport interface OverflowMenuControlProps extends React.HTMLProps<HTMLDivElement> {\n  /** Any elements that can be rendered in the menu */\n  children?: any;\n  /** Additional classes added to the OverflowMenuControl */\n  className?: string;\n  /** Triggers the overflow dropdown to persist at all viewport sizes */\n  hasAdditionalOptions?: boolean;\n}\n\nexport const OverflowMenuControl: React.FunctionComponent<OverflowMenuControlProps> = ({\n  className,\n  children,\n  hasAdditionalOptions,\n  ...props\n}: OverflowMenuControlProps) => (\n  <OverflowMenuContext.Consumer>\n    {value =>\n      (value.isBelowBreakpoint || hasAdditionalOptions) && (\n        <div className={css(styles.overflowMenuControl, className)} {...props}>\n          {' '}\n          {children}{' '}\n        </div>\n      )\n    }\n  </OverflowMenuContext.Consumer>\n);\nOverflowMenuControl.displayName = 'OverflowMenuControl';\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,GAAG,QAAQ,0BAA0B;AAC9C,OAAOC,MAAM,MAAM,oEAAoE;AACvF,SAASC,mBAAmB,QAAQ,uBAAuB;AAW3D,OAAO,IAAMC,mBAAmB,GAAsD,SAAzEA,mBAAmBA,CAAuDC,EAK5D,EAAI;MAJ7BC,SAAS,GAEWD,EAEK,CAJzBC,SAAS;IACTC,QAAQ,GACYF,EAEK,CAHzBE,QAAQ;IACRC,oBAAoB,GAAAH,EAEK,CAFzBG,oBAAoB;IACjBC,KAAK,GAAAC,MAAA,CAAAL,EAAA,EAJ6E,iDAKtF,CADS;EACsB,OAC9BL,KAAA,CAAAW,aAAA,CAACR,mBAAmB,CAACS,QAAQ,QAC1B,UAAAC,KAAK;IAAA,OACJ,CAACA,KAAK,CAACC,iBAAiB,IAAIN,oBAAoB,KAC9CR,KAAA,CAAAW,aAAA,QAAAI,MAAA,CAAAC,MAAA;MAAKV,SAAS,EAAEL,GAAG,CAACC,MAAM,CAACe,mBAAmB,EAAEX,SAAS;IAAC,GAAMG,KAAK,GAClE,GAAG,EACHF,QAAQ,EAAE,GAAG,CAEjB;EAAA,EAE0B;CAChC;AACDH,mBAAmB,CAACc,WAAW,GAAG,qBAAqB"},"metadata":{},"sourceType":"module","externalDependencies":[]}
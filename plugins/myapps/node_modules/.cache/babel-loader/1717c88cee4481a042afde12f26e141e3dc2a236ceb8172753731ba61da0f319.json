{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Skeleton/skeleton';\nimport { css } from '@patternfly/react-styles';\nexport var Skeleton = function Skeleton(_a) {\n  var className = _a.className,\n    width = _a.width,\n    height = _a.height,\n    fontSize = _a.fontSize,\n    shape = _a.shape,\n    screenreaderText = _a.screenreaderText,\n    props = __rest(_a, [\"className\", \"width\", \"height\", \"fontSize\", \"shape\", \"screenreaderText\"]);\n  var fontHeightClassName = fontSize ? Object.values(styles.modifiers).find(function (key) {\n    return key === \"pf-m-text-\".concat(fontSize);\n  }) : undefined;\n  return React.createElement(\"div\", Object.assign({}, props, {\n    className: css(styles.skeleton, fontSize && fontHeightClassName, shape === 'circle' && styles.modifiers.circle, shape === 'square' && styles.modifiers.square, className)\n  }, (width || height) && {\n    style: Object.assign({\n      '--pf-c-skeleton--Width': width ? width : undefined,\n      '--pf-c-skeleton--Height': height ? height : undefined\n    }, props.style)\n  }), React.createElement(\"span\", {\n    className: \"pf-u-screen-reader\"\n  }, screenreaderText));\n};\nSkeleton.displayName = 'Skeleton';","map":{"version":3,"names":["React","styles","css","Skeleton","_a","className","width","height","fontSize","shape","screenreaderText","props","__rest","fontHeightClassName","Object","values","modifiers","find","key","concat","undefined","createElement","assign","skeleton","circle","square","style","displayName"],"sources":["/data/stackhub-web/plugins/myapps/node_modules/@patternfly/react-core/src/components/Skeleton/Skeleton.tsx"],"sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Skeleton/skeleton';\nimport { css } from '@patternfly/react-styles';\n\nexport interface SkeletonProps extends React.HTMLProps<HTMLDivElement> {\n  /** Additional classes added to the Skeleton */\n  className?: string;\n  /** The width of the Skeleton. Must specify pixels or percentage. */\n  width?: string;\n  /** The height of the Skeleton. Must specify pixels or percentage. */\n  height?: string;\n  /** The font size height of the Skeleton */\n  fontSize?: 'sm' | 'md' | 'lg' | 'xl' | '2xl' | '3xl' | '4xl';\n  /** The shape of the Skeleton */\n  shape?: 'circle' | 'square';\n  /** Text read just to screen reader users */\n  screenreaderText?: string;\n}\n\nexport const Skeleton: React.FunctionComponent<SkeletonProps> = ({\n  className,\n  width,\n  height,\n  fontSize,\n  shape,\n  screenreaderText,\n  ...props\n}: SkeletonProps) => {\n  const fontHeightClassName = fontSize\n    ? Object.values(styles.modifiers).find(key => key === `pf-m-text-${fontSize}`)\n    : undefined;\n\n  return (\n    <div\n      {...props}\n      className={css(\n        styles.skeleton,\n        fontSize && fontHeightClassName,\n        shape === 'circle' && styles.modifiers.circle,\n        shape === 'square' && styles.modifiers.square,\n        className\n      )}\n      {...((width || height) && {\n        style: {\n          '--pf-c-skeleton--Width': width ? width : undefined,\n          '--pf-c-skeleton--Height': height ? height : undefined,\n          ...props.style\n        } as React.CSSProperties\n      })}\n    >\n      <span className=\"pf-u-screen-reader\">{screenreaderText}</span>\n    </div>\n  );\n};\nSkeleton.displayName = 'Skeleton';\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,MAAM,MAAM,2DAA2D;AAC9E,SAASC,GAAG,QAAQ,0BAA0B;AAiB9C,OAAO,IAAMC,QAAQ,GAA2C,SAAnDA,QAAQA,CAA4CC,EAQjD,EAAI;MAPlBC,SAAS,GAKOD,EAEF,CAPdC,SAAS;IACTC,KAAK,GAIWF,EAEF,CANdE,KAAK;IACLC,MAAM,GAGUH,EAEF,CALdG,MAAM;IACNC,QAAQ,GAEQJ,EAEF,CAJdI,QAAQ;IACRC,KAAK,GACWL,EAEF,CAHdK,KAAK;IACLC,gBAAgB,GAAAN,EAEF,CAFdM,gBAAgB;IACbC,KAAK,GAAAC,MAAA,CAAAR,EAAA,EAPuD,yEAQhE,CADS;EAER,IAAMS,mBAAmB,GAAGL,QAAQ,GAChCM,MAAM,CAACC,MAAM,CAACd,MAAM,CAACe,SAAS,CAAC,CAACC,IAAI,CAAC,UAAAC,GAAG;IAAA,OAAIA,GAAG,kBAAAC,MAAA,CAAkBX,QAAQ,CAAE;EAAA,EAAC,GAC5EY,SAAS;EAEb,OACEpB,KAAA,CAAAqB,aAAA,QAAAP,MAAA,CAAAQ,MAAA,KACMX,KAAK;IACTN,SAAS,EAAEH,GAAG,CACZD,MAAM,CAACsB,QAAQ,EACff,QAAQ,IAAIK,mBAAmB,EAC/BJ,KAAK,KAAK,QAAQ,IAAIR,MAAM,CAACe,SAAS,CAACQ,MAAM,EAC7Cf,KAAK,KAAK,QAAQ,IAAIR,MAAM,CAACe,SAAS,CAACS,MAAM,EAC7CpB,SAAS;EACV,GACI,CAACC,KAAK,IAAIC,MAAM,KAAK;IACxBmB,KAAK,EAAEZ,MAAA,CAAAQ,MAAA;MACL,wBAAwB,EAAEhB,KAAK,GAAGA,KAAK,GAAGc,SAAS;MACnD,yBAAyB,EAAEb,MAAM,GAAGA,MAAM,GAAGa;IAAS,GACnDT,KAAK,CAACe,KAAK;GAEhB,GAEF1B,KAAA,CAAAqB,aAAA;IAAMhB,SAAS,EAAC;EAAoB,GAAEK,gBAAgB,CAAQ,CAC1D;AAEV,CAAC;AACDP,QAAQ,CAACwB,WAAW,GAAG,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}
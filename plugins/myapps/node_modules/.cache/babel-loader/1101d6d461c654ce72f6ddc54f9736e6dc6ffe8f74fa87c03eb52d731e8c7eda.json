{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { compact } from \"./compact.js\";\nexport function mergeOptions(defaults, options) {\n  return compact(defaults, options, options.variables && {\n    variables: __assign(__assign({}, defaults && defaults.variables), options.variables)\n  });\n}","map":{"version":3,"names":["compact","mergeOptions","defaults","options","variables","__assign"],"sources":["/data/stackhub-web/plugins/myapps/node_modules/@apollo/src/utilities/common/mergeOptions.ts"],"sourcesContent":["import type {\n  QueryOptions,\n  WatchQueryOptions,\n  MutationOptions,\n  OperationVariables,\n} from \"../../core\";\n\nimport { compact } from \"./compact\";\n\ntype OptionsUnion<TData, TVariables extends OperationVariables, TContext> =\n  | WatchQueryOptions<TVariables, TData>\n  | QueryOptions<TVariables, TData>\n  | MutationOptions<TData, TVariables, TContext>;\n\nexport function mergeOptions<\n  TOptions extends Partial<OptionsUnion<any, any, any>>\n>(\n  defaults: TOptions | Partial<TOptions> | undefined,\n  options: TOptions | Partial<TOptions>,\n): TOptions {\n  return compact(defaults, options, options.variables && {\n    variables: {\n      ...(defaults && defaults.variables),\n      ...options.variables,\n    },\n  });\n}\n"],"mappings":";AAOA,SAASA,OAAO,QAAQ,cAAY;AAOpC,OAAM,SAAUC,YAAYA,CAG1BC,QAAkD,EAClDC,OAAqC;EAErC,OAAOH,OAAO,CAACE,QAAQ,EAAEC,OAAO,EAAEA,OAAO,CAACC,SAAS,IAAI;IACrDA,SAAS,EAAAC,QAAA,CAAAA,QAAA,KACHH,QAAQ,IAAIA,QAAQ,CAACE,SAAU,GAChCD,OAAO,CAACC,SAAS;GAEvB,CAAC;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}
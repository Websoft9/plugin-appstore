{"ast":null,"code":"import _slicedToArray from \"/data/stackhub-web/plugins/myapps/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/BackToTop/back-to-top';\nimport { css } from '@patternfly/react-styles';\nimport AngleUpIcon from '@patternfly/react-icons/dist/esm/icons/angle-up-icon';\nimport { canUseDOM } from '../../helpers/util';\nimport { Button } from '../Button';\nvar BackToTopBase = function BackToTopBase(_a) {\n  var className = _a.className,\n    _a$title = _a.title,\n    title = _a$title === void 0 ? 'Back to top' : _a$title,\n    innerRef = _a.innerRef,\n    scrollableSelector = _a.scrollableSelector,\n    _a$isAlwaysVisible = _a.isAlwaysVisible,\n    isAlwaysVisible = _a$isAlwaysVisible === void 0 ? false : _a$isAlwaysVisible,\n    props = __rest(_a, [\"className\", \"title\", \"innerRef\", \"scrollableSelector\", \"isAlwaysVisible\"]);\n  var _React$useState = React.useState(isAlwaysVisible),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    visible = _React$useState2[0],\n    setVisible = _React$useState2[1];\n  React.useEffect(function () {\n    setVisible(isAlwaysVisible);\n  }, [isAlwaysVisible]);\n  var _React$useState3 = React.useState(null),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    scrollElement = _React$useState4[0],\n    setScrollElement = _React$useState4[1];\n  var toggleVisible = function toggleVisible() {\n    var scrolled = scrollElement.scrollY ? scrollElement.scrollY : scrollElement.scrollTop;\n    if (!isAlwaysVisible) {\n      if (scrolled > 400) {\n        setVisible(true);\n      } else {\n        setVisible(false);\n      }\n    }\n  };\n  React.useEffect(function () {\n    var hasScrollSpy = Boolean(scrollableSelector);\n    if (hasScrollSpy) {\n      var scrollEl = document.querySelector(scrollableSelector);\n      if (!canUseDOM || !(scrollEl instanceof HTMLElement)) {\n        return;\n      }\n      setScrollElement(scrollEl);\n      scrollEl.addEventListener('scroll', toggleVisible);\n      return function () {\n        scrollEl.removeEventListener('scroll', toggleVisible);\n      };\n    } else {\n      if (!canUseDOM) {\n        return;\n      }\n      var _scrollEl = window;\n      setScrollElement(_scrollEl);\n      _scrollEl.addEventListener('scroll', toggleVisible);\n      return function () {\n        _scrollEl.removeEventListener('scroll', toggleVisible);\n      };\n    }\n  }, [scrollableSelector, toggleVisible]);\n  var handleClick = function handleClick() {\n    scrollElement.scrollTo({\n      top: 0,\n      behavior: 'smooth'\n    });\n  };\n  return React.createElement(\"div\", Object.assign({\n    className: css(styles.backToTop, !visible && styles.modifiers.hidden, className),\n    ref: innerRef,\n    onClick: handleClick\n  }, props), React.createElement(Button, {\n    variant: \"primary\",\n    icon: React.createElement(AngleUpIcon, {\n      \"aria-hidden\": \"true\"\n    }),\n    iconPosition: \"right\"\n  }, title));\n};\nexport var BackToTop = React.forwardRef(function (props, ref) {\n  return React.createElement(BackToTopBase, Object.assign({\n    innerRef: ref\n  }, props));\n});\nBackToTop.displayName = 'BackToTop';","map":{"version":3,"names":["React","styles","css","AngleUpIcon","canUseDOM","Button","BackToTopBase","_a","className","_a$title","title","innerRef","scrollableSelector","_a$isAlwaysVisible","isAlwaysVisible","props","__rest","_React$useState","useState","_React$useState2","_slicedToArray","visible","setVisible","useEffect","_React$useState3","_React$useState4","scrollElement","setScrollElement","toggleVisible","scrolled","scrollY","scrollTop","hasScrollSpy","Boolean","scrollEl","document","querySelector","HTMLElement","addEventListener","removeEventListener","window","handleClick","scrollTo","top","behavior","createElement","Object","assign","backToTop","modifiers","hidden","ref","onClick","variant","icon","iconPosition","BackToTop","forwardRef","displayName"],"sources":["/data/stackhub-web/plugins/myapps/node_modules/@patternfly/react-core/src/components/BackToTop/BackToTop.tsx"],"sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/BackToTop/back-to-top';\nimport { css } from '@patternfly/react-styles';\nimport AngleUpIcon from '@patternfly/react-icons/dist/esm/icons/angle-up-icon';\nimport { canUseDOM } from '../../helpers/util';\nimport { Button } from '../Button';\n\ninterface BackToTopProps extends React.DetailedHTMLProps<React.HTMLProps<HTMLDivElement>, HTMLDivElement> {\n  /** Additional classes added to the back to top. */\n  className?: string;\n  /** Title to appear in back to top button. */\n  title?: string;\n  /** Forwarded ref */\n  innerRef?: React.Ref<any>;\n  /** Selector for the scrollable element to spy on. Not passing a selector defaults to spying on window scroll events. */\n  scrollableSelector?: string;\n  /** Flag to always show back to top button, defaults to false. */\n  isAlwaysVisible?: boolean;\n}\n\nconst BackToTopBase: React.FunctionComponent<BackToTopProps> = ({\n  className,\n  title = 'Back to top',\n  innerRef,\n  scrollableSelector,\n  isAlwaysVisible = false,\n  ...props\n}: BackToTopProps) => {\n  const [visible, setVisible] = React.useState(isAlwaysVisible);\n  React.useEffect(() => {\n    setVisible(isAlwaysVisible);\n  }, [isAlwaysVisible]);\n\n  const [scrollElement, setScrollElement] = React.useState(null);\n\n  const toggleVisible = () => {\n    const scrolled = scrollElement.scrollY ? scrollElement.scrollY : scrollElement.scrollTop;\n    if (!isAlwaysVisible) {\n      if (scrolled > 400) {\n        setVisible(true);\n      } else {\n        setVisible(false);\n      }\n    }\n  };\n\n  React.useEffect(() => {\n    const hasScrollSpy = Boolean(scrollableSelector);\n    if (hasScrollSpy) {\n      const scrollEl = document.querySelector(scrollableSelector) as HTMLElement;\n      if (!canUseDOM || !(scrollEl instanceof HTMLElement)) {\n        return;\n      }\n      setScrollElement(scrollEl);\n      scrollEl.addEventListener('scroll', toggleVisible);\n\n      return () => {\n        scrollEl.removeEventListener('scroll', toggleVisible);\n      };\n    } else {\n      if (!canUseDOM) {\n        return;\n      }\n      const scrollEl = window;\n      setScrollElement(scrollEl);\n      scrollEl.addEventListener('scroll', toggleVisible);\n\n      return () => {\n        scrollEl.removeEventListener('scroll', toggleVisible);\n      };\n    }\n  }, [scrollableSelector, toggleVisible]);\n\n  const handleClick = () => {\n    scrollElement.scrollTo({ top: 0, behavior: 'smooth' });\n  };\n\n  return (\n    <div\n      className={css(styles.backToTop, !visible && styles.modifiers.hidden, className)}\n      ref={innerRef}\n      onClick={handleClick}\n      {...props}\n    >\n      <Button variant=\"primary\" icon={<AngleUpIcon aria-hidden=\"true\" />} iconPosition=\"right\">\n        {title}\n      </Button>\n    </div>\n  );\n};\n\nexport const BackToTop = React.forwardRef((props: BackToTopProps, ref: React.Ref<any>) => (\n  <BackToTopBase innerRef={ref} {...props} />\n));\nBackToTop.displayName = 'BackToTop';\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
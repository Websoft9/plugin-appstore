{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Dropdown/dropdown';\nimport CaretDownIcon from '@patternfly/react-icons/dist/esm/icons/caret-down-icon';\nimport { Toggle } from './Toggle';\nimport { Badge } from '../Badge';\nexport var BadgeToggle = function BadgeToggle(_a) {\n  var _a$id = _a.id,\n    id = _a$id === void 0 ? '' : _a$id,\n    _a$children = _a.children,\n    children = _a$children === void 0 ? null : _a$children,\n    _a$badgeProps = _a.badgeProps,\n    badgeProps = _a$badgeProps === void 0 ? {\n      isRead: true\n    } : _a$badgeProps,\n    _a$className = _a.className,\n    className = _a$className === void 0 ? '' : _a$className,\n    _a$isOpen = _a.isOpen,\n    isOpen = _a$isOpen === void 0 ? false : _a$isOpen,\n    _a$ariaLabel = _a['aria-label'],\n    ariaLabel = _a$ariaLabel === void 0 ? 'Actions' : _a$ariaLabel,\n    _a$parentRef = _a.parentRef,\n    parentRef = _a$parentRef === void 0 ? null : _a$parentRef,\n    _a$getMenuRef = _a.getMenuRef,\n    getMenuRef = _a$getMenuRef === void 0 ? null : _a$getMenuRef,\n    _a$isActive = _a.isActive,\n    isActive = _a$isActive === void 0 ? false : _a$isActive,\n    _a$isPlain = _a.isPlain,\n    isPlain = _a$isPlain === void 0 ? null : _a$isPlain,\n    _a$isDisabled = _a.isDisabled,\n    isDisabled = _a$isDisabled === void 0 ? false : _a$isDisabled,\n    _a$bubbleEvent = _a.bubbleEvent,\n    bubbleEvent = _a$bubbleEvent === void 0 ? false : _a$bubbleEvent,\n    _a$onToggle = _a.onToggle,\n    onToggle = _a$onToggle === void 0 ? function () {\n      return undefined;\n    } : _a$onToggle,\n    ref = _a.ref,\n    props = __rest(_a, [\"id\", \"children\", \"badgeProps\", \"className\", \"isOpen\", 'aria-label', \"parentRef\", \"getMenuRef\", \"isActive\", \"isPlain\", \"isDisabled\", \"bubbleEvent\", \"onToggle\", \"ref\"]);\n  return React.createElement(Toggle, Object.assign({\n    id: id,\n    className: className,\n    isOpen: isOpen,\n    \"aria-label\": ariaLabel,\n    parentRef: parentRef,\n    getMenuRef: getMenuRef,\n    isActive: isActive,\n    isPlain: isPlain || true,\n    isDisabled: isDisabled,\n    onToggle: onToggle,\n    bubbleEvent: bubbleEvent\n  }, props), React.createElement(Badge, Object.assign({}, badgeProps), children, React.createElement(\"span\", {\n    className: css(styles.dropdownToggleIcon)\n  }, React.createElement(CaretDownIcon, null))));\n};\nBadgeToggle.displayName = 'BadgeToggle';","map":{"version":3,"names":["React","css","styles","CaretDownIcon","Toggle","Badge","BadgeToggle","_a","id","_a$id","_a$children","children","_a$badgeProps","badgeProps","isRead","_a$className","className","_a$isOpen","isOpen","_a$ariaLabel","ariaLabel","_a$parentRef","parentRef","_a$getMenuRef","getMenuRef","_a$isActive","isActive","_a$isPlain","isPlain","_a$isDisabled","isDisabled","_a$bubbleEvent","bubbleEvent","_a$onToggle","onToggle","undefined","ref","props","__rest","createElement","Object","assign","dropdownToggleIcon","displayName"],"sources":["/data/stackhub-web/plugins/myapps/node_modules/@patternfly/react-core/src/components/Dropdown/BadgeToggle.tsx"],"sourcesContent":["import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Dropdown/dropdown';\nimport { DropdownToggleProps } from './DropdownToggle';\nimport CaretDownIcon from '@patternfly/react-icons/dist/esm/icons/caret-down-icon';\nimport { Toggle } from './Toggle';\nimport { Badge, BadgeProps } from '../Badge';\n\nexport interface BadgeToggleProps extends DropdownToggleProps {\n  /** HTML ID of dropdown toggle */\n  id?: string;\n  /** Anything which can be rendered as dropdown toggle */\n  children?: React.ReactNode;\n  /** Badge specific properties */\n  badgeProps?: BadgeProps;\n  /** Classess applied to root element of dropdown toggle */\n  className?: string;\n  /** Flag to indicate if menu is opened */\n  isOpen?: boolean;\n  /** Label Toggle button */\n  'aria-label'?: string;\n  /** Callback called when toggle is clicked */\n  onToggle?: (isOpen: boolean) => void;\n  /** Element which wraps toggle */\n  parentRef?: any;\n  /** The menu element */\n  getMenuRef?: () => HTMLElement;\n  /** Forces active state */\n  isActive?: boolean;\n  /** Disables the dropdown toggle */\n  isDisabled?: boolean;\n  /** Display the toggle with no border or background */\n  isPlain?: boolean;\n  /** Type to put on the button */\n  type?: 'button' | 'submit' | 'reset';\n  /** Allows selecting toggle to select parent */\n  bubbleEvent?: boolean;\n}\n\nexport const BadgeToggle: React.FunctionComponent<BadgeToggleProps> = ({\n  id = '',\n  children = null,\n  badgeProps = { isRead: true },\n  className = '',\n  isOpen = false,\n  'aria-label': ariaLabel = 'Actions',\n  parentRef = null,\n  getMenuRef = null,\n  isActive = false,\n  isPlain = null,\n  isDisabled = false,\n  bubbleEvent = false,\n  onToggle = () => undefined as void,\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  ref, // Types of Ref are different for React.FunctionComponent vs React.Component\n  ...props\n}: BadgeToggleProps) => (\n  <Toggle\n    id={id}\n    className={className}\n    isOpen={isOpen}\n    aria-label={ariaLabel}\n    parentRef={parentRef}\n    getMenuRef={getMenuRef}\n    isActive={isActive}\n    isPlain={isPlain || true}\n    isDisabled={isDisabled}\n    onToggle={onToggle}\n    bubbleEvent={bubbleEvent}\n    {...props}\n  >\n    <Badge {...badgeProps}>\n      {children}\n      <span className={css(styles.dropdownToggleIcon)}>\n        <CaretDownIcon />\n      </span>\n    </Badge>\n  </Toggle>\n);\nBadgeToggle.displayName = 'BadgeToggle';\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,GAAG,QAAQ,0BAA0B;AAC9C,OAAOC,MAAM,MAAM,2DAA2D;AAE9E,OAAOC,aAAa,MAAM,wDAAwD;AAClF,SAASC,MAAM,QAAQ,UAAU;AACjC,SAASC,KAAK,QAAoB,UAAU;AAiC5C,OAAO,IAAMC,WAAW,GAA8C,SAAzDA,WAAWA,CAA+CC,EAiBpD,EAAI;cAFlBA,EAEc,CAhBjBC,EAAE;IAAFA,EAAE,GAAAC,KAAA,cAAG,EAAE,GAAAA,KAAA;IAAAC,WAAA,GAcJH,EAEc,CAfjBI,QAAQ;IAARA,QAAQ,GAAAD,WAAA,cAAG,IAAI,GAAAA,WAAA;IAAAE,aAAA,GAaZL,EAEc,CAdjBM,UAAU;IAAVA,UAAU,GAAAD,aAAA,cAAG;MAAEE,MAAM,EAAE;IAAI,CAAE,GAAAF,aAAA;IAAAG,YAAA,GAY1BR,EAEc,CAbjBS,SAAS;IAATA,SAAS,GAAAD,YAAA,cAAG,EAAE,GAAAA,YAAA;IAAAE,SAAA,GAWXV,EAEc,CAZjBW,MAAM;IAANA,MAAM,GAAAD,SAAA,cAAG,KAAK,GAAAA,SAAA;IAAAE,YAAA,GAUXZ,EAEc,CAXjB,YAAY;IAAEa,SAAS,GAAAD,YAAA,cAAG,SAAS,GAAAA,YAAA;IAAAE,YAAA,GAShCd,EAEc,CAVjBe,SAAS;IAATA,SAAS,GAAAD,YAAA,cAAG,IAAI,GAAAA,YAAA;IAAAE,aAAA,GAQbhB,EAEc,CATjBiB,UAAU;IAAVA,UAAU,GAAAD,aAAA,cAAG,IAAI,GAAAA,aAAA;IAAAE,WAAA,GAOdlB,EAEc,CARjBmB,QAAQ;IAARA,QAAQ,GAAAD,WAAA,cAAG,KAAK,GAAAA,WAAA;IAAAE,UAAA,GAMbpB,EAEc,CAPjBqB,OAAO;IAAPA,OAAO,GAAAD,UAAA,cAAG,IAAI,GAAAA,UAAA;IAAAE,aAAA,GAKXtB,EAEc,CANjBuB,UAAU;IAAVA,UAAU,GAAAD,aAAA,cAAG,KAAK,GAAAA,aAAA;IAAAE,cAAA,GAIfxB,EAEc,CALjByB,WAAW;IAAXA,WAAW,GAAAD,cAAA,cAAG,KAAK,GAAAA,cAAA;IAAAE,WAAA,GAGhB1B,EAEc,CAJjB2B,QAAQ;IAARA,QAAQ,GAAAD,WAAA,cAAG;MAAA,OAAME,SAAiB;IAAA,IAAAF,WAAA;IAElCG,GAAG,GAAA7B,EAEc,CAFjB6B,GAAG;IACAC,KAAK,GAAAC,MAAA,CAAA/B,EAAA,EAhB6D,uKAiBtE,CADS;EACc,OACtBP,KAAA,CAAAuC,aAAA,CAACnC,MAAM,EAAAoC,MAAA,CAAAC,MAAA;IACLjC,EAAE,EAAEA,EAAE;IACNQ,SAAS,EAAEA,SAAS;IACpBE,MAAM,EAAEA,MAAM;IAAA,cACFE,SAAS;IACrBE,SAAS,EAAEA,SAAS;IACpBE,UAAU,EAAEA,UAAU;IACtBE,QAAQ,EAAEA,QAAQ;IAClBE,OAAO,EAAEA,OAAO,IAAI,IAAI;IACxBE,UAAU,EAAEA,UAAU;IACtBI,QAAQ,EAAEA,QAAQ;IAClBF,WAAW,EAAEA;EAAW,GACpBK,KAAK,GAETrC,KAAA,CAAAuC,aAAA,CAAClC,KAAK,EAAAmC,MAAA,CAAAC,MAAA,KAAK5B,UAAU,GAClBF,QAAQ,EACTX,KAAA,CAAAuC,aAAA;IAAMvB,SAAS,EAAEf,GAAG,CAACC,MAAM,CAACwC,kBAAkB;EAAC,GAC7C1C,KAAA,CAAAuC,aAAA,CAACpC,aAAa,OAAG,CACZ,CACD,CACD;CACV;AACDG,WAAW,CAACqC,WAAW,GAAG,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}
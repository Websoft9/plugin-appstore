{"ast":null,"code":"import { invariant } from \"../../utilities/globals/index.js\";\nimport { useContext } from 'react';\nimport { getApolloContext } from \"../context/index.js\";\nexport function useApolloClient(override) {\n  var context = useContext(getApolloContext());\n  var client = override || context.client;\n  __DEV__ ? invariant(!!client, 'Could not find \"client\" in the context or passed in as an option. ' + 'Wrap the root component in an <ApolloProvider>, or pass an ApolloClient ' + 'instance in via options.') : invariant(!!client, 32);\n  return client;\n}","map":{"version":3,"names":["invariant","useContext","getApolloContext","useApolloClient","override","context","client","__DEV__"],"sources":["/data/stackhub-web/plugins/myapps/node_modules/@apollo/src/react/hooks/useApolloClient.ts"],"sourcesContent":["import { invariant } from '../../utilities/globals';\nimport { useContext } from 'react';\nimport { ApolloClient } from '../../core';\nimport { getApolloContext } from '../context';\n\nexport function useApolloClient(\n  override?: ApolloClient<object>,\n): ApolloClient<object> {\n  const context = useContext(getApolloContext());\n  const client = override || context.client;\n  invariant(\n    !!client,\n    'Could not find \"client\" in the context or passed in as an option. ' +\n    'Wrap the root component in an <ApolloProvider>, or pass an ApolloClient ' +\n    'instance in via options.',\n  );\n\n  return client;\n}\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,kCAA0B;AACpD,SAASC,UAAU,QAAQ,OAAO;AAElC,SAASC,gBAAgB,QAAQ,qBAAa;AAE9C,OAAM,SAAUC,eAAeA,CAC7BC,QAA+B;EAE/B,IAAMC,OAAO,GAAGJ,UAAU,CAACC,gBAAgB,EAAE,CAAC;EAC9C,IAAMI,MAAM,GAAGF,QAAQ,IAAIC,OAAO,CAACC,MAAM;EACzCC,OAAA,GACEP,SAAQ,CACR,EAAAM,MAAA,sEAAoE,GACpE,0EAA0E,GAC1E,0BAA0B,CAC3B,GAACN,SAAA,GAAAM,MAAA;EAEF,OAAOA,MAAM;AACf"},"metadata":{},"sourceType":"module","externalDependencies":[]}
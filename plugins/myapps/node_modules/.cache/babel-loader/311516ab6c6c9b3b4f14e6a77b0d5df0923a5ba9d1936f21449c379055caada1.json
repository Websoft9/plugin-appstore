{"ast":null,"code":"import _slicedToArray from \"/data/stackhub-web/plugins/myapps/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { useContext, useCallback } from 'react';\nimport * as React from 'react';\nimport { useSSRSafeId } from './ssr';\nimport DropdownContext from './DropdownContext';\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var isRoleMenu = function isRoleMenu(el) {\n  var _el$getAttribute;\n  return ((_el$getAttribute = el.getAttribute('role')) == null ? void 0 : _el$getAttribute.toLowerCase()) === 'menu';\n};\nvar noop = function noop() {};\n\n/**\n * Wires up Dropdown toggle functionality, returning a set a props to attach\n * to the element that functions as the dropdown toggle (generally a button).\n *\n * @memberOf Dropdown\n */\nexport function useDropdownToggle() {\n  var id = useSSRSafeId();\n  var _ref = useContext(DropdownContext) || {},\n    _ref$show = _ref.show,\n    show = _ref$show === void 0 ? false : _ref$show,\n    _ref$toggle = _ref.toggle,\n    toggle = _ref$toggle === void 0 ? noop : _ref$toggle,\n    setToggle = _ref.setToggle,\n    menuElement = _ref.menuElement;\n  var handleClick = useCallback(function (e) {\n    toggle(!show, e);\n  }, [show, toggle]);\n  var props = {\n    id: id,\n    ref: setToggle || noop,\n    onClick: handleClick,\n    'aria-expanded': !!show\n  };\n\n  // This is maybe better down in an effect, but\n  // the component is going to update anyway when the menu element\n  // is set so might return new props.\n  if (menuElement && isRoleMenu(menuElement)) {\n    props['aria-haspopup'] = true;\n  }\n  return [props, {\n    show: show,\n    toggle: toggle\n  }];\n}\n/**\n * Also exported as `<Dropdown.Toggle>` from `Dropdown`.\n *\n * @displayName DropdownToggle\n * @memberOf Dropdown\n */\nfunction DropdownToggle(_ref2) {\n  var children = _ref2.children;\n  var _useDropdownToggle = useDropdownToggle(),\n    _useDropdownToggle2 = _slicedToArray(_useDropdownToggle, 2),\n    props = _useDropdownToggle2[0],\n    meta = _useDropdownToggle2[1];\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: children(props, meta)\n  });\n}\nDropdownToggle.displayName = 'DropdownToggle';\n\n/** @component */\nexport default DropdownToggle;","map":{"version":3,"names":["useContext","useCallback","React","useSSRSafeId","DropdownContext","Fragment","_Fragment","jsx","_jsx","isRoleMenu","el","_el$getAttribute","getAttribute","toLowerCase","noop","useDropdownToggle","id","_ref","_ref$show","show","_ref$toggle","toggle","setToggle","menuElement","handleClick","e","props","ref","onClick","DropdownToggle","_ref2","children","_useDropdownToggle","_useDropdownToggle2","_slicedToArray","meta","displayName"],"sources":["/data/stackhub-web/plugins/myapps/node_modules/@restart/ui/esm/DropdownToggle.js"],"sourcesContent":["import { useContext, useCallback } from 'react';\nimport * as React from 'react';\nimport { useSSRSafeId } from './ssr';\nimport DropdownContext from './DropdownContext';\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const isRoleMenu = el => {\n  var _el$getAttribute;\n  return ((_el$getAttribute = el.getAttribute('role')) == null ? void 0 : _el$getAttribute.toLowerCase()) === 'menu';\n};\nconst noop = () => {};\n\n/**\n * Wires up Dropdown toggle functionality, returning a set a props to attach\n * to the element that functions as the dropdown toggle (generally a button).\n *\n * @memberOf Dropdown\n */\nexport function useDropdownToggle() {\n  const id = useSSRSafeId();\n  const {\n    show = false,\n    toggle = noop,\n    setToggle,\n    menuElement\n  } = useContext(DropdownContext) || {};\n  const handleClick = useCallback(e => {\n    toggle(!show, e);\n  }, [show, toggle]);\n  const props = {\n    id,\n    ref: setToggle || noop,\n    onClick: handleClick,\n    'aria-expanded': !!show\n  };\n\n  // This is maybe better down in an effect, but\n  // the component is going to update anyway when the menu element\n  // is set so might return new props.\n  if (menuElement && isRoleMenu(menuElement)) {\n    props['aria-haspopup'] = true;\n  }\n  return [props, {\n    show,\n    toggle\n  }];\n}\n/**\n * Also exported as `<Dropdown.Toggle>` from `Dropdown`.\n *\n * @displayName DropdownToggle\n * @memberOf Dropdown\n */\nfunction DropdownToggle({\n  children\n}) {\n  const [props, meta] = useDropdownToggle();\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: children(props, meta)\n  });\n}\nDropdownToggle.displayName = 'DropdownToggle';\n\n/** @component */\nexport default DropdownToggle;"],"mappings":";AAAA,SAASA,UAAU,EAAEC,WAAW,QAAQ,OAAO;AAC/C,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAASC,YAAY,QAAQ,OAAO;AACpC,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,SAASC,QAAQ,IAAIC,SAAS,QAAQ,mBAAmB;AACzD,SAASC,GAAG,IAAIC,IAAI,QAAQ,mBAAmB;AAC/C,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAUA,CAAGC,EAAE,EAAI;EAC9B,IAAIC,gBAAgB;EACpB,OAAO,CAAC,CAACA,gBAAgB,GAAGD,EAAE,CAACE,YAAY,CAAC,MAAM,CAAC,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGD,gBAAgB,CAACE,WAAW,CAAC,CAAC,MAAM,MAAM;AACpH,CAAC;AACD,IAAMC,IAAI,GAAG,SAAPA,IAAIA,CAAA,EAAS,CAAC,CAAC;;AAErB;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,iBAAiBA,CAAA,EAAG;EAClC,IAAMC,EAAE,GAAGb,YAAY,CAAC,CAAC;EACzB,IAAAc,IAAA,GAKIjB,UAAU,CAACI,eAAe,CAAC,IAAI,CAAC,CAAC;IAAAc,SAAA,GAAAD,IAAA,CAJnCE,IAAI;IAAJA,IAAI,GAAAD,SAAA,cAAG,KAAK,GAAAA,SAAA;IAAAE,WAAA,GAAAH,IAAA,CACZI,MAAM;IAANA,MAAM,GAAAD,WAAA,cAAGN,IAAI,GAAAM,WAAA;IACbE,SAAS,GAAAL,IAAA,CAATK,SAAS;IACTC,WAAW,GAAAN,IAAA,CAAXM,WAAW;EAEb,IAAMC,WAAW,GAAGvB,WAAW,CAAC,UAAAwB,CAAC,EAAI;IACnCJ,MAAM,CAAC,CAACF,IAAI,EAAEM,CAAC,CAAC;EAClB,CAAC,EAAE,CAACN,IAAI,EAAEE,MAAM,CAAC,CAAC;EAClB,IAAMK,KAAK,GAAG;IACZV,EAAE,EAAFA,EAAE;IACFW,GAAG,EAAEL,SAAS,IAAIR,IAAI;IACtBc,OAAO,EAAEJ,WAAW;IACpB,eAAe,EAAE,CAAC,CAACL;EACrB,CAAC;;EAED;EACA;EACA;EACA,IAAII,WAAW,IAAId,UAAU,CAACc,WAAW,CAAC,EAAE;IAC1CG,KAAK,CAAC,eAAe,CAAC,GAAG,IAAI;EAC/B;EACA,OAAO,CAACA,KAAK,EAAE;IACbP,IAAI,EAAJA,IAAI;IACJE,MAAM,EAANA;EACF,CAAC,CAAC;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASQ,cAAcA,CAAAC,KAAA,EAEpB;EAAA,IADDC,QAAQ,GAAAD,KAAA,CAARC,QAAQ;EAER,IAAAC,kBAAA,GAAsBjB,iBAAiB,CAAC,CAAC;IAAAkB,mBAAA,GAAAC,cAAA,CAAAF,kBAAA;IAAlCN,KAAK,GAAAO,mBAAA;IAAEE,IAAI,GAAAF,mBAAA;EAClB,OAAO,aAAazB,IAAI,CAACF,SAAS,EAAE;IAClCyB,QAAQ,EAAEA,QAAQ,CAACL,KAAK,EAAES,IAAI;EAChC,CAAC,CAAC;AACJ;AACAN,cAAc,CAACO,WAAW,GAAG,gBAAgB;;AAE7C;AACA,eAAeP,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}
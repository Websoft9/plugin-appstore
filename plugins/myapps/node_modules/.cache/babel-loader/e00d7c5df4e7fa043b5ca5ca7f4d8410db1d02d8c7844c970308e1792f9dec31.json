{"ast":null,"code":"import _toConsumableArray from \"/data/stackhub-web/plugins/myapps/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport getOppositePlacement from '../utils/getOppositePlacement';\nimport getBasePlacement from '../utils/getBasePlacement';\nimport getOppositeVariationPlacement from '../utils/getOppositeVariationPlacement';\nimport detectOverflow from '../utils/detectOverflow';\nimport computeAutoPlacement from '../utils/computeAutoPlacement';\nimport { bottom, top, start, right, left, auto } from '../enums';\nimport getVariation from '../utils/getVariation';\n/**\n * @param placement\n */\nfunction getExpandedFallbackPlacements(placement) {\n  if (getBasePlacement(placement) === auto) {\n    return [];\n  }\n  var oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeVariationPlacement(placement), oppositePlacement, getOppositeVariationPlacement(oppositePlacement)];\n}\n/**\n *\n */\nfunction flip(_ref) {\n  var state = _ref.state,\n    options = _ref.options,\n    name = _ref.name;\n  if (state.modifiersData[name]._skip) {\n    return;\n  }\n  var _options$mainAxis = options.mainAxis,\n    checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis,\n    _options$altAxis = options.altAxis,\n    checkAltAxis = _options$altAxis === void 0 ? true : _options$altAxis,\n    specifiedFallbackPlacements = options.fallbackPlacements,\n    padding = options.padding,\n    boundary = options.boundary,\n    rootBoundary = options.rootBoundary,\n    altBoundary = options.altBoundary,\n    _options$flipVariatio = options.flipVariations,\n    flipVariations = _options$flipVariatio === void 0 ? true : _options$flipVariatio,\n    allowedAutoPlacements = options.allowedAutoPlacements;\n  var preferredPlacement = state.options.placement;\n  var basePlacement = getBasePlacement(preferredPlacement);\n  var isBasePlacement = basePlacement === preferredPlacement;\n  var fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipVariations ? [getOppositePlacement(preferredPlacement)] : getExpandedFallbackPlacements(preferredPlacement));\n  var placements = [preferredPlacement].concat(_toConsumableArray(fallbackPlacements)).reduce(function (acc, placement) {\n    return acc.concat(getBasePlacement(placement) === auto ? computeAutoPlacement(state, {\n      placement: placement,\n      boundary: boundary,\n      rootBoundary: rootBoundary,\n      padding: padding,\n      flipVariations: flipVariations,\n      allowedAutoPlacements: allowedAutoPlacements\n    }) : placement);\n  }, []);\n  var referenceRect = state.rects.reference;\n  var popperRect = state.rects.popper;\n  var checksMap = new Map();\n  var makeFallbackChecks = true;\n  var firstFittingPlacement = placements[0];\n  for (var i = 0; i < placements.length; i++) {\n    var placement = placements[i];\n    var _basePlacement = getBasePlacement(placement);\n    var isStartVariation = getVariation(placement) === start;\n    var isVertical = [top, bottom].indexOf(_basePlacement) >= 0;\n    var len = isVertical ? 'width' : 'height';\n    var overflow = detectOverflow(state, {\n      placement: placement,\n      boundary: boundary,\n      rootBoundary: rootBoundary,\n      altBoundary: altBoundary,\n      padding: padding\n    });\n    var mainVariationSide = isVertical ? isStartVariation ? right : left : isStartVariation ? bottom : top;\n    if (referenceRect[len] > popperRect[len]) {\n      mainVariationSide = getOppositePlacement(mainVariationSide);\n    }\n    var altVariationSide = getOppositePlacement(mainVariationSide);\n    var checks = [];\n    if (checkMainAxis) {\n      checks.push(overflow[_basePlacement] <= 0);\n    }\n    if (checkAltAxis) {\n      checks.push(overflow[mainVariationSide] <= 0, overflow[altVariationSide] <= 0);\n    }\n    if (checks.every(function (check) {\n      return check;\n    })) {\n      firstFittingPlacement = placement;\n      makeFallbackChecks = false;\n      break;\n    }\n    checksMap.set(placement, checks);\n  }\n  if (makeFallbackChecks) {\n    // `2` may be desired in some cases â€“ research later\n    var numberOfChecks = flipVariations ? 3 : 1;\n    var _loop = function _loop(_i) {\n      var fittingPlacement = placements.find(function (placement) {\n        var checks = checksMap.get(placement);\n        if (checks) {\n          return checks.slice(0, _i).every(function (check) {\n            return check;\n          });\n        }\n      });\n      if (fittingPlacement) {\n        firstFittingPlacement = fittingPlacement;\n        return \"break\";\n      }\n    };\n    for (var _i = numberOfChecks; _i > 0; _i--) {\n      var _ret = _loop(_i);\n      if (_ret === \"break\") break;\n    }\n  }\n  if (state.placement !== firstFittingPlacement) {\n    state.modifiersData[name]._skip = true;\n    state.placement = firstFittingPlacement;\n    state.reset = true;\n  }\n}\nexport default {\n  name: 'flip',\n  enabled: true,\n  phase: 'main',\n  fn: flip,\n  requiresIfExists: ['offset'],\n  data: {\n    _skip: false\n  }\n};","map":{"version":3,"names":["getOppositePlacement","getBasePlacement","getOppositeVariationPlacement","detectOverflow","computeAutoPlacement","bottom","top","start","right","left","auto","getVariation","getExpandedFallbackPlacements","placement","oppositePlacement","flip","_ref","state","options","name","modifiersData","_skip","_options$mainAxis","mainAxis","checkMainAxis","_options$altAxis","altAxis","checkAltAxis","specifiedFallbackPlacements","fallbackPlacements","padding","boundary","rootBoundary","altBoundary","_options$flipVariatio","flipVariations","allowedAutoPlacements","preferredPlacement","basePlacement","isBasePlacement","placements","concat","_toConsumableArray","reduce","acc","referenceRect","rects","reference","popperRect","popper","checksMap","Map","makeFallbackChecks","firstFittingPlacement","i","length","isStartVariation","isVertical","indexOf","len","overflow","mainVariationSide","altVariationSide","checks","push","every","check","set","numberOfChecks","_loop","_i","fittingPlacement","find","get","slice","_ret","reset","enabled","phase","fn","requiresIfExists","data"],"sources":["/data/stackhub-web/plugins/myapps/node_modules/@patternfly/react-core/src/helpers/Popper/thirdparty/popper-core/modifiers/flip.ts"],"sourcesContent":["// @ts-nocheck\nimport { Placement, Boundary, RootBoundary } from '../enums';\nimport { ModifierArguments, Modifier, Padding } from '../types';\nimport getOppositePlacement from '../utils/getOppositePlacement';\nimport getBasePlacement from '../utils/getBasePlacement';\nimport getOppositeVariationPlacement from '../utils/getOppositeVariationPlacement';\nimport detectOverflow from '../utils/detectOverflow';\nimport computeAutoPlacement from '../utils/computeAutoPlacement';\nimport { bottom, top, start, right, left, auto } from '../enums';\nimport getVariation from '../utils/getVariation';\n\n// eslint-disable-next-line import/no-unused-modules\nexport interface Options {\n  mainAxis: boolean;\n  altAxis: boolean;\n  fallbackPlacements: Placement[];\n  padding: Padding;\n  boundary: Boundary;\n  rootBoundary: RootBoundary;\n  altBoundary: boolean;\n  flipVariations: boolean;\n  allowedAutoPlacements: Placement[];\n}\n\n/**\n * @param placement\n */\nfunction getExpandedFallbackPlacements(placement: Placement): Placement[] {\n  if (getBasePlacement(placement) === auto) {\n    return [];\n  }\n\n  const oppositePlacement = getOppositePlacement(placement);\n\n  return [\n    getOppositeVariationPlacement(placement),\n    oppositePlacement,\n    getOppositeVariationPlacement(oppositePlacement)\n  ];\n}\n\n/**\n *\n */\nfunction flip({ state, options, name }: ModifierArguments<Options>) {\n  if (state.modifiersData[name]._skip) {\n    return;\n  }\n\n  const {\n    mainAxis: checkMainAxis = true,\n    altAxis: checkAltAxis = true,\n    fallbackPlacements: specifiedFallbackPlacements,\n    padding,\n    boundary,\n    rootBoundary,\n    altBoundary,\n    flipVariations = true,\n    allowedAutoPlacements\n  } = options;\n\n  const preferredPlacement = state.options.placement;\n  const basePlacement = getBasePlacement(preferredPlacement);\n  const isBasePlacement = basePlacement === preferredPlacement;\n\n  const fallbackPlacements =\n    specifiedFallbackPlacements ||\n    (isBasePlacement || !flipVariations\n      ? [getOppositePlacement(preferredPlacement)]\n      : getExpandedFallbackPlacements(preferredPlacement));\n\n  const placements = [preferredPlacement, ...fallbackPlacements].reduce(\n    (acc, placement) =>\n      acc.concat(\n        getBasePlacement(placement) === auto\n          ? computeAutoPlacement(state, {\n              placement,\n              boundary,\n              rootBoundary,\n              padding,\n              flipVariations,\n              allowedAutoPlacements\n            })\n          : placement\n      ),\n    []\n  );\n\n  const referenceRect = state.rects.reference;\n  const popperRect = state.rects.popper;\n\n  const checksMap = new Map();\n  let makeFallbackChecks = true;\n  let firstFittingPlacement = placements[0];\n\n  for (let i = 0; i < placements.length; i++) {\n    const placement = placements[i];\n    const basePlacement = getBasePlacement(placement);\n    const isStartVariation = getVariation(placement) === start;\n    const isVertical = [top, bottom].indexOf(basePlacement) >= 0;\n    const len = isVertical ? 'width' : 'height';\n\n    const overflow = detectOverflow(state, {\n      placement,\n      boundary,\n      rootBoundary,\n      altBoundary,\n      padding\n    });\n\n    let mainVariationSide: any = isVertical ? (isStartVariation ? right : left) : isStartVariation ? bottom : top;\n\n    if (referenceRect[len] > popperRect[len]) {\n      mainVariationSide = getOppositePlacement(mainVariationSide);\n    }\n\n    const altVariationSide: any = getOppositePlacement(mainVariationSide);\n\n    const checks = [];\n\n    if (checkMainAxis) {\n      checks.push(overflow[basePlacement] <= 0);\n    }\n\n    if (checkAltAxis) {\n      checks.push(overflow[mainVariationSide] <= 0, overflow[altVariationSide] <= 0);\n    }\n\n    if (checks.every(check => check)) {\n      firstFittingPlacement = placement;\n      makeFallbackChecks = false;\n      break;\n    }\n\n    checksMap.set(placement, checks);\n  }\n\n  if (makeFallbackChecks) {\n    // `2` may be desired in some cases â€“ research later\n    const numberOfChecks = flipVariations ? 3 : 1;\n\n    for (let i = numberOfChecks; i > 0; i--) {\n      const fittingPlacement = placements.find(placement => {\n        const checks = checksMap.get(placement);\n        if (checks) {\n          return checks.slice(0, i).every(check => check);\n        }\n      });\n\n      if (fittingPlacement) {\n        firstFittingPlacement = fittingPlacement;\n        break;\n      }\n    }\n  }\n\n  if (state.placement !== firstFittingPlacement) {\n    state.modifiersData[name]._skip = true;\n    state.placement = firstFittingPlacement;\n    state.reset = true;\n  }\n}\n\n// eslint-disable-next-line import/no-unused-modules\nexport type FlipModifier = Modifier<'flip', Options>;\nexport default {\n  name: 'flip',\n  enabled: true,\n  phase: 'main',\n  fn: flip,\n  requiresIfExists: ['offset'],\n  data: { _skip: false }\n} as FlipModifier;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
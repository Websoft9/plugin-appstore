{"ast":null,"code":"import { GraphQLError } from \"../../error/GraphQLError.mjs\";\n\n/**\n * Unique directive names\n *\n * A GraphQL document is only valid if all defined directives have unique names.\n */\nexport function UniqueDirectiveNamesRule(context) {\n  var knownDirectiveNames = Object.create(null);\n  var schema = context.getSchema();\n  return {\n    DirectiveDefinition: function DirectiveDefinition(node) {\n      var directiveName = node.name.value;\n      if (schema !== null && schema !== void 0 && schema.getDirective(directiveName)) {\n        context.reportError(new GraphQLError(\"Directive \\\"@\".concat(directiveName, \"\\\" already exists in the schema. It cannot be redefined.\"), node.name));\n        return;\n      }\n      if (knownDirectiveNames[directiveName]) {\n        context.reportError(new GraphQLError(\"There can be only one directive named \\\"@\".concat(directiveName, \"\\\".\"), [knownDirectiveNames[directiveName], node.name]));\n      } else {\n        knownDirectiveNames[directiveName] = node.name;\n      }\n      return false;\n    }\n  };\n}","map":{"version":3,"names":["GraphQLError","UniqueDirectiveNamesRule","context","knownDirectiveNames","Object","create","schema","getSchema","DirectiveDefinition","node","directiveName","name","value","getDirective","reportError","concat"],"sources":["/data/stackhub-web/plugins/myapps/node_modules/graphql/validation/rules/UniqueDirectiveNamesRule.mjs"],"sourcesContent":["import { GraphQLError } from \"../../error/GraphQLError.mjs\";\n\n/**\n * Unique directive names\n *\n * A GraphQL document is only valid if all defined directives have unique names.\n */\nexport function UniqueDirectiveNamesRule(context) {\n  var knownDirectiveNames = Object.create(null);\n  var schema = context.getSchema();\n  return {\n    DirectiveDefinition: function DirectiveDefinition(node) {\n      var directiveName = node.name.value;\n\n      if (schema !== null && schema !== void 0 && schema.getDirective(directiveName)) {\n        context.reportError(new GraphQLError(\"Directive \\\"@\".concat(directiveName, \"\\\" already exists in the schema. It cannot be redefined.\"), node.name));\n        return;\n      }\n\n      if (knownDirectiveNames[directiveName]) {\n        context.reportError(new GraphQLError(\"There can be only one directive named \\\"@\".concat(directiveName, \"\\\".\"), [knownDirectiveNames[directiveName], node.name]));\n      } else {\n        knownDirectiveNames[directiveName] = node.name;\n      }\n\n      return false;\n    }\n  };\n}\n"],"mappings":"AAAA,SAASA,YAAY,QAAQ,8BAA8B;;AAE3D;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,wBAAwBA,CAACC,OAAO,EAAE;EAChD,IAAIC,mBAAmB,GAAGC,MAAM,CAACC,MAAM,CAAC,IAAI,CAAC;EAC7C,IAAIC,MAAM,GAAGJ,OAAO,CAACK,SAAS,CAAC,CAAC;EAChC,OAAO;IACLC,mBAAmB,EAAE,SAASA,mBAAmBA,CAACC,IAAI,EAAE;MACtD,IAAIC,aAAa,GAAGD,IAAI,CAACE,IAAI,CAACC,KAAK;MAEnC,IAAIN,MAAM,KAAK,IAAI,IAAIA,MAAM,KAAK,KAAK,CAAC,IAAIA,MAAM,CAACO,YAAY,CAACH,aAAa,CAAC,EAAE;QAC9ER,OAAO,CAACY,WAAW,CAAC,IAAId,YAAY,CAAC,eAAe,CAACe,MAAM,CAACL,aAAa,EAAE,0DAA0D,CAAC,EAAED,IAAI,CAACE,IAAI,CAAC,CAAC;QACnJ;MACF;MAEA,IAAIR,mBAAmB,CAACO,aAAa,CAAC,EAAE;QACtCR,OAAO,CAACY,WAAW,CAAC,IAAId,YAAY,CAAC,2CAA2C,CAACe,MAAM,CAACL,aAAa,EAAE,KAAK,CAAC,EAAE,CAACP,mBAAmB,CAACO,aAAa,CAAC,EAAED,IAAI,CAACE,IAAI,CAAC,CAAC,CAAC;MAClK,CAAC,MAAM;QACLR,mBAAmB,CAACO,aAAa,CAAC,GAAGD,IAAI,CAACE,IAAI;MAChD;MAEA,OAAO,KAAK;IACd;EACF,CAAC;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import _classCallCheck from \"/data/stackhub-web/plugins/myapps/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/data/stackhub-web/plugins/myapps/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/data/stackhub-web/plugins/myapps/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/data/stackhub-web/plugins/myapps/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Nav/nav';\nimport a11yStyles from '@patternfly/react-styles/css/utilities/Accessibility/accessibility';\nimport { css } from '@patternfly/react-styles';\nimport AngleRightIcon from '@patternfly/react-icons/dist/esm/icons/angle-right-icon';\nimport { getUniqueId } from '../../helpers/util';\nimport { NavContext } from './Nav';\nimport { PageSidebarContext } from '../Page/PageSidebar';\nimport { getOUIAProps, getDefaultOUIAId } from '../../helpers';\nexport var NavExpandable = /*#__PURE__*/function (_React$Component) {\n  _inherits(NavExpandable, _React$Component);\n  var _super = _createSuper(NavExpandable);\n  function NavExpandable() {\n    var _this;\n    _classCallCheck(this, NavExpandable);\n    _this = _super.apply(this, arguments);\n    _this.id = _this.props.id || getUniqueId();\n    _this.state = {\n      expandedState: _this.props.isExpanded,\n      ouiaStateId: getDefaultOUIAId(NavExpandable.displayName)\n    };\n    _this.onExpand = function (e, onToggle) {\n      var expandedState = _this.state.expandedState;\n      if (_this.props.onExpand) {\n        _this.props.onExpand(e, !expandedState);\n      } else {\n        _this.setState(function (prevState) {\n          return {\n            expandedState: !prevState.expandedState\n          };\n        });\n        var groupId = _this.props.groupId;\n        onToggle(e, groupId, !expandedState);\n      }\n    };\n    return _this;\n  }\n  _createClass(NavExpandable, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        expandedState: this.props.isExpanded\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.isExpanded !== prevProps.isExpanded) {\n        this.setState({\n          expandedState: this.props.isExpanded\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      var _a = this.props,\n        title = _a.title,\n        srText = _a.srText,\n        children = _a.children,\n        className = _a.className,\n        isActive = _a.isActive,\n        ouiaId = _a.ouiaId,\n        groupId = _a.groupId,\n        id = _a.id,\n        isExpanded = _a.isExpanded,\n        buttonProps = _a.buttonProps,\n        onExpand = _a.onExpand,\n        props = __rest(_a, [\"title\", \"srText\", \"children\", \"className\", \"isActive\", \"ouiaId\", \"groupId\", \"id\", \"isExpanded\", \"buttonProps\", \"onExpand\"]);\n      var _this$state = this.state,\n        expandedState = _this$state.expandedState,\n        ouiaStateId = _this$state.ouiaStateId;\n      return React.createElement(NavContext.Consumer, null, function (context) {\n        return React.createElement(\"li\", Object.assign({\n          className: css(styles.navItem, styles.modifiers.expandable, expandedState && styles.modifiers.expanded, isActive && styles.modifiers.current, className)\n        }, getOUIAProps(NavExpandable.displayName, ouiaId !== undefined ? ouiaId : ouiaStateId), props), React.createElement(PageSidebarContext.Consumer, null, function (_ref) {\n          var isNavOpen = _ref.isNavOpen;\n          return React.createElement(\"button\", Object.assign({\n            className: styles.navLink,\n            id: srText ? null : _this2.id,\n            onClick: function onClick(e) {\n              return _this2.onExpand(e, context.onToggle);\n            },\n            \"aria-expanded\": expandedState,\n            tabIndex: isNavOpen ? null : -1\n          }, buttonProps), title, React.createElement(\"span\", {\n            className: css(styles.navToggle)\n          }, React.createElement(\"span\", {\n            className: css(styles.navToggleIcon)\n          }, React.createElement(AngleRightIcon, {\n            \"aria-hidden\": \"true\"\n          }))));\n        }), React.createElement(\"section\", {\n          className: css(styles.navSubnav),\n          \"aria-labelledby\": _this2.id,\n          hidden: expandedState ? null : true\n        }, srText && React.createElement(\"h2\", {\n          className: css(a11yStyles.screenReader),\n          id: _this2.id\n        }, srText), React.createElement(\"ul\", {\n          className: css(styles.navList)\n        }, children)));\n      });\n    }\n  }]);\n  return NavExpandable;\n}(React.Component);\nNavExpandable.displayName = 'NavExpandable';\nNavExpandable.defaultProps = {\n  srText: '',\n  isExpanded: false,\n  children: '',\n  className: '',\n  groupId: null,\n  isActive: false,\n  id: ''\n};","map":{"version":3,"names":["React","styles","a11yStyles","css","AngleRightIcon","getUniqueId","NavContext","PageSidebarContext","getOUIAProps","getDefaultOUIAId","NavExpandable","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","id","props","state","expandedState","isExpanded","ouiaStateId","displayName","onExpand","e","onToggle","setState","prevState","groupId","_createClass","key","value","componentDidMount","componentDidUpdate","prevProps","render","_this2","_a","title","srText","children","className","isActive","ouiaId","buttonProps","__rest","_this$state","createElement","Consumer","context","Object","assign","navItem","modifiers","expandable","expanded","current","undefined","_ref","isNavOpen","navLink","onClick","tabIndex","navToggle","navToggleIcon","navSubnav","hidden","screenReader","navList","Component","defaultProps"],"sources":["/data/stackhub-web/plugins/myapps/node_modules/@patternfly/react-core/src/components/Nav/NavExpandable.tsx"],"sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Nav/nav';\nimport a11yStyles from '@patternfly/react-styles/css/utilities/Accessibility/accessibility';\nimport { css } from '@patternfly/react-styles';\nimport AngleRightIcon from '@patternfly/react-icons/dist/esm/icons/angle-right-icon';\nimport { getUniqueId } from '../../helpers/util';\nimport { NavContext } from './Nav';\nimport { PageSidebarContext } from '../Page/PageSidebar';\nimport { PickOptional } from '../../helpers/typeUtils';\nimport { getOUIAProps, OUIAProps, getDefaultOUIAId } from '../../helpers';\n\nexport interface NavExpandableProps\n  extends React.DetailedHTMLProps<React.LiHTMLAttributes<HTMLLIElement>, HTMLLIElement>,\n    OUIAProps {\n  /** Title shown for the expandable list */\n  title: string;\n  /** If defined, screen readers will read this text instead of the list title */\n  srText?: string;\n  /** Boolean to programatically expand or collapse section */\n  isExpanded?: boolean;\n  /** Anything that can be rendered inside of the expandable list */\n  children?: React.ReactNode;\n  /** Additional classes added to the container */\n  className?: string;\n  /** Group identifier, will be returned with the onToggle and onSelect callback passed to the Nav component */\n  groupId?: string | number;\n  /** If true makes the expandable list title active */\n  isActive?: boolean;\n  /** Identifier to use for the section aria label */\n  id?: string;\n  /** allow consumer to optionally override this callback and manage expand state externally. if passed will not call Nav's onToggle. */\n  onExpand?: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>, val: boolean) => void;\n  /** Additional props added to the NavExpandable <button> */\n  buttonProps?: any;\n  /** Value to overwrite the randomly generated data-ouia-component-id.*/\n  ouiaId?: number | string;\n}\n\ninterface NavExpandableState {\n  expandedState: boolean;\n  ouiaStateId: string;\n}\n\nexport class NavExpandable extends React.Component<NavExpandableProps, NavExpandableState> {\n  static displayName = 'NavExpandable';\n  static defaultProps: PickOptional<NavExpandableProps> = {\n    srText: '',\n    isExpanded: false,\n    children: '',\n    className: '',\n    groupId: null as string,\n    isActive: false,\n    id: ''\n  };\n\n  id = this.props.id || getUniqueId();\n\n  state = {\n    expandedState: this.props.isExpanded,\n    ouiaStateId: getDefaultOUIAId(NavExpandable.displayName)\n  };\n\n  componentDidMount() {\n    this.setState({ expandedState: this.props.isExpanded });\n  }\n\n  componentDidUpdate(prevProps: NavExpandableProps) {\n    if (this.props.isExpanded !== prevProps.isExpanded) {\n      this.setState({ expandedState: this.props.isExpanded });\n    }\n  }\n\n  onExpand = (\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>,\n    onToggle: (\n      event: React.MouseEvent<HTMLButtonElement, MouseEvent>,\n      groupId: string | number,\n      expandedState: boolean\n    ) => void\n  ) => {\n    const { expandedState } = this.state;\n    if (this.props.onExpand) {\n      this.props.onExpand(e, !expandedState);\n    } else {\n      this.setState(prevState => ({ expandedState: !prevState.expandedState }));\n      const { groupId } = this.props;\n      onToggle(e, groupId, !expandedState);\n    }\n  };\n\n  render() {\n    const {\n      title,\n      srText,\n      children,\n      className,\n      isActive,\n      ouiaId,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      groupId,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      id,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      isExpanded,\n      buttonProps,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      onExpand,\n      ...props\n    } = this.props;\n\n    const { expandedState, ouiaStateId } = this.state;\n\n    return (\n      <NavContext.Consumer>\n        {context => (\n          <li\n            className={css(\n              styles.navItem,\n              styles.modifiers.expandable,\n              expandedState && styles.modifiers.expanded,\n              isActive && styles.modifiers.current,\n              className\n            )}\n            {...getOUIAProps(NavExpandable.displayName, ouiaId !== undefined ? ouiaId : ouiaStateId)}\n            {...props}\n          >\n            <PageSidebarContext.Consumer>\n              {({ isNavOpen }) => (\n                <button\n                  className={styles.navLink}\n                  id={srText ? null : this.id}\n                  onClick={e => this.onExpand(e, context.onToggle)}\n                  aria-expanded={expandedState}\n                  tabIndex={isNavOpen ? null : -1}\n                  {...buttonProps}\n                >\n                  {title}\n                  <span className={css(styles.navToggle)}>\n                    <span className={css(styles.navToggleIcon)}>\n                      <AngleRightIcon aria-hidden=\"true\" />\n                    </span>\n                  </span>\n                </button>\n              )}\n            </PageSidebarContext.Consumer>\n            <section className={css(styles.navSubnav)} aria-labelledby={this.id} hidden={expandedState ? null : true}>\n              {srText && (\n                <h2 className={css(a11yStyles.screenReader)} id={this.id}>\n                  {srText}\n                </h2>\n              )}\n              <ul className={css(styles.navList)}>{children}</ul>\n            </section>\n          </li>\n        )}\n      </NavContext.Consumer>\n    );\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
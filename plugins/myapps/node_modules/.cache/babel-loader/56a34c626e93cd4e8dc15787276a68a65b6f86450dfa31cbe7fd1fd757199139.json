{"ast":null,"code":"import _toConsumableArray from \"/data/stackhub-web/plugins/myapps/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _classCallCheck from \"/data/stackhub-web/plugins/myapps/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/data/stackhub-web/plugins/myapps/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/data/stackhub-web/plugins/myapps/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/data/stackhub-web/plugins/myapps/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Select/select';\nimport badgeStyles from '@patternfly/react-styles/css/components/Badge/badge';\nimport formStyles from '@patternfly/react-styles/css/components/FormControl/form-control';\nimport buttonStyles from '@patternfly/react-styles/css/components/Button/button';\nimport { css } from '@patternfly/react-styles';\nimport TimesCircleIcon from '@patternfly/react-icons/dist/esm/icons/times-circle-icon';\nimport CheckCircleIcon from '@patternfly/react-icons/dist/esm/icons/check-circle-icon';\nimport ExclamationTriangleIcon from '@patternfly/react-icons/dist/esm/icons/exclamation-triangle-icon';\nimport ExclamationCircleIcon from '@patternfly/react-icons/dist/esm/icons/exclamation-circle-icon';\nimport { SelectMenu } from './SelectMenu';\nimport { SelectOption } from './SelectOption';\nimport { SelectGroup } from './SelectGroup';\nimport { SelectToggle } from './SelectToggle';\nimport { SelectContext, SelectVariant, SelectPosition, SelectDirection, SelectFooterTabbableItems } from './selectConstants';\nimport { ChipGroup } from '../ChipGroup';\nimport { Chip } from '../Chip';\nimport { Spinner } from '../Spinner';\nimport { keyHandler, getNextIndex, getOUIAProps, getDefaultOUIAId, GenerateId } from '../../helpers';\nimport { KeyTypes } from '../../helpers/constants';\nimport { Divider } from '../Divider';\nimport { Popper } from '../../helpers/Popper/Popper';\nimport { createRenderableFavorites, extendItemsWithFavorite } from '../../helpers/favorites';\nimport { ValidatedOptions } from '../../helpers/constants';\nimport { findTabbableElements } from '../../helpers/util';\n// seed for the aria-labelledby ID\nvar currentId = 0;\nexport var Select = /*#__PURE__*/function (_React$Component) {\n  _inherits(Select, _React$Component);\n  var _super = _createSuper(Select);\n  function Select() {\n    var _this;\n    _classCallCheck(this, Select);\n    _this = _super.apply(this, arguments);\n    _this.parentRef = React.createRef();\n    _this.menuComponentRef = React.createRef();\n    _this.filterRef = React.createRef();\n    _this.clearRef = React.createRef();\n    _this.inputRef = React.createRef();\n    _this.refCollection = [[]];\n    _this.optionContainerRefCollection = [];\n    _this.footerRef = React.createRef();\n    _this.state = {\n      focusFirstOption: false,\n      typeaheadInputValue: null,\n      typeaheadFilteredChildren: React.Children.toArray(_this.props.children),\n      favoritesGroup: [],\n      typeaheadCurrIndex: -1,\n      typeaheadStoredIndex: -1,\n      creatableValue: '',\n      tabbedIntoFavoritesMenu: false,\n      ouiaStateId: getDefaultOUIAId(Select.displayName, _this.props.variant),\n      viewMoreNextIndex: -1\n    };\n    _this.getTypeaheadActiveChild = function (typeaheadCurrIndex) {\n      return _this.refCollection[typeaheadCurrIndex] ? _this.refCollection[typeaheadCurrIndex][0] : null;\n    };\n    _this.componentDidUpdate = function (prevProps, prevState) {\n      if (_this.props.hasInlineFilter) {\n        _this.refCollection[0][0] = _this.filterRef.current;\n      }\n      // Move focus to top of the menu if state.focusFirstOption was updated to true and the menu does not have custom content\n      if (!prevState.focusFirstOption && _this.state.focusFirstOption && !_this.props.customContent) {\n        var firstRef = _this.refCollection.find(function (ref) {\n          return (\n            // If a select option is disabled then ref[0] will be undefined, so we want to return\n            // the first ref that both a) is not null and b) is not disabled.\n            ref !== null && ref[0]\n          );\n        });\n        if (firstRef && firstRef[0]) {\n          firstRef[0].focus();\n        }\n      } else if (\n      // if viewMoreNextIndex is not -1, view more was clicked, set focus on first newly loaded item\n      _this.state.viewMoreNextIndex !== -1 && _this.refCollection.length > _this.state.viewMoreNextIndex && _this.props.loadingVariant !== 'spinner' && _this.refCollection[_this.state.viewMoreNextIndex][0] && _this.props.variant !== 'typeahead' &&\n      // do not hard focus newly added items for typeahead variants\n      _this.props.variant !== 'typeaheadmulti') {\n        _this.refCollection[_this.state.viewMoreNextIndex][0].focus();\n        _this.setState({\n          viewMoreNextIndex: -1\n        });\n      }\n      var checkUpdatedChildren = function checkUpdatedChildren(prevChildren, currChildren) {\n        return Array.from(prevChildren).some(function (prevChild, index) {\n          var prevChildProps = prevChild.props;\n          var currChild = currChildren[index];\n          var currChildProps = currChild.props;\n          if (prevChildProps && currChildProps) {\n            return prevChildProps.value !== currChildProps.value || prevChildProps.label !== currChildProps.label || prevChildProps.isDisabled !== currChildProps.isDisabled || prevChildProps.isPlaceholder !== currChildProps.isPlaceholder;\n          } else {\n            return prevChild !== currChild;\n          }\n        });\n      };\n      var hasUpdatedChildren = prevProps.children.length !== _this.props.children.length || checkUpdatedChildren(prevProps.children, _this.props.children) || _this.props.isGrouped && Array.from(prevProps.children).some(function (prevChild, index) {\n        return prevChild.type === SelectGroup && prevChild.props.children && _this.props.children[index].props.children && (prevChild.props.children.length !== _this.props.children[index].props.children.length || checkUpdatedChildren(prevChild.props.children, _this.props.children[index].props.children));\n      });\n      if (hasUpdatedChildren) {\n        _this.updateTypeAheadFilteredChildren(prevState.typeaheadInputValue || '', null);\n      }\n      // for menus with favorites,\n      // if the number of favorites or typeahead filtered children has changed, the generated\n      // list of favorites needs to be updated\n      if (_this.props.onFavorite && (_this.props.favorites.length !== prevProps.favorites.length || _this.state.typeaheadFilteredChildren !== prevState.typeaheadFilteredChildren)) {\n        var tempRenderableChildren = _this.props.variant === 'typeahead' || _this.props.variant === 'typeaheadmulti' ? _this.state.typeaheadFilteredChildren : _this.props.children;\n        var renderableFavorites = createRenderableFavorites(tempRenderableChildren, _this.props.isGrouped, _this.props.favorites);\n        var favoritesGroup = renderableFavorites.length ? [React.createElement(SelectGroup, {\n          key: \"favorites\",\n          label: _this.props.favoritesLabel\n        }, renderableFavorites), React.createElement(Divider, {\n          key: \"favorites-group-divider\"\n        })] : [];\n        _this.setState({\n          favoritesGroup: favoritesGroup\n        });\n      }\n    };\n    _this.onEnter = function () {\n      _this.setState({\n        focusFirstOption: true\n      });\n    };\n    _this.onToggle = function (isExpanded, e) {\n      var _this$props = _this.props,\n        isInputValuePersisted = _this$props.isInputValuePersisted,\n        onSelect = _this$props.onSelect,\n        onToggle = _this$props.onToggle,\n        hasInlineFilter = _this$props.hasInlineFilter;\n      if (!isExpanded && isInputValuePersisted && onSelect) {\n        onSelect(undefined, _this.inputRef.current ? _this.inputRef.current.value : '');\n      }\n      if (isExpanded && hasInlineFilter) {\n        _this.setState({\n          focusFirstOption: true\n        });\n      }\n      onToggle(isExpanded, e);\n    };\n    _this.onClose = function () {\n      var isInputFilterPersisted = _this.props.isInputFilterPersisted;\n      _this.setState(Object.assign(Object.assign({\n        focusFirstOption: false,\n        typeaheadInputValue: null\n      }, !isInputFilterPersisted && {\n        typeaheadFilteredChildren: React.Children.toArray(_this.props.children)\n      }), {\n        typeaheadCurrIndex: -1,\n        tabbedIntoFavoritesMenu: false,\n        viewMoreNextIndex: -1\n      }));\n    };\n    _this.onChange = function (e) {\n      if (e.target.value.toString() !== '' && !_this.props.isOpen) {\n        _this.onToggle(true, e);\n      }\n      if (_this.props.onTypeaheadInputChanged) {\n        _this.props.onTypeaheadInputChanged(e.target.value.toString());\n      }\n      _this.setState({\n        typeaheadCurrIndex: -1,\n        typeaheadInputValue: e.target.value,\n        creatableValue: e.target.value\n      });\n      _this.updateTypeAheadFilteredChildren(e.target.value.toString(), e);\n      _this.refCollection = [[]];\n    };\n    _this.updateTypeAheadFilteredChildren = function (typeaheadInputValue, e) {\n      var typeaheadFilteredChildren;\n      var _this$props2 = _this.props,\n        onFilter = _this$props2.onFilter,\n        isCreatable = _this$props2.isCreatable,\n        isCreateOptionOnTop = _this$props2.isCreateOptionOnTop,\n        onCreateOption = _this$props2.onCreateOption,\n        createText = _this$props2.createText,\n        noResultsFoundText = _this$props2.noResultsFoundText,\n        children = _this$props2.children,\n        isGrouped = _this$props2.isGrouped,\n        isCreateSelectOptionObject = _this$props2.isCreateSelectOptionObject,\n        loadingVariant = _this$props2.loadingVariant;\n      if (onFilter) {\n        /* The updateTypeAheadFilteredChildren callback is not only called on input changes but also when the children change.\n         * In this case the e is null but we can get the typeaheadInputValue from the state.\n         */\n        typeaheadFilteredChildren = onFilter(e, e ? e.target.value : typeaheadInputValue) || children;\n      } else {\n        var input;\n        try {\n          input = new RegExp(typeaheadInputValue.toString(), 'i');\n        } catch (err) {\n          input = new RegExp(typeaheadInputValue.toString().replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'), 'i');\n        }\n        var childrenArray = React.Children.toArray(children);\n        if (isGrouped) {\n          var childFilter = function childFilter(child) {\n            return child.props.value && child.props.value.toString && _this.getDisplay(child.props.value.toString(), 'text').search(input) === 0;\n          };\n          typeaheadFilteredChildren = typeaheadInputValue.toString() !== '' ? React.Children.map(children, function (group) {\n            if (React.isValidElement(group) && group.type === SelectGroup) {\n              var filteredGroupChildren = React.Children.toArray(group.props.children).filter(childFilter);\n              if (filteredGroupChildren.length > 0) {\n                return React.cloneElement(group, {\n                  titleId: group.props.label && group.props.label.replace(/\\W/g, '-'),\n                  children: filteredGroupChildren\n                });\n              }\n            } else {\n              return React.Children.toArray(group).filter(childFilter);\n            }\n          }) : childrenArray;\n        } else {\n          typeaheadFilteredChildren = typeaheadInputValue.toString() !== '' ? childrenArray.filter(function (child) {\n            var valueToCheck = child.props.value;\n            // Dividers don't have value and should not be filtered\n            if (!valueToCheck) {\n              return true;\n            }\n            var isSelectOptionObject = typeof valueToCheck !== 'string' && valueToCheck.toString && valueToCheck.compareTo;\n            // View more option should be returned as not a match\n            if (loadingVariant !== 'spinner' && (loadingVariant === null || loadingVariant === void 0 ? void 0 : loadingVariant.text) === valueToCheck) {\n              return true;\n            }\n            // spinner should be returned as not a match\n            if (loadingVariant === 'spinner' && valueToCheck === 'loading') {\n              return true;\n            }\n            if (isSelectOptionObject) {\n              return valueToCheck.compareTo(typeaheadInputValue);\n            } else {\n              return _this.getDisplay(child.props.value.toString(), 'text').search(input) === 0;\n            }\n          }) : childrenArray;\n        }\n      }\n      if (!typeaheadFilteredChildren) {\n        typeaheadFilteredChildren = [];\n      }\n      if (typeaheadFilteredChildren.length === 0) {\n        !isCreatable && typeaheadFilteredChildren.push(React.createElement(SelectOption, {\n          isDisabled: true,\n          key: \"no-results\",\n          value: noResultsFoundText,\n          isNoResultsOption: true\n        }));\n      }\n      if (isCreatable && typeaheadInputValue !== '') {\n        var newValue = typeaheadInputValue;\n        if (!typeaheadFilteredChildren.find(function (i) {\n          return i.props.value && i.props.value.toString().toLowerCase() === newValue.toString().toLowerCase();\n        })) {\n          var newOptionValue = isCreateSelectOptionObject ? {\n            toString: function toString() {\n              return newValue;\n            },\n            compareTo: function compareTo(value) {\n              return _this.toString().toLowerCase().includes(value.toString().toLowerCase());\n            }\n          } : newValue;\n          var createSelectOption = React.createElement(SelectOption, {\n            key: \"create \".concat(newValue),\n            value: newOptionValue,\n            onClick: function onClick() {\n              return onCreateOption && onCreateOption(newValue);\n            }\n          }, createText, \" \\\"\", newValue, \"\\\"\");\n          if (isCreateOptionOnTop) {\n            typeaheadFilteredChildren.unshift(createSelectOption);\n          } else {\n            typeaheadFilteredChildren.push(createSelectOption);\n          }\n        }\n      }\n      _this.setState({\n        typeaheadFilteredChildren: typeaheadFilteredChildren\n      });\n    };\n    _this.onClick = function (e) {\n      if (!_this.props.isOpen) {\n        _this.onToggle(true, e);\n      }\n    };\n    _this.clearSelection = function (_e) {\n      _this.setState({\n        typeaheadInputValue: null,\n        typeaheadFilteredChildren: React.Children.toArray(_this.props.children),\n        typeaheadCurrIndex: -1\n      });\n    };\n    _this.sendRef = function (optionRef, favoriteRef, optionContainerRef, index) {\n      _this.refCollection[index] = [optionRef, favoriteRef];\n      _this.optionContainerRefCollection[index] = optionContainerRef;\n    };\n    _this.handleMenuKeys = function (index, innerIndex, position) {\n      keyHandler(index, innerIndex, position, _this.refCollection, _this.refCollection);\n      if (_this.props.variant === SelectVariant.typeahead || _this.props.variant === SelectVariant.typeaheadMulti) {\n        if (position !== 'tab') {\n          _this.handleTypeaheadKeys(position);\n        }\n      }\n    };\n    _this.moveFocus = function (nextIndex) {\n      var updateCurrentIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var _this$props3 = _this.props,\n        isCreatable = _this$props3.isCreatable,\n        createText = _this$props3.createText;\n      var hasDescriptionElm = Boolean(_this.refCollection[nextIndex][0] && _this.refCollection[nextIndex][0].classList.contains('pf-m-description'));\n      var isLoad = Boolean(_this.refCollection[nextIndex][0] && _this.refCollection[nextIndex][0].classList.contains('pf-m-load'));\n      var optionTextElm = hasDescriptionElm ? _this.refCollection[nextIndex][0].firstElementChild : _this.refCollection[nextIndex][0];\n      var typeaheadInputValue = '';\n      if (isCreatable && optionTextElm.textContent.includes(createText)) {\n        typeaheadInputValue = _this.state.creatableValue;\n      } else if (optionTextElm && !isLoad) {\n        // !isLoad prevents the view more button text from appearing the typeahead input\n        typeaheadInputValue = optionTextElm.textContent;\n      }\n      _this.setState(function (prevState) {\n        return {\n          typeaheadCurrIndex: updateCurrentIndex ? nextIndex : prevState.typeaheadCurrIndex,\n          typeaheadStoredIndex: nextIndex,\n          typeaheadInputValue: typeaheadInputValue\n        };\n      });\n    };\n    _this.switchFocusToFavoriteMenu = function () {\n      var _this$state = _this.state,\n        typeaheadCurrIndex = _this$state.typeaheadCurrIndex,\n        typeaheadStoredIndex = _this$state.typeaheadStoredIndex;\n      var indexForFocus = 0;\n      if (typeaheadCurrIndex !== -1) {\n        indexForFocus = typeaheadCurrIndex;\n      } else if (typeaheadStoredIndex !== -1) {\n        indexForFocus = typeaheadStoredIndex;\n      }\n      if (_this.refCollection[indexForFocus] !== null && _this.refCollection[indexForFocus][0] !== null) {\n        _this.refCollection[indexForFocus][0].focus();\n      } else {\n        _this.clearRef.current.focus();\n      }\n      _this.setState({\n        tabbedIntoFavoritesMenu: true,\n        typeaheadCurrIndex: -1\n      });\n    };\n    _this.moveFocusToLastMenuItem = function () {\n      var refCollectionLen = _this.refCollection.length;\n      if (refCollectionLen > 0 && _this.refCollection[refCollectionLen - 1] !== null && _this.refCollection[refCollectionLen - 1][0] !== null) {\n        _this.refCollection[refCollectionLen - 1][0].focus();\n      }\n    };\n    _this.handleTypeaheadKeys = function (position) {\n      var shiftKey = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var _this$props4 = _this.props,\n        isOpen = _this$props4.isOpen,\n        onFavorite = _this$props4.onFavorite,\n        isCreatable = _this$props4.isCreatable;\n      var _this$state2 = _this.state,\n        typeaheadCurrIndex = _this$state2.typeaheadCurrIndex,\n        tabbedIntoFavoritesMenu = _this$state2.tabbedIntoFavoritesMenu;\n      var typeaheadActiveChild = _this.getTypeaheadActiveChild(typeaheadCurrIndex);\n      if (isOpen) {\n        if (position === 'enter') {\n          if ((typeaheadCurrIndex !== -1 || isCreatable && _this.refCollection.length === 1) && (\n          // do not allow selection without moving to an initial option unless it is a single create option\n          typeaheadActiveChild || _this.refCollection[0] && _this.refCollection[0][0])) {\n            if (typeaheadActiveChild) {\n              if (!typeaheadActiveChild.classList.contains('pf-m-load')) {\n                var hasDescriptionElm = typeaheadActiveChild.childElementCount > 1;\n                var typeaheadActiveChildText = hasDescriptionElm ? typeaheadActiveChild.firstChild.textContent : typeaheadActiveChild.textContent;\n                _this.setState({\n                  typeaheadInputValue: typeaheadActiveChildText\n                });\n              }\n            } else if (_this.refCollection[0] && _this.refCollection[0][0]) {\n              _this.setState({\n                typeaheadInputValue: _this.refCollection[0][0].textContent\n              });\n            }\n            if (typeaheadActiveChild) {\n              typeaheadActiveChild.click();\n            } else {\n              _this.refCollection[0][0].click();\n            }\n          }\n        } else if (position === 'tab') {\n          if (onFavorite) {\n            // if the input has focus, tab to the first item or the last item that was previously focused.\n            if (_this.inputRef.current === document.activeElement) {\n              // If shift is also clicked and there is a footer, tab to the last item in tabbable footer\n              if (_this.props.footer && shiftKey) {\n                var tabbableItems = findTabbableElements(_this.footerRef, SelectFooterTabbableItems);\n                if (tabbableItems.length > 0) {\n                  if (tabbableItems[tabbableItems.length - 1]) {\n                    tabbableItems[tabbableItems.length - 1].focus();\n                  }\n                }\n              } else {\n                _this.switchFocusToFavoriteMenu();\n              }\n            } else {\n              // focus is on menu or footer\n              if (_this.props.footer) {\n                var tabbedIntoMenu = false;\n                var _tabbableItems = findTabbableElements(_this.footerRef, SelectFooterTabbableItems);\n                if (_tabbableItems.length > 0) {\n                  // if current element is not in footer, tab to first tabbable element in footer,\n                  // if shift was clicked, tab to input since focus is on menu\n                  var currentElementIndex = _tabbableItems.findIndex(function (item) {\n                    return item === document.activeElement;\n                  });\n                  if (currentElementIndex === -1) {\n                    if (shiftKey) {\n                      // currently in menu, shift back to input\n                      _this.inputRef.current.focus();\n                    } else {\n                      // currently in menu, tab to first tabbable item in footer\n                      _tabbableItems[0].focus();\n                    }\n                  } else {\n                    // already in footer\n                    if (shiftKey) {\n                      // shift to previous item\n                      if (currentElementIndex === 0) {\n                        // on first footer item, shift back to menu\n                        _this.switchFocusToFavoriteMenu();\n                        tabbedIntoMenu = true;\n                      } else {\n                        // shift to previous footer item\n                        _tabbableItems[currentElementIndex - 1].focus();\n                      }\n                    } else {\n                      // tab to next tabbable item in footer or to input.\n                      if (_tabbableItems[currentElementIndex + 1]) {\n                        _tabbableItems[currentElementIndex + 1].focus();\n                      } else {\n                        _this.inputRef.current.focus();\n                      }\n                    }\n                  }\n                } else {\n                  // no tabbable items in footer, tab to input\n                  _this.inputRef.current.focus();\n                  tabbedIntoMenu = false;\n                }\n                _this.setState({\n                  tabbedIntoFavoritesMenu: tabbedIntoMenu\n                });\n              } else {\n                _this.inputRef.current.focus();\n                _this.setState({\n                  tabbedIntoFavoritesMenu: false\n                });\n              }\n            }\n          } else {\n            // Close if there is no footer\n            if (!_this.props.footer) {\n              _this.onToggle(false, null);\n              _this.onClose();\n            } else {\n              // has footer\n              var _tabbableItems2 = findTabbableElements(_this.footerRef, SelectFooterTabbableItems);\n              var _currentElementIndex = _tabbableItems2.findIndex(function (item) {\n                return item === document.activeElement;\n              });\n              if (_this.inputRef.current === document.activeElement) {\n                if (shiftKey) {\n                  // close toggle if shift key and tab on input\n                  _this.onToggle(false, null);\n                  _this.onClose();\n                } else {\n                  // tab to first tabbable item in footer\n                  if (_tabbableItems2[0]) {\n                    _tabbableItems2[0].focus();\n                  } else {\n                    _this.onToggle(false, null);\n                    _this.onClose();\n                  }\n                }\n              } else {\n                // focus is in footer\n                if (shiftKey) {\n                  if (_currentElementIndex === 0) {\n                    // shift tab back to input\n                    _this.inputRef.current.focus();\n                  } else {\n                    // shift to previous footer item\n                    _tabbableItems2[_currentElementIndex - 1].focus();\n                  }\n                } else {\n                  // tab to next footer item or close tab if last item\n                  if (_tabbableItems2[_currentElementIndex + 1]) {\n                    _tabbableItems2[_currentElementIndex + 1].focus();\n                  } else {\n                    // no next item, close toggle\n                    _this.onToggle(false, null);\n                    _this.inputRef.current.focus();\n                    _this.onClose();\n                  }\n                }\n              }\n            }\n          }\n        } else if (!tabbedIntoFavoritesMenu) {\n          if (_this.refCollection[0][0] === null) {\n            return;\n          }\n          var nextIndex;\n          if (typeaheadCurrIndex === -1 && position === 'down') {\n            nextIndex = 0;\n          } else if (typeaheadCurrIndex === -1 && position === 'up') {\n            nextIndex = _this.refCollection.length - 1;\n          } else if (position !== 'left' && position !== 'right') {\n            nextIndex = getNextIndex(typeaheadCurrIndex, position, _this.refCollection);\n          } else {\n            nextIndex = typeaheadCurrIndex;\n          }\n          if (_this.refCollection[nextIndex] === null) {\n            return;\n          }\n          _this.moveFocus(nextIndex);\n        } else {\n          var _nextIndex = _this.refCollection.findIndex(function (ref) {\n            return ref !== undefined && (ref[0] === document.activeElement || ref[1] === document.activeElement);\n          });\n          _this.moveFocus(_nextIndex);\n        }\n      }\n    };\n    _this.onClickTypeaheadToggleButton = function () {\n      if (_this.inputRef && _this.inputRef.current) {\n        _this.inputRef.current.focus();\n      }\n    };\n    _this.getDisplay = function (value) {\n      var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'node';\n      if (!value) {\n        return;\n      }\n      var item = _this.props.isGrouped ? React.Children.toArray(_this.props.children).reduce(function (acc, curr) {\n        return [].concat(_toConsumableArray(acc), _toConsumableArray(React.Children.toArray(curr.props.children)));\n      }, []).find(function (child) {\n        return child.props.value.toString() === value.toString();\n      }) : React.Children.toArray(_this.props.children).find(function (child) {\n        return child.props.value && child.props.value.toString() === value.toString();\n      });\n      if (item) {\n        if (item && item.props.children) {\n          if (type === 'node') {\n            return item.props.children;\n          }\n          return _this.findText(item);\n        }\n        return item.props.value.toString();\n      }\n      return value.toString();\n    };\n    _this.findText = function (item) {\n      if (typeof item === 'string') {\n        return item;\n      } else if (!React.isValidElement(item)) {\n        return '';\n      } else {\n        var multi = [];\n        React.Children.toArray(item.props.children).forEach(function (child) {\n          return multi.push(_this.findText(child));\n        });\n        return multi.join('');\n      }\n    };\n    _this.generateSelectedBadge = function () {\n      var _this$props5 = _this.props,\n        customBadgeText = _this$props5.customBadgeText,\n        selections = _this$props5.selections;\n      if (customBadgeText !== null) {\n        return customBadgeText;\n      }\n      if (Array.isArray(selections) && selections.length > 0) {\n        return selections.length;\n      }\n      return null;\n    };\n    _this.setVieMoreNextIndex = function () {\n      _this.setState({\n        viewMoreNextIndex: _this.refCollection.length - 1\n      });\n    };\n    _this.isLastOptionBeforeFooter = function (index) {\n      return _this.props.footer && index === _this.refCollection.length - 1 ? true : false;\n    };\n    return _this;\n  }\n  _createClass(Select, [{\n    key: \"extendTypeaheadChildren\",\n    value: function extendTypeaheadChildren(typeaheadCurrIndex, favoritesGroup) {\n      var _this2 = this;\n      var _this$props6 = this.props,\n        isGrouped = _this$props6.isGrouped,\n        onFavorite = _this$props6.onFavorite,\n        createText = _this$props6.createText;\n      var typeaheadChildren = favoritesGroup ? favoritesGroup.concat(this.state.typeaheadFilteredChildren) : this.state.typeaheadFilteredChildren;\n      var activeElement = this.optionContainerRefCollection[typeaheadCurrIndex];\n      var typeaheadActiveChild = this.getTypeaheadActiveChild(typeaheadCurrIndex);\n      if (typeaheadActiveChild && typeaheadActiveChild.classList.contains('pf-m-description')) {\n        typeaheadActiveChild = typeaheadActiveChild.firstElementChild;\n      }\n      this.refCollection = [[]];\n      this.optionContainerRefCollection = [];\n      if (isGrouped) {\n        return React.Children.map(typeaheadChildren, function (group) {\n          if (group.type === Divider) {\n            return group;\n          } else if (group.type === SelectGroup && onFavorite) {\n            return React.cloneElement(group, {\n              titleId: group.props.label && group.props.label.replace(/\\W/g, '-'),\n              children: React.Children.map(group.props.children, function (child) {\n                return child.type === Divider ? child : React.cloneElement(child, {\n                  isFocused: activeElement && (activeElement.id === child.props.id || _this2.props.isCreatable && typeaheadActiveChild.textContent === \"\".concat(createText, \" \\\"\").concat(group.props.value, \"\\\"\"))\n                });\n              })\n            });\n          } else if (group.type === SelectGroup) {\n            return React.cloneElement(group, {\n              titleId: group.props.label && group.props.label.replace(/\\W/g, '-'),\n              children: React.Children.map(group.props.children, function (child) {\n                return child.type === Divider ? child : React.cloneElement(child, {\n                  isFocused: typeaheadActiveChild && (typeaheadActiveChild.textContent === child.props.value.toString() || _this2.props.isCreatable && typeaheadActiveChild.textContent === \"\".concat(createText, \" \\\"\").concat(child.props.value, \"\\\"\"))\n                });\n              })\n            });\n          } else {\n            // group has been filtered down to SelectOption\n            return React.cloneElement(group, {\n              isFocused: typeaheadActiveChild && (typeaheadActiveChild.textContent === group.props.value.toString() || _this2.props.isCreatable && typeaheadActiveChild.textContent === \"\".concat(createText, \" \\\"\").concat(group.props.value, \"\\\"\"))\n            });\n          }\n        });\n      }\n      return typeaheadChildren.map(function (child, index) {\n        var childElement = child;\n        return childElement.type.displayName === 'Divider' ? child : React.cloneElement(child, {\n          isFocused: typeaheadActiveChild ? typeaheadActiveChild.textContent === child.props.value.toString() || _this2.props.isCreatable && typeaheadActiveChild.textContent === \"\".concat(createText, \" \\\"\").concat(child.props.value, \"\\\"\") : index === typeaheadCurrIndex // fallback for view more + typeahead use cases, when the new expanded list is loaded and refCollection hasn't be updated yet\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n      var _a = this.props,\n        children = _a.children,\n        chipGroupProps = _a.chipGroupProps,\n        chipGroupComponent = _a.chipGroupComponent,\n        className = _a.className,\n        customContent = _a.customContent,\n        variant = _a.variant,\n        direction = _a.direction,\n        onSelect = _a.onSelect,\n        onClear = _a.onClear,\n        onBlur = _a.onBlur,\n        toggleId = _a.toggleId,\n        toggleRef = _a.toggleRef,\n        isOpen = _a.isOpen,\n        isGrouped = _a.isGrouped,\n        isPlain = _a.isPlain,\n        isDisabled = _a.isDisabled,\n        hasPlaceholderStyle = _a.hasPlaceholderStyle,\n        validated = _a.validated,\n        selectionsProp = _a.selections,\n        typeAheadAriaLabel = _a.typeAheadAriaLabel,\n        typeAheadAriaDescribedby = _a.typeAheadAriaDescribedby,\n        clearSelectionsAriaLabel = _a.clearSelectionsAriaLabel,\n        toggleAriaLabel = _a.toggleAriaLabel,\n        removeSelectionAriaLabel = _a.removeSelectionAriaLabel,\n        ariaLabel = _a['aria-label'],\n        ariaLabelledBy = _a['aria-labelledby'],\n        ariaDescribedby = _a['aria-describedby'],\n        ariaInvalid = _a['aria-invalid'],\n        placeholderText = _a.placeholderText,\n        width = _a.width,\n        maxHeight = _a.maxHeight,\n        toggleIcon = _a.toggleIcon,\n        toggleIndicator = _a.toggleIndicator,\n        ouiaId = _a.ouiaId,\n        ouiaSafe = _a.ouiaSafe,\n        hasInlineFilter = _a.hasInlineFilter,\n        isCheckboxSelectionBadgeHidden = _a.isCheckboxSelectionBadgeHidden,\n        inlineFilterPlaceholderText = _a.inlineFilterPlaceholderText,\n        onFilter = _a.onFilter,\n        onTypeaheadInputChanged = _a.onTypeaheadInputChanged,\n        onCreateOption = _a.onCreateOption,\n        isCreatable = _a.isCreatable,\n        onToggle = _a.onToggle,\n        createText = _a.createText,\n        noResultsFoundText = _a.noResultsFoundText,\n        customBadgeText = _a.customBadgeText,\n        inputIdPrefix = _a.inputIdPrefix,\n        inputAutoComplete = _a.inputAutoComplete,\n        isInputValuePersisted = _a.isInputValuePersisted,\n        isInputFilterPersisted = _a.isInputFilterPersisted,\n        menuAppendTo = _a.menuAppendTo,\n        favorites = _a.favorites,\n        onFavorite = _a.onFavorite,\n        favoritesLabel = _a.favoritesLabel,\n        footer = _a.footer,\n        loadingVariant = _a.loadingVariant,\n        isCreateSelectOptionObject = _a.isCreateSelectOptionObject,\n        isCreateOptionOnTop = _a.isCreateOptionOnTop,\n        shouldResetOnSelect = _a.shouldResetOnSelect,\n        isFlipEnabled = _a.isFlipEnabled,\n        removeFindDomNode = _a.removeFindDomNode,\n        zIndex = _a.zIndex,\n        props = __rest(_a, [\"children\", \"chipGroupProps\", \"chipGroupComponent\", \"className\", \"customContent\", \"variant\", \"direction\", \"onSelect\", \"onClear\", \"onBlur\", \"toggleId\", \"toggleRef\", \"isOpen\", \"isGrouped\", \"isPlain\", \"isDisabled\", \"hasPlaceholderStyle\", \"validated\", \"selections\", \"typeAheadAriaLabel\", \"typeAheadAriaDescribedby\", \"clearSelectionsAriaLabel\", \"toggleAriaLabel\", \"removeSelectionAriaLabel\", 'aria-label', 'aria-labelledby', 'aria-describedby', 'aria-invalid', \"placeholderText\", \"width\", \"maxHeight\", \"toggleIcon\", \"toggleIndicator\", \"ouiaId\", \"ouiaSafe\", \"hasInlineFilter\", \"isCheckboxSelectionBadgeHidden\", \"inlineFilterPlaceholderText\", \"onFilter\", \"onTypeaheadInputChanged\", \"onCreateOption\", \"isCreatable\", \"onToggle\", \"createText\", \"noResultsFoundText\", \"customBadgeText\", \"inputIdPrefix\", \"inputAutoComplete\", \"isInputValuePersisted\", \"isInputFilterPersisted\", \"menuAppendTo\", \"favorites\", \"onFavorite\", \"favoritesLabel\", \"footer\", \"loadingVariant\", \"isCreateSelectOptionObject\", \"isCreateOptionOnTop\", \"shouldResetOnSelect\", \"isFlipEnabled\", \"removeFindDomNode\", \"zIndex\"]);\n      var _this$state3 = this.state,\n        openedOnEnter = _this$state3.focusFirstOption,\n        typeaheadCurrIndex = _this$state3.typeaheadCurrIndex,\n        typeaheadInputValue = _this$state3.typeaheadInputValue,\n        typeaheadFilteredChildren = _this$state3.typeaheadFilteredChildren,\n        favoritesGroup = _this$state3.favoritesGroup;\n      var selectToggleId = toggleId || \"pf-select-toggle-id-\".concat(currentId++);\n      var selections = Array.isArray(selectionsProp) ? selectionsProp : [selectionsProp];\n      // Find out if the selected option is a placeholder\n      var selectedOption = React.Children.toArray(children).find(function (option) {\n        return option.props.value === selections[0];\n      });\n      var isSelectedPlaceholder = selectedOption && selectedOption.props.isPlaceholder;\n      var hasAnySelections = Boolean(selections[0] && selections[0] !== '');\n      var typeaheadActiveChild = this.getTypeaheadActiveChild(typeaheadCurrIndex);\n      var childPlaceholderText = null;\n      // If onFavorites is set,  add isFavorite prop to children and add a Favorites group to the SelectMenu\n      var renderableItems = [];\n      if (onFavorite) {\n        // if variant is type-ahead call the extendTypeaheadChildren before adding favorites\n        var tempExtendedChildren = children;\n        if (variant === 'typeahead' || variant === 'typeaheadmulti') {\n          tempExtendedChildren = this.extendTypeaheadChildren(typeaheadCurrIndex, favoritesGroup);\n        } else if (onFavorite) {\n          tempExtendedChildren = favoritesGroup.concat(children);\n        }\n        // mark items that are favorited with isFavorite\n        renderableItems = extendItemsWithFavorite(tempExtendedChildren, isGrouped, favorites);\n      } else {\n        renderableItems = children;\n      }\n      if (!customContent) {\n        if (!hasAnySelections && !placeholderText) {\n          var childPlaceholder = React.Children.toArray(children).filter(function (child) {\n            return child.props.isPlaceholder === true;\n          });\n          childPlaceholderText = childPlaceholder[0] && this.getDisplay(childPlaceholder[0].props.value, 'node') || children[0] && this.getDisplay(children[0].props.value, 'node');\n        }\n      }\n      if (isOpen) {\n        if (renderableItems.find(function (item) {\n          return (item === null || item === void 0 ? void 0 : item.key) === 'loading';\n        }) === undefined) {\n          if (loadingVariant === 'spinner') {\n            renderableItems.push(React.createElement(SelectOption, {\n              isLoading: true,\n              key: \"loading\",\n              value: \"loading\"\n            }, React.createElement(Spinner, {\n              size: \"lg\"\n            })));\n          } else if (loadingVariant === null || loadingVariant === void 0 ? void 0 : loadingVariant.text) {\n            renderableItems.push(React.createElement(SelectOption, {\n              isLoad: true,\n              key: \"loading\",\n              value: loadingVariant.text,\n              setViewMoreNextIndex: this.setVieMoreNextIndex,\n              onClick: loadingVariant === null || loadingVariant === void 0 ? void 0 : loadingVariant.onClick\n            }));\n          }\n        }\n      }\n      var hasOnClear = onClear !== Select.defaultProps.onClear;\n      var clearBtn = React.createElement(\"button\", {\n        className: css(buttonStyles.button, buttonStyles.modifiers.plain, styles.selectToggleClear),\n        onClick: function onClick(e) {\n          _this3.clearSelection(e);\n          onClear(e);\n          e.stopPropagation();\n        },\n        \"aria-label\": clearSelectionsAriaLabel,\n        type: \"button\",\n        disabled: isDisabled,\n        ref: this.clearRef,\n        onKeyDown: function onKeyDown(event) {\n          if (event.key === KeyTypes.Enter) {\n            _this3.clearRef.current.click();\n          }\n        }\n      }, React.createElement(TimesCircleIcon, {\n        \"aria-hidden\": true\n      }));\n      var selectedChips = null;\n      if (variant === SelectVariant.typeaheadMulti) {\n        selectedChips = chipGroupComponent ? chipGroupComponent : React.createElement(ChipGroup, Object.assign({}, chipGroupProps), selections && selections.map(function (item) {\n          return React.createElement(Chip, {\n            key: item,\n            onClick: function onClick(e) {\n              return onSelect(e, item);\n            },\n            closeBtnAriaLabel: removeSelectionAriaLabel\n          }, _this3.getDisplay(item, 'node'));\n        }));\n      }\n      if (hasInlineFilter) {\n        var filterBox = React.createElement(React.Fragment, null, React.createElement(\"div\", {\n          key: \"inline-filter\",\n          className: css(styles.selectMenuSearch)\n        }, React.createElement(\"input\", {\n          key: \"inline-filter-input\",\n          type: \"search\",\n          className: css(formStyles.formControl, formStyles.modifiers.search),\n          onChange: this.onChange,\n          placeholder: inlineFilterPlaceholderText,\n          onKeyDown: function onKeyDown(event) {\n            if (event.key === KeyTypes.ArrowUp) {\n              _this3.handleMenuKeys(0, 0, 'up');\n              event.preventDefault();\n            } else if (event.key === KeyTypes.ArrowDown) {\n              _this3.handleMenuKeys(0, 0, 'down');\n              event.preventDefault();\n            } else if (event.key === KeyTypes.ArrowLeft) {\n              _this3.handleMenuKeys(0, 0, 'left');\n              event.preventDefault();\n            } else if (event.key === KeyTypes.ArrowRight) {\n              _this3.handleMenuKeys(0, 0, 'right');\n              event.preventDefault();\n            } else if (event.key === KeyTypes.Tab && variant !== SelectVariant.checkbox && _this3.props.footer) {\n              // tab to footer or close menu if shift key\n              if (event.shiftKey) {\n                _this3.onToggle(false, event);\n              } else {\n                var tabbableItems = findTabbableElements(_this3.footerRef, SelectFooterTabbableItems);\n                if (tabbableItems.length > 0) {\n                  tabbableItems[0].focus();\n                  event.stopPropagation();\n                  event.preventDefault();\n                } else {\n                  _this3.onToggle(false, event);\n                }\n              }\n            } else if (event.key === KeyTypes.Tab && variant === SelectVariant.checkbox) {\n              // More modal-like experience for checkboxes\n              // Let SelectOption handle this\n              if (event.shiftKey) {\n                _this3.handleMenuKeys(0, 0, 'up');\n              } else {\n                _this3.handleMenuKeys(0, 0, 'down');\n              }\n              event.stopPropagation();\n              event.preventDefault();\n            }\n          },\n          ref: this.filterRef,\n          autoComplete: inputAutoComplete\n        })), React.createElement(Divider, {\n          key: \"inline-filter-divider\"\n        }));\n        renderableItems = [filterBox].concat(_toConsumableArray(typeaheadFilteredChildren)).map(function (option, index) {\n          return React.cloneElement(option, {\n            key: index\n          });\n        });\n      }\n      var variantProps;\n      var variantChildren;\n      if (customContent) {\n        variantProps = {\n          selected: selections,\n          openedOnEnter: openedOnEnter,\n          isCustomContent: true\n        };\n        variantChildren = customContent;\n      } else {\n        switch (variant) {\n          case 'single':\n            variantProps = {\n              selected: selections[0],\n              hasInlineFilter: hasInlineFilter,\n              openedOnEnter: openedOnEnter\n            };\n            variantChildren = renderableItems;\n            break;\n          case 'checkbox':\n            variantProps = {\n              checked: selections,\n              isGrouped: isGrouped,\n              hasInlineFilter: hasInlineFilter,\n              openedOnEnter: openedOnEnter\n            };\n            variantChildren = renderableItems;\n            break;\n          case 'typeahead':\n            variantProps = {\n              selected: selections[0],\n              openedOnEnter: openedOnEnter\n            };\n            variantChildren = onFavorite ? renderableItems : this.extendTypeaheadChildren(typeaheadCurrIndex);\n            if (variantChildren.length === 0) {\n              variantChildren.push(React.createElement(SelectOption, {\n                isDisabled: true,\n                key: 0,\n                value: noResultsFoundText,\n                isNoResultsOption: true\n              }));\n            }\n            break;\n          case 'typeaheadmulti':\n            variantProps = {\n              selected: selections,\n              openedOnEnter: openedOnEnter\n            };\n            variantChildren = onFavorite ? renderableItems : this.extendTypeaheadChildren(typeaheadCurrIndex);\n            if (variantChildren.length === 0) {\n              variantChildren.push(React.createElement(SelectOption, {\n                isDisabled: true,\n                key: 0,\n                value: noResultsFoundText,\n                isNoResultsOption: true\n              }));\n            }\n            break;\n        }\n      }\n      var isStatic = isFlipEnabled && menuAppendTo !== 'inline';\n      var innerMenu = React.createElement(SelectMenu, Object.assign({\n        className: css(isStatic && styles.modifiers.static)\n      }, props, {\n        isGrouped: isGrouped,\n        selected: selections\n      }, variantProps, {\n        openedOnEnter: openedOnEnter,\n        \"aria-label\": ariaLabel,\n        \"aria-labelledby\": ariaLabelledBy,\n        sendRef: this.sendRef,\n        keyHandler: this.handleMenuKeys,\n        maxHeight: maxHeight,\n        ref: this.menuComponentRef,\n        footer: footer,\n        footerRef: this.footerRef,\n        isLastOptionBeforeFooter: this.isLastOptionBeforeFooter\n      }), variantChildren);\n      var menuContainer = footer ? React.createElement(\"div\", {\n        className: css(styles.selectMenu)\n      }, \" \", innerMenu, \" \") : innerMenu;\n      var popperContainer = React.createElement(\"div\", Object.assign({\n        className: css(styles.select, isOpen && styles.modifiers.expanded, validated === ValidatedOptions.success && styles.modifiers.success, validated === ValidatedOptions.warning && styles.modifiers.warning, validated === ValidatedOptions.error && styles.modifiers.invalid, direction === SelectDirection.up && styles.modifiers.top, className)\n      }, width && {\n        style: {\n          width: width\n        }\n      }, validated !== ValidatedOptions.default && {\n        'aria-invalid': ariaInvalid\n      }), isOpen && menuContainer);\n      var mainContainer = React.createElement(\"div\", Object.assign({\n        className: css(styles.select, isOpen && styles.modifiers.expanded, validated === ValidatedOptions.success && styles.modifiers.success, validated === ValidatedOptions.warning && styles.modifiers.warning, validated === ValidatedOptions.error && styles.modifiers.invalid, direction === SelectDirection.up && styles.modifiers.top, className),\n        ref: this.parentRef\n      }, getOUIAProps(Select.displayName, ouiaId !== undefined ? ouiaId : this.state.ouiaStateId, ouiaSafe), width && {\n        style: {\n          width: width\n        }\n      }, validated !== ValidatedOptions.default && {\n        'aria-invalid': ariaInvalid\n      }), React.createElement(SelectToggle, Object.assign({\n        id: selectToggleId,\n        parentRef: this.parentRef,\n        menuRef: this.menuComponentRef,\n        ref: toggleRef\n      }, footer && {\n        footerRef: this.footerRef\n      }, {\n        isOpen: isOpen,\n        isPlain: isPlain,\n        hasPlaceholderStyle: hasPlaceholderStyle && (!selections.length || selections[0] === null || isSelectedPlaceholder),\n        onToggle: this.onToggle,\n        onEnter: this.onEnter,\n        onClose: this.onClose,\n        onBlur: onBlur,\n        variant: variant,\n        toggleIndicator: toggleIndicator,\n        \"aria-labelledby\": \"\".concat(ariaLabelledBy || '', \" \").concat(selectToggleId),\n        \"aria-label\": toggleAriaLabel\n      }, ariaDescribedby && {\n        'aria-describedby': ariaDescribedby\n      }, {\n        handleTypeaheadKeys: this.handleTypeaheadKeys,\n        moveFocusToLastMenuItem: this.moveFocusToLastMenuItem,\n        isDisabled: isDisabled,\n        hasClearButton: hasOnClear,\n        hasFooter: footer !== undefined,\n        onClickTypeaheadToggleButton: this.onClickTypeaheadToggleButton\n      }), customContent && React.createElement(\"div\", {\n        className: css(styles.selectToggleWrapper)\n      }, toggleIcon && React.createElement(\"span\", {\n        className: css(styles.selectToggleIcon)\n      }, toggleIcon), React.createElement(\"span\", {\n        className: css(styles.selectToggleText)\n      }, placeholderText)), variant === SelectVariant.single && !customContent && React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: css(styles.selectToggleWrapper)\n      }, toggleIcon && React.createElement(\"span\", {\n        className: css(styles.selectToggleIcon)\n      }, toggleIcon), React.createElement(\"span\", {\n        className: css(styles.selectToggleText)\n      }, this.getDisplay(selections[0], 'node') || placeholderText || childPlaceholderText)), hasOnClear && hasAnySelections && clearBtn), variant === SelectVariant.checkbox && !customContent && React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: css(styles.selectToggleWrapper)\n      }, toggleIcon && React.createElement(\"span\", {\n        className: css(styles.selectToggleIcon)\n      }, toggleIcon), React.createElement(\"span\", {\n        className: css(styles.selectToggleText)\n      }, placeholderText), !isCheckboxSelectionBadgeHidden && hasAnySelections && React.createElement(\"div\", {\n        className: css(styles.selectToggleBadge)\n      }, React.createElement(\"span\", {\n        className: css(badgeStyles.badge, badgeStyles.modifiers.read)\n      }, this.generateSelectedBadge()))), hasOnClear && hasAnySelections && clearBtn), variant === SelectVariant.typeahead && !customContent && React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: css(styles.selectToggleWrapper)\n      }, toggleIcon && React.createElement(\"span\", {\n        className: css(styles.selectToggleIcon)\n      }, toggleIcon), React.createElement(\"input\", Object.assign({\n        className: css(formStyles.formControl, styles.selectToggleTypeahead),\n        \"aria-activedescendant\": typeaheadActiveChild && typeaheadActiveChild.id,\n        id: \"\".concat(selectToggleId, \"-select-typeahead\"),\n        \"aria-label\": typeAheadAriaLabel\n      }, typeAheadAriaDescribedby && {\n        'aria-describedby': typeAheadAriaDescribedby\n      }, {\n        placeholder: placeholderText,\n        value: typeaheadInputValue !== null ? typeaheadInputValue : this.getDisplay(selections[0], 'text') || '',\n        type: \"text\",\n        onClick: this.onClick,\n        onChange: this.onChange,\n        autoComplete: inputAutoComplete,\n        disabled: isDisabled,\n        ref: this.inputRef\n      }))), hasOnClear && (selections[0] || typeaheadInputValue) && clearBtn), variant === SelectVariant.typeaheadMulti && !customContent && React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: css(styles.selectToggleWrapper)\n      }, toggleIcon && React.createElement(\"span\", {\n        className: css(styles.selectToggleIcon)\n      }, toggleIcon), selections && Array.isArray(selections) && selections.length > 0 && selectedChips, React.createElement(\"input\", Object.assign({\n        className: css(formStyles.formControl, styles.selectToggleTypeahead),\n        \"aria-activedescendant\": typeaheadActiveChild && typeaheadActiveChild.id,\n        id: \"\".concat(selectToggleId, \"-select-multi-typeahead-typeahead\"),\n        \"aria-label\": typeAheadAriaLabel,\n        \"aria-invalid\": validated === ValidatedOptions.error\n      }, typeAheadAriaDescribedby && {\n        'aria-describedby': typeAheadAriaDescribedby\n      }, {\n        placeholder: placeholderText,\n        value: typeaheadInputValue !== null ? typeaheadInputValue : '',\n        type: \"text\",\n        onChange: this.onChange,\n        onClick: this.onClick,\n        autoComplete: inputAutoComplete,\n        disabled: isDisabled,\n        ref: this.inputRef\n      }))), hasOnClear && (selections && selections.length > 0 || typeaheadInputValue) && clearBtn), validated === ValidatedOptions.success && React.createElement(\"span\", {\n        className: css(styles.selectToggleStatusIcon)\n      }, React.createElement(CheckCircleIcon, {\n        \"aria-hidden\": \"true\"\n      })), validated === ValidatedOptions.error && React.createElement(\"span\", {\n        className: css(styles.selectToggleStatusIcon)\n      }, React.createElement(ExclamationCircleIcon, {\n        \"aria-hidden\": \"true\"\n      })), validated === ValidatedOptions.warning && React.createElement(\"span\", {\n        className: css(styles.selectToggleStatusIcon)\n      }, React.createElement(ExclamationTriangleIcon, {\n        \"aria-hidden\": \"true\"\n      }))), isOpen && menuAppendTo === 'inline' && menuContainer);\n      var getParentElement = function getParentElement() {\n        if (_this3.parentRef && _this3.parentRef.current) {\n          return _this3.parentRef.current.parentElement;\n        }\n        return null;\n      };\n      return React.createElement(GenerateId, null, function (randomId) {\n        return React.createElement(SelectContext.Provider, {\n          value: {\n            onSelect: onSelect,\n            onFavorite: onFavorite,\n            onClose: _this3.onClose,\n            variant: variant,\n            inputIdPrefix: inputIdPrefix || randomId,\n            shouldResetOnSelect: shouldResetOnSelect\n          }\n        }, menuAppendTo === 'inline' ? mainContainer : React.createElement(Popper, {\n          trigger: mainContainer,\n          popper: popperContainer,\n          direction: direction,\n          appendTo: menuAppendTo === 'parent' ? getParentElement() : menuAppendTo,\n          isVisible: isOpen,\n          removeFindDomNode: removeFindDomNode,\n          zIndex: zIndex\n        }));\n      });\n    }\n  }]);\n  return Select;\n}(React.Component);\nSelect.displayName = 'Select';\nSelect.defaultProps = {\n  children: [],\n  className: '',\n  position: SelectPosition.left,\n  direction: SelectDirection.down,\n  toggleId: null,\n  isOpen: false,\n  isGrouped: false,\n  isPlain: false,\n  isDisabled: false,\n  hasPlaceholderStyle: false,\n  isCreatable: false,\n  isCreateOptionOnTop: false,\n  validated: 'default',\n  'aria-label': '',\n  'aria-labelledby': '',\n  'aria-describedby': '',\n  'aria-invalid': false,\n  typeAheadAriaLabel: '',\n  typeAheadAriaDescribedby: '',\n  clearSelectionsAriaLabel: 'Clear all',\n  toggleAriaLabel: 'Options menu',\n  removeSelectionAriaLabel: 'Remove',\n  selections: [],\n  createText: 'Create',\n  placeholderText: '',\n  noResultsFoundText: 'No results found',\n  variant: SelectVariant.single,\n  width: '',\n  onClear: function onClear() {\n    return undefined;\n  },\n  onCreateOption: function onCreateOption() {\n    return undefined;\n  },\n  toggleIcon: null,\n  toggleIndicator: null,\n  onFilter: null,\n  onTypeaheadInputChanged: null,\n  customContent: null,\n  hasInlineFilter: false,\n  inlineFilterPlaceholderText: null,\n  customBadgeText: null,\n  inputIdPrefix: '',\n  inputAutoComplete: 'off',\n  menuAppendTo: 'inline',\n  favorites: [],\n  favoritesLabel: 'Favorites',\n  ouiaSafe: true,\n  chipGroupComponent: null,\n  isInputValuePersisted: false,\n  isInputFilterPersisted: false,\n  isCreateSelectOptionObject: false,\n  shouldResetOnSelect: true,\n  isFlipEnabled: true,\n  removeFindDomNode: false,\n  zIndex: 9999\n};","map":{"version":3,"names":["React","styles","badgeStyles","formStyles","buttonStyles","css","TimesCircleIcon","CheckCircleIcon","ExclamationTriangleIcon","ExclamationCircleIcon","SelectMenu","SelectOption","SelectGroup","SelectToggle","SelectContext","SelectVariant","SelectPosition","SelectDirection","SelectFooterTabbableItems","ChipGroup","Chip","Spinner","keyHandler","getNextIndex","getOUIAProps","getDefaultOUIAId","GenerateId","KeyTypes","Divider","Popper","createRenderableFavorites","extendItemsWithFavorite","ValidatedOptions","findTabbableElements","currentId","Select","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","parentRef","createRef","menuComponentRef","filterRef","clearRef","inputRef","refCollection","optionContainerRefCollection","footerRef","state","focusFirstOption","typeaheadInputValue","typeaheadFilteredChildren","Children","toArray","props","children","favoritesGroup","typeaheadCurrIndex","typeaheadStoredIndex","creatableValue","tabbedIntoFavoritesMenu","ouiaStateId","displayName","variant","viewMoreNextIndex","getTypeaheadActiveChild","componentDidUpdate","prevProps","prevState","hasInlineFilter","current","customContent","firstRef","find","ref","focus","length","loadingVariant","setState","checkUpdatedChildren","prevChildren","currChildren","Array","from","some","prevChild","index","prevChildProps","currChild","currChildProps","value","label","isDisabled","isPlaceholder","hasUpdatedChildren","isGrouped","type","updateTypeAheadFilteredChildren","onFavorite","favorites","tempRenderableChildren","renderableFavorites","createElement","key","favoritesLabel","onEnter","onToggle","isExpanded","e","_this$props","isInputValuePersisted","onSelect","undefined","onClose","isInputFilterPersisted","Object","assign","onChange","target","toString","isOpen","onTypeaheadInputChanged","_this$props2","onFilter","isCreatable","isCreateOptionOnTop","onCreateOption","createText","noResultsFoundText","isCreateSelectOptionObject","input","RegExp","err","replace","childrenArray","childFilter","child","getDisplay","search","map","group","isValidElement","filteredGroupChildren","filter","cloneElement","titleId","valueToCheck","isSelectOptionObject","compareTo","text","push","isNoResultsOption","newValue","i","toLowerCase","newOptionValue","includes","createSelectOption","concat","onClick","unshift","clearSelection","_e","sendRef","optionRef","favoriteRef","optionContainerRef","handleMenuKeys","innerIndex","position","typeahead","typeaheadMulti","handleTypeaheadKeys","moveFocus","nextIndex","updateCurrentIndex","arguments","_this$props3","hasDescriptionElm","Boolean","classList","contains","isLoad","optionTextElm","firstElementChild","textContent","switchFocusToFavoriteMenu","_this$state","indexForFocus","moveFocusToLastMenuItem","refCollectionLen","shiftKey","_this$props4","_this$state2","typeaheadActiveChild","childElementCount","typeaheadActiveChildText","firstChild","click","document","activeElement","footer","tabbableItems","tabbedIntoMenu","currentElementIndex","findIndex","item","onClickTypeaheadToggleButton","reduce","acc","curr","_toConsumableArray","findText","multi","forEach","join","generateSelectedBadge","_this$props5","customBadgeText","selections","isArray","setVieMoreNextIndex","isLastOptionBeforeFooter","_createClass","extendTypeaheadChildren","_this2","_this$props6","typeaheadChildren","isFocused","id","childElement","render","_this3","_a","chipGroupProps","chipGroupComponent","className","direction","onClear","onBlur","toggleId","toggleRef","isPlain","hasPlaceholderStyle","validated","selectionsProp","typeAheadAriaLabel","typeAheadAriaDescribedby","clearSelectionsAriaLabel","toggleAriaLabel","removeSelectionAriaLabel","ariaLabel","ariaLabelledBy","ariaDescribedby","ariaInvalid","placeholderText","width","maxHeight","toggleIcon","toggleIndicator","ouiaId","ouiaSafe","isCheckboxSelectionBadgeHidden","inlineFilterPlaceholderText","inputIdPrefix","inputAutoComplete","menuAppendTo","shouldResetOnSelect","isFlipEnabled","removeFindDomNode","zIndex","__rest","_this$state3","openedOnEnter","selectToggleId","selectedOption","option","isSelectedPlaceholder","hasAnySelections","childPlaceholderText","renderableItems","tempExtendedChildren","childPlaceholder","isLoading","size","setViewMoreNextIndex","hasOnClear","defaultProps","clearBtn","button","modifiers","plain","selectToggleClear","stopPropagation","disabled","onKeyDown","event","Enter","selectedChips","closeBtnAriaLabel","filterBox","Fragment","selectMenuSearch","formControl","placeholder","ArrowUp","preventDefault","ArrowDown","ArrowLeft","ArrowRight","Tab","checkbox","autoComplete","variantProps","variantChildren","selected","isCustomContent","checked","isStatic","innerMenu","static","menuContainer","selectMenu","popperContainer","select","expanded","success","warning","error","invalid","up","top","style","default","mainContainer","menuRef","hasClearButton","hasFooter","selectToggleWrapper","selectToggleIcon","selectToggleText","single","selectToggleBadge","badge","read","selectToggleTypeahead","selectToggleStatusIcon","getParentElement","parentElement","randomId","Provider","trigger","popper","appendTo","isVisible","Component","left","down"],"sources":["/data/stackhub-web/plugins/myapps/node_modules/@patternfly/react-core/src/components/Select/Select.tsx"],"sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Select/select';\nimport badgeStyles from '@patternfly/react-styles/css/components/Badge/badge';\nimport formStyles from '@patternfly/react-styles/css/components/FormControl/form-control';\nimport buttonStyles from '@patternfly/react-styles/css/components/Button/button';\nimport { css } from '@patternfly/react-styles';\nimport TimesCircleIcon from '@patternfly/react-icons/dist/esm/icons/times-circle-icon';\nimport CheckCircleIcon from '@patternfly/react-icons/dist/esm/icons/check-circle-icon';\nimport ExclamationTriangleIcon from '@patternfly/react-icons/dist/esm/icons/exclamation-triangle-icon';\nimport ExclamationCircleIcon from '@patternfly/react-icons/dist/esm/icons/exclamation-circle-icon';\nimport { SelectMenu } from './SelectMenu';\nimport { SelectOption, SelectOptionObject } from './SelectOption';\nimport { SelectGroup, SelectGroupProps } from './SelectGroup';\nimport { SelectToggle } from './SelectToggle';\nimport {\n  SelectContext,\n  SelectVariant,\n  SelectPosition,\n  SelectDirection,\n  SelectFooterTabbableItems\n} from './selectConstants';\nimport { ChipGroup, ChipGroupProps } from '../ChipGroup';\nimport { Chip } from '../Chip';\nimport { Spinner } from '../Spinner';\nimport {\n  keyHandler,\n  getNextIndex,\n  getOUIAProps,\n  OUIAProps,\n  getDefaultOUIAId,\n  PickOptional,\n  GenerateId\n} from '../../helpers';\nimport { KeyTypes } from '../../helpers/constants';\nimport { Divider } from '../Divider';\nimport { ToggleMenuBaseProps, Popper } from '../../helpers/Popper/Popper';\nimport { createRenderableFavorites, extendItemsWithFavorite } from '../../helpers/favorites';\nimport { ValidatedOptions } from '../../helpers/constants';\nimport { findTabbableElements } from '../../helpers/util';\n\n// seed for the aria-labelledby ID\nlet currentId = 0;\n\nexport interface SelectViewMoreObject {\n  /** View more text */\n  text: string;\n  /** Callback for when the view more button is clicked */\n  onClick: (event: React.MouseEvent | React.ChangeEvent) => void;\n}\nexport interface SelectProps\n  extends Omit<ToggleMenuBaseProps, 'menuAppendTo'>,\n    Omit<React.HTMLProps<HTMLDivElement>, 'onSelect' | 'ref' | 'checked' | 'selected'>,\n    OUIAProps {\n  /** Content rendered inside the Select. Must be React.ReactElement<SelectGroupProps>[] */\n  children?: React.ReactElement[];\n  /** Classes applied to the root of the Select */\n  className?: string;\n  /** Indicates where menu will be aligned horizontally */\n  position?: SelectPosition | 'right' | 'left';\n  /** Flag specifying which direction the Select menu expands */\n  direction?: 'up' | 'down';\n  /** Flag to indicate if select is open */\n  isOpen?: boolean;\n  /** Flag to indicate if select options are grouped */\n  isGrouped?: boolean;\n  /** Display the toggle with no border or background */\n  isPlain?: boolean;\n  /** Flag to indicate if select is disabled */\n  isDisabled?: boolean;\n  /** Flag to indicate if the typeahead select allows new items */\n  isCreatable?: boolean;\n  /** Flag to indicate if create option should be at top of typeahead */\n  isCreateOptionOnTop?: boolean;\n  /** Flag indicating if placeholder styles should be applied */\n  hasPlaceholderStyle?: boolean;\n  /** Flag indicating if the creatable option should set its value as a SelectOptionObject */\n  isCreateSelectOptionObject?: boolean;\n  /** Value to indicate if the select is modified to show that validation state.\n   * If set to success, select will be modified to indicate valid state.\n   * If set to error, select will be modified to indicate error state.\n   * If set to warning, select will be modified to indicate warning state.\n   */\n  validated?: 'success' | 'warning' | 'error' | 'default';\n  /** Loading variant to display either the spinner or the view more text button */\n  loadingVariant?: 'spinner' | SelectViewMoreObject;\n  /** Text displayed in typeahead select to prompt the user to create an item */\n  createText?: string;\n  /** Title text of Select */\n  placeholderText?: string | React.ReactNode;\n  /** Text to display in typeahead select when no results are found */\n  noResultsFoundText?: string;\n  /** Array of selected items for multi select variants. */\n  selections?: string | SelectOptionObject | (string | SelectOptionObject)[];\n  /** Flag indicating if selection badge should be hidden for checkbox variant,default false */\n  isCheckboxSelectionBadgeHidden?: boolean;\n  /** Id for select toggle element */\n  toggleId?: string;\n  /** Ref for the select toggle element */\n  toggleRef?: React.Ref<HTMLButtonElement> | React.Ref<HTMLDivElement>;\n  /** Adds accessible text to Select */\n  'aria-label'?: string;\n  /** Id of label for the Select aria-labelledby */\n  'aria-labelledby'?: string;\n  /** Id of div for the select aria-labelledby */\n  'aria-describedby'?: string;\n  /** Flag indicating if the select is an invalid state */\n  'aria-invalid'?: boolean;\n  /** Label for input field of type ahead select variants */\n  typeAheadAriaLabel?: string;\n  /** Id of div for input field of type ahead select variants */\n  typeAheadAriaDescribedby?: string;\n  /** Label for clear selection button of type ahead select variants */\n  clearSelectionsAriaLabel?: string;\n  /** Label for toggle of type ahead select variants */\n  toggleAriaLabel?: string;\n  /** Label for remove chip button of multiple type ahead select variant */\n  removeSelectionAriaLabel?: string;\n  /** ID list of favorited select items */\n  favorites?: string[];\n  /** Label for the favorites group */\n  favoritesLabel?: string;\n  /** Enables favorites. Callback called when a select options's favorite button is clicked */\n  onFavorite?: (itemId: string, isFavorite: boolean) => void;\n  /** Callback for selection behavior */\n  onSelect?: (\n    event: React.MouseEvent | React.ChangeEvent,\n    value: string | SelectOptionObject,\n    isPlaceholder?: boolean\n  ) => void;\n  /** Callback for toggle button behavior */\n  onToggle: (isExpanded: boolean, event: React.MouseEvent | React.ChangeEvent | React.KeyboardEvent | Event) => void;\n  /** Callback for toggle blur */\n  onBlur?: (event?: any) => void;\n  /** Callback for typeahead clear button */\n  onClear?: (event: React.MouseEvent) => void;\n  /** Optional callback for custom filtering */\n  onFilter?: (e: React.ChangeEvent<HTMLInputElement> | null, value: string) => React.ReactElement[] | undefined;\n  /** Optional callback for newly created options */\n  onCreateOption?: (newOptionValue: string) => void;\n  /** Optional event handler called each time the value in the typeahead input changes. */\n  onTypeaheadInputChanged?: (value: string) => void;\n  /** Variant of rendered Select */\n  variant?: 'single' | 'checkbox' | 'typeahead' | 'typeaheadmulti';\n  /** Width of the select container as a number of px or string percentage */\n  width?: string | number;\n  /** Max height of the select container as a number of px or string percentage */\n  maxHeight?: string | number;\n  /** Icon element to render inside the select toggle */\n  toggleIcon?: React.ReactElement;\n  /** Custom icon for the dropdown replacing the CaretDownIcon */\n  toggleIndicator?: React.ReactElement;\n  /** Custom content to render in the select menu.  If this prop is defined, the variant prop will be ignored and the select will render with a single select toggle */\n  customContent?: React.ReactNode;\n  /** Flag indicating if select should have an inline text input for filtering */\n  hasInlineFilter?: boolean;\n  /** Placeholder text for inline filter */\n  inlineFilterPlaceholderText?: string;\n  /** Custom text for select badge */\n  customBadgeText?: string | number;\n  /** Prefix for the id of the input in the checkbox select variant*/\n  inputIdPrefix?: string;\n  /** Value for the typeahead and inline filtering input autocomplete attribute. When targeting Chrome this property should be a random string. */\n  inputAutoComplete?: string;\n  /** Optional props to pass to the chip group in the typeaheadmulti variant */\n  chipGroupProps?: Omit<ChipGroupProps, 'children' | 'ref'>;\n  /** Optional props to render custom chip group in the typeaheadmulti variant */\n  chipGroupComponent?: React.ReactNode;\n  /** Flag for retaining keyboard-entered value in typeahead text field when focus leaves input away */\n  isInputValuePersisted?: boolean;\n  /** Flag for retaining filter results on blur from keyboard-entered typeahead text */\n  isInputFilterPersisted?: boolean;\n  /** Flag indicating the typeahead input value should reset upon selection */\n  shouldResetOnSelect?: boolean;\n  /** Content rendered in the footer of the select menu */\n  footer?: React.ReactNode;\n  /** The container to append the menu to. Defaults to 'inline'.\n   * If your menu is being cut off you can append it to an element higher up the DOM tree.\n   * Some examples:\n   * menuAppendTo=\"parent\"\n   * menuAppendTo={() => document.body}\n   * menuAppendTo={document.getElementById('target')}\n   */\n  menuAppendTo?: HTMLElement | (() => HTMLElement) | 'inline' | 'parent';\n  /** Flag for indicating that the select menu should automatically flip vertically when\n   * it reaches the boundary. This prop can only be used when the select component is not\n   * appended inline, e.g. `menuAppendTo=\"parent\"`\n   */\n  isFlipEnabled?: boolean;\n  /** @beta Opt-in for updated popper that does not use findDOMNode. */\n  removeFindDomNode?: boolean;\n  /** z-index of the select menu when menuAppendTo is not inline. */\n  zIndex?: number;\n  /** Value to overwrite the randomly generated data-ouia-component-id.*/\n  ouiaId?: number | string;\n  /** Set the value of data-ouia-safe. Only set to true when the component is in a static state, i.e. no animations are occurring. At all other times, this value must be false. */\n  ouiaSafe?: boolean;\n}\n\nexport interface SelectState {\n  focusFirstOption: boolean;\n  typeaheadInputValue: string | null;\n  typeaheadFilteredChildren: React.ReactNode[];\n  favoritesGroup: React.ReactNode[];\n  typeaheadCurrIndex: number;\n  creatableValue: string;\n  tabbedIntoFavoritesMenu: boolean;\n  typeaheadStoredIndex: number;\n  ouiaStateId: string;\n  viewMoreNextIndex: number;\n}\n\nexport class Select extends React.Component<SelectProps & OUIAProps, SelectState> {\n  static displayName = 'Select';\n  private parentRef = React.createRef<HTMLDivElement>();\n  private menuComponentRef = React.createRef<HTMLElement>();\n  private filterRef = React.createRef<HTMLInputElement>();\n  private clearRef = React.createRef<HTMLButtonElement>();\n  private inputRef = React.createRef<HTMLInputElement>();\n  private refCollection: HTMLElement[][] = [[]];\n  private optionContainerRefCollection: HTMLElement[] = [];\n  private footerRef = React.createRef<HTMLDivElement>();\n\n  static defaultProps: PickOptional<SelectProps> = {\n    children: [] as React.ReactElement[],\n    className: '',\n    position: SelectPosition.left,\n    direction: SelectDirection.down,\n    toggleId: null as string,\n    isOpen: false,\n    isGrouped: false,\n    isPlain: false,\n    isDisabled: false,\n    hasPlaceholderStyle: false,\n    isCreatable: false,\n    isCreateOptionOnTop: false,\n    validated: 'default',\n    'aria-label': '',\n    'aria-labelledby': '',\n    'aria-describedby': '',\n    'aria-invalid': false,\n    typeAheadAriaLabel: '',\n    typeAheadAriaDescribedby: '',\n    clearSelectionsAriaLabel: 'Clear all',\n    toggleAriaLabel: 'Options menu',\n    removeSelectionAriaLabel: 'Remove',\n    selections: [],\n    createText: 'Create',\n    placeholderText: '',\n    noResultsFoundText: 'No results found',\n    variant: SelectVariant.single,\n    width: '',\n    onClear: () => undefined as void,\n    onCreateOption: () => undefined as void,\n    toggleIcon: null as React.ReactElement,\n    toggleIndicator: null as React.ReactElement,\n    onFilter: null,\n    onTypeaheadInputChanged: null,\n    customContent: null,\n    hasInlineFilter: false,\n    inlineFilterPlaceholderText: null,\n    customBadgeText: null,\n    inputIdPrefix: '',\n    inputAutoComplete: 'off',\n    menuAppendTo: 'inline',\n    favorites: [] as string[],\n    favoritesLabel: 'Favorites',\n    ouiaSafe: true,\n    chipGroupComponent: null,\n    isInputValuePersisted: false,\n    isInputFilterPersisted: false,\n    isCreateSelectOptionObject: false,\n    shouldResetOnSelect: true,\n    isFlipEnabled: true,\n    removeFindDomNode: false,\n    zIndex: 9999\n  };\n\n  state: SelectState = {\n    focusFirstOption: false,\n    typeaheadInputValue: null,\n    typeaheadFilteredChildren: React.Children.toArray(this.props.children),\n    favoritesGroup: [] as React.ReactNode[],\n    typeaheadCurrIndex: -1,\n    typeaheadStoredIndex: -1,\n    creatableValue: '',\n    tabbedIntoFavoritesMenu: false,\n    ouiaStateId: getDefaultOUIAId(Select.displayName, this.props.variant),\n    viewMoreNextIndex: -1\n  };\n\n  getTypeaheadActiveChild = (typeaheadCurrIndex: number) =>\n    this.refCollection[typeaheadCurrIndex] ? this.refCollection[typeaheadCurrIndex][0] : null;\n\n  componentDidUpdate = (prevProps: SelectProps, prevState: SelectState) => {\n    if (this.props.hasInlineFilter) {\n      this.refCollection[0][0] = this.filterRef.current;\n    }\n\n    // Move focus to top of the menu if state.focusFirstOption was updated to true and the menu does not have custom content\n    if (!prevState.focusFirstOption && this.state.focusFirstOption && !this.props.customContent) {\n      const firstRef = this.refCollection.find(\n        ref =>\n          // If a select option is disabled then ref[0] will be undefined, so we want to return\n          // the first ref that both a) is not null and b) is not disabled.\n          ref !== null && ref[0]\n      );\n\n      if (firstRef && firstRef[0]) {\n        firstRef[0].focus();\n      }\n    } else if (\n      // if viewMoreNextIndex is not -1, view more was clicked, set focus on first newly loaded item\n      this.state.viewMoreNextIndex !== -1 &&\n      this.refCollection.length > this.state.viewMoreNextIndex &&\n      this.props.loadingVariant !== 'spinner' &&\n      this.refCollection[this.state.viewMoreNextIndex][0] &&\n      this.props.variant !== 'typeahead' && // do not hard focus newly added items for typeahead variants\n      this.props.variant !== 'typeaheadmulti'\n    ) {\n      this.refCollection[this.state.viewMoreNextIndex][0].focus();\n      this.setState({ viewMoreNextIndex: -1 });\n    }\n\n    const checkUpdatedChildren = (prevChildren: React.ReactElement[], currChildren: React.ReactElement[]) =>\n      Array.from(prevChildren).some((prevChild: React.ReactElement, index: number) => {\n        const prevChildProps = prevChild.props;\n        const currChild = currChildren[index];\n        const { props: currChildProps } = currChild;\n\n        if (prevChildProps && currChildProps) {\n          return (\n            prevChildProps.value !== currChildProps.value ||\n            prevChildProps.label !== currChildProps.label ||\n            prevChildProps.isDisabled !== currChildProps.isDisabled ||\n            prevChildProps.isPlaceholder !== currChildProps.isPlaceholder\n          );\n        } else {\n          return prevChild !== currChild;\n        }\n      });\n\n    const hasUpdatedChildren =\n      prevProps.children.length !== this.props.children.length ||\n      checkUpdatedChildren(prevProps.children, this.props.children) ||\n      (this.props.isGrouped &&\n        Array.from(prevProps.children).some(\n          (prevChild: React.ReactElement, index: number) =>\n            prevChild.type === SelectGroup &&\n            prevChild.props.children &&\n            this.props.children[index].props.children &&\n            (prevChild.props.children.length !== this.props.children[index].props.children.length ||\n              checkUpdatedChildren(prevChild.props.children, this.props.children[index].props.children))\n        ));\n\n    if (hasUpdatedChildren) {\n      this.updateTypeAheadFilteredChildren(prevState.typeaheadInputValue || '', null);\n    }\n\n    // for menus with favorites,\n    // if the number of favorites or typeahead filtered children has changed, the generated\n    // list of favorites needs to be updated\n    if (\n      this.props.onFavorite &&\n      (this.props.favorites.length !== prevProps.favorites.length ||\n        this.state.typeaheadFilteredChildren !== prevState.typeaheadFilteredChildren)\n    ) {\n      const tempRenderableChildren =\n        this.props.variant === 'typeahead' || this.props.variant === 'typeaheadmulti'\n          ? this.state.typeaheadFilteredChildren\n          : this.props.children;\n      const renderableFavorites = createRenderableFavorites(\n        tempRenderableChildren,\n        this.props.isGrouped,\n        this.props.favorites\n      );\n      const favoritesGroup = renderableFavorites.length\n        ? [\n            <SelectGroup key=\"favorites\" label={this.props.favoritesLabel}>\n              {renderableFavorites}\n            </SelectGroup>,\n            <Divider key=\"favorites-group-divider\" />\n          ]\n        : [];\n      this.setState({ favoritesGroup });\n    }\n  };\n\n  onEnter = () => {\n    this.setState({ focusFirstOption: true });\n  };\n\n  onToggle = (isExpanded: boolean, e: React.MouseEvent | React.ChangeEvent | React.KeyboardEvent | Event) => {\n    const { isInputValuePersisted, onSelect, onToggle, hasInlineFilter } = this.props;\n    if (!isExpanded && isInputValuePersisted && onSelect) {\n      onSelect(undefined, this.inputRef.current ? this.inputRef.current.value : '');\n    }\n    if (isExpanded && hasInlineFilter) {\n      this.setState({\n        focusFirstOption: true\n      });\n    }\n    onToggle(isExpanded, e);\n  };\n\n  onClose = () => {\n    const { isInputFilterPersisted } = this.props;\n\n    this.setState({\n      focusFirstOption: false,\n      typeaheadInputValue: null,\n      ...(!isInputFilterPersisted && {\n        typeaheadFilteredChildren: React.Children.toArray(this.props.children)\n      }),\n      typeaheadCurrIndex: -1,\n      tabbedIntoFavoritesMenu: false,\n      viewMoreNextIndex: -1\n    });\n  };\n\n  onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (e.target.value.toString() !== '' && !this.props.isOpen) {\n      this.onToggle(true, e);\n    }\n\n    if (this.props.onTypeaheadInputChanged) {\n      this.props.onTypeaheadInputChanged(e.target.value.toString());\n    }\n\n    this.setState({\n      typeaheadCurrIndex: -1,\n      typeaheadInputValue: e.target.value,\n      creatableValue: e.target.value\n    });\n    this.updateTypeAheadFilteredChildren(e.target.value.toString(), e);\n    this.refCollection = [[]];\n  };\n\n  updateTypeAheadFilteredChildren = (typeaheadInputValue: string, e: React.ChangeEvent<HTMLInputElement> | null) => {\n    let typeaheadFilteredChildren: any;\n\n    const {\n      onFilter,\n      isCreatable,\n      isCreateOptionOnTop,\n      onCreateOption,\n      createText,\n      noResultsFoundText,\n      children,\n      isGrouped,\n      isCreateSelectOptionObject,\n      loadingVariant\n    } = this.props;\n\n    if (onFilter) {\n      /* The updateTypeAheadFilteredChildren callback is not only called on input changes but also when the children change.\n       * In this case the e is null but we can get the typeaheadInputValue from the state.\n       */\n      typeaheadFilteredChildren = onFilter(e, e ? e.target.value : typeaheadInputValue) || children;\n    } else {\n      let input: RegExp;\n      try {\n        input = new RegExp(typeaheadInputValue.toString(), 'i');\n      } catch (err) {\n        input = new RegExp(typeaheadInputValue.toString().replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'), 'i');\n      }\n      const childrenArray = React.Children.toArray(children) as React.ReactElement<SelectGroupProps>[];\n      if (isGrouped) {\n        const childFilter = (child: React.ReactElement<SelectGroupProps>) =>\n          child.props.value &&\n          child.props.value.toString &&\n          this.getDisplay(child.props.value.toString(), 'text').search(input) === 0;\n        typeaheadFilteredChildren =\n          typeaheadInputValue.toString() !== ''\n            ? React.Children.map(children, group => {\n                if (\n                  React.isValidElement<React.ComponentProps<typeof SelectGroup>>(group) &&\n                  group.type === SelectGroup\n                ) {\n                  const filteredGroupChildren = (React.Children.toArray(group.props.children) as React.ReactElement<\n                    SelectGroupProps\n                  >[]).filter(childFilter);\n                  if (filteredGroupChildren.length > 0) {\n                    return React.cloneElement(group, {\n                      titleId: group.props.label && group.props.label.replace(/\\W/g, '-'),\n                      children: filteredGroupChildren as any\n                    });\n                  }\n                } else {\n                  return (React.Children.toArray(group) as React.ReactElement<SelectGroupProps>[]).filter(childFilter);\n                }\n              })\n            : childrenArray;\n      } else {\n        typeaheadFilteredChildren =\n          typeaheadInputValue.toString() !== ''\n            ? childrenArray.filter(child => {\n                const valueToCheck = child.props.value;\n                // Dividers don't have value and should not be filtered\n                if (!valueToCheck) {\n                  return true;\n                }\n\n                const isSelectOptionObject =\n                  typeof valueToCheck !== 'string' &&\n                  (valueToCheck as SelectOptionObject).toString &&\n                  (valueToCheck as SelectOptionObject).compareTo;\n\n                // View more option should be returned as not a match\n                if (loadingVariant !== 'spinner' && loadingVariant?.text === valueToCheck) {\n                  return true;\n                }\n\n                // spinner should be returned as not a match\n                if (loadingVariant === 'spinner' && valueToCheck === 'loading') {\n                  return true;\n                }\n\n                if (isSelectOptionObject) {\n                  return (valueToCheck as SelectOptionObject).compareTo(typeaheadInputValue);\n                } else {\n                  return this.getDisplay(child.props.value.toString(), 'text').search(input) === 0;\n                }\n              })\n            : childrenArray;\n      }\n    }\n    if (!typeaheadFilteredChildren) {\n      typeaheadFilteredChildren = [];\n    }\n    if (typeaheadFilteredChildren.length === 0) {\n      !isCreatable &&\n        typeaheadFilteredChildren.push(\n          <SelectOption isDisabled key=\"no-results\" value={noResultsFoundText} isNoResultsOption />\n        );\n    }\n    if (isCreatable && typeaheadInputValue !== '') {\n      const newValue = typeaheadInputValue;\n      if (\n        !typeaheadFilteredChildren.find(\n          (i: React.ReactElement) =>\n            i.props.value && i.props.value.toString().toLowerCase() === newValue.toString().toLowerCase()\n        )\n      ) {\n        const newOptionValue = isCreateSelectOptionObject\n          ? ({\n              toString: () => newValue,\n              compareTo: value =>\n                this.toString()\n                  .toLowerCase()\n                  .includes(value.toString().toLowerCase())\n            } as SelectOptionObject)\n          : newValue;\n\n        const createSelectOption = (\n          <SelectOption\n            key={`create ${newValue}`}\n            value={newOptionValue}\n            onClick={() => onCreateOption && onCreateOption(newValue)}\n          >\n            {createText} \"{newValue}\"\n          </SelectOption>\n        );\n\n        if (isCreateOptionOnTop) {\n          typeaheadFilteredChildren.unshift(createSelectOption);\n        } else {\n          typeaheadFilteredChildren.push(createSelectOption);\n        }\n      }\n    }\n\n    this.setState({\n      typeaheadFilteredChildren\n    });\n  };\n\n  onClick = (e: React.MouseEvent) => {\n    if (!this.props.isOpen) {\n      this.onToggle(true, e);\n    }\n  };\n\n  clearSelection = (_e: React.MouseEvent) => {\n    this.setState({\n      typeaheadInputValue: null,\n      typeaheadFilteredChildren: React.Children.toArray(this.props.children),\n      typeaheadCurrIndex: -1\n    });\n  };\n\n  extendTypeaheadChildren(typeaheadCurrIndex: number, favoritesGroup?: React.ReactNode[]) {\n    const { isGrouped, onFavorite, createText } = this.props;\n    const typeaheadChildren = favoritesGroup\n      ? favoritesGroup.concat(this.state.typeaheadFilteredChildren)\n      : this.state.typeaheadFilteredChildren;\n    const activeElement = this.optionContainerRefCollection[typeaheadCurrIndex];\n\n    let typeaheadActiveChild = this.getTypeaheadActiveChild(typeaheadCurrIndex);\n    if (typeaheadActiveChild && typeaheadActiveChild.classList.contains('pf-m-description')) {\n      typeaheadActiveChild = typeaheadActiveChild.firstElementChild as HTMLElement;\n    }\n\n    this.refCollection = [[]];\n    this.optionContainerRefCollection = [];\n    if (isGrouped) {\n      return React.Children.map(typeaheadChildren as React.ReactElement[], (group: React.ReactElement) => {\n        if (group.type === Divider) {\n          return group;\n        } else if (group.type === SelectGroup && onFavorite) {\n          return React.cloneElement(group, {\n            titleId: group.props.label && group.props.label.replace(/\\W/g, '-'),\n            children: React.Children.map(group.props.children, (child: React.ReactElement) =>\n              child.type === Divider\n                ? child\n                : React.cloneElement(child as React.ReactElement, {\n                    isFocused:\n                      activeElement &&\n                      (activeElement.id === (child as React.ReactElement).props.id ||\n                        (this.props.isCreatable &&\n                          typeaheadActiveChild.textContent ===\n                            `${createText} \"${(group as React.ReactElement).props.value}\"`))\n                  })\n            )\n          });\n        } else if (group.type === SelectGroup) {\n          return React.cloneElement(group, {\n            titleId: group.props.label && group.props.label.replace(/\\W/g, '-'),\n            children: React.Children.map(group.props.children, (child: React.ReactElement) =>\n              child.type === Divider\n                ? child\n                : React.cloneElement(child as React.ReactElement, {\n                    isFocused:\n                      typeaheadActiveChild &&\n                      (typeaheadActiveChild.textContent === (child as React.ReactElement).props.value.toString() ||\n                        (this.props.isCreatable &&\n                          typeaheadActiveChild.textContent ===\n                            `${createText} \"${(child as React.ReactElement).props.value}\"`))\n                  })\n            )\n          });\n        } else {\n          // group has been filtered down to SelectOption\n          return React.cloneElement(group as React.ReactElement, {\n            isFocused:\n              typeaheadActiveChild &&\n              (typeaheadActiveChild.textContent === group.props.value.toString() ||\n                (this.props.isCreatable && typeaheadActiveChild.textContent === `${createText} \"${group.props.value}\"`))\n          });\n        }\n      });\n    }\n    return typeaheadChildren.map((child: React.ReactNode, index) => {\n      const childElement = child as any;\n      return childElement.type.displayName === 'Divider'\n        ? child\n        : React.cloneElement(child as React.ReactElement, {\n            isFocused: typeaheadActiveChild\n              ? typeaheadActiveChild.textContent === (child as React.ReactElement).props.value.toString() ||\n                (this.props.isCreatable &&\n                  typeaheadActiveChild.textContent === `${createText} \"${(child as React.ReactElement).props.value}\"`)\n              : index === typeaheadCurrIndex // fallback for view more + typeahead use cases, when the new expanded list is loaded and refCollection hasn't be updated yet\n          });\n    });\n  }\n\n  sendRef = (\n    optionRef: React.ReactNode,\n    favoriteRef: React.ReactNode,\n    optionContainerRef: React.ReactNode,\n    index: number\n  ) => {\n    this.refCollection[index] = [(optionRef as unknown) as HTMLElement, (favoriteRef as unknown) as HTMLElement];\n    this.optionContainerRefCollection[index] = (optionContainerRef as unknown) as HTMLElement;\n  };\n\n  handleMenuKeys = (index: number, innerIndex: number, position: string) => {\n    keyHandler(index, innerIndex, position, this.refCollection, this.refCollection);\n    if (this.props.variant === SelectVariant.typeahead || this.props.variant === SelectVariant.typeaheadMulti) {\n      if (position !== 'tab') {\n        this.handleTypeaheadKeys(position);\n      }\n    }\n  };\n\n  moveFocus = (nextIndex: number, updateCurrentIndex: boolean = true) => {\n    const { isCreatable, createText } = this.props;\n\n    const hasDescriptionElm = Boolean(\n      this.refCollection[nextIndex][0] && this.refCollection[nextIndex][0].classList.contains('pf-m-description')\n    );\n    const isLoad = Boolean(\n      this.refCollection[nextIndex][0] && this.refCollection[nextIndex][0].classList.contains('pf-m-load')\n    );\n    const optionTextElm = hasDescriptionElm\n      ? (this.refCollection[nextIndex][0].firstElementChild as HTMLElement)\n      : this.refCollection[nextIndex][0];\n\n    let typeaheadInputValue = '';\n    if (isCreatable && optionTextElm.textContent.includes(createText)) {\n      typeaheadInputValue = this.state.creatableValue;\n    } else if (optionTextElm && !isLoad) {\n      // !isLoad prevents the view more button text from appearing the typeahead input\n      typeaheadInputValue = optionTextElm.textContent;\n    }\n    this.setState(prevState => ({\n      typeaheadCurrIndex: updateCurrentIndex ? nextIndex : prevState.typeaheadCurrIndex,\n      typeaheadStoredIndex: nextIndex,\n      typeaheadInputValue\n    }));\n  };\n\n  switchFocusToFavoriteMenu = () => {\n    const { typeaheadCurrIndex, typeaheadStoredIndex } = this.state;\n    let indexForFocus = 0;\n\n    if (typeaheadCurrIndex !== -1) {\n      indexForFocus = typeaheadCurrIndex;\n    } else if (typeaheadStoredIndex !== -1) {\n      indexForFocus = typeaheadStoredIndex;\n    }\n\n    if (this.refCollection[indexForFocus] !== null && this.refCollection[indexForFocus][0] !== null) {\n      this.refCollection[indexForFocus][0].focus();\n    } else {\n      this.clearRef.current.focus();\n    }\n\n    this.setState({\n      tabbedIntoFavoritesMenu: true,\n      typeaheadCurrIndex: -1\n    });\n  };\n\n  moveFocusToLastMenuItem = () => {\n    const refCollectionLen = this.refCollection.length;\n    if (\n      refCollectionLen > 0 &&\n      this.refCollection[refCollectionLen - 1] !== null &&\n      this.refCollection[refCollectionLen - 1][0] !== null\n    ) {\n      this.refCollection[refCollectionLen - 1][0].focus();\n    }\n  };\n\n  handleTypeaheadKeys = (position: string, shiftKey: boolean = false) => {\n    const { isOpen, onFavorite, isCreatable } = this.props;\n    const { typeaheadCurrIndex, tabbedIntoFavoritesMenu } = this.state;\n    const typeaheadActiveChild = this.getTypeaheadActiveChild(typeaheadCurrIndex);\n    if (isOpen) {\n      if (position === 'enter') {\n        if (\n          (typeaheadCurrIndex !== -1 || (isCreatable && this.refCollection.length === 1)) && // do not allow selection without moving to an initial option unless it is a single create option\n          (typeaheadActiveChild || (this.refCollection[0] && this.refCollection[0][0]))\n        ) {\n          if (typeaheadActiveChild) {\n            if (!typeaheadActiveChild.classList.contains('pf-m-load')) {\n              const hasDescriptionElm = typeaheadActiveChild.childElementCount > 1;\n              const typeaheadActiveChildText = hasDescriptionElm\n                ? (typeaheadActiveChild.firstChild as HTMLElement).textContent\n                : typeaheadActiveChild.textContent;\n              this.setState({\n                typeaheadInputValue: typeaheadActiveChildText\n              });\n            }\n          } else if (this.refCollection[0] && this.refCollection[0][0]) {\n            this.setState({\n              typeaheadInputValue: this.refCollection[0][0].textContent\n            });\n          }\n          if (typeaheadActiveChild) {\n            typeaheadActiveChild.click();\n          } else {\n            this.refCollection[0][0].click();\n          }\n        }\n      } else if (position === 'tab') {\n        if (onFavorite) {\n          // if the input has focus, tab to the first item or the last item that was previously focused.\n          if (this.inputRef.current === document.activeElement) {\n            // If shift is also clicked and there is a footer, tab to the last item in tabbable footer\n            if (this.props.footer && shiftKey) {\n              const tabbableItems = findTabbableElements(this.footerRef, SelectFooterTabbableItems);\n              if (tabbableItems.length > 0) {\n                if (tabbableItems[tabbableItems.length - 1]) {\n                  tabbableItems[tabbableItems.length - 1].focus();\n                }\n              }\n            } else {\n              this.switchFocusToFavoriteMenu();\n            }\n          } else {\n            // focus is on menu or footer\n            if (this.props.footer) {\n              let tabbedIntoMenu = false;\n              const tabbableItems = findTabbableElements(this.footerRef, SelectFooterTabbableItems);\n              if (tabbableItems.length > 0) {\n                // if current element is not in footer, tab to first tabbable element in footer,\n                // if shift was clicked, tab to input since focus is on menu\n                const currentElementIndex = tabbableItems.findIndex((item: any) => item === document.activeElement);\n                if (currentElementIndex === -1) {\n                  if (shiftKey) {\n                    // currently in menu, shift back to input\n                    this.inputRef.current.focus();\n                  } else {\n                    // currently in menu, tab to first tabbable item in footer\n                    tabbableItems[0].focus();\n                  }\n                } else {\n                  // already in footer\n                  if (shiftKey) {\n                    // shift to previous item\n                    if (currentElementIndex === 0) {\n                      // on first footer item, shift back to menu\n                      this.switchFocusToFavoriteMenu();\n                      tabbedIntoMenu = true;\n                    } else {\n                      // shift to previous footer item\n                      tabbableItems[currentElementIndex - 1].focus();\n                    }\n                  } else {\n                    // tab to next tabbable item in footer or to input.\n                    if (tabbableItems[currentElementIndex + 1]) {\n                      tabbableItems[currentElementIndex + 1].focus();\n                    } else {\n                      this.inputRef.current.focus();\n                    }\n                  }\n                }\n              } else {\n                // no tabbable items in footer, tab to input\n                this.inputRef.current.focus();\n                tabbedIntoMenu = false;\n              }\n              this.setState({ tabbedIntoFavoritesMenu: tabbedIntoMenu });\n            } else {\n              this.inputRef.current.focus();\n              this.setState({ tabbedIntoFavoritesMenu: false });\n            }\n          }\n        } else {\n          // Close if there is no footer\n          if (!this.props.footer) {\n            this.onToggle(false, null);\n            this.onClose();\n          } else {\n            // has footer\n            const tabbableItems = findTabbableElements(this.footerRef, SelectFooterTabbableItems);\n            const currentElementIndex = tabbableItems.findIndex((item: any) => item === document.activeElement);\n            if (this.inputRef.current === document.activeElement) {\n              if (shiftKey) {\n                // close toggle if shift key and tab on input\n                this.onToggle(false, null);\n                this.onClose();\n              } else {\n                // tab to first tabbable item in footer\n                if (tabbableItems[0]) {\n                  tabbableItems[0].focus();\n                } else {\n                  this.onToggle(false, null);\n                  this.onClose();\n                }\n              }\n            } else {\n              // focus is in footer\n              if (shiftKey) {\n                if (currentElementIndex === 0) {\n                  // shift tab back to input\n                  this.inputRef.current.focus();\n                } else {\n                  // shift to previous footer item\n                  tabbableItems[currentElementIndex - 1].focus();\n                }\n              } else {\n                // tab to next footer item or close tab if last item\n                if (tabbableItems[currentElementIndex + 1]) {\n                  tabbableItems[currentElementIndex + 1].focus();\n                } else {\n                  // no next item, close toggle\n                  this.onToggle(false, null);\n                  this.inputRef.current.focus();\n                  this.onClose();\n                }\n              }\n            }\n          }\n        }\n      } else if (!tabbedIntoFavoritesMenu) {\n        if (this.refCollection[0][0] === null) {\n          return;\n        }\n        let nextIndex;\n        if (typeaheadCurrIndex === -1 && position === 'down') {\n          nextIndex = 0;\n        } else if (typeaheadCurrIndex === -1 && position === 'up') {\n          nextIndex = this.refCollection.length - 1;\n        } else if (position !== 'left' && position !== 'right') {\n          nextIndex = getNextIndex(typeaheadCurrIndex, position, this.refCollection);\n        } else {\n          nextIndex = typeaheadCurrIndex;\n        }\n        if (this.refCollection[nextIndex] === null) {\n          return;\n        }\n        this.moveFocus(nextIndex);\n      } else {\n        const nextIndex = this.refCollection.findIndex(\n          ref => ref !== undefined && (ref[0] === document.activeElement || ref[1] === document.activeElement)\n        );\n        this.moveFocus(nextIndex);\n      }\n    }\n  };\n\n  onClickTypeaheadToggleButton = () => {\n    if (this.inputRef && this.inputRef.current) {\n      this.inputRef.current.focus();\n    }\n  };\n\n  getDisplay = (value: string | SelectOptionObject, type: 'node' | 'text' = 'node') => {\n    if (!value) {\n      return;\n    }\n    const item = this.props.isGrouped\n      ? (React.Children.toArray(this.props.children) as React.ReactElement[])\n          .reduce((acc, curr) => [...acc, ...React.Children.toArray(curr.props.children)], [])\n          .find(child => child.props.value.toString() === value.toString())\n      : React.Children.toArray(this.props.children).find(\n          child =>\n            (child as React.ReactElement).props.value &&\n            (child as React.ReactElement).props.value.toString() === value.toString()\n        );\n    if (item) {\n      if (item && item.props.children) {\n        if (type === 'node') {\n          return item.props.children;\n        }\n        return this.findText(item);\n      }\n      return item.props.value.toString();\n    }\n    return value.toString();\n  };\n\n  findText = (item: React.ReactNode) => {\n    if (typeof item === 'string') {\n      return item;\n    } else if (!React.isValidElement(item)) {\n      return '';\n    } else {\n      const multi: string[] = [];\n      React.Children.toArray(item.props.children).forEach(child => multi.push(this.findText(child)));\n      return multi.join('');\n    }\n  };\n\n  generateSelectedBadge = () => {\n    const { customBadgeText, selections } = this.props;\n    if (customBadgeText !== null) {\n      return customBadgeText;\n    }\n    if (Array.isArray(selections) && selections.length > 0) {\n      return selections.length;\n    }\n    return null;\n  };\n\n  setVieMoreNextIndex = () => {\n    this.setState({ viewMoreNextIndex: this.refCollection.length - 1 });\n  };\n\n  isLastOptionBeforeFooter = (index: any) =>\n    this.props.footer && index === this.refCollection.length - 1 ? true : false;\n\n  render() {\n    const {\n      children,\n      chipGroupProps,\n      chipGroupComponent,\n      className,\n      customContent,\n      variant,\n      direction,\n      onSelect,\n      onClear,\n      onBlur,\n      toggleId,\n      toggleRef,\n      isOpen,\n      isGrouped,\n      isPlain,\n      isDisabled,\n      hasPlaceholderStyle,\n      validated,\n      selections: selectionsProp,\n      typeAheadAriaLabel,\n      typeAheadAriaDescribedby,\n      clearSelectionsAriaLabel,\n      toggleAriaLabel,\n      removeSelectionAriaLabel,\n      'aria-label': ariaLabel,\n      'aria-labelledby': ariaLabelledBy,\n      'aria-describedby': ariaDescribedby,\n      'aria-invalid': ariaInvalid,\n      placeholderText,\n      width,\n      maxHeight,\n      toggleIcon,\n      toggleIndicator,\n      ouiaId,\n      ouiaSafe,\n      hasInlineFilter,\n      isCheckboxSelectionBadgeHidden,\n      inlineFilterPlaceholderText,\n      /* eslint-disable @typescript-eslint/no-unused-vars */\n      onFilter,\n      /* eslint-disable @typescript-eslint/no-unused-vars */\n      onTypeaheadInputChanged,\n      onCreateOption,\n      isCreatable,\n      onToggle,\n      createText,\n      noResultsFoundText,\n      customBadgeText,\n      inputIdPrefix,\n      inputAutoComplete,\n      /* eslint-disable @typescript-eslint/no-unused-vars */\n      isInputValuePersisted,\n      isInputFilterPersisted,\n      /* eslint-enable @typescript-eslint/no-unused-vars */\n      menuAppendTo,\n      favorites,\n      onFavorite,\n      /* eslint-disable @typescript-eslint/no-unused-vars */\n      favoritesLabel,\n      footer,\n      loadingVariant,\n      isCreateSelectOptionObject,\n      isCreateOptionOnTop,\n      shouldResetOnSelect,\n      isFlipEnabled,\n      removeFindDomNode,\n      zIndex,\n      ...props\n    } = this.props;\n    const {\n      focusFirstOption: openedOnEnter,\n      typeaheadCurrIndex,\n      typeaheadInputValue,\n      typeaheadFilteredChildren,\n      favoritesGroup\n    } = this.state;\n    const selectToggleId = toggleId || `pf-select-toggle-id-${currentId++}`;\n    const selections = Array.isArray(selectionsProp) ? selectionsProp : [selectionsProp];\n    // Find out if the selected option is a placeholder\n    const selectedOption = React.Children.toArray(children).find(\n      (option: any) => option.props.value === selections[0]\n    ) as any;\n    const isSelectedPlaceholder = selectedOption && selectedOption.props.isPlaceholder;\n    const hasAnySelections = Boolean(selections[0] && selections[0] !== '');\n    const typeaheadActiveChild = this.getTypeaheadActiveChild(typeaheadCurrIndex);\n    let childPlaceholderText = null as string;\n\n    // If onFavorites is set,  add isFavorite prop to children and add a Favorites group to the SelectMenu\n    let renderableItems: React.ReactNode[] = [];\n    if (onFavorite) {\n      // if variant is type-ahead call the extendTypeaheadChildren before adding favorites\n      let tempExtendedChildren: (React.ReactElement | React.ReactNode | {})[] = children;\n      if (variant === 'typeahead' || variant === 'typeaheadmulti') {\n        tempExtendedChildren = this.extendTypeaheadChildren(typeaheadCurrIndex, favoritesGroup);\n      } else if (onFavorite) {\n        tempExtendedChildren = favoritesGroup.concat(children);\n      }\n      // mark items that are favorited with isFavorite\n      renderableItems = extendItemsWithFavorite(tempExtendedChildren, isGrouped, favorites);\n    } else {\n      renderableItems = children;\n    }\n\n    if (!customContent) {\n      if (!hasAnySelections && !placeholderText) {\n        const childPlaceholder = React.Children.toArray(children).filter(\n          (child: React.ReactNode) => (child as React.ReactElement).props.isPlaceholder === true\n        );\n        childPlaceholderText =\n          (childPlaceholder[0] && this.getDisplay((childPlaceholder[0] as React.ReactElement).props.value, 'node')) ||\n          (children[0] && this.getDisplay(children[0].props.value, 'node'));\n      }\n    }\n\n    if (isOpen) {\n      if (renderableItems.find(item => (item as any)?.key === 'loading') === undefined) {\n        if (loadingVariant === 'spinner') {\n          renderableItems.push(\n            <SelectOption isLoading key=\"loading\" value=\"loading\">\n              <Spinner size=\"lg\" />\n            </SelectOption>\n          );\n        } else if (loadingVariant?.text) {\n          renderableItems.push(\n            <SelectOption\n              isLoad\n              key=\"loading\"\n              value={loadingVariant.text}\n              setViewMoreNextIndex={this.setVieMoreNextIndex}\n              onClick={loadingVariant?.onClick}\n            />\n          );\n        }\n      }\n    }\n\n    const hasOnClear = onClear !== Select.defaultProps.onClear;\n    const clearBtn = (\n      <button\n        className={css(buttonStyles.button, buttonStyles.modifiers.plain, styles.selectToggleClear)}\n        onClick={e => {\n          this.clearSelection(e);\n          onClear(e);\n          e.stopPropagation();\n        }}\n        aria-label={clearSelectionsAriaLabel}\n        type=\"button\"\n        disabled={isDisabled}\n        ref={this.clearRef}\n        onKeyDown={event => {\n          if (event.key === KeyTypes.Enter) {\n            this.clearRef.current.click();\n          }\n        }}\n      >\n        <TimesCircleIcon aria-hidden />\n      </button>\n    );\n\n    let selectedChips = null as any;\n    if (variant === SelectVariant.typeaheadMulti) {\n      selectedChips = chipGroupComponent ? (\n        chipGroupComponent\n      ) : (\n        <ChipGroup {...chipGroupProps}>\n          {selections &&\n            (selections as string[]).map(item => (\n              <Chip\n                key={item}\n                onClick={(e: React.MouseEvent) => onSelect(e, item)}\n                closeBtnAriaLabel={removeSelectionAriaLabel}\n              >\n                {this.getDisplay(item, 'node')}\n              </Chip>\n            ))}\n        </ChipGroup>\n      );\n    }\n\n    if (hasInlineFilter) {\n      const filterBox = (\n        <React.Fragment>\n          <div key=\"inline-filter\" className={css(styles.selectMenuSearch)}>\n            <input\n              key=\"inline-filter-input\"\n              type=\"search\"\n              className={css(formStyles.formControl, formStyles.modifiers.search)}\n              onChange={this.onChange}\n              placeholder={inlineFilterPlaceholderText}\n              onKeyDown={event => {\n                if (event.key === KeyTypes.ArrowUp) {\n                  this.handleMenuKeys(0, 0, 'up');\n                  event.preventDefault();\n                } else if (event.key === KeyTypes.ArrowDown) {\n                  this.handleMenuKeys(0, 0, 'down');\n                  event.preventDefault();\n                } else if (event.key === KeyTypes.ArrowLeft) {\n                  this.handleMenuKeys(0, 0, 'left');\n                  event.preventDefault();\n                } else if (event.key === KeyTypes.ArrowRight) {\n                  this.handleMenuKeys(0, 0, 'right');\n                  event.preventDefault();\n                } else if (event.key === KeyTypes.Tab && variant !== SelectVariant.checkbox && this.props.footer) {\n                  // tab to footer or close menu if shift key\n                  if (event.shiftKey) {\n                    this.onToggle(false, event);\n                  } else {\n                    const tabbableItems = findTabbableElements(this.footerRef, SelectFooterTabbableItems);\n                    if (tabbableItems.length > 0) {\n                      tabbableItems[0].focus();\n                      event.stopPropagation();\n                      event.preventDefault();\n                    } else {\n                      this.onToggle(false, event);\n                    }\n                  }\n                } else if (event.key === KeyTypes.Tab && variant === SelectVariant.checkbox) {\n                  // More modal-like experience for checkboxes\n                  // Let SelectOption handle this\n                  if (event.shiftKey) {\n                    this.handleMenuKeys(0, 0, 'up');\n                  } else {\n                    this.handleMenuKeys(0, 0, 'down');\n                  }\n                  event.stopPropagation();\n                  event.preventDefault();\n                }\n              }}\n              ref={this.filterRef}\n              autoComplete={inputAutoComplete}\n            />\n          </div>\n          <Divider key=\"inline-filter-divider\" />\n        </React.Fragment>\n      );\n      renderableItems = [filterBox, ...(typeaheadFilteredChildren as React.ReactElement[])].map((option, index) =>\n        React.cloneElement(option, { key: index })\n      );\n    }\n\n    let variantProps: any;\n    let variantChildren: any;\n    if (customContent) {\n      variantProps = {\n        selected: selections,\n        openedOnEnter,\n        isCustomContent: true\n      };\n      variantChildren = customContent;\n    } else {\n      switch (variant) {\n        case 'single':\n          variantProps = {\n            selected: selections[0],\n            hasInlineFilter,\n            openedOnEnter\n          };\n          variantChildren = renderableItems;\n          break;\n        case 'checkbox':\n          variantProps = {\n            checked: selections,\n            isGrouped,\n            hasInlineFilter,\n            openedOnEnter\n          };\n          variantChildren = renderableItems;\n          break;\n        case 'typeahead':\n          variantProps = {\n            selected: selections[0],\n            openedOnEnter\n          };\n          variantChildren = onFavorite ? renderableItems : this.extendTypeaheadChildren(typeaheadCurrIndex);\n          if (variantChildren.length === 0) {\n            variantChildren.push(<SelectOption isDisabled key={0} value={noResultsFoundText} isNoResultsOption />);\n          }\n          break;\n        case 'typeaheadmulti':\n          variantProps = {\n            selected: selections,\n            openedOnEnter\n          };\n          variantChildren = onFavorite ? renderableItems : this.extendTypeaheadChildren(typeaheadCurrIndex);\n          if (variantChildren.length === 0) {\n            variantChildren.push(<SelectOption isDisabled key={0} value={noResultsFoundText} isNoResultsOption />);\n          }\n          break;\n      }\n    }\n\n    const isStatic = isFlipEnabled && menuAppendTo !== 'inline';\n    const innerMenu = (\n      <SelectMenu\n        className={css(isStatic && styles.modifiers.static)}\n        {...props}\n        isGrouped={isGrouped}\n        selected={selections}\n        {...variantProps}\n        openedOnEnter={openedOnEnter}\n        aria-label={ariaLabel}\n        aria-labelledby={ariaLabelledBy}\n        sendRef={this.sendRef}\n        keyHandler={this.handleMenuKeys}\n        maxHeight={maxHeight}\n        ref={this.menuComponentRef}\n        footer={footer}\n        footerRef={this.footerRef}\n        isLastOptionBeforeFooter={this.isLastOptionBeforeFooter}\n      >\n        {variantChildren}\n      </SelectMenu>\n    );\n\n    const menuContainer = footer ? <div className={css(styles.selectMenu)}> {innerMenu} </div> : innerMenu;\n\n    const popperContainer = (\n      <div\n        className={css(\n          styles.select,\n          isOpen && styles.modifiers.expanded,\n          validated === ValidatedOptions.success && styles.modifiers.success,\n          validated === ValidatedOptions.warning && styles.modifiers.warning,\n          validated === ValidatedOptions.error && styles.modifiers.invalid,\n          direction === SelectDirection.up && styles.modifiers.top,\n          className\n        )}\n        {...(width && { style: { width } })}\n        {...(validated !== ValidatedOptions.default && { 'aria-invalid': ariaInvalid })}\n      >\n        {isOpen && menuContainer}\n      </div>\n    );\n\n    const mainContainer = (\n      <div\n        className={css(\n          styles.select,\n          isOpen && styles.modifiers.expanded,\n          validated === ValidatedOptions.success && styles.modifiers.success,\n          validated === ValidatedOptions.warning && styles.modifiers.warning,\n          validated === ValidatedOptions.error && styles.modifiers.invalid,\n          direction === SelectDirection.up && styles.modifiers.top,\n          className\n        )}\n        ref={this.parentRef}\n        {...getOUIAProps(Select.displayName, ouiaId !== undefined ? ouiaId : this.state.ouiaStateId, ouiaSafe)}\n        {...(width && { style: { width } })}\n        {...(validated !== ValidatedOptions.default && { 'aria-invalid': ariaInvalid })}\n      >\n        <SelectToggle\n          id={selectToggleId}\n          parentRef={this.parentRef}\n          menuRef={this.menuComponentRef}\n          ref={toggleRef}\n          {...(footer && { footerRef: this.footerRef })}\n          isOpen={isOpen}\n          isPlain={isPlain}\n          hasPlaceholderStyle={\n            hasPlaceholderStyle && (!selections.length || selections[0] === null || isSelectedPlaceholder)\n          }\n          onToggle={this.onToggle}\n          onEnter={this.onEnter}\n          onClose={this.onClose}\n          onBlur={onBlur}\n          variant={variant}\n          toggleIndicator={toggleIndicator}\n          aria-labelledby={`${ariaLabelledBy || ''} ${selectToggleId}`}\n          aria-label={toggleAriaLabel}\n          {...(ariaDescribedby && { 'aria-describedby': ariaDescribedby })}\n          handleTypeaheadKeys={this.handleTypeaheadKeys}\n          moveFocusToLastMenuItem={this.moveFocusToLastMenuItem}\n          isDisabled={isDisabled}\n          hasClearButton={hasOnClear}\n          hasFooter={footer !== undefined}\n          onClickTypeaheadToggleButton={this.onClickTypeaheadToggleButton}\n        >\n          {customContent && (\n            <div className={css(styles.selectToggleWrapper)}>\n              {toggleIcon && <span className={css(styles.selectToggleIcon)}>{toggleIcon}</span>}\n              <span className={css(styles.selectToggleText)}>{placeholderText}</span>\n            </div>\n          )}\n          {variant === SelectVariant.single && !customContent && (\n            <React.Fragment>\n              <div className={css(styles.selectToggleWrapper)}>\n                {toggleIcon && <span className={css(styles.selectToggleIcon)}>{toggleIcon}</span>}\n                <span className={css(styles.selectToggleText)}>\n                  {this.getDisplay(selections[0] as string, 'node') || placeholderText || childPlaceholderText}\n                </span>\n              </div>\n              {hasOnClear && hasAnySelections && clearBtn}\n            </React.Fragment>\n          )}\n          {variant === SelectVariant.checkbox && !customContent && (\n            <React.Fragment>\n              <div className={css(styles.selectToggleWrapper)}>\n                {toggleIcon && <span className={css(styles.selectToggleIcon)}>{toggleIcon}</span>}\n                <span className={css(styles.selectToggleText)}>{placeholderText}</span>\n                {!isCheckboxSelectionBadgeHidden && hasAnySelections && (\n                  <div className={css(styles.selectToggleBadge)}>\n                    <span className={css(badgeStyles.badge, badgeStyles.modifiers.read)}>\n                      {this.generateSelectedBadge()}\n                    </span>\n                  </div>\n                )}\n              </div>\n              {hasOnClear && hasAnySelections && clearBtn}\n            </React.Fragment>\n          )}\n          {variant === SelectVariant.typeahead && !customContent && (\n            <React.Fragment>\n              <div className={css(styles.selectToggleWrapper)}>\n                {toggleIcon && <span className={css(styles.selectToggleIcon)}>{toggleIcon}</span>}\n                <input\n                  className={css(formStyles.formControl, styles.selectToggleTypeahead)}\n                  aria-activedescendant={typeaheadActiveChild && typeaheadActiveChild.id}\n                  id={`${selectToggleId}-select-typeahead`}\n                  aria-label={typeAheadAriaLabel}\n                  {...(typeAheadAriaDescribedby && { 'aria-describedby': typeAheadAriaDescribedby })}\n                  placeholder={placeholderText as string}\n                  value={\n                    typeaheadInputValue !== null\n                      ? typeaheadInputValue\n                      : this.getDisplay(selections[0] as string, 'text') || ''\n                  }\n                  type=\"text\"\n                  onClick={this.onClick}\n                  onChange={this.onChange}\n                  autoComplete={inputAutoComplete}\n                  disabled={isDisabled}\n                  ref={this.inputRef}\n                />\n              </div>\n              {hasOnClear && (selections[0] || typeaheadInputValue) && clearBtn}\n            </React.Fragment>\n          )}\n          {variant === SelectVariant.typeaheadMulti && !customContent && (\n            <React.Fragment>\n              <div className={css(styles.selectToggleWrapper)}>\n                {toggleIcon && <span className={css(styles.selectToggleIcon)}>{toggleIcon}</span>}\n                {selections && Array.isArray(selections) && selections.length > 0 && selectedChips}\n                <input\n                  className={css(formStyles.formControl, styles.selectToggleTypeahead)}\n                  aria-activedescendant={typeaheadActiveChild && typeaheadActiveChild.id}\n                  id={`${selectToggleId}-select-multi-typeahead-typeahead`}\n                  aria-label={typeAheadAriaLabel}\n                  aria-invalid={validated === ValidatedOptions.error}\n                  {...(typeAheadAriaDescribedby && { 'aria-describedby': typeAheadAriaDescribedby })}\n                  placeholder={placeholderText as string}\n                  value={typeaheadInputValue !== null ? typeaheadInputValue : ''}\n                  type=\"text\"\n                  onChange={this.onChange}\n                  onClick={this.onClick}\n                  autoComplete={inputAutoComplete}\n                  disabled={isDisabled}\n                  ref={this.inputRef}\n                />\n              </div>\n              {hasOnClear && ((selections && selections.length > 0) || typeaheadInputValue) && clearBtn}\n            </React.Fragment>\n          )}\n          {validated === ValidatedOptions.success && (\n            <span className={css(styles.selectToggleStatusIcon)}>\n              <CheckCircleIcon aria-hidden=\"true\" />\n            </span>\n          )}\n          {validated === ValidatedOptions.error && (\n            <span className={css(styles.selectToggleStatusIcon)}>\n              <ExclamationCircleIcon aria-hidden=\"true\" />\n            </span>\n          )}\n          {validated === ValidatedOptions.warning && (\n            <span className={css(styles.selectToggleStatusIcon)}>\n              <ExclamationTriangleIcon aria-hidden=\"true\" />\n            </span>\n          )}\n        </SelectToggle>\n        {isOpen && menuAppendTo === 'inline' && menuContainer}\n      </div>\n    );\n\n    const getParentElement = () => {\n      if (this.parentRef && this.parentRef.current) {\n        return this.parentRef.current.parentElement;\n      }\n      return null;\n    };\n\n    return (\n      <GenerateId>\n        {randomId => (\n          <SelectContext.Provider\n            value={{\n              onSelect,\n              onFavorite,\n              onClose: this.onClose,\n              variant,\n              inputIdPrefix: inputIdPrefix || randomId,\n              shouldResetOnSelect\n            }}\n          >\n            {menuAppendTo === 'inline' ? (\n              mainContainer\n            ) : (\n              <Popper\n                trigger={mainContainer}\n                popper={popperContainer}\n                direction={direction}\n                appendTo={menuAppendTo === 'parent' ? getParentElement() : menuAppendTo}\n                isVisible={isOpen}\n                removeFindDomNode={removeFindDomNode}\n                zIndex={zIndex}\n              />\n            )}\n          </SelectContext.Provider>\n        )}\n      </GenerateId>\n    );\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import * as React from 'react';\nexport var ToggleTemplate = function ToggleTemplate(_ref) {\n  var _ref$firstIndex = _ref.firstIndex,\n    firstIndex = _ref$firstIndex === void 0 ? 0 : _ref$firstIndex,\n    _ref$lastIndex = _ref.lastIndex,\n    lastIndex = _ref$lastIndex === void 0 ? 0 : _ref$lastIndex,\n    _ref$itemCount = _ref.itemCount,\n    itemCount = _ref$itemCount === void 0 ? 0 : _ref$itemCount,\n    _ref$itemsTitle = _ref.itemsTitle,\n    itemsTitle = _ref$itemsTitle === void 0 ? 'items' : _ref$itemsTitle,\n    _ref$ofWord = _ref.ofWord,\n    ofWord = _ref$ofWord === void 0 ? 'of' : _ref$ofWord;\n  return React.createElement(React.Fragment, null, React.createElement(\"b\", null, firstIndex, \" - \", lastIndex), ' ', ofWord, \" \", React.createElement(\"b\", null, itemCount), \" \", itemsTitle);\n};\nToggleTemplate.displayName = 'ToggleTemplate';","map":{"version":3,"names":["React","ToggleTemplate","_ref","_ref$firstIndex","firstIndex","_ref$lastIndex","lastIndex","_ref$itemCount","itemCount","_ref$itemsTitle","itemsTitle","_ref$ofWord","ofWord","createElement","Fragment","displayName"],"sources":["/data/stackhub-web/plugins/myapps/node_modules/@patternfly/react-core/src/components/Pagination/ToggleTemplate.tsx"],"sourcesContent":["import * as React from 'react';\n\n/** Allows more customization of the pagination dropdown toggle. The following properties\n * should be passed into the pagination component's toggleTemplate property.\n */\n\nexport interface ToggleTemplateProps {\n  /** The first index of the items being paginated */\n  firstIndex?: number;\n  /** The last index of the items being paginated */\n  lastIndex?: number;\n  /** The total number of items being paginated */\n  itemCount?: number;\n  /** The type or title of the items being paginated */\n  itemsTitle?: string;\n  /** The word that joins the index and itemCount/itemsTitle */\n  ofWord?: React.ReactNode;\n}\n\nexport const ToggleTemplate: React.FunctionComponent<ToggleTemplateProps> = ({\n  firstIndex = 0,\n  lastIndex = 0,\n  itemCount = 0,\n  itemsTitle = 'items',\n  ofWord = 'of'\n}: ToggleTemplateProps) => (\n  <React.Fragment>\n    <b>\n      {firstIndex} - {lastIndex}\n    </b>{' '}\n    {ofWord} <b>{itemCount}</b> {itemsTitle}\n  </React.Fragment>\n);\nToggleTemplate.displayName = 'ToggleTemplate';\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAmB9B,OAAO,IAAMC,cAAc,GAAiD,SAA/DA,cAAcA,CAAAC,IAAA;EAAA,IAAAC,eAAA,GAAAD,IAAA,CACzBE,UAAU;IAAVA,UAAU,GAAAD,eAAA,cAAG,CAAC,GAAAA,eAAA;IAAAE,cAAA,GAAAH,IAAA,CACdI,SAAS;IAATA,SAAS,GAAAD,cAAA,cAAG,CAAC,GAAAA,cAAA;IAAAE,cAAA,GAAAL,IAAA,CACbM,SAAS;IAATA,SAAS,GAAAD,cAAA,cAAG,CAAC,GAAAA,cAAA;IAAAE,eAAA,GAAAP,IAAA,CACbQ,UAAU;IAAVA,UAAU,GAAAD,eAAA,cAAG,OAAO,GAAAA,eAAA;IAAAE,WAAA,GAAAT,IAAA,CACpBU,MAAM;IAANA,MAAM,GAAAD,WAAA,cAAG,IAAI,GAAAA,WAAA;EAAA,OAEbX,KAAA,CAAAa,aAAA,CAACb,KAAK,CAACc,QAAQ,QACbd,KAAA,CAAAa,aAAA,YACGT,UAAU,E,OAAKE,SAAS,CACvB,EAAC,GAAG,EACPM,MAAM,E,KAAEZ,KAAA,CAAAa,aAAA,YAAIL,SAAS,CAAK,E,KAAEE,UAAU,CACxB;AAAA,CAClB;AACDT,cAAc,CAACc,WAAW,GAAG,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import _slicedToArray from \"/data/stackhub-web/plugins/myapps/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/DataList/data-list';\nimport { Tooltip } from '../Tooltip';\nexport var DataListText = function DataListText(_a) {\n  var _a$children = _a.children,\n    children = _a$children === void 0 ? null : _a$children,\n    _a$className = _a.className,\n    className = _a$className === void 0 ? '' : _a$className,\n    _a$component = _a.component,\n    component = _a$component === void 0 ? 'span' : _a$component,\n    _a$wrapModifier = _a.wrapModifier,\n    wrapModifier = _a$wrapModifier === void 0 ? null : _a$wrapModifier,\n    _a$tooltip = _a.tooltip,\n    tooltipProp = _a$tooltip === void 0 ? '' : _a$tooltip,\n    _a$onMouseEnter = _a.onMouseEnter,\n    onMouseEnterProp = _a$onMouseEnter === void 0 ? function () {} : _a$onMouseEnter,\n    props = __rest(_a, [\"children\", \"className\", \"component\", \"wrapModifier\", \"tooltip\", \"onMouseEnter\"]);\n  var Component = component;\n  var _React$useState = React.useState(''),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    tooltip = _React$useState2[0],\n    setTooltip = _React$useState2[1];\n  var onMouseEnter = function onMouseEnter(event) {\n    if (event.target.offsetWidth < event.target.scrollWidth) {\n      setTooltip(tooltipProp || event.target.innerHTML);\n    } else {\n      setTooltip('');\n    }\n    onMouseEnterProp(event);\n  };\n  var text = React.createElement(Component, Object.assign({\n    onMouseEnter: onMouseEnter,\n    className: css(className, wrapModifier && styles.modifiers[wrapModifier], styles.dataListText)\n  }, props), children);\n  return tooltip !== '' ? React.createElement(Tooltip, {\n    content: tooltip,\n    isVisible: true\n  }, text) : text;\n};\nDataListText.displayName = 'DataListText';","map":{"version":3,"names":["React","css","styles","Tooltip","DataListText","_a","children","_a$children","_a$className","className","_a$component","component","_a$wrapModifier","wrapModifier","_a$tooltip","tooltip","tooltipProp","_a$onMouseEnter","onMouseEnter","onMouseEnterProp","props","__rest","Component","_React$useState","useState","_React$useState2","_slicedToArray","setTooltip","event","target","offsetWidth","scrollWidth","innerHTML","text","createElement","Object","assign","modifiers","dataListText","content","isVisible","displayName"],"sources":["/data/stackhub-web/plugins/myapps/node_modules/@patternfly/react-core/src/components/DataList/DataListText.tsx"],"sourcesContent":["import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/DataList/data-list';\nimport { Tooltip } from '../Tooltip';\nimport { DataListWrapModifier } from './DataList';\n\nexport interface DataListTextProps extends React.HTMLProps<HTMLDivElement> {\n  /** Content rendered within the data list text */\n  children?: React.ReactNode;\n  /** Additional classes added to the data list text */\n  className?: string;\n  /** Determines which element to render as a data list text. Usually div or span */\n  component?: React.ReactNode;\n  /** Determines which wrapping modifier to apply to the data list text */\n  wrapModifier?: DataListWrapModifier | 'nowrap' | 'truncate' | 'breakWord';\n  /** text to display on the tooltip */\n  tooltip?: string;\n  /** callback used to create the tooltip if text is truncated */\n  onMouseEnter?: (event: any) => void;\n}\n\nexport const DataListText: React.FunctionComponent<DataListTextProps> = ({\n  children = null,\n  className = '',\n  component = 'span',\n  wrapModifier = null,\n  tooltip: tooltipProp = '',\n  onMouseEnter: onMouseEnterProp = () => {},\n  ...props\n}: DataListTextProps) => {\n  const Component = component as any;\n\n  const [tooltip, setTooltip] = React.useState('');\n  const onMouseEnter = (event: any) => {\n    if (event.target.offsetWidth < event.target.scrollWidth) {\n      setTooltip(tooltipProp || event.target.innerHTML);\n    } else {\n      setTooltip('');\n    }\n    onMouseEnterProp(event);\n  };\n\n  const text = (\n    <Component\n      onMouseEnter={onMouseEnter}\n      className={css(className, wrapModifier && styles.modifiers[wrapModifier], styles.dataListText)}\n      {...props}\n    >\n      {children}\n    </Component>\n  );\n\n  return tooltip !== '' ? (\n    <Tooltip content={tooltip} isVisible>\n      {text}\n    </Tooltip>\n  ) : (\n    text\n  );\n};\nDataListText.displayName = 'DataListText';\n"],"mappings":";;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,GAAG,QAAQ,0BAA0B;AAC9C,OAAOC,MAAM,MAAM,4DAA4D;AAC/E,SAASC,OAAO,QAAQ,YAAY;AAkBpC,OAAO,IAAMC,YAAY,GAA+C,SAA3DA,YAAYA,CAAgDC,EAQrD,EAAI;oBAFmBA,EAEvB,CAPlBC,QAAQ;IAARA,QAAQ,GAAAC,WAAA,cAAG,IAAI,GAAAA,WAAA;IAAAC,YAAA,GAK0BH,EAEvB,CANlBI,SAAS;IAATA,SAAS,GAAAD,YAAA,cAAG,EAAE,GAAAA,YAAA;IAAAE,YAAA,GAI2BL,EAEvB,CALlBM,SAAS;IAATA,SAAS,GAAAD,YAAA,cAAG,MAAM,GAAAA,YAAA;IAAAE,eAAA,GAGuBP,EAEvB,CAJlBQ,YAAY;IAAZA,YAAY,GAAAD,eAAA,cAAG,IAAI,GAAAA,eAAA;IAAAE,UAAA,GAEsBT,EAEvB,CAHlBU,OAAO;IAAEC,WAAW,GAAAF,UAAA,cAAG,EAAE,GAAAA,UAAA;IAAAG,eAAA,GACgBZ,EAEvB,CAFlBa,YAAY;IAAEC,gBAAgB,GAAAF,eAAA,cAAG,YAAK,CAAE,CAAC,GAAAA,eAAA;IACtCG,KAAK,GAAAC,MAAA,CAAAhB,EAAA,EAP+D,iFAQxE,CADS;EAER,IAAMiB,SAAS,GAAGX,SAAgB;EAElC,IAAAY,eAAA,GAA8BvB,KAAK,CAACwB,QAAQ,CAAC,EAAE,CAAC;IAAAC,gBAAA,GAAAC,cAAA,CAAAH,eAAA;IAAzCR,OAAO,GAAAU,gBAAA;IAAEE,UAAU,GAAAF,gBAAA;EAC1B,IAAMP,YAAY,GAAG,SAAfA,YAAYA,CAAIU,KAAU,EAAI;IAClC,IAAIA,KAAK,CAACC,MAAM,CAACC,WAAW,GAAGF,KAAK,CAACC,MAAM,CAACE,WAAW,EAAE;MACvDJ,UAAU,CAACX,WAAW,IAAIY,KAAK,CAACC,MAAM,CAACG,SAAS,CAAC;KAClD,MAAM;MACLL,UAAU,CAAC,EAAE,CAAC;;IAEhBR,gBAAgB,CAACS,KAAK,CAAC;EACzB,CAAC;EAED,IAAMK,IAAI,GACRjC,KAAA,CAAAkC,aAAA,CAACZ,SAAS,EAAAa,MAAA,CAAAC,MAAA;IACRlB,YAAY,EAAEA,YAAY;IAC1BT,SAAS,EAAER,GAAG,CAACQ,SAAS,EAAEI,YAAY,IAAIX,MAAM,CAACmC,SAAS,CAACxB,YAAY,CAAC,EAAEX,MAAM,CAACoC,YAAY;EAAC,GAC1FlB,KAAK,GAERd,QAAQ,CAEZ;EAED,OAAOS,OAAO,KAAK,EAAE,GACnBf,KAAA,CAAAkC,aAAA,CAAC/B,OAAO;IAACoC,OAAO,EAAExB,OAAO;IAAEyB,SAAS;EAAA,GACjCP,IAAI,CACG,GAEVA,IACD;AACH,CAAC;AACD7B,YAAY,CAACqC,WAAW,GAAG,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/TextInputGroup/text-input-group';\nimport { css } from '@patternfly/react-styles';\nexport var TextInputGroupContext = React.createContext({\n  isDisabled: false\n});\nexport var TextInputGroup = function TextInputGroup(_a) {\n  var children = _a.children,\n    className = _a.className,\n    isDisabled = _a.isDisabled,\n    isPlain = _a.isPlain,\n    innerRef = _a.innerRef,\n    props = __rest(_a, [\"children\", \"className\", \"isDisabled\", \"isPlain\", \"innerRef\"]);\n  var ref = React.useRef(null);\n  var textInputGroupRef = innerRef || ref;\n  return React.createElement(TextInputGroupContext.Provider, {\n    value: {\n      isDisabled: isDisabled\n    }\n  }, React.createElement(\"div\", Object.assign({\n    ref: textInputGroupRef,\n    className: css(styles.textInputGroup, isDisabled && styles.modifiers.disabled, isPlain && styles.modifiers.plain, className)\n  }, props), children));\n};\nTextInputGroup.displayName = 'TextInputGroup';","map":{"version":3,"names":["React","styles","css","TextInputGroupContext","createContext","isDisabled","TextInputGroup","_a","children","className","isPlain","innerRef","props","__rest","ref","useRef","textInputGroupRef","createElement","Provider","value","Object","assign","textInputGroup","modifiers","disabled","plain","displayName"],"sources":["/data/stackhub-web/plugins/myapps/node_modules/@patternfly/react-core/src/components/TextInputGroup/TextInputGroup.tsx"],"sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/TextInputGroup/text-input-group';\nimport { css } from '@patternfly/react-styles';\n\nexport interface TextInputGroupProps extends React.HTMLProps<HTMLDivElement> {\n  /** Content rendered inside the text input group */\n  children?: React.ReactNode;\n  /** Additional classes applied to the text input group container */\n  className?: string;\n  /** Adds disabled styling and a disabled context value which text input group main hooks into for the input itself */\n  isDisabled?: boolean;\n  /** Flag to indicate the toggle has no border or background */\n  isPlain?: boolean;\n  /** @hide A reference object to attach to the input box */\n  innerRef?: React.RefObject<any>;\n}\n\nexport const TextInputGroupContext = React.createContext<Partial<TextInputGroupProps>>({\n  isDisabled: false\n});\n\nexport const TextInputGroup: React.FunctionComponent<TextInputGroupProps> = ({\n  children,\n  className,\n  isDisabled,\n  isPlain,\n  innerRef,\n  ...props\n}: TextInputGroupProps) => {\n  const ref = React.useRef(null);\n  const textInputGroupRef = innerRef || ref;\n\n  return (\n    <TextInputGroupContext.Provider value={{ isDisabled }}>\n      <div\n        ref={textInputGroupRef}\n        className={css(\n          styles.textInputGroup,\n          isDisabled && styles.modifiers.disabled,\n          isPlain && styles.modifiers.plain,\n          className\n        )}\n        {...props}\n      >\n        {children}\n      </div>\n    </TextInputGroupContext.Provider>\n  );\n};\n\nTextInputGroup.displayName = 'TextInputGroup';\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,MAAM,MAAM,yEAAyE;AAC5F,SAASC,GAAG,QAAQ,0BAA0B;AAe9C,OAAO,IAAMC,qBAAqB,GAAGH,KAAK,CAACI,aAAa,CAA+B;EACrFC,UAAU,EAAE;CACb,CAAC;AAEF,OAAO,IAAMC,cAAc,GAAiD,SAA/DA,cAAcA,CAAkDC,EAOvD,EAAI;MANxBC,QAAQ,GAIAD,EAEY,CANpBC,QAAQ;IACRC,SAAS,GAGDF,EAEY,CALpBE,SAAS;IACTJ,UAAU,GAEFE,EAEY,CAJpBF,UAAU;IACVK,OAAO,GACCH,EAEY,CAHpBG,OAAO;IACPC,QAAQ,GAAAJ,EAEY,CAFpBI,QAAQ;IACLC,KAAK,GAAAC,MAAA,CAAAN,EAAA,EANmE,8DAO5E,CADS;EAER,IAAMO,GAAG,GAAGd,KAAK,CAACe,MAAM,CAAC,IAAI,CAAC;EAC9B,IAAMC,iBAAiB,GAAGL,QAAQ,IAAIG,GAAG;EAEzC,OACEd,KAAA,CAAAiB,aAAA,CAACd,qBAAqB,CAACe,QAAQ;IAACC,KAAK,EAAE;MAAEd,UAAU,EAAVA;IAAU;EAAE,GACnDL,KAAA,CAAAiB,aAAA,QAAAG,MAAA,CAAAC,MAAA;IACEP,GAAG,EAAEE,iBAAiB;IACtBP,SAAS,EAAEP,GAAG,CACZD,MAAM,CAACqB,cAAc,EACrBjB,UAAU,IAAIJ,MAAM,CAACsB,SAAS,CAACC,QAAQ,EACvCd,OAAO,IAAIT,MAAM,CAACsB,SAAS,CAACE,KAAK,EACjChB,SAAS;EACV,GACGG,KAAK,GAERJ,QAAQ,CACL,CACyB;AAErC,CAAC;AAEDF,cAAc,CAACoB,WAAW,GAAG,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}
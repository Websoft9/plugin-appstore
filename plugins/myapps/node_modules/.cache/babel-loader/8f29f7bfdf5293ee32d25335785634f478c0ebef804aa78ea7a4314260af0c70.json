{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/EmptyState/empty-state';\nexport var EmptyStateIcon = function EmptyStateIcon(_a) {\n  var _a$className = _a.className,\n    className = _a$className === void 0 ? '' : _a$className,\n    IconComponent = _a.icon,\n    AnyComponent = _a.component,\n    _a$variant = _a.variant,\n    variant = _a$variant === void 0 ? 'icon' : _a$variant,\n    props = __rest(_a, [\"className\", \"icon\", \"component\", \"variant\"]);\n  var classNames = css(styles.emptyStateIcon, className);\n  return variant === 'icon' ? React.createElement(IconComponent, Object.assign({\n    className: classNames\n  }, props, {\n    \"aria-hidden\": \"true\"\n  })) : React.createElement(\"div\", {\n    className: classNames\n  }, React.createElement(AnyComponent, null));\n};\nEmptyStateIcon.displayName = 'EmptyStateIcon';","map":{"version":3,"names":["React","css","styles","EmptyStateIcon","_a","className","_a$className","IconComponent","icon","AnyComponent","component","_a$variant","variant","props","__rest","classNames","emptyStateIcon","createElement","Object","assign","displayName"],"sources":["/data/stackhub-web/plugins/myapps/node_modules/@patternfly/react-core/src/components/EmptyState/EmptyStateIcon.tsx"],"sourcesContent":["import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/EmptyState/empty-state';\n\nexport interface IconProps extends Omit<React.HTMLProps<SVGElement>, 'size'> {\n  /** Changes the color of the icon.  */\n  color?: string;\n}\n\nexport interface EmptyStateIconProps extends IconProps {\n  /** Additional classes added to the EmptyState */\n  className?: string;\n  /** Icon component to be rendered inside the EmptyState on icon variant\n   * Usually a CheckCircleIcon, ExclamationCircleIcon, LockIcon, PlusCircleIcon, RocketIcon\n   * SearchIcon, or WrenchIcon */\n  icon?: React.ComponentType<any>;\n  /** Component to be rendered inside the EmptyState on container variant */\n  component?: React.ComponentType<any>;\n  /** Adds empty state icon variant styles  */\n  variant?: 'icon' | 'container';\n}\n\nexport const EmptyStateIcon: React.FunctionComponent<EmptyStateIconProps> = ({\n  className = '',\n  icon: IconComponent,\n  component: AnyComponent,\n  variant = 'icon',\n  ...props\n}: EmptyStateIconProps) => {\n  const classNames = css(styles.emptyStateIcon, className);\n  return variant === 'icon' ? (\n    <IconComponent className={classNames} {...props} aria-hidden=\"true\" />\n  ) : (\n    <div className={classNames}>\n      <AnyComponent />\n    </div>\n  );\n};\nEmptyStateIcon.displayName = 'EmptyStateIcon';\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,GAAG,QAAQ,0BAA0B;AAC9C,OAAOC,MAAM,MAAM,gEAAgE;AAoBnF,OAAO,IAAMC,cAAc,GAAiD,SAA/DA,cAAcA,CAAkDC,EAMvD,EAAI;qBAFRA,EAEI,CALpBC,SAAS;IAATA,SAAS,GAAAC,YAAA,cAAG,EAAE,GAAAA,YAAA;IACRC,aAAa,GAEHH,EAEI,CAJpBI,IAAI;IACOC,YAAY,GACPL,EAEI,CAHpBM,SAAS;IAAAC,UAAA,GACOP,EAEI,CAFpBQ,OAAO;IAAPA,OAAO,GAAAD,UAAA,cAAG,MAAM,GAAAA,UAAA;IACbE,KAAK,GAAAC,MAAA,CAAAV,EAAA,EALmE,6CAM5E,CADS;EAER,IAAMW,UAAU,GAAGd,GAAG,CAACC,MAAM,CAACc,cAAc,EAAEX,SAAS,CAAC;EACxD,OAAOO,OAAO,KAAK,MAAM,GACvBZ,KAAA,CAAAiB,aAAA,CAACV,aAAa,EAAAW,MAAA,CAAAC,MAAA;IAACd,SAAS,EAAEU;EAAU,GAAMF,KAAK;IAAA,eAAc;EAAM,GAAG,GAEtEb,KAAA,CAAAiB,aAAA;IAAKZ,SAAS,EAAEU;EAAU,GACxBf,KAAA,CAAAiB,aAAA,CAACR,YAAY,OAAG,CAEnB;AACH,CAAC;AACDN,cAAc,CAACiB,WAAW,GAAG,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import _createForOfIteratorHelper from \"/data/stackhub-web/plugins/myapps/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _slicedToArray from \"/data/stackhub-web/plugins/myapps/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/JumpLinks/jump-links';\nimport sidebarStyles from '@patternfly/react-styles/css/components/Sidebar/sidebar';\nimport { JumpLinksItem } from './JumpLinksItem';\nimport { JumpLinksList } from './JumpLinksList';\nimport { formatBreakpointMods } from '../../helpers/util';\nimport { Button } from '../Button';\nimport AngleRightIcon from '@patternfly/react-icons/dist/esm/icons/angle-right-icon';\nimport cssToggleDisplayVar from '@patternfly/react-tokens/dist/esm/c_jump_links__toggle_Display';\nimport { canUseDOM } from '../../helpers/util';\n// Recursively find JumpLinkItems and return an array of all their scrollNodes\nvar getScrollItems = function getScrollItems(children, res) {\n  React.Children.forEach(children, function (child) {\n    if (canUseDOM && document.getElementById && document.querySelector && child.type === JumpLinksItem) {\n      var scrollNode = child.props.node || child.props.href;\n      if (typeof scrollNode === 'string') {\n        if (scrollNode.startsWith('#')) {\n          // Allow spaces and other special characters as `id`s to be nicer to consumers\n          // https://stackoverflow.com/questions/70579/what-are-valid-values-for-the-id-attribute-in-html\n          res.push(document.getElementById(scrollNode.substr(1)));\n        } else {\n          res.push(document.querySelector(scrollNode));\n        }\n      } else if (scrollNode instanceof HTMLElement) {\n        res.push(scrollNode);\n      }\n    }\n    if ([React.Fragment, JumpLinksList, JumpLinksItem].includes(child.type)) {\n      getScrollItems(child.props.children, res);\n    }\n  });\n  return res;\n};\nfunction isResponsive(jumpLinks) {\n  // https://github.com/patternfly/patternfly/blob/main/src/patternfly/components/JumpLinks/jump-links.scss#L103\n  return jumpLinks && getComputedStyle(jumpLinks).getPropertyValue(cssToggleDisplayVar.name).includes('block');\n}\nexport var JumpLinks = function JumpLinks(_a) {\n  var isCentered = _a.isCentered,\n    isVertical = _a.isVertical,\n    children = _a.children,\n    label = _a.label,\n    _a$ariaLabel = _a['aria-label'],\n    ariaLabel = _a$ariaLabel === void 0 ? typeof label === 'string' ? label : null : _a$ariaLabel,\n    scrollableSelector = _a.scrollableSelector,\n    _a$activeIndex = _a.activeIndex,\n    activeIndexProp = _a$activeIndex === void 0 ? 0 : _a$activeIndex,\n    _a$offset = _a.offset,\n    offset = _a$offset === void 0 ? 0 : _a$offset,\n    expandable = _a.expandable,\n    _a$isExpanded = _a.isExpanded,\n    isExpandedProp = _a$isExpanded === void 0 ? false : _a$isExpanded,\n    _a$alwaysShowLabel = _a.alwaysShowLabel,\n    alwaysShowLabel = _a$alwaysShowLabel === void 0 ? true : _a$alwaysShowLabel,\n    _a$toggleAriaLabel = _a.toggleAriaLabel,\n    toggleAriaLabel = _a$toggleAriaLabel === void 0 ? 'Toggle jump links' : _a$toggleAriaLabel,\n    className = _a.className,\n    props = __rest(_a, [\"isCentered\", \"isVertical\", \"children\", \"label\", 'aria-label', \"scrollableSelector\", \"activeIndex\", \"offset\", \"expandable\", \"isExpanded\", \"alwaysShowLabel\", \"toggleAriaLabel\", \"className\"]);\n  var hasScrollSpy = Boolean(scrollableSelector);\n  var _React$useState = React.useState(hasScrollSpy ? getScrollItems(children, []) : []),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    scrollItems = _React$useState2[0],\n    setScrollItems = _React$useState2[1];\n  var _React$useState3 = React.useState(activeIndexProp),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    activeIndex = _React$useState4[0],\n    setActiveIndex = _React$useState4[1];\n  var _React$useState5 = React.useState(isExpandedProp),\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\n    isExpanded = _React$useState6[0],\n    setIsExpanded = _React$useState6[1];\n  // Boolean to disable scroll listener from overriding active state of clicked jumplink\n  var isLinkClicked = React.useRef(false);\n  // Allow expanding to be controlled for a niche use case\n  React.useEffect(function () {\n    return setIsExpanded(isExpandedProp);\n  }, [isExpandedProp]);\n  var navRef = React.useRef();\n  var scrollableElement;\n  var scrollSpy = React.useCallback(function () {\n    if (!canUseDOM || !hasScrollSpy || !(scrollableElement instanceof HTMLElement)) {\n      return;\n    }\n    if (isLinkClicked.current) {\n      isLinkClicked.current = false;\n      return;\n    }\n    var scrollPosition = Math.ceil(scrollableElement.scrollTop + offset);\n    window.requestAnimationFrame(function () {\n      var newScrollItems = scrollItems;\n      // Items might have rendered after this component. Do a quick refresh.\n      if (!newScrollItems[0] || newScrollItems.includes(null)) {\n        newScrollItems = getScrollItems(children, []);\n        setScrollItems(newScrollItems);\n      }\n      var scrollElements = newScrollItems.map(function (e, index) {\n        return {\n          y: e ? e.offsetTop : null,\n          index: index\n        };\n      }).filter(function (_ref) {\n        var y = _ref.y;\n        return y !== null;\n      }).sort(function (e1, e2) {\n        return e2.y - e1.y;\n      });\n      var _iterator = _createForOfIteratorHelper(scrollElements),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var _step$value = _step.value,\n            y = _step$value.y,\n            index = _step$value.index;\n          if (scrollPosition >= y) {\n            return setActiveIndex(index);\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    });\n  }, [scrollItems, hasScrollSpy, scrollableElement, offset]);\n  React.useEffect(function () {\n    scrollableElement = document.querySelector(scrollableSelector);\n    if (!(scrollableElement instanceof HTMLElement)) {\n      return;\n    }\n    scrollableElement.addEventListener('scroll', scrollSpy);\n    return function () {\n      return scrollableElement.removeEventListener('scroll', scrollSpy);\n    };\n  }, [scrollableSelector, scrollSpy]);\n  React.useEffect(function () {\n    scrollSpy();\n  }, []);\n  var jumpLinkIndex = 0;\n  var cloneChildren = function cloneChildren(children) {\n    return !hasScrollSpy ? children : React.Children.map(children, function (child) {\n      if (child.type === JumpLinksItem) {\n        var _child$props = child.props,\n          onClickProp = _child$props.onClick,\n          isActiveProp = _child$props.isActive;\n        var itemIndex = jumpLinkIndex++;\n        var scrollItem = scrollItems[itemIndex];\n        return React.cloneElement(child, {\n          onClick: function onClick(ev) {\n            isLinkClicked.current = true;\n            // Items might have rendered after this component. Do a quick refresh.\n            var newScrollItems;\n            if (!scrollItem) {\n              newScrollItems = getScrollItems(children, []);\n              setScrollItems(newScrollItems);\n            }\n            var newScrollItem = scrollItem || newScrollItems[itemIndex];\n            if (newScrollItem) {\n              // we have to support scrolling to an offset due to sticky sidebar\n              var _scrollableElement = document.querySelector(scrollableSelector);\n              if (_scrollableElement instanceof HTMLElement) {\n                if (isResponsive(navRef.current)) {\n                  // Remove class immediately so we can get collapsed height\n                  if (navRef.current) {\n                    navRef.current.classList.remove(styles.modifiers.expanded);\n                  }\n                  var stickyParent = navRef.current && navRef.current.parentElement;\n                  while (stickyParent && !stickyParent.classList.contains(sidebarStyles.modifiers.sticky)) {\n                    stickyParent = stickyParent.parentElement;\n                  }\n                  setIsExpanded(false);\n                  if (stickyParent) {\n                    offset += stickyParent.scrollHeight;\n                  }\n                }\n                _scrollableElement.scrollTo(0, newScrollItem.offsetTop - offset);\n              }\n              newScrollItem.focus();\n              ev.preventDefault();\n              setActiveIndex(itemIndex);\n            }\n            if (onClickProp) {\n              onClickProp(ev);\n            }\n          },\n          isActive: isActiveProp || activeIndex === itemIndex,\n          children: cloneChildren(child.props.children)\n        });\n      } else if (child.type === React.Fragment) {\n        return cloneChildren(child.props.children);\n      } else if (child.type === JumpLinksList) {\n        return React.cloneElement(child, {\n          children: cloneChildren(child.props.children)\n        });\n      }\n      return child;\n    });\n  };\n  return React.createElement(\"nav\", Object.assign({\n    className: css(styles.jumpLinks, isCentered && styles.modifiers.center, isVertical && styles.modifiers.vertical, formatBreakpointMods(expandable, styles), isExpanded && styles.modifiers.expanded, className),\n    \"aria-label\": ariaLabel,\n    ref: navRef\n  }, props), React.createElement(\"div\", {\n    className: styles.jumpLinksMain\n  }, React.createElement(\"div\", {\n    className: css('pf-c-jump-links__header')\n  }, expandable && React.createElement(\"div\", {\n    className: styles.jumpLinksToggle\n  }, React.createElement(Button, {\n    variant: \"plain\",\n    onClick: function onClick() {\n      return setIsExpanded(!isExpanded);\n    },\n    \"aria-label\": toggleAriaLabel,\n    \"aria-expanded\": isExpanded\n  }, React.createElement(\"span\", {\n    className: styles.jumpLinksToggleIcon\n  }, React.createElement(AngleRightIcon, null)), label && React.createElement(\"span\", {\n    className: css(styles.jumpLinksToggleText)\n  }, \" \", label, \" \"))), label && alwaysShowLabel && React.createElement(\"div\", {\n    className: css(styles.jumpLinksLabel)\n  }, label)), React.createElement(\"ul\", {\n    className: styles.jumpLinksList\n  }, cloneChildren(children))));\n};\nJumpLinks.displayName = 'JumpLinks';","map":{"version":3,"names":["React","css","styles","sidebarStyles","JumpLinksItem","JumpLinksList","formatBreakpointMods","Button","AngleRightIcon","cssToggleDisplayVar","canUseDOM","getScrollItems","children","res","Children","forEach","child","document","getElementById","querySelector","type","scrollNode","props","node","href","startsWith","push","substr","HTMLElement","Fragment","includes","isResponsive","jumpLinks","getComputedStyle","getPropertyValue","name","JumpLinks","_a","isCentered","isVertical","label","_a$ariaLabel","ariaLabel","scrollableSelector","_a$activeIndex","activeIndex","activeIndexProp","_a$offset","offset","expandable","_a$isExpanded","isExpanded","isExpandedProp","_a$alwaysShowLabel","alwaysShowLabel","_a$toggleAriaLabel","toggleAriaLabel","className","__rest","hasScrollSpy","Boolean","_React$useState","useState","_React$useState2","_slicedToArray","scrollItems","setScrollItems","_React$useState3","_React$useState4","setActiveIndex","_React$useState5","_React$useState6","setIsExpanded","isLinkClicked","useRef","useEffect","navRef","scrollableElement","scrollSpy","useCallback","current","scrollPosition","Math","ceil","scrollTop","window","requestAnimationFrame","newScrollItems","scrollElements","map","e","index","y","offsetTop","filter","_ref","sort","e1","e2","_iterator","_createForOfIteratorHelper","_step","s","n","done","_step$value","value","err","f","addEventListener","removeEventListener","jumpLinkIndex","cloneChildren","_child$props","onClickProp","onClick","isActiveProp","isActive","itemIndex","scrollItem","cloneElement","ev","newScrollItem","classList","remove","modifiers","expanded","stickyParent","parentElement","contains","sticky","scrollHeight","scrollTo","focus","preventDefault","createElement","Object","assign","center","vertical","ref","jumpLinksMain","jumpLinksToggle","variant","jumpLinksToggleIcon","jumpLinksToggleText","jumpLinksLabel","jumpLinksList","displayName"],"sources":["/data/stackhub-web/plugins/myapps/node_modules/@patternfly/react-core/src/components/JumpLinks/JumpLinks.tsx"],"sourcesContent":["import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/JumpLinks/jump-links';\nimport sidebarStyles from '@patternfly/react-styles/css/components/Sidebar/sidebar';\nimport { JumpLinksItem, JumpLinksItemProps } from './JumpLinksItem';\nimport { JumpLinksList } from './JumpLinksList';\nimport { formatBreakpointMods } from '../../helpers/util';\nimport { Button } from '../Button';\nimport AngleRightIcon from '@patternfly/react-icons/dist/esm/icons/angle-right-icon';\nimport cssToggleDisplayVar from '@patternfly/react-tokens/dist/esm/c_jump_links__toggle_Display';\nimport { canUseDOM } from '../../helpers/util';\n\nexport interface JumpLinksProps extends Omit<React.HTMLProps<HTMLElement>, 'label'> {\n  /** Whether to center children. */\n  isCentered?: boolean;\n  /** Whether the layout of children is vertical or horizontal. */\n  isVertical?: boolean;\n  /** Label to add to nav element. */\n  label?: React.ReactNode;\n  /** Flag to always show the label when using `expandable` */\n  alwaysShowLabel?: boolean;\n  /** Aria-label to add to nav element. Defaults to label. */\n  'aria-label'?: string;\n  /** Selector for the scrollable element to spy on. Not passing a selector disables spying. */\n  scrollableSelector?: string;\n  /** The index of the child Jump link to make active. */\n  activeIndex?: number;\n  /** Children nodes */\n  children?: React.ReactNode;\n  /** Offset to add to `scrollPosition`, potentially for a masthead which content scrolls under. */\n  offset?: number;\n  /** When to collapse/expand at different breakpoints */\n  expandable?: {\n    default?: 'expandable' | 'nonExpandable';\n    sm?: 'expandable' | 'nonExpandable';\n    md?: 'expandable' | 'nonExpandable';\n    lg?: 'expandable' | 'nonExpandable';\n    xl?: 'expandable' | 'nonExpandable';\n    '2xl'?: 'expandable' | 'nonExpandable';\n  };\n  /** On mobile whether or not the JumpLinks starts out expanded */\n  isExpanded?: boolean;\n  /** Aria label for expandable toggle */\n  toggleAriaLabel?: string;\n  /** Class for nav */\n  className?: string;\n}\n\n// Recursively find JumpLinkItems and return an array of all their scrollNodes\nconst getScrollItems = (children: React.ReactNode, res: HTMLElement[]) => {\n  React.Children.forEach(children, (child: any) => {\n    if (canUseDOM && document.getElementById && document.querySelector && child.type === JumpLinksItem) {\n      const scrollNode = child.props.node || child.props.href;\n      if (typeof scrollNode === 'string') {\n        if (scrollNode.startsWith('#')) {\n          // Allow spaces and other special characters as `id`s to be nicer to consumers\n          // https://stackoverflow.com/questions/70579/what-are-valid-values-for-the-id-attribute-in-html\n          res.push(document.getElementById(scrollNode.substr(1)) as HTMLElement);\n        } else {\n          res.push(document.querySelector(scrollNode) as HTMLElement);\n        }\n      } else if (scrollNode instanceof HTMLElement) {\n        res.push(scrollNode);\n      }\n    }\n    if ([React.Fragment, JumpLinksList, JumpLinksItem].includes(child.type)) {\n      getScrollItems(child.props.children, res);\n    }\n  });\n  return res;\n};\n\nfunction isResponsive(jumpLinks: HTMLElement) {\n  // https://github.com/patternfly/patternfly/blob/main/src/patternfly/components/JumpLinks/jump-links.scss#L103\n  return (\n    jumpLinks &&\n    getComputedStyle(jumpLinks)\n      .getPropertyValue(cssToggleDisplayVar.name)\n      .includes('block')\n  );\n}\n\nexport const JumpLinks: React.FunctionComponent<JumpLinksProps> = ({\n  isCentered,\n  isVertical,\n  children,\n  label,\n  'aria-label': ariaLabel = typeof label === 'string' ? label : null,\n  scrollableSelector,\n  activeIndex: activeIndexProp = 0,\n  offset = 0,\n  expandable,\n  isExpanded: isExpandedProp = false,\n  alwaysShowLabel = true,\n  toggleAriaLabel = 'Toggle jump links',\n  className,\n  ...props\n}: JumpLinksProps) => {\n  const hasScrollSpy = Boolean(scrollableSelector);\n  const [scrollItems, setScrollItems] = React.useState(hasScrollSpy ? getScrollItems(children, []) : []);\n  const [activeIndex, setActiveIndex] = React.useState(activeIndexProp);\n  const [isExpanded, setIsExpanded] = React.useState(isExpandedProp);\n  // Boolean to disable scroll listener from overriding active state of clicked jumplink\n  const isLinkClicked = React.useRef(false);\n  // Allow expanding to be controlled for a niche use case\n  React.useEffect(() => setIsExpanded(isExpandedProp), [isExpandedProp]);\n  const navRef = React.useRef<HTMLElement>();\n\n  let scrollableElement: HTMLElement;\n\n  const scrollSpy = React.useCallback(() => {\n    if (!canUseDOM || !hasScrollSpy || !(scrollableElement instanceof HTMLElement)) {\n      return;\n    }\n    if (isLinkClicked.current) {\n      isLinkClicked.current = false;\n      return;\n    }\n    const scrollPosition = Math.ceil(scrollableElement.scrollTop + offset);\n    window.requestAnimationFrame(() => {\n      let newScrollItems = scrollItems;\n      // Items might have rendered after this component. Do a quick refresh.\n      if (!newScrollItems[0] || newScrollItems.includes(null)) {\n        newScrollItems = getScrollItems(children, []);\n        setScrollItems(newScrollItems);\n      }\n      const scrollElements = newScrollItems\n        .map((e, index) => ({\n          y: e ? e.offsetTop : null,\n          index\n        }))\n        .filter(({ y }) => y !== null)\n        .sort((e1, e2) => e2.y - e1.y);\n      for (const { y, index } of scrollElements) {\n        if (scrollPosition >= y) {\n          return setActiveIndex(index);\n        }\n      }\n    });\n  }, [scrollItems, hasScrollSpy, scrollableElement, offset]);\n\n  React.useEffect(() => {\n    scrollableElement = document.querySelector(scrollableSelector) as HTMLElement;\n    if (!(scrollableElement instanceof HTMLElement)) {\n      return;\n    }\n    scrollableElement.addEventListener('scroll', scrollSpy);\n\n    return () => scrollableElement.removeEventListener('scroll', scrollSpy);\n  }, [scrollableSelector, scrollSpy]);\n\n  React.useEffect(() => {\n    scrollSpy();\n  }, []);\n\n  let jumpLinkIndex = 0;\n  const cloneChildren = (children: React.ReactNode): React.ReactNode =>\n    !hasScrollSpy\n      ? children\n      : React.Children.map(children, (child: any) => {\n          if (child.type === JumpLinksItem) {\n            const { onClick: onClickProp, isActive: isActiveProp } = child.props;\n            const itemIndex = jumpLinkIndex++;\n            const scrollItem = scrollItems[itemIndex];\n            return React.cloneElement(child as React.ReactElement<JumpLinksItemProps>, {\n              onClick(ev: React.MouseEvent<HTMLAnchorElement>) {\n                isLinkClicked.current = true;\n                // Items might have rendered after this component. Do a quick refresh.\n                let newScrollItems;\n                if (!scrollItem) {\n                  newScrollItems = getScrollItems(children, []);\n                  setScrollItems(newScrollItems);\n                }\n                const newScrollItem = scrollItem || newScrollItems[itemIndex];\n\n                if (newScrollItem) {\n                  // we have to support scrolling to an offset due to sticky sidebar\n                  const scrollableElement = document.querySelector(scrollableSelector) as HTMLElement;\n                  if (scrollableElement instanceof HTMLElement) {\n                    if (isResponsive(navRef.current)) {\n                      // Remove class immediately so we can get collapsed height\n                      if (navRef.current) {\n                        navRef.current.classList.remove(styles.modifiers.expanded);\n                      }\n                      let stickyParent = navRef.current && navRef.current.parentElement;\n                      while (stickyParent && !stickyParent.classList.contains(sidebarStyles.modifiers.sticky)) {\n                        stickyParent = stickyParent.parentElement;\n                      }\n                      setIsExpanded(false);\n                      if (stickyParent) {\n                        offset += stickyParent.scrollHeight;\n                      }\n                    }\n                    scrollableElement.scrollTo(0, newScrollItem.offsetTop - offset);\n                  }\n                  newScrollItem.focus();\n                  ev.preventDefault();\n                  setActiveIndex(itemIndex);\n                }\n                if (onClickProp) {\n                  onClickProp(ev);\n                }\n              },\n              isActive: isActiveProp || activeIndex === itemIndex,\n              children: cloneChildren(child.props.children)\n            });\n          } else if (child.type === React.Fragment) {\n            return cloneChildren(child.props.children);\n          } else if (child.type === JumpLinksList) {\n            return React.cloneElement(child, { children: cloneChildren(child.props.children) });\n          }\n          return child;\n        });\n\n  return (\n    <nav\n      className={css(\n        styles.jumpLinks,\n        isCentered && styles.modifiers.center,\n        isVertical && styles.modifiers.vertical,\n        formatBreakpointMods(expandable, styles),\n        isExpanded && styles.modifiers.expanded,\n        className\n      )}\n      aria-label={ariaLabel}\n      ref={navRef}\n      {...props}\n    >\n      <div className={styles.jumpLinksMain}>\n        <div className={css('pf-c-jump-links__header')}>\n          {expandable && (\n            <div className={styles.jumpLinksToggle}>\n              <Button\n                variant=\"plain\"\n                onClick={() => setIsExpanded(!isExpanded)}\n                aria-label={toggleAriaLabel}\n                aria-expanded={isExpanded}\n              >\n                <span className={styles.jumpLinksToggleIcon}>\n                  <AngleRightIcon />\n                </span>\n                {label && <span className={css(styles.jumpLinksToggleText)}> {label} </span>}\n              </Button>\n            </div>\n          )}\n          {label && alwaysShowLabel && <div className={css(styles.jumpLinksLabel)}>{label}</div>}\n        </div>\n        <ul className={styles.jumpLinksList}>{cloneChildren(children)}</ul>\n      </div>\n    </nav>\n  );\n};\nJumpLinks.displayName = 'JumpLinks';\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
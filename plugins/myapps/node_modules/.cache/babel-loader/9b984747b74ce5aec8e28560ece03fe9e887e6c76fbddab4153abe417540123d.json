{"ast":null,"code":"export function flattenTree(tree) {\n  var result = [];\n  tree.forEach(function (item) {\n    if (item.children) {\n      result = result.concat(flattenTree(item.children));\n    } else {\n      result.push(item.id);\n    }\n  });\n  return result;\n}\nexport function flattenTreeWithFolders(tree) {\n  var result = [];\n  tree.forEach(function (item) {\n    result.push(item.id);\n    if (item.children) {\n      result = result.concat(flattenTreeWithFolders(item.children));\n    }\n  });\n  return result;\n}\nexport function filterFolders(tree, inputList) {\n  var result = [];\n  tree.forEach(function (item) {\n    if (item.children) {\n      result = result.concat(filterFolders(item.children, inputList));\n    } else {\n      if (inputList.includes(item.id)) {\n        result.push(item.id);\n      }\n    }\n  });\n  return result;\n}\nexport function filterTreeItems(item, inputList) {\n  if (inputList.includes(item.id)) {\n    return true;\n  }\n  if (item.children) {\n    return (item.children = item.children.map(function (opt) {\n      return Object.assign({}, opt);\n    }).filter(function (child) {\n      return filterTreeItems(child, inputList);\n    })).length > 0;\n  }\n}\nexport function filterTreeItemsWithoutFolders(item, inputList) {\n  if (item.children) {\n    return (item.children = item.children.map(function (opt) {\n      return Object.assign({}, opt);\n    }).filter(function (child) {\n      return child.children ? filterTreeItemsWithoutFolders(child, inputList) : filterTreeItems(child, inputList);\n    })).length > 0;\n  }\n  if (inputList.includes(item.id)) {\n    return true;\n  }\n}\nexport function filterRestTreeItems(item, inputList) {\n  if (item.children) {\n    var child = (item.children = item.children.map(function (opt) {\n      return Object.assign({}, opt);\n    }).filter(function (child) {\n      return filterRestTreeItems(child, inputList);\n    })).length > 0;\n    return child;\n  }\n  if (!inputList.includes(item.id)) {\n    return true;\n  }\n}","map":{"version":3,"names":["flattenTree","tree","result","forEach","item","children","concat","push","id","flattenTreeWithFolders","filterFolders","inputList","includes","filterTreeItems","map","opt","Object","assign","filter","child","length","filterTreeItemsWithoutFolders","filterRestTreeItems"],"sources":["/data/stackhub-web/plugins/myapps/node_modules/@patternfly/react-core/src/components/DualListSelector/treeUtils.ts"],"sourcesContent":["import { DualListSelectorTreeItemData } from './DualListSelectorTree';\n\nexport function flattenTree(tree: DualListSelectorTreeItemData[]): string[] {\n  let result = [] as string[];\n  tree.forEach(item => {\n    if (item.children) {\n      result = result.concat(flattenTree(item.children));\n    } else {\n      result.push(item.id);\n    }\n  });\n  return result;\n}\n\nexport function flattenTreeWithFolders(tree: DualListSelectorTreeItemData[]): string[] {\n  let result = [] as string[];\n  tree.forEach(item => {\n    result.push(item.id);\n    if (item.children) {\n      result = result.concat(flattenTreeWithFolders(item.children));\n    }\n  });\n  return result;\n}\n\nexport function filterFolders(tree: DualListSelectorTreeItemData[], inputList: string[]): string[] {\n  let result = [] as string[];\n  tree.forEach(item => {\n    if (item.children) {\n      result = result.concat(filterFolders(item.children, inputList));\n    } else {\n      if (inputList.includes(item.id)) {\n        result.push(item.id);\n      }\n    }\n  });\n  return result;\n}\n\nexport function filterTreeItems(item: DualListSelectorTreeItemData, inputList: string[]): boolean {\n  if (inputList.includes(item.id)) {\n    return true;\n  }\n  if (item.children) {\n    return (\n      (item.children = item.children\n        .map(opt => Object.assign({}, opt))\n        .filter(child => filterTreeItems(child, inputList))).length > 0\n    );\n  }\n}\n\nexport function filterTreeItemsWithoutFolders(item: DualListSelectorTreeItemData, inputList: string[]): boolean {\n  if (item.children) {\n    return (\n      (item.children = item.children\n        .map(opt => Object.assign({}, opt))\n        .filter(child =>\n          child.children ? filterTreeItemsWithoutFolders(child, inputList) : filterTreeItems(child, inputList)\n        )).length > 0\n    );\n  }\n\n  if (inputList.includes(item.id)) {\n    return true;\n  }\n}\n\nexport function filterRestTreeItems(item: DualListSelectorTreeItemData, inputList: string[]): boolean {\n  if (item.children) {\n    const child =\n      (item.children = item.children\n        .map(opt => Object.assign({}, opt))\n        .filter(child => filterRestTreeItems(child, inputList))).length > 0;\n    return child;\n  }\n\n  if (!inputList.includes(item.id)) {\n    return true;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
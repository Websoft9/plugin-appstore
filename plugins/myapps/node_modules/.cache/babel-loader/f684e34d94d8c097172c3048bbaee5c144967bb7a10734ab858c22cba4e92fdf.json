{"ast":null,"code":"import _slicedToArray from \"/data/stackhub-web/plugins/myapps/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport getBasePlacement from '../utils/getBasePlacement';\nimport { top, left, right, placements } from '../enums';\n/**\n * @param placement\n * @param rects\n * @param offset\n */\nexport function distanceAndSkiddingToXY(placement, rects, offset) {\n  var basePlacement = getBasePlacement(placement);\n  var invertDistance = [left, top].indexOf(basePlacement) >= 0 ? -1 : 1;\n  var _ref = typeof offset === 'function' ? offset(Object.assign(Object.assign({}, rects), {\n      placement: placement\n    })) : offset,\n    _ref2 = _slicedToArray(_ref, 2),\n    skidding = _ref2[0],\n    distance = _ref2[1];\n  skidding = skidding || 0;\n  distance = (distance || 0) * invertDistance;\n  return [left, right].indexOf(basePlacement) >= 0 ? {\n    x: distance,\n    y: skidding\n  } : {\n    x: skidding,\n    y: distance\n  };\n}\n/**\n *\n */\nfunction offset(_ref3) {\n  var state = _ref3.state,\n    options = _ref3.options,\n    name = _ref3.name;\n  var _options$offset = options.offset,\n    offset = _options$offset === void 0 ? [0, 0] : _options$offset;\n  var data = placements.reduce(function (acc, placement) {\n    acc[placement] = distanceAndSkiddingToXY(placement, state.rects, offset);\n    return acc;\n  }, {});\n  var _data$state$placement = data[state.placement],\n    x = _data$state$placement.x,\n    y = _data$state$placement.y;\n  if (state.modifiersData.popperOffsets != null) {\n    state.modifiersData.popperOffsets.x += x;\n    state.modifiersData.popperOffsets.y += y;\n  }\n  state.modifiersData[name] = data;\n}\nexport default {\n  name: 'offset',\n  enabled: true,\n  phase: 'main',\n  requires: ['popperOffsets'],\n  fn: offset\n};","map":{"version":3,"names":["getBasePlacement","top","left","right","placements","distanceAndSkiddingToXY","placement","rects","offset","basePlacement","invertDistance","indexOf","_ref","Object","assign","_ref2","_slicedToArray","skidding","distance","x","y","_ref3","state","options","name","_options$offset","data","reduce","acc","_data$state$placement","modifiersData","popperOffsets","enabled","phase","requires","fn"],"sources":["/data/stackhub-web/plugins/myapps/node_modules/@patternfly/react-core/src/helpers/Popper/thirdparty/popper-core/modifiers/offset.ts"],"sourcesContent":["// @ts-nocheck\nimport { Placement } from '../enums';\nimport { ModifierArguments, Modifier, Rect, Offsets } from '../types';\nimport getBasePlacement from '../utils/getBasePlacement';\nimport { top, left, right, placements } from '../enums';\n\ntype OffsetsFunction = (arg0: {\n  popper: Rect;\n  reference: Rect;\n  placement: Placement;\n}) => [number | null | undefined, number | null | undefined];\n\ntype Offset = OffsetsFunction | [number | null | undefined, number | null | undefined];\n\n// eslint-disable-next-line import/no-unused-modules\nexport interface Options {\n  offset: Offset;\n}\n\n/**\n * @param placement\n * @param rects\n * @param offset\n */\nexport function distanceAndSkiddingToXY(\n  placement: Placement,\n  rects: { popper: Rect; reference: Rect },\n  offset: Offset\n): Offsets {\n  const basePlacement = getBasePlacement(placement);\n  const invertDistance = [left, top].indexOf(basePlacement) >= 0 ? -1 : 1;\n\n  let [skidding, distance] =\n    typeof offset === 'function'\n      ? offset({\n          ...rects,\n          placement\n        })\n      : offset;\n\n  skidding = skidding || 0;\n  distance = (distance || 0) * invertDistance;\n\n  return [left, right].indexOf(basePlacement) >= 0 ? { x: distance, y: skidding } : { x: skidding, y: distance };\n}\n\n/**\n *\n */\nfunction offset({ state, options, name }: ModifierArguments<Options>) {\n  const { offset = [0, 0] } = options;\n\n  const data = placements.reduce((acc, placement) => {\n    acc[placement] = distanceAndSkiddingToXY(placement, state.rects, offset);\n    return acc;\n  }, {});\n\n  const { x, y } = data[state.placement];\n\n  if (state.modifiersData.popperOffsets != null) {\n    state.modifiersData.popperOffsets.x += x;\n    state.modifiersData.popperOffsets.y += y;\n  }\n\n  state.modifiersData[name] = data;\n}\n\n// eslint-disable-next-line import/no-unused-modules\nexport type OffsetModifier = Modifier<'offset', Options>;\nexport default {\n  name: 'offset',\n  enabled: true,\n  phase: 'main',\n  requires: ['popperOffsets'],\n  fn: offset\n} as OffsetModifier;\n"],"mappings":";AAGA,OAAOA,gBAAgB,MAAM,2BAA2B;AACxD,SAASC,GAAG,EAAEC,IAAI,EAAEC,KAAK,EAAEC,UAAU,QAAQ,UAAU;AAevD;;;;;AAKA,OAAM,SAAUC,uBAAuBA,CACrCC,SAAoB,EACpBC,KAAwC,EACxCC,MAAc;EAEd,IAAMC,aAAa,GAAGT,gBAAgB,CAACM,SAAS,CAAC;EACjD,IAAMI,cAAc,GAAG,CAACR,IAAI,EAAED,GAAG,CAAC,CAACU,OAAO,CAACF,aAAa,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;EAEvE,IAAAG,IAAA,GACE,OAAOJ,MAAM,KAAK,UAAU,GACxBA,MAAM,CAAAK,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KACDP,KAAK;MACRD,SAAS,EAATA;IAAS,GACT,GACFE,MAAM;IAAAO,KAAA,GAAAC,cAAA,CAAAJ,IAAA;IANPK,QAAQ,GAAAF,KAAA;IAAEG,QAAQ,GAAAH,KAAA;EAQvBE,QAAQ,GAAGA,QAAQ,IAAI,CAAC;EACxBC,QAAQ,GAAG,CAACA,QAAQ,IAAI,CAAC,IAAIR,cAAc;EAE3C,OAAO,CAACR,IAAI,EAAEC,KAAK,CAAC,CAACQ,OAAO,CAACF,aAAa,CAAC,IAAI,CAAC,GAAG;IAAEU,CAAC,EAAED,QAAQ;IAAEE,CAAC,EAAEH;EAAQ,CAAE,GAAG;IAAEE,CAAC,EAAEF,QAAQ;IAAEG,CAAC,EAAEF;EAAQ,CAAE;AAChH;AAEA;;;AAGA,SAASV,MAAMA,CAAAa,KAAA,EAAqD;EAAA,IAAlDC,KAAK,GAAAD,KAAA,CAALC,KAAK;IAAEC,OAAO,GAAAF,KAAA,CAAPE,OAAO;IAAEC,IAAI,GAAAH,KAAA,CAAJG,IAAI;EACpC,IAAAC,eAAA,GAA4BF,OAAO,CAA3Bf,MAAM;IAANA,MAAM,GAAAiB,eAAA,cAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAAA,eAAA;EAEvB,IAAMC,IAAI,GAAGtB,UAAU,CAACuB,MAAM,CAAC,UAACC,GAAG,EAAEtB,SAAS,EAAI;IAChDsB,GAAG,CAACtB,SAAS,CAAC,GAAGD,uBAAuB,CAACC,SAAS,EAAEgB,KAAK,CAACf,KAAK,EAAEC,MAAM,CAAC;IACxE,OAAOoB,GAAG;EACZ,CAAC,EAAE,EAAE,CAAC;EAEN,IAAAC,qBAAA,GAAiBH,IAAI,CAACJ,KAAK,CAAChB,SAAS,CAAC;IAA9Ba,CAAC,GAAAU,qBAAA,CAADV,CAAC;IAAEC,CAAC,GAAAS,qBAAA,CAADT,CAAC;EAEZ,IAAIE,KAAK,CAACQ,aAAa,CAACC,aAAa,IAAI,IAAI,EAAE;IAC7CT,KAAK,CAACQ,aAAa,CAACC,aAAa,CAACZ,CAAC,IAAIA,CAAC;IACxCG,KAAK,CAACQ,aAAa,CAACC,aAAa,CAACX,CAAC,IAAIA,CAAC;;EAG1CE,KAAK,CAACQ,aAAa,CAACN,IAAI,CAAC,GAAGE,IAAI;AAClC;AAIA,eAAe;EACbF,IAAI,EAAE,QAAQ;EACdQ,OAAO,EAAE,IAAI;EACbC,KAAK,EAAE,MAAM;EACbC,QAAQ,EAAE,CAAC,eAAe,CAAC;EAC3BC,EAAE,EAAE3B;CACa"},"metadata":{},"sourceType":"module","externalDependencies":[]}
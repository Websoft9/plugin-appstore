{"ast":null,"code":"function ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport didYouMean from \"../../jsutils/didYouMean.mjs\";\nimport suggestionList from \"../../jsutils/suggestionList.mjs\";\nimport { GraphQLError } from \"../../error/GraphQLError.mjs\";\nimport { Kind } from \"../../language/kinds.mjs\";\nimport { specifiedDirectives } from \"../../type/directives.mjs\";\n\n/**\n * Known argument names\n *\n * A GraphQL field is only valid if all supplied arguments are defined by\n * that field.\n */\nexport function KnownArgumentNamesRule(context) {\n  return _objectSpread(_objectSpread({}, KnownArgumentNamesOnDirectivesRule(context)), {}, {\n    Argument: function Argument(argNode) {\n      var argDef = context.getArgument();\n      var fieldDef = context.getFieldDef();\n      var parentType = context.getParentType();\n      if (!argDef && fieldDef && parentType) {\n        var argName = argNode.name.value;\n        var knownArgsNames = fieldDef.args.map(function (arg) {\n          return arg.name;\n        });\n        var suggestions = suggestionList(argName, knownArgsNames);\n        context.reportError(new GraphQLError(\"Unknown argument \\\"\".concat(argName, \"\\\" on field \\\"\").concat(parentType.name, \".\").concat(fieldDef.name, \"\\\".\") + didYouMean(suggestions), argNode));\n      }\n    }\n  });\n}\n/**\n * @internal\n */\n\nexport function KnownArgumentNamesOnDirectivesRule(context) {\n  var directiveArgs = Object.create(null);\n  var schema = context.getSchema();\n  var definedDirectives = schema ? schema.getDirectives() : specifiedDirectives;\n  for (var _i2 = 0; _i2 < definedDirectives.length; _i2++) {\n    var directive = definedDirectives[_i2];\n    directiveArgs[directive.name] = directive.args.map(function (arg) {\n      return arg.name;\n    });\n  }\n  var astDefinitions = context.getDocument().definitions;\n  for (var _i4 = 0; _i4 < astDefinitions.length; _i4++) {\n    var def = astDefinitions[_i4];\n    if (def.kind === Kind.DIRECTIVE_DEFINITION) {\n      var _def$arguments;\n\n      // istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2203')\n      var argsNodes = (_def$arguments = def.arguments) !== null && _def$arguments !== void 0 ? _def$arguments : [];\n      directiveArgs[def.name.value] = argsNodes.map(function (arg) {\n        return arg.name.value;\n      });\n    }\n  }\n  return {\n    Directive: function Directive(directiveNode) {\n      var directiveName = directiveNode.name.value;\n      var knownArgs = directiveArgs[directiveName];\n      if (directiveNode.arguments && knownArgs) {\n        for (var _i6 = 0, _directiveNode$argume2 = directiveNode.arguments; _i6 < _directiveNode$argume2.length; _i6++) {\n          var argNode = _directiveNode$argume2[_i6];\n          var argName = argNode.name.value;\n          if (knownArgs.indexOf(argName) === -1) {\n            var suggestions = suggestionList(argName, knownArgs);\n            context.reportError(new GraphQLError(\"Unknown argument \\\"\".concat(argName, \"\\\" on directive \\\"@\").concat(directiveName, \"\\\".\") + didYouMean(suggestions), argNode));\n          }\n        }\n      }\n      return false;\n    }\n  };\n}","map":{"version":3,"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","didYouMean","suggestionList","GraphQLError","Kind","specifiedDirectives","KnownArgumentNamesRule","context","KnownArgumentNamesOnDirectivesRule","Argument","argNode","argDef","getArgument","fieldDef","getFieldDef","parentType","getParentType","argName","name","knownArgsNames","args","map","arg","suggestions","reportError","concat","directiveArgs","create","schema","getSchema","definedDirectives","getDirectives","_i2","directive","astDefinitions","getDocument","definitions","_i4","def","kind","DIRECTIVE_DEFINITION","_def$arguments","argsNodes","Directive","directiveNode","directiveName","knownArgs","_i6","_directiveNode$argume2","indexOf"],"sources":["/data/stackhub-web/plugins/myapps/node_modules/graphql/validation/rules/KnownArgumentNamesRule.mjs"],"sourcesContent":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport didYouMean from \"../../jsutils/didYouMean.mjs\";\nimport suggestionList from \"../../jsutils/suggestionList.mjs\";\nimport { GraphQLError } from \"../../error/GraphQLError.mjs\";\nimport { Kind } from \"../../language/kinds.mjs\";\nimport { specifiedDirectives } from \"../../type/directives.mjs\";\n\n/**\n * Known argument names\n *\n * A GraphQL field is only valid if all supplied arguments are defined by\n * that field.\n */\nexport function KnownArgumentNamesRule(context) {\n  return _objectSpread(_objectSpread({}, KnownArgumentNamesOnDirectivesRule(context)), {}, {\n    Argument: function Argument(argNode) {\n      var argDef = context.getArgument();\n      var fieldDef = context.getFieldDef();\n      var parentType = context.getParentType();\n\n      if (!argDef && fieldDef && parentType) {\n        var argName = argNode.name.value;\n        var knownArgsNames = fieldDef.args.map(function (arg) {\n          return arg.name;\n        });\n        var suggestions = suggestionList(argName, knownArgsNames);\n        context.reportError(new GraphQLError(\"Unknown argument \\\"\".concat(argName, \"\\\" on field \\\"\").concat(parentType.name, \".\").concat(fieldDef.name, \"\\\".\") + didYouMean(suggestions), argNode));\n      }\n    }\n  });\n}\n/**\n * @internal\n */\n\nexport function KnownArgumentNamesOnDirectivesRule(context) {\n  var directiveArgs = Object.create(null);\n  var schema = context.getSchema();\n  var definedDirectives = schema ? schema.getDirectives() : specifiedDirectives;\n\n  for (var _i2 = 0; _i2 < definedDirectives.length; _i2++) {\n    var directive = definedDirectives[_i2];\n    directiveArgs[directive.name] = directive.args.map(function (arg) {\n      return arg.name;\n    });\n  }\n\n  var astDefinitions = context.getDocument().definitions;\n\n  for (var _i4 = 0; _i4 < astDefinitions.length; _i4++) {\n    var def = astDefinitions[_i4];\n\n    if (def.kind === Kind.DIRECTIVE_DEFINITION) {\n      var _def$arguments;\n\n      // istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2203')\n      var argsNodes = (_def$arguments = def.arguments) !== null && _def$arguments !== void 0 ? _def$arguments : [];\n      directiveArgs[def.name.value] = argsNodes.map(function (arg) {\n        return arg.name.value;\n      });\n    }\n  }\n\n  return {\n    Directive: function Directive(directiveNode) {\n      var directiveName = directiveNode.name.value;\n      var knownArgs = directiveArgs[directiveName];\n\n      if (directiveNode.arguments && knownArgs) {\n        for (var _i6 = 0, _directiveNode$argume2 = directiveNode.arguments; _i6 < _directiveNode$argume2.length; _i6++) {\n          var argNode = _directiveNode$argume2[_i6];\n          var argName = argNode.name.value;\n\n          if (knownArgs.indexOf(argName) === -1) {\n            var suggestions = suggestionList(argName, knownArgs);\n            context.reportError(new GraphQLError(\"Unknown argument \\\"\".concat(argName, \"\\\" on directive \\\"@\").concat(directiveName, \"\\\".\") + didYouMean(suggestions), argNode));\n          }\n        }\n      }\n\n      return false;\n    }\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
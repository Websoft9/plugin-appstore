{"ast":null,"code":"import _classCallCheck from \"/data/stackhub-web/plugins/myapps/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/data/stackhub-web/plugins/myapps/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/data/stackhub-web/plugins/myapps/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/data/stackhub-web/plugins/myapps/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Select/select';\nimport buttonStyles from '@patternfly/react-styles/css/components/Button/button';\nimport { css } from '@patternfly/react-styles';\nimport CaretDownIcon from '@patternfly/react-icons/dist/esm/icons/caret-down-icon';\nimport { SelectVariant, SelectFooterTabbableItems } from './selectConstants';\nimport { findTabbableElements } from '../../helpers/util';\nimport { KeyTypes } from '../../helpers/constants';\nvar SelectToggleBase = /*#__PURE__*/function (_React$Component) {\n  _inherits(SelectToggleBase, _React$Component);\n  var _super = _createSuper(SelectToggleBase);\n  function SelectToggleBase(props) {\n    var _this;\n    _classCallCheck(this, SelectToggleBase);\n    _this = _super.call(this, props);\n    _this.onDocClick = function (event) {\n      var _this$props = _this.props,\n        parentRef = _this$props.parentRef,\n        menuRef = _this$props.menuRef,\n        footerRef = _this$props.footerRef,\n        isOpen = _this$props.isOpen,\n        onToggle = _this$props.onToggle,\n        onClose = _this$props.onClose;\n      var clickedOnToggle = parentRef && parentRef.current && parentRef.current.contains(event.target);\n      var clickedWithinMenu = menuRef && menuRef.current && menuRef.current.contains && menuRef.current.contains(event.target);\n      var clickedWithinFooter = footerRef && footerRef.current && footerRef.current.contains && footerRef.current.contains(event.target);\n      if (isOpen && !(clickedOnToggle || clickedWithinMenu || clickedWithinFooter)) {\n        onToggle(false, event);\n        onClose();\n      }\n    };\n    _this.handleGlobalKeys = function (event) {\n      var _this$props2 = _this.props,\n        parentRef = _this$props2.parentRef,\n        menuRef = _this$props2.menuRef,\n        hasFooter = _this$props2.hasFooter,\n        footerRef = _this$props2.footerRef,\n        isOpen = _this$props2.isOpen,\n        variant = _this$props2.variant,\n        onToggle = _this$props2.onToggle,\n        onClose = _this$props2.onClose,\n        moveFocusToLastMenuItem = _this$props2.moveFocusToLastMenuItem;\n      var escFromToggle = parentRef && parentRef.current && parentRef.current.contains(event.target);\n      var escFromWithinMenu = menuRef && menuRef.current && menuRef.current.contains && menuRef.current.contains(event.target);\n      if (isOpen && event.key === KeyTypes.Tab && (variant === SelectVariant.typeahead || variant === SelectVariant.typeaheadMulti)) {\n        _this.props.handleTypeaheadKeys('tab', event.shiftKey);\n        event.preventDefault();\n        return;\n      }\n      if (isOpen && event.key === KeyTypes.Tab && hasFooter) {\n        var tabbableItems = findTabbableElements(footerRef, SelectFooterTabbableItems);\n        // If no tabbable item in footer close select\n        if (tabbableItems.length <= 0) {\n          onToggle(false, event);\n          onClose();\n          _this.toggle.current.focus();\n          return;\n        } else {\n          // if current element is not in footer, tab to first tabbable element in footer, or close if shift clicked\n          var currentElementIndex = tabbableItems.findIndex(function (item) {\n            return item === document.activeElement;\n          });\n          if (currentElementIndex === -1) {\n            if (event.shiftKey) {\n              if (variant !== 'checkbox') {\n                // only close non checkbox variation on shift clicked\n                onToggle(false, event);\n                onClose();\n                _this.toggle.current.focus();\n              }\n            } else {\n              // tab to footer\n              tabbableItems[0].focus();\n              return;\n            }\n          }\n          // Current element is in footer.\n          if (event.shiftKey) {\n            // Move focus back to menu if current tab index is 0\n            if (currentElementIndex === 0) {\n              moveFocusToLastMenuItem();\n              event.preventDefault();\n            }\n            return;\n          }\n          // Tab to next element in footer or close if there are none\n          if (currentElementIndex + 1 < tabbableItems.length) {\n            tabbableItems[currentElementIndex + 1].focus();\n          } else {\n            // no more footer items close menu\n            onToggle(false, event);\n            onClose();\n            _this.toggle.current.focus();\n          }\n          event.preventDefault();\n          return;\n        }\n      }\n      if (isOpen && (event.key === KeyTypes.Escape || event.key === KeyTypes.Tab) && (escFromToggle || escFromWithinMenu)) {\n        onToggle(false, event);\n        onClose();\n        _this.toggle.current.focus();\n      }\n    };\n    _this.onKeyDown = function (event) {\n      var _this$props3 = _this.props,\n        isOpen = _this$props3.isOpen,\n        onToggle = _this$props3.onToggle,\n        variant = _this$props3.variant,\n        onClose = _this$props3.onClose,\n        onEnter = _this$props3.onEnter,\n        handleTypeaheadKeys = _this$props3.handleTypeaheadKeys;\n      if (variant === SelectVariant.typeahead || variant === SelectVariant.typeaheadMulti) {\n        if (event.key === KeyTypes.ArrowDown || event.key === KeyTypes.ArrowUp) {\n          handleTypeaheadKeys(event.key === KeyTypes.ArrowDown && 'down' || event.key === KeyTypes.ArrowUp && 'up');\n          event.preventDefault();\n        } else if (event.key === KeyTypes.Enter) {\n          if (isOpen) {\n            handleTypeaheadKeys('enter');\n          } else {\n            onToggle(!isOpen, event);\n          }\n        }\n      }\n      if (variant === SelectVariant.typeahead || variant === SelectVariant.typeaheadMulti || event.key === KeyTypes.Tab && !isOpen || event.key !== KeyTypes.Enter && event.key !== KeyTypes.Space) {\n        return;\n      }\n      event.preventDefault();\n      if ((event.key === KeyTypes.Tab || event.key === KeyTypes.Enter || event.key === KeyTypes.Space) && isOpen) {\n        onToggle(!isOpen, event);\n        onClose();\n        _this.toggle.current.focus();\n      } else if ((event.key === KeyTypes.Enter || event.key === KeyTypes.Space) && !isOpen) {\n        onToggle(!isOpen, event);\n        onEnter();\n      }\n    };\n    var variant = props.variant;\n    var isTypeahead = variant === SelectVariant.typeahead || variant === SelectVariant.typeaheadMulti;\n    if (_this.props.innerRef) {\n      _this.toggle = _this.props.innerRef;\n    } else {\n      _this.toggle = isTypeahead ? React.createRef() : React.createRef();\n    }\n    return _this;\n  }\n  _createClass(SelectToggleBase, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      document.addEventListener('click', this.onDocClick, {\n        capture: true\n      });\n      document.addEventListener('touchstart', this.onDocClick);\n      document.addEventListener('keydown', this.handleGlobalKeys);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      document.removeEventListener('click', this.onDocClick);\n      document.removeEventListener('touchstart', this.onDocClick);\n      document.removeEventListener('keydown', this.handleGlobalKeys);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      /* eslint-disable @typescript-eslint/no-unused-vars */\n      var _a = this.props,\n        className = _a.className,\n        children = _a.children,\n        isOpen = _a.isOpen,\n        isActive = _a.isActive,\n        isPlain = _a.isPlain,\n        isDisabled = _a.isDisabled,\n        hasPlaceholderStyle = _a.hasPlaceholderStyle,\n        variant = _a.variant,\n        onToggle = _a.onToggle,\n        onEnter = _a.onEnter,\n        onClose = _a.onClose,\n        onBlur = _a.onBlur,\n        onClickTypeaheadToggleButton = _a.onClickTypeaheadToggleButton,\n        handleTypeaheadKeys = _a.handleTypeaheadKeys,\n        moveFocusToLastMenuItem = _a.moveFocusToLastMenuItem,\n        parentRef = _a.parentRef,\n        menuRef = _a.menuRef,\n        id = _a.id,\n        type = _a.type,\n        hasClearButton = _a.hasClearButton,\n        ariaLabelledBy = _a['aria-labelledby'],\n        ariaLabel = _a['aria-label'],\n        hasFooter = _a.hasFooter,\n        footerRef = _a.footerRef,\n        toggleIndicator = _a.toggleIndicator,\n        innerRef = _a.innerRef,\n        props = __rest(_a, [\"className\", \"children\", \"isOpen\", \"isActive\", \"isPlain\", \"isDisabled\", \"hasPlaceholderStyle\", \"variant\", \"onToggle\", \"onEnter\", \"onClose\", \"onBlur\", \"onClickTypeaheadToggleButton\", \"handleTypeaheadKeys\", \"moveFocusToLastMenuItem\", \"parentRef\", \"menuRef\", \"id\", \"type\", \"hasClearButton\", 'aria-labelledby', 'aria-label', \"hasFooter\", \"footerRef\", \"toggleIndicator\", \"innerRef\"]);\n      /* eslint-enable @typescript-eslint/no-unused-vars */\n      var isTypeahead = variant === SelectVariant.typeahead || variant === SelectVariant.typeaheadMulti || hasClearButton;\n      var toggleProps = {\n        id: id,\n        'aria-labelledby': ariaLabelledBy,\n        'aria-expanded': isOpen,\n        'aria-haspopup': variant !== SelectVariant.checkbox && 'listbox' || null\n      };\n      return React.createElement(React.Fragment, null, !isTypeahead && React.createElement(\"button\", Object.assign({}, props, toggleProps, {\n        ref: this.toggle,\n        type: type,\n        className: css(styles.selectToggle, hasPlaceholderStyle && styles.modifiers.placeholder, isDisabled && styles.modifiers.disabled, isPlain && styles.modifiers.plain, isActive && styles.modifiers.active, className),\n        \"aria-label\": ariaLabel,\n        onBlur: onBlur,\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        onClick: function onClick(event) {\n          onToggle(!isOpen, event);\n          if (isOpen) {\n            onClose();\n          }\n        },\n        onKeyDown: this.onKeyDown,\n        disabled: isDisabled\n      }), children, React.createElement(\"span\", {\n        className: css(styles.selectToggleArrow)\n      }, toggleIndicator !== null && toggleIndicator !== void 0 ? toggleIndicator : React.createElement(CaretDownIcon, null))), isTypeahead && React.createElement(\"div\", Object.assign({}, props, {\n        ref: this.toggle,\n        className: css(styles.selectToggle, hasPlaceholderStyle && styles.modifiers.placeholder, isDisabled && styles.modifiers.disabled, isPlain && styles.modifiers.plain, isTypeahead && styles.modifiers.typeahead, className),\n        onBlur: onBlur,\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        onClick: function onClick(event) {\n          if (!isDisabled) {\n            onToggle(!isOpen, event);\n            if (isOpen) {\n              onClose();\n            }\n          }\n        },\n        onKeyDown: this.onKeyDown\n      }), children, React.createElement(\"button\", Object.assign({}, toggleProps, {\n        type: type,\n        className: css(buttonStyles.button, styles.selectToggleButton, styles.modifiers.plain),\n        \"aria-label\": ariaLabel,\n        onClick: function onClick(event) {\n          onToggle(!isOpen, event);\n          if (isOpen) {\n            onClose();\n          }\n          onClickTypeaheadToggleButton();\n        }\n      }, (variant === SelectVariant.typeahead || variant === SelectVariant.typeaheadMulti) && {\n        tabIndex: -1\n      }, {\n        disabled: isDisabled\n      }), toggleIndicator !== null && toggleIndicator !== void 0 ? toggleIndicator : React.createElement(CaretDownIcon, {\n        className: css(styles.selectToggleArrow)\n      }))));\n    }\n  }]);\n  return SelectToggleBase;\n}(React.Component);\nSelectToggleBase.displayName = 'SelectToggle';\nSelectToggleBase.defaultProps = {\n  className: '',\n  isOpen: false,\n  isActive: false,\n  isPlain: false,\n  isDisabled: false,\n  hasPlaceholderStyle: false,\n  hasClearButton: false,\n  hasFooter: false,\n  variant: 'single',\n  'aria-labelledby': '',\n  'aria-label': '',\n  type: 'button',\n  onToggle: function onToggle() {},\n  onEnter: function onEnter() {},\n  onClose: function onClose() {},\n  onClickTypeaheadToggleButton: function onClickTypeaheadToggleButton() {}\n};\nexport var SelectToggle = React.forwardRef(function (props, ref) {\n  return React.createElement(SelectToggleBase, Object.assign({\n    innerRef: ref\n  }, props));\n});","map":{"version":3,"names":["React","styles","buttonStyles","css","CaretDownIcon","SelectVariant","SelectFooterTabbableItems","findTabbableElements","KeyTypes","SelectToggleBase","_React$Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","onDocClick","event","_this$props","parentRef","menuRef","footerRef","isOpen","onToggle","onClose","clickedOnToggle","current","contains","target","clickedWithinMenu","clickedWithinFooter","handleGlobalKeys","_this$props2","hasFooter","variant","moveFocusToLastMenuItem","escFromToggle","escFromWithinMenu","key","Tab","typeahead","typeaheadMulti","handleTypeaheadKeys","shiftKey","preventDefault","tabbableItems","length","toggle","focus","currentElementIndex","findIndex","item","document","activeElement","Escape","onKeyDown","_this$props3","onEnter","ArrowDown","ArrowUp","Enter","Space","isTypeahead","innerRef","createRef","_createClass","value","componentDidMount","addEventListener","capture","componentWillUnmount","removeEventListener","render","_a","className","children","isActive","isPlain","isDisabled","hasPlaceholderStyle","onBlur","onClickTypeaheadToggleButton","id","type","hasClearButton","ariaLabelledBy","ariaLabel","toggleIndicator","__rest","toggleProps","checkbox","createElement","Fragment","Object","assign","ref","selectToggle","modifiers","placeholder","disabled","plain","active","onClick","selectToggleArrow","button","selectToggleButton","tabIndex","Component","displayName","defaultProps","SelectToggle","forwardRef"],"sources":["/data/stackhub-web/plugins/myapps/node_modules/@patternfly/react-core/src/components/Select/SelectToggle.tsx"],"sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Select/select';\nimport buttonStyles from '@patternfly/react-styles/css/components/Button/button';\nimport { css } from '@patternfly/react-styles';\nimport CaretDownIcon from '@patternfly/react-icons/dist/esm/icons/caret-down-icon';\nimport { SelectVariant, SelectFooterTabbableItems } from './selectConstants';\nimport { PickOptional } from '../../helpers/typeUtils';\nimport { findTabbableElements } from '../../helpers/util';\nimport { KeyTypes } from '../../helpers/constants';\n\nexport interface SelectToggleProps extends Omit<React.HTMLProps<HTMLElement>, 'ref'> {\n  /** HTML ID of dropdown toggle */\n  id: string;\n  /** Anything which can be rendered as dropdown toggle */\n  children: React.ReactNode;\n  /** Classes applied to root element of dropdown toggle */\n  className?: string;\n  /** Flag to indicate if select is open */\n  isOpen?: boolean;\n  /** Callback called when toggle is clicked */\n  onToggle?: (isExpanded: boolean, event: React.MouseEvent | React.ChangeEvent | React.KeyboardEvent | Event) => void;\n  /** Callback for toggle open on keyboard entry */\n  onEnter?: () => void;\n  /** Callback for toggle close */\n  onClose?: () => void;\n  /** Callback for toggle blur */\n  onBlur?: (event?: any) => void;\n  /** @hide Internal callback for toggle keyboard navigation */\n  handleTypeaheadKeys?: (position: string, shiftKey?: boolean) => void;\n  /** @hide Internal callback to move focus to last menu item */\n  moveFocusToLastMenuItem?: () => void;\n  /** Element which wraps toggle */\n  parentRef: React.RefObject<HTMLDivElement>;\n  /** Custom icon for the dropdown replacing the CaretDownIcon */\n  toggleIndicator?: React.ReactElement;\n  /** The menu element */\n  menuRef?: React.RefObject<HTMLElement>;\n  /** The menu footer element */\n  footerRef?: React.RefObject<HTMLDivElement>;\n  /** Forces active state */\n  isActive?: boolean;\n  /** Display the toggle with no border or background */\n  isPlain?: boolean;\n  /** Flag indicating if select is disabled */\n  isDisabled?: boolean;\n  /** Flag indicating if placeholder styles should be applied */\n  hasPlaceholderStyle?: boolean;\n  /** Type of the toggle button, defaults to 'button' */\n  type?: 'reset' | 'button' | 'submit' | undefined;\n  /** Id of label for the Select aria-labelledby */\n  'aria-labelledby'?: string;\n  /** Label for toggle of select variants */\n  'aria-label'?: string;\n  /** Flag for variant, determines toggle rules and interaction */\n  variant?: 'single' | 'checkbox' | 'typeahead' | 'typeaheadmulti';\n  /** Flag indicating if select toggle has an clear button */\n  hasClearButton?: boolean;\n  /** Flag indicating if select menu has a footer */\n  hasFooter?: boolean;\n  /** @hide Internal callback for handling focus when typeahead toggle button clicked. */\n  onClickTypeaheadToggleButton?: () => void;\n  /** @hide Internal ref for the select toggle */\n  innerRef?: React.Ref<any>;\n}\n\nclass SelectToggleBase extends React.Component<SelectToggleProps> {\n  static displayName = 'SelectToggle';\n  private toggle: React.RefObject<HTMLDivElement> | React.RefObject<HTMLButtonElement>;\n\n  static defaultProps: PickOptional<SelectToggleProps> = {\n    className: '',\n    isOpen: false,\n    isActive: false,\n    isPlain: false,\n    isDisabled: false,\n    hasPlaceholderStyle: false,\n    hasClearButton: false,\n    hasFooter: false,\n    variant: 'single',\n    'aria-labelledby': '',\n    'aria-label': '',\n    type: 'button',\n    onToggle: () => {},\n    onEnter: () => {},\n    onClose: () => {},\n    onClickTypeaheadToggleButton: () => {}\n  };\n\n  constructor(props: SelectToggleProps) {\n    super(props);\n    const { variant } = props;\n    const isTypeahead = variant === SelectVariant.typeahead || variant === SelectVariant.typeaheadMulti;\n    if (this.props.innerRef) {\n      this.toggle = this.props.innerRef as React.RefObject<HTMLButtonElement> | React.RefObject<HTMLDivElement>;\n    } else {\n      this.toggle = isTypeahead ? React.createRef<HTMLDivElement>() : React.createRef<HTMLButtonElement>();\n    }\n  }\n\n  componentDidMount() {\n    document.addEventListener('click', this.onDocClick, { capture: true });\n    document.addEventListener('touchstart', this.onDocClick);\n    document.addEventListener('keydown', this.handleGlobalKeys);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('click', this.onDocClick);\n    document.removeEventListener('touchstart', this.onDocClick);\n    document.removeEventListener('keydown', this.handleGlobalKeys);\n  }\n\n  onDocClick = (event: Event) => {\n    const { parentRef, menuRef, footerRef, isOpen, onToggle, onClose } = this.props;\n    const clickedOnToggle = parentRef && parentRef.current && parentRef.current.contains(event.target as Node);\n    const clickedWithinMenu =\n      menuRef && menuRef.current && menuRef.current.contains && menuRef.current.contains(event.target as Node);\n    const clickedWithinFooter =\n      footerRef && footerRef.current && footerRef.current.contains && footerRef.current.contains(event.target as Node);\n\n    if (isOpen && !(clickedOnToggle || clickedWithinMenu || clickedWithinFooter)) {\n      onToggle(false, event);\n      onClose();\n    }\n  };\n\n  handleGlobalKeys = (event: KeyboardEvent) => {\n    const {\n      parentRef,\n      menuRef,\n      hasFooter,\n      footerRef,\n      isOpen,\n      variant,\n      onToggle,\n      onClose,\n      moveFocusToLastMenuItem\n    } = this.props;\n    const escFromToggle = parentRef && parentRef.current && parentRef.current.contains(event.target as Node);\n    const escFromWithinMenu =\n      menuRef && menuRef.current && menuRef.current.contains && menuRef.current.contains(event.target as Node);\n    if (\n      isOpen &&\n      event.key === KeyTypes.Tab &&\n      (variant === SelectVariant.typeahead || variant === SelectVariant.typeaheadMulti)\n    ) {\n      this.props.handleTypeaheadKeys('tab', event.shiftKey);\n      event.preventDefault();\n      return;\n    }\n\n    if (isOpen && event.key === KeyTypes.Tab && hasFooter) {\n      const tabbableItems = findTabbableElements(footerRef, SelectFooterTabbableItems);\n\n      // If no tabbable item in footer close select\n      if (tabbableItems.length <= 0) {\n        onToggle(false, event);\n        onClose();\n        this.toggle.current.focus();\n        return;\n      } else {\n        // if current element is not in footer, tab to first tabbable element in footer, or close if shift clicked\n        const currentElementIndex = tabbableItems.findIndex((item: any) => item === document.activeElement);\n        if (currentElementIndex === -1) {\n          if (event.shiftKey) {\n            if (variant !== 'checkbox') {\n              // only close non checkbox variation on shift clicked\n              onToggle(false, event);\n              onClose();\n              this.toggle.current.focus();\n            }\n          } else {\n            // tab to footer\n            tabbableItems[0].focus();\n            return;\n          }\n        }\n        // Current element is in footer.\n        if (event.shiftKey) {\n          // Move focus back to menu if current tab index is 0\n          if (currentElementIndex === 0) {\n            moveFocusToLastMenuItem();\n            event.preventDefault();\n          }\n          return;\n        }\n        // Tab to next element in footer or close if there are none\n        if (currentElementIndex + 1 < tabbableItems.length) {\n          tabbableItems[currentElementIndex + 1].focus();\n        } else {\n          // no more footer items close menu\n          onToggle(false, event);\n          onClose();\n          this.toggle.current.focus();\n        }\n        event.preventDefault();\n        return;\n      }\n    }\n\n    if (\n      isOpen &&\n      (event.key === KeyTypes.Escape || event.key === KeyTypes.Tab) &&\n      (escFromToggle || escFromWithinMenu)\n    ) {\n      onToggle(false, event);\n      onClose();\n      this.toggle.current.focus();\n    }\n  };\n\n  onKeyDown = (event: React.KeyboardEvent) => {\n    const { isOpen, onToggle, variant, onClose, onEnter, handleTypeaheadKeys } = this.props;\n\n    if (variant === SelectVariant.typeahead || variant === SelectVariant.typeaheadMulti) {\n      if (event.key === KeyTypes.ArrowDown || event.key === KeyTypes.ArrowUp) {\n        handleTypeaheadKeys((event.key === KeyTypes.ArrowDown && 'down') || (event.key === KeyTypes.ArrowUp && 'up'));\n        event.preventDefault();\n      } else if (event.key === KeyTypes.Enter) {\n        if (isOpen) {\n          handleTypeaheadKeys('enter');\n        } else {\n          onToggle(!isOpen, event);\n        }\n      }\n    }\n\n    if (\n      variant === SelectVariant.typeahead ||\n      variant === SelectVariant.typeaheadMulti ||\n      (event.key === KeyTypes.Tab && !isOpen) ||\n      (event.key !== KeyTypes.Enter && event.key !== KeyTypes.Space)\n    ) {\n      return;\n    }\n    event.preventDefault();\n    if ((event.key === KeyTypes.Tab || event.key === KeyTypes.Enter || event.key === KeyTypes.Space) && isOpen) {\n      onToggle(!isOpen, event);\n      onClose();\n      this.toggle.current.focus();\n    } else if ((event.key === KeyTypes.Enter || event.key === KeyTypes.Space) && !isOpen) {\n      onToggle(!isOpen, event);\n      onEnter();\n    }\n  };\n\n  render() {\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    const {\n      className,\n      children,\n      isOpen,\n      isActive,\n      isPlain,\n      isDisabled,\n      hasPlaceholderStyle,\n      variant,\n      onToggle,\n      onEnter,\n      onClose,\n      onBlur,\n      onClickTypeaheadToggleButton,\n      handleTypeaheadKeys,\n      moveFocusToLastMenuItem,\n      parentRef,\n      menuRef,\n      id,\n      type,\n      hasClearButton,\n      'aria-labelledby': ariaLabelledBy,\n      'aria-label': ariaLabel,\n      hasFooter,\n      footerRef,\n      toggleIndicator,\n      innerRef,\n      ...props\n    } = this.props;\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    const isTypeahead =\n      variant === SelectVariant.typeahead || variant === SelectVariant.typeaheadMulti || hasClearButton;\n    const toggleProps: {\n      id: string;\n      'aria-labelledby': string;\n      'aria-expanded': boolean;\n      'aria-haspopup': 'listbox' | null;\n    } = {\n      id,\n      'aria-labelledby': ariaLabelledBy,\n      'aria-expanded': isOpen,\n      'aria-haspopup': (variant !== SelectVariant.checkbox && 'listbox') || null\n    };\n    return (\n      <React.Fragment>\n        {!isTypeahead && (\n          <button\n            {...props}\n            {...toggleProps}\n            ref={this.toggle as React.RefObject<HTMLButtonElement>}\n            type={type}\n            className={css(\n              styles.selectToggle,\n              hasPlaceholderStyle && styles.modifiers.placeholder,\n              isDisabled && styles.modifiers.disabled,\n              isPlain && styles.modifiers.plain,\n              isActive && styles.modifiers.active,\n              className\n            )}\n            aria-label={ariaLabel}\n            onBlur={onBlur}\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            onClick={event => {\n              onToggle(!isOpen, event);\n              if (isOpen) {\n                onClose();\n              }\n            }}\n            onKeyDown={this.onKeyDown}\n            disabled={isDisabled}\n          >\n            {children}\n            <span className={css(styles.selectToggleArrow)}>{toggleIndicator ?? <CaretDownIcon />}</span>\n          </button>\n        )}\n        {isTypeahead && (\n          <div\n            {...props}\n            ref={this.toggle as React.RefObject<HTMLDivElement>}\n            className={css(\n              styles.selectToggle,\n              hasPlaceholderStyle && styles.modifiers.placeholder,\n              isDisabled && styles.modifiers.disabled,\n              isPlain && styles.modifiers.plain,\n              isTypeahead && styles.modifiers.typeahead,\n              className\n            )}\n            onBlur={onBlur}\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            onClick={event => {\n              if (!isDisabled) {\n                onToggle(!isOpen, event);\n                if (isOpen) {\n                  onClose();\n                }\n              }\n            }}\n            onKeyDown={this.onKeyDown}\n          >\n            {children}\n            <button\n              {...toggleProps}\n              type={type}\n              className={css(buttonStyles.button, styles.selectToggleButton, styles.modifiers.plain)}\n              aria-label={ariaLabel}\n              onClick={event => {\n                onToggle(!isOpen, event);\n                if (isOpen) {\n                  onClose();\n                }\n                onClickTypeaheadToggleButton();\n              }}\n              {...((variant === SelectVariant.typeahead || variant === SelectVariant.typeaheadMulti) && {\n                tabIndex: -1\n              })}\n              disabled={isDisabled}\n            >\n              {toggleIndicator ?? <CaretDownIcon className={css(styles.selectToggleArrow)} />}\n            </button>\n          </div>\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport const SelectToggle = React.forwardRef((props: SelectToggleProps, ref: React.Ref<any>) => (\n  <SelectToggleBase innerRef={ref} {...props} />\n));\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
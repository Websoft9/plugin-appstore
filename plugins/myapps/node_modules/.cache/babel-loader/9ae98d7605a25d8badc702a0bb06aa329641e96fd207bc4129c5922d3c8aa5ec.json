{"ast":null,"code":"import { invariant } from \"../../utilities/globals/index.js\";\nimport * as React from 'react';\nimport { getApolloContext } from \"./ApolloContext.js\";\nexport var ApolloProvider = function ApolloProvider(_a) {\n  var client = _a.client,\n    children = _a.children;\n  var ApolloContext = getApolloContext();\n  return React.createElement(ApolloContext.Consumer, null, function (context) {\n    if (context === void 0) {\n      context = {};\n    }\n    if (client && context.client !== client) {\n      context = Object.assign({}, context, {\n        client: client\n      });\n    }\n    __DEV__ ? invariant(context.client, 'ApolloProvider was not passed a client instance. Make ' + 'sure you pass in your client via the \"client\" prop.') : invariant(context.client, 29);\n    return React.createElement(ApolloContext.Provider, {\n      value: context\n    }, children);\n  });\n};","map":{"version":3,"names":["invariant","React","getApolloContext","ApolloProvider","_a","client","children","ApolloContext","createElement","Consumer","context","Object","assign","__DEV__","Provider","value"],"sources":["/data/stackhub-web/plugins/myapps/node_modules/@apollo/src/react/context/ApolloProvider.tsx"],"sourcesContent":["import { invariant } from '../../utilities/globals';\n\nimport * as React from 'react';\n\nimport { ApolloClient } from '../../core';\nimport { getApolloContext } from './ApolloContext';\n\nexport interface ApolloProviderProps<TCache> {\n  client: ApolloClient<TCache>;\n  children: React.ReactNode | React.ReactNode[] | null;\n}\n\nexport const ApolloProvider: React.FC<ApolloProviderProps<any>> = ({\n  client,\n  children\n}) => {\n  const ApolloContext = getApolloContext();\n  return (\n    <ApolloContext.Consumer>\n      {(context: any = {}) => {\n        if (client && context.client !== client) {\n          context = Object.assign({}, context, { client });\n        }\n\n        invariant(\n          context.client,\n          'ApolloProvider was not passed a client instance. Make ' +\n            'sure you pass in your client via the \"client\" prop.'\n        );\n\n        return (\n          <ApolloContext.Provider value={context}>\n            {children}\n          </ApolloContext.Provider>\n        );\n      }}\n    </ApolloContext.Consumer>\n  );\n};\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,kCAA0B;AAEpD,OAAO,KAAKC,KAAK,MAAM,OAAO;AAG9B,SAASC,gBAAgB,QAAQ,oBAAkB;AAOnD,OAAO,IAAMC,cAAc,GAAuC,SAArDA,cAAcA,CAAwCC,EAGlE;MAFCC,MAAM,GAAAD,EAAA,CAAAC,MAAA;IACNC,QAAQ,GAAAF,EAAA,CAAAE,QAAA;EAER,IAAMC,aAAa,GAAGL,gBAAgB,EAAE;EACxC,OACED,KAAA,CAAAO,aAAA,CAACD,aAAa,CAACE,QAAQ,QACpB,UAACC,OAAiB;IAAjB,IAAAA,OAAA;MAAAA,OAAA,KAAiB;IAAA;IACjB,IAAIL,MAAM,IAAIK,OAAO,CAACL,MAAM,KAAKA,MAAM,EAAE;MACvCK,OAAO,GAAGC,MAAM,CAACC,MAAM,CAAC,EAAE,EAAEF,OAAO,EAAE;QAAEL,MAAM,EAAAA;MAAA,CAAE,CAAC;;IAGlDQ,OAAA,GACEb,SAAQ,CAAAU,OACR,CAAAL,MAAA,0DAAwD,GACtD,qDAAqD,CACxD,GAACL,SAAA,CAAAU,OAAA,CAAAL,MAAA;IAEF,OACEJ,KAAA,CAAAO,aAAA,CAACD,aAAa,CAACO,QAAQ;MAACC,KAAK,EAAEL;IAAO,GACnCJ,QAAQ,CACc;EAE7B,CAAC,CACsB;AAE7B,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
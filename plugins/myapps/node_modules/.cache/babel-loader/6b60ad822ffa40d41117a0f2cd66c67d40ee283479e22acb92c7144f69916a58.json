{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport { Divider } from '../Divider';\nexport var TreeViewList = function TreeViewList(_a) {\n  var _a$isNested = _a.isNested,\n    isNested = _a$isNested === void 0 ? false : _a$isNested,\n    toolbar = _a.toolbar,\n    children = _a.children,\n    props = __rest(_a, [\"isNested\", \"toolbar\", \"children\"]);\n  return React.createElement(React.Fragment, null, toolbar && React.createElement(React.Fragment, null, toolbar, React.createElement(Divider, null)), React.createElement(\"ul\", Object.assign({\n    className: css('pf-c-tree-view__list'),\n    role: isNested ? 'group' : 'tree'\n  }, props), children));\n};\nTreeViewList.displayName = 'TreeViewList';","map":{"version":3,"names":["React","css","Divider","TreeViewList","_a","isNested","_a$isNested","toolbar","children","props","__rest","createElement","Fragment","Object","assign","className","role","displayName"],"sources":["/data/stackhub-web/plugins/myapps/node_modules/@patternfly/react-core/src/components/TreeView/TreeViewList.tsx"],"sourcesContent":["import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport { Divider } from '../Divider';\n\nexport interface TreeViewListProps extends React.HTMLProps<HTMLUListElement> {\n  /** Child nodes of the current tree view. */\n  children: React.ReactNode;\n  /** Flag indicating if the tree view is nested under another tree view. */\n  isNested?: boolean;\n  /** Toolbar to display above the tree view. */\n  toolbar?: React.ReactNode;\n}\n\nexport const TreeViewList: React.FunctionComponent<TreeViewListProps> = ({\n  isNested = false,\n  toolbar,\n  children,\n  ...props\n}: TreeViewListProps) => (\n  <>\n    {toolbar && (\n      <React.Fragment>\n        {toolbar}\n        <Divider />\n      </React.Fragment>\n    )}\n    <ul className={css('pf-c-tree-view__list')} role={isNested ? 'group' : 'tree'} {...props}>\n      {children}\n    </ul>\n  </>\n);\nTreeViewList.displayName = 'TreeViewList';\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,GAAG,QAAQ,0BAA0B;AAC9C,SAASC,OAAO,QAAQ,YAAY;AAWpC,OAAO,IAAMC,YAAY,GAA+C,SAA3DA,YAAYA,CAAgDC,EAKrD,EAAI;oBAFdA,EAEU,CAJlBC,QAAQ;IAARA,QAAQ,GAAAC,WAAA,cAAG,KAAK,GAAAA,WAAA;IAChBC,OAAO,GACCH,EAEU,CAHlBG,OAAO;IACPC,QAAQ,GAAAJ,EAEU,CAFlBI,QAAQ;IACLC,KAAK,GAAAC,MAAA,CAAAN,EAAA,EAJ+D,mCAKxE,CADS;EACe,OACvBJ,KAAA,CAAAW,aAAA,CAAAX,KAAA,CAAAY,QAAA,QACGL,OAAO,IACNP,KAAA,CAAAW,aAAA,CAACX,KAAK,CAACY,QAAQ,QACZL,OAAO,EACRP,KAAA,CAAAW,aAAA,CAACT,OAAO,OAAG,CAEd,EACDF,KAAA,CAAAW,aAAA,OAAAE,MAAA,CAAAC,MAAA;IAAIC,SAAS,EAAEd,GAAG,CAAC,sBAAsB,CAAC;IAAEe,IAAI,EAAEX,QAAQ,GAAG,OAAO,GAAG;EAAM,GAAMI,KAAK,GACrFD,QAAQ,CACN,CACJ;CACJ;AACDL,YAAY,CAACc,WAAW,GAAG,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}
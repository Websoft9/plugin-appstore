{"ast":null,"code":"import contains from 'dom-helpers/contains';\nimport listen from 'dom-helpers/listen';\nimport ownerDocument from 'dom-helpers/ownerDocument';\nimport { useCallback, useEffect, useRef } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport warning from 'warning';\nvar noop = function noop() {};\nfunction isLeftClickEvent(event) {\n  return event.button === 0;\n}\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\nexport var getRefTarget = function getRefTarget(ref) {\n  return ref && ('current' in ref ? ref.current : ref);\n};\nvar InitialTriggerEvents = {\n  click: 'mousedown',\n  mouseup: 'mousedown',\n  pointerup: 'pointerdown'\n};\n\n/**\n * The `useClickOutside` hook registers your callback on the document that fires\n * when a pointer event is registered outside of the provided ref or element.\n *\n * @param {Ref<HTMLElement>| HTMLElement} ref  The element boundary\n * @param {function} onClickOutside\n * @param {object=}  options\n * @param {boolean=} options.disabled\n * @param {string=}  options.clickTrigger The DOM event name (click, mousedown, etc) to attach listeners on\n */\nfunction useClickOutside(ref) {\n  var onClickOutside = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : noop;\n  var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n    disabled = _ref.disabled,\n    _ref$clickTrigger = _ref.clickTrigger,\n    clickTrigger = _ref$clickTrigger === void 0 ? 'click' : _ref$clickTrigger;\n  var preventMouseClickOutsideRef = useRef(false);\n  var waitingForTrigger = useRef(false);\n  var handleMouseCapture = useCallback(function (e) {\n    var currentTarget = getRefTarget(ref);\n    warning(!!currentTarget, 'ClickOutside captured a close event but does not have a ref to compare it to. ' + 'useClickOutside(), should be passed a ref that resolves to a DOM node');\n    preventMouseClickOutsideRef.current = !currentTarget || isModifiedEvent(e) || !isLeftClickEvent(e) || !!contains(currentTarget, e.target) || waitingForTrigger.current;\n    waitingForTrigger.current = false;\n  }, [ref]);\n  var handleInitialMouse = useEventCallback(function (e) {\n    var currentTarget = getRefTarget(ref);\n    if (currentTarget && contains(currentTarget, e.target)) {\n      waitingForTrigger.current = true;\n    }\n  });\n  var handleMouse = useEventCallback(function (e) {\n    if (!preventMouseClickOutsideRef.current) {\n      onClickOutside(e);\n    }\n  });\n  useEffect(function () {\n    var _ownerWindow$event, _ownerWindow$parent;\n    if (disabled || ref == null) return undefined;\n    var doc = ownerDocument(getRefTarget(ref));\n    var ownerWindow = doc.defaultView || window;\n\n    // Store the current event to avoid triggering handlers immediately\n    // For things rendered in an iframe, the event might originate on the parent window\n    // so we should fall back to that global event if the local one doesn't exist\n    // https://github.com/facebook/react/issues/20074\n    var currentEvent = (_ownerWindow$event = ownerWindow.event) != null ? _ownerWindow$event : (_ownerWindow$parent = ownerWindow.parent) == null ? void 0 : _ownerWindow$parent.event;\n    var removeInitialTriggerListener = null;\n    if (InitialTriggerEvents[clickTrigger]) {\n      removeInitialTriggerListener = listen(doc, InitialTriggerEvents[clickTrigger], handleInitialMouse, true);\n    }\n\n    // Use capture for this listener so it fires before React's listener, to\n    // avoid false positives in the contains() check below if the target DOM\n    // element is removed in the React mouse callback.\n    var removeMouseCaptureListener = listen(doc, clickTrigger, handleMouseCapture, true);\n    var removeMouseListener = listen(doc, clickTrigger, function (e) {\n      // skip if this event is the same as the one running when we added the handlers\n      if (e === currentEvent) {\n        currentEvent = undefined;\n        return;\n      }\n      handleMouse(e);\n    });\n    var mobileSafariHackListeners = [];\n    if ('ontouchstart' in doc.documentElement) {\n      mobileSafariHackListeners = [].slice.call(doc.body.children).map(function (el) {\n        return listen(el, 'mousemove', noop);\n      });\n    }\n    return function () {\n      removeInitialTriggerListener == null ? void 0 : removeInitialTriggerListener();\n      removeMouseCaptureListener();\n      removeMouseListener();\n      mobileSafariHackListeners.forEach(function (remove) {\n        return remove();\n      });\n    };\n  }, [ref, disabled, clickTrigger, handleMouseCapture, handleInitialMouse, handleMouse]);\n}\nexport default useClickOutside;","map":{"version":3,"names":["contains","listen","ownerDocument","useCallback","useEffect","useRef","useEventCallback","warning","noop","isLeftClickEvent","event","button","isModifiedEvent","metaKey","altKey","ctrlKey","shiftKey","getRefTarget","ref","current","InitialTriggerEvents","click","mouseup","pointerup","useClickOutside","onClickOutside","arguments","length","undefined","_ref","disabled","_ref$clickTrigger","clickTrigger","preventMouseClickOutsideRef","waitingForTrigger","handleMouseCapture","e","currentTarget","target","handleInitialMouse","handleMouse","_ownerWindow$event","_ownerWindow$parent","doc","ownerWindow","defaultView","window","currentEvent","parent","removeInitialTriggerListener","removeMouseCaptureListener","removeMouseListener","mobileSafariHackListeners","documentElement","slice","call","body","children","map","el","forEach","remove"],"sources":["/data/stackhub-web/plugins/myapps/node_modules/@restart/ui/esm/useClickOutside.js"],"sourcesContent":["import contains from 'dom-helpers/contains';\nimport listen from 'dom-helpers/listen';\nimport ownerDocument from 'dom-helpers/ownerDocument';\nimport { useCallback, useEffect, useRef } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport warning from 'warning';\nconst noop = () => {};\nfunction isLeftClickEvent(event) {\n  return event.button === 0;\n}\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\nexport const getRefTarget = ref => ref && ('current' in ref ? ref.current : ref);\nconst InitialTriggerEvents = {\n  click: 'mousedown',\n  mouseup: 'mousedown',\n  pointerup: 'pointerdown'\n};\n\n/**\n * The `useClickOutside` hook registers your callback on the document that fires\n * when a pointer event is registered outside of the provided ref or element.\n *\n * @param {Ref<HTMLElement>| HTMLElement} ref  The element boundary\n * @param {function} onClickOutside\n * @param {object=}  options\n * @param {boolean=} options.disabled\n * @param {string=}  options.clickTrigger The DOM event name (click, mousedown, etc) to attach listeners on\n */\nfunction useClickOutside(ref, onClickOutside = noop, {\n  disabled,\n  clickTrigger = 'click'\n} = {}) {\n  const preventMouseClickOutsideRef = useRef(false);\n  const waitingForTrigger = useRef(false);\n  const handleMouseCapture = useCallback(e => {\n    const currentTarget = getRefTarget(ref);\n    warning(!!currentTarget, 'ClickOutside captured a close event but does not have a ref to compare it to. ' + 'useClickOutside(), should be passed a ref that resolves to a DOM node');\n    preventMouseClickOutsideRef.current = !currentTarget || isModifiedEvent(e) || !isLeftClickEvent(e) || !!contains(currentTarget, e.target) || waitingForTrigger.current;\n    waitingForTrigger.current = false;\n  }, [ref]);\n  const handleInitialMouse = useEventCallback(e => {\n    const currentTarget = getRefTarget(ref);\n    if (currentTarget && contains(currentTarget, e.target)) {\n      waitingForTrigger.current = true;\n    }\n  });\n  const handleMouse = useEventCallback(e => {\n    if (!preventMouseClickOutsideRef.current) {\n      onClickOutside(e);\n    }\n  });\n  useEffect(() => {\n    var _ownerWindow$event, _ownerWindow$parent;\n    if (disabled || ref == null) return undefined;\n    const doc = ownerDocument(getRefTarget(ref));\n    const ownerWindow = doc.defaultView || window;\n\n    // Store the current event to avoid triggering handlers immediately\n    // For things rendered in an iframe, the event might originate on the parent window\n    // so we should fall back to that global event if the local one doesn't exist\n    // https://github.com/facebook/react/issues/20074\n    let currentEvent = (_ownerWindow$event = ownerWindow.event) != null ? _ownerWindow$event : (_ownerWindow$parent = ownerWindow.parent) == null ? void 0 : _ownerWindow$parent.event;\n    let removeInitialTriggerListener = null;\n    if (InitialTriggerEvents[clickTrigger]) {\n      removeInitialTriggerListener = listen(doc, InitialTriggerEvents[clickTrigger], handleInitialMouse, true);\n    }\n\n    // Use capture for this listener so it fires before React's listener, to\n    // avoid false positives in the contains() check below if the target DOM\n    // element is removed in the React mouse callback.\n    const removeMouseCaptureListener = listen(doc, clickTrigger, handleMouseCapture, true);\n    const removeMouseListener = listen(doc, clickTrigger, e => {\n      // skip if this event is the same as the one running when we added the handlers\n      if (e === currentEvent) {\n        currentEvent = undefined;\n        return;\n      }\n      handleMouse(e);\n    });\n    let mobileSafariHackListeners = [];\n    if ('ontouchstart' in doc.documentElement) {\n      mobileSafariHackListeners = [].slice.call(doc.body.children).map(el => listen(el, 'mousemove', noop));\n    }\n    return () => {\n      removeInitialTriggerListener == null ? void 0 : removeInitialTriggerListener();\n      removeMouseCaptureListener();\n      removeMouseListener();\n      mobileSafariHackListeners.forEach(remove => remove());\n    };\n  }, [ref, disabled, clickTrigger, handleMouseCapture, handleInitialMouse, handleMouse]);\n}\nexport default useClickOutside;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
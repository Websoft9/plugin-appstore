{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Nav/nav';\nimport { css } from '@patternfly/react-styles';\nimport { getUniqueId } from '../../helpers/util';\nexport var NavGroup = function NavGroup(_a) {\n  var title = _a.title,\n    _a$children = _a.children,\n    children = _a$children === void 0 ? null : _a$children,\n    _a$className = _a.className,\n    className = _a$className === void 0 ? '' : _a$className,\n    _a$id = _a.id,\n    id = _a$id === void 0 ? getUniqueId() : _a$id,\n    props = __rest(_a, [\"title\", \"children\", \"className\", \"id\"]);\n  if (!title && !props['aria-label']) {\n    // eslint-disable-next-line no-console\n    console.warn(\"For accessibility reasons an aria-label should be specified on nav groups if a title isn't\");\n  }\n  var labelledBy = title ? id : undefined;\n  return React.createElement(\"section\", Object.assign({\n    className: css(styles.navSection, className),\n    \"aria-labelledby\": labelledBy\n  }, props), title && React.createElement(\"h2\", {\n    className: css(styles.navSectionTitle),\n    id: id\n  }, title), React.createElement(\"ul\", {\n    className: css(styles.navList, className)\n  }, children));\n};\nNavGroup.displayName = 'NavGroup';","map":{"version":3,"names":["React","styles","css","getUniqueId","NavGroup","_a","title","_a$children","children","_a$className","className","_a$id","id","props","__rest","console","warn","labelledBy","undefined","createElement","Object","assign","navSection","navSectionTitle","navList","displayName"],"sources":["/data/stackhub-web/plugins/myapps/node_modules/@patternfly/react-core/src/components/Nav/NavGroup.tsx"],"sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Nav/nav';\nimport { css } from '@patternfly/react-styles';\nimport { getUniqueId } from '../../helpers/util';\n\nexport interface NavGroupProps extends React.HTMLProps<HTMLDivElement> {\n  /** Title shown for the group */\n  title?: string;\n  /** Anything that can be rendered inside of the group */\n  children?: React.ReactNode;\n  /** Additional classes added to the container */\n  className?: string;\n  /** Identifier to use for the section aria label */\n  id?: string;\n}\n\nexport const NavGroup: React.FunctionComponent<NavGroupProps> = ({\n  title,\n  children = null,\n  className = '',\n  id = getUniqueId(),\n  ...props\n}: NavGroupProps) => {\n  if (!title && !props['aria-label']) {\n    // eslint-disable-next-line no-console\n    console.warn(\"For accessibility reasons an aria-label should be specified on nav groups if a title isn't\");\n  }\n\n  const labelledBy = title ? id : undefined;\n\n  return (\n    <section className={css(styles.navSection, className)} aria-labelledby={labelledBy} {...props}>\n      {title && (\n        <h2 className={css(styles.navSectionTitle)} id={id}>\n          {title}\n        </h2>\n      )}\n      <ul className={css(styles.navList, className)}>{children}</ul>\n    </section>\n  );\n};\nNavGroup.displayName = 'NavGroup';\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,MAAM,MAAM,iDAAiD;AACpE,SAASC,GAAG,QAAQ,0BAA0B;AAC9C,SAASC,WAAW,QAAQ,oBAAoB;AAahD,OAAO,IAAMC,QAAQ,GAA2C,SAAnDA,QAAQA,CAA4CC,EAMjD,EAAI;MALlBC,KAAK,GAGaD,EAEJ,CALdC,KAAK;IAAAC,WAAA,GAGaF,EAEJ,CAJdG,QAAQ;IAARA,QAAQ,GAAAD,WAAA,cAAG,IAAI,GAAAA,WAAA;IAAAE,YAAA,GAEGJ,EAEJ,CAHdK,SAAS;IAATA,SAAS,GAAAD,YAAA,cAAG,EAAE,GAAAA,YAAA;IAAAE,KAAA,GACIN,EAEJ,CAFdO,EAAE;IAAFA,EAAE,GAAAD,KAAA,cAAGR,WAAW,EAAE,GAAAQ,KAAA;IACfE,KAAK,GAAAC,MAAA,CAAAT,EAAA,EALuD,wCAMhE,CADS;EAER,IAAI,CAACC,KAAK,IAAI,CAACO,KAAK,CAAC,YAAY,CAAC,EAAE;IAClC;IACAE,OAAO,CAACC,IAAI,CAAC,4FAA4F,CAAC;;EAG5G,IAAMC,UAAU,GAAGX,KAAK,GAAGM,EAAE,GAAGM,SAAS;EAEzC,OACElB,KAAA,CAAAmB,aAAA,YAAAC,MAAA,CAAAC,MAAA;IAASX,SAAS,EAAER,GAAG,CAACD,MAAM,CAACqB,UAAU,EAAEZ,SAAS,CAAC;IAAA,mBAAmBO;EAAU,GAAMJ,KAAK,GAC1FP,KAAK,IACJN,KAAA,CAAAmB,aAAA;IAAIT,SAAS,EAAER,GAAG,CAACD,MAAM,CAACsB,eAAe,CAAC;IAAEX,EAAE,EAAEA;EAAE,GAC/CN,KAAK,CAET,EACDN,KAAA,CAAAmB,aAAA;IAAIT,SAAS,EAAER,GAAG,CAACD,MAAM,CAACuB,OAAO,EAAEd,SAAS;EAAC,GAAGF,QAAQ,CAAM,CACtD;AAEd,CAAC;AACDJ,QAAQ,CAACqB,WAAW,GAAG,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}
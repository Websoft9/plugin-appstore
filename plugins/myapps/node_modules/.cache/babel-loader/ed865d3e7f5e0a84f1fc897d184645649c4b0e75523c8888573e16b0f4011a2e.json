{"ast":null,"code":"// @ts-nocheck\nimport getBoundingClientRect from './getBoundingClientRect';\nimport getDocumentElement from './getDocumentElement';\nimport getWindowScroll from './getWindowScroll';\n/**\n * @param element\n */\nexport default function getWindowScrollBarX(element) {\n  // If <html> has a CSS width greater than the viewport, then this will be\n  // incorrect for RTL.\n  // Popper 1 is broken in this case and never had a bug report so let's assume\n  // it's not an issue. I don't think anyone ever specifies width on <html>\n  // anyway.\n  // Browsers where the left scrollbar doesn't cause an issue report `0` for\n  // this (e.g. Edge 2019, IE11, Safari)\n  return getBoundingClientRect(getDocumentElement(element)).left + getWindowScroll(element).scrollLeft;\n}","map":{"version":3,"names":["getBoundingClientRect","getDocumentElement","getWindowScroll","getWindowScrollBarX","element","left","scrollLeft"],"sources":["/data/stackhub-web/plugins/myapps/node_modules/@patternfly/react-core/src/helpers/Popper/thirdparty/popper-core/dom-utils/getWindowScrollBarX.ts"],"sourcesContent":["// @ts-nocheck\nimport getBoundingClientRect from './getBoundingClientRect';\nimport getDocumentElement from './getDocumentElement';\nimport getWindowScroll from './getWindowScroll';\n\n/**\n * @param element\n */\nexport default function getWindowScrollBarX(element: Element): number {\n  // If <html> has a CSS width greater than the viewport, then this will be\n  // incorrect for RTL.\n  // Popper 1 is broken in this case and never had a bug report so let's assume\n  // it's not an issue. I don't think anyone ever specifies width on <html>\n  // anyway.\n  // Browsers where the left scrollbar doesn't cause an issue report `0` for\n  // this (e.g. Edge 2019, IE11, Safari)\n  return getBoundingClientRect(getDocumentElement(element)).left + getWindowScroll(element).scrollLeft;\n}\n"],"mappings":"AAAA;AACA,OAAOA,qBAAqB,MAAM,yBAAyB;AAC3D,OAAOC,kBAAkB,MAAM,sBAAsB;AACrD,OAAOC,eAAe,MAAM,mBAAmB;AAE/C;;;AAGA,eAAc,SAAUC,mBAAmBA,CAACC,OAAgB;EAC1D;EACA;EACA;EACA;EACA;EACA;EACA;EACA,OAAOJ,qBAAqB,CAACC,kBAAkB,CAACG,OAAO,CAAC,CAAC,CAACC,IAAI,GAAGH,eAAe,CAACE,OAAO,CAAC,CAACE,UAAU;AACtG"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import _classCallCheck from \"/data/stackhub-web/plugins/myapps/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/data/stackhub-web/plugins/myapps/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/data/stackhub-web/plugins/myapps/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/data/stackhub-web/plugins/myapps/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { __rest } from \"tslib\";\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { canUseDOM } from '../../helpers';\nimport { AlertGroupInline } from './AlertGroupInline';\nexport var AlertGroup = /*#__PURE__*/function (_React$Component) {\n  _inherits(AlertGroup, _React$Component);\n  var _super = _createSuper(AlertGroup);\n  function AlertGroup() {\n    var _this;\n    _classCallCheck(this, AlertGroup);\n    _this = _super.apply(this, arguments);\n    _this.state = {\n      container: undefined\n    };\n    return _this;\n  }\n  _createClass(AlertGroup, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var container = document.createElement('div');\n      var target = this.getTargetElement();\n      this.setState({\n        container: container\n      });\n      target.appendChild(container);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var target = this.getTargetElement();\n      if (this.state.container) {\n        target.removeChild(this.state.container);\n      }\n    }\n  }, {\n    key: \"getTargetElement\",\n    value: function getTargetElement() {\n      var appendTo = this.props.appendTo;\n      if (typeof appendTo === 'function') {\n        return appendTo();\n      }\n      return appendTo || document.body;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _a = this.props,\n        className = _a.className,\n        children = _a.children,\n        isToast = _a.isToast,\n        isLiveRegion = _a.isLiveRegion,\n        onOverflowClick = _a.onOverflowClick,\n        overflowMessage = _a.overflowMessage,\n        props = __rest(_a, [\"className\", \"children\", \"isToast\", \"isLiveRegion\", \"onOverflowClick\", \"overflowMessage\"]);\n      var alertGroup = React.createElement(AlertGroupInline, Object.assign({\n        onOverflowClick: onOverflowClick,\n        className: className,\n        isToast: isToast,\n        isLiveRegion: isLiveRegion,\n        overflowMessage: overflowMessage\n      }, props), children);\n      if (!this.props.isToast) {\n        return alertGroup;\n      }\n      var container = this.state.container;\n      if (!canUseDOM || !container) {\n        return null;\n      }\n      return ReactDOM.createPortal(alertGroup, container);\n    }\n  }]);\n  return AlertGroup;\n}(React.Component);\nAlertGroup.displayName = 'AlertGroup';","map":{"version":3,"names":["React","ReactDOM","canUseDOM","AlertGroupInline","AlertGroup","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","state","container","undefined","_createClass","key","value","componentDidMount","document","createElement","target","getTargetElement","setState","appendChild","componentWillUnmount","removeChild","appendTo","props","body","render","_a","className","children","isToast","isLiveRegion","onOverflowClick","overflowMessage","__rest","alertGroup","Object","assign","createPortal","Component","displayName"],"sources":["/data/stackhub-web/plugins/myapps/node_modules/@patternfly/react-core/src/components/AlertGroup/AlertGroup.tsx"],"sourcesContent":["import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { canUseDOM } from '../../helpers';\nimport { AlertGroupInline } from './AlertGroupInline';\n\nexport interface AlertGroupProps extends Omit<React.HTMLProps<HTMLUListElement>, 'className'> {\n  /** Additional classes added to the AlertGroup */\n  className?: string;\n  /** Alerts to be rendered in the AlertGroup */\n  children?: React.ReactNode;\n  /** Toast notifications are positioned at the top right corner of the viewport */\n  isToast?: boolean;\n  /** Turns the container into a live region so that changes to content within the AlertGroup, such as appending an Alert, are reliably announced to assistive technology. */\n  isLiveRegion?: boolean;\n  /** Determine where the alert is appended to */\n  appendTo?: HTMLElement | (() => HTMLElement);\n  /** Function to call if user clicks on overflow message */\n  onOverflowClick?: () => void;\n  /** Custom text to show for the overflow message */\n  overflowMessage?: string;\n}\n\ninterface AlertGroupState {\n  container: HTMLElement;\n}\n\nexport class AlertGroup extends React.Component<AlertGroupProps, AlertGroupState> {\n  static displayName = 'AlertGroup';\n  state = {\n    container: undefined\n  } as AlertGroupState;\n\n  componentDidMount() {\n    const container = document.createElement('div');\n    const target: HTMLElement = this.getTargetElement();\n    this.setState({ container });\n    target.appendChild(container);\n  }\n\n  componentWillUnmount() {\n    const target: HTMLElement = this.getTargetElement();\n    if (this.state.container) {\n      target.removeChild(this.state.container);\n    }\n  }\n\n  getTargetElement() {\n    const appendTo = this.props.appendTo;\n    if (typeof appendTo === 'function') {\n      return appendTo();\n    }\n    return appendTo || document.body;\n  }\n\n  render() {\n    const { className, children, isToast, isLiveRegion, onOverflowClick, overflowMessage, ...props } = this.props;\n    const alertGroup = (\n      <AlertGroupInline\n        onOverflowClick={onOverflowClick}\n        className={className}\n        isToast={isToast}\n        isLiveRegion={isLiveRegion}\n        overflowMessage={overflowMessage}\n        {...props}\n      >\n        {children}\n      </AlertGroupInline>\n    );\n    if (!this.props.isToast) {\n      return alertGroup;\n    }\n\n    const container = this.state.container;\n\n    if (!canUseDOM || !container) {\n      return null;\n    }\n\n    return ReactDOM.createPortal(alertGroup, container);\n  }\n}\n"],"mappings":";;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAO,KAAKC,QAAQ,MAAM,WAAW;AACrC,SAASC,SAAS,QAAQ,eAAe;AACzC,SAASC,gBAAgB,QAAQ,oBAAoB;AAuBrD,WAAaC,UAAW,0BAAAC,gBAAA;EAAAC,SAAA,CAAAF,UAAA,EAAAC,gBAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,UAAA;EAAxB,SAAAA,WAAA;IAAA,IAAAK,KAAA;IAAAC,eAAA,OAAAN,UAAA;;IAEEK,KAAA,CAAAE,KAAK,GAAG;MACNC,SAAS,EAAEC;KACO;IAAC,OAAAJ,KAAA;EAkDvB;EAACK,YAAA,CAAAV,UAAA;IAAAW,GAAA;IAAAC,KAAA,EAhDC,SAAAC,kBAAA,EAAiB;MACf,IAAML,SAAS,GAAGM,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;MAC/C,IAAMC,MAAM,GAAgB,IAAI,CAACC,gBAAgB,EAAE;MACnD,IAAI,CAACC,QAAQ,CAAC;QAAEV,SAAS,EAATA;MAAS,CAAE,CAAC;MAC5BQ,MAAM,CAACG,WAAW,CAACX,SAAS,CAAC;IAC/B;EAAC;IAAAG,GAAA;IAAAC,KAAA,EAED,SAAAQ,qBAAA,EAAoB;MAClB,IAAMJ,MAAM,GAAgB,IAAI,CAACC,gBAAgB,EAAE;MACnD,IAAI,IAAI,CAACV,KAAK,CAACC,SAAS,EAAE;QACxBQ,MAAM,CAACK,WAAW,CAAC,IAAI,CAACd,KAAK,CAACC,SAAS,CAAC;;IAE5C;EAAC;IAAAG,GAAA;IAAAC,KAAA,EAED,SAAAK,iBAAA,EAAgB;MACd,IAAMK,QAAQ,GAAG,IAAI,CAACC,KAAK,CAACD,QAAQ;MACpC,IAAI,OAAOA,QAAQ,KAAK,UAAU,EAAE;QAClC,OAAOA,QAAQ,EAAE;;MAEnB,OAAOA,QAAQ,IAAIR,QAAQ,CAACU,IAAI;IAClC;EAAC;IAAAb,GAAA;IAAAC,KAAA,EAED,SAAAa,OAAA,EAAM;MACE,IAAAC,EAAA,GAA6F,IAAI,CAACH,KAAK;QAArGI,SAAS,GAAmED,EAAyB,CAArGC,SAAS;QAAEC,QAAQ,GAAyDF,EAAyB,CAA1FE,QAAQ;QAAEC,OAAO,GAAgDH,EAAyB,CAAhFG,OAAO;QAAEC,YAAY,GAAkCJ,EAAyB,CAAvEI,YAAY;QAAEC,eAAe,GAAiBL,EAAyB,CAAzDK,eAAe;QAAEC,eAAe,GAAAN,EAAyB,CAAxCM,eAAe;QAAKT,KAAK,GAAAU,MAAA,CAAAP,EAAA,EAAxF,0FAA0F,CAAa;MAC7G,IAAMQ,UAAU,GACdtC,KAAA,CAAAmB,aAAA,CAAChB,gBAAgB,EAAAoC,MAAA,CAAAC,MAAA;QACfL,eAAe,EAAEA,eAAe;QAChCJ,SAAS,EAAEA,SAAS;QACpBE,OAAO,EAAEA,OAAO;QAChBC,YAAY,EAAEA,YAAY;QAC1BE,eAAe,EAAEA;MAAe,GAC5BT,KAAK,GAERK,QAAQ,CAEZ;MACD,IAAI,CAAC,IAAI,CAACL,KAAK,CAACM,OAAO,EAAE;QACvB,OAAOK,UAAU;;MAGnB,IAAM1B,SAAS,GAAG,IAAI,CAACD,KAAK,CAACC,SAAS;MAEtC,IAAI,CAACV,SAAS,IAAI,CAACU,SAAS,EAAE;QAC5B,OAAO,IAAI;;MAGb,OAAOX,QAAQ,CAACwC,YAAY,CAACH,UAAU,EAAE1B,SAAS,CAAC;IACrD;EAAC;EAAA,OAAAR,UAAA;AAAA,EArD6BJ,KAAK,CAAC0C,SAA2C;AACxEtC,UAAA,CAAAuC,WAAW,GAAG,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}
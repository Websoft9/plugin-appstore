{"ast":null,"code":"import _slicedToArray from \"/data/stackhub-web/plugins/myapps/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { __rest } from \"tslib\";\n/* eslint-disable no-console */\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Tooltip/tooltip';\nimport { css } from '@patternfly/react-styles';\nimport { TooltipContent } from './TooltipContent';\nimport { TooltipArrow } from './TooltipArrow';\nimport { KeyTypes } from '../../helpers/constants';\nimport tooltipMaxWidth from '@patternfly/react-tokens/dist/esm/c_tooltip_MaxWidth';\nimport { Popper, getOpacityTransition } from '../../helpers/Popper/Popper';\nexport var TooltipPosition;\n(function (TooltipPosition) {\n  TooltipPosition[\"auto\"] = \"auto\";\n  TooltipPosition[\"top\"] = \"top\";\n  TooltipPosition[\"bottom\"] = \"bottom\";\n  TooltipPosition[\"left\"] = \"left\";\n  TooltipPosition[\"right\"] = \"right\";\n  TooltipPosition[\"topStart\"] = \"top-start\";\n  TooltipPosition[\"topEnd\"] = \"top-end\";\n  TooltipPosition[\"bottomStart\"] = \"bottom-start\";\n  TooltipPosition[\"bottomEnd\"] = \"bottom-end\";\n  TooltipPosition[\"leftStart\"] = \"left-start\";\n  TooltipPosition[\"leftEnd\"] = \"left-end\";\n  TooltipPosition[\"rightStart\"] = \"right-start\";\n  TooltipPosition[\"rightEnd\"] = \"right-end\";\n})(TooltipPosition || (TooltipPosition = {}));\n// id for associating trigger with the content aria-describedby or aria-labelledby\nvar pfTooltipIdCounter = 1;\nexport var Tooltip = function Tooltip(_a) {\n  var bodyContent = _a.content,\n    _a$position = _a.position,\n    position = _a$position === void 0 ? 'top' : _a$position,\n    _a$trigger = _a.trigger,\n    trigger = _a$trigger === void 0 ? 'mouseenter focus' : _a$trigger,\n    _a$isVisible = _a.isVisible,\n    isVisible = _a$isVisible === void 0 ? false : _a$isVisible,\n    _a$isContentLeftAlign = _a.isContentLeftAligned,\n    isContentLeftAligned = _a$isContentLeftAlign === void 0 ? false : _a$isContentLeftAlign,\n    _a$enableFlip = _a.enableFlip,\n    enableFlip = _a$enableFlip === void 0 ? true : _a$enableFlip,\n    _a$className = _a.className,\n    className = _a$className === void 0 ? '' : _a$className,\n    _a$entryDelay = _a.entryDelay,\n    entryDelay = _a$entryDelay === void 0 ? 300 : _a$entryDelay,\n    _a$exitDelay = _a.exitDelay,\n    exitDelay = _a$exitDelay === void 0 ? 300 : _a$exitDelay,\n    _a$appendTo = _a.appendTo,\n    appendTo = _a$appendTo === void 0 ? function () {\n      return document.body;\n    } : _a$appendTo,\n    _a$zIndex = _a.zIndex,\n    zIndex = _a$zIndex === void 0 ? 9999 : _a$zIndex,\n    _a$maxWidth = _a.maxWidth,\n    maxWidth = _a$maxWidth === void 0 ? tooltipMaxWidth.value : _a$maxWidth,\n    _a$distance = _a.distance,\n    distance = _a$distance === void 0 ? 15 : _a$distance,\n    _a$aria = _a.aria,\n    aria = _a$aria === void 0 ? 'describedby' : _a$aria,\n    _a$flipBehavior = _a.flipBehavior,\n    flipBehavior = _a$flipBehavior === void 0 ? ['top', 'right', 'bottom', 'left', 'top', 'right', 'bottom'] : _a$flipBehavior,\n    _a$id = _a.id,\n    id = _a$id === void 0 ? \"pf-tooltip-\".concat(pfTooltipIdCounter++) : _a$id,\n    children = _a.children,\n    _a$animationDuration = _a.animationDuration,\n    animationDuration = _a$animationDuration === void 0 ? 300 : _a$animationDuration,\n    reference = _a.reference,\n    _a$ariaLive = _a['aria-live'],\n    ariaLive = _a$ariaLive === void 0 ? reference ? 'polite' : 'off' : _a$ariaLive,\n    boundary = _a.boundary,\n    isAppLauncher = _a.isAppLauncher,\n    tippyProps = _a.tippyProps,\n    _a$removeFindDomNode = _a.removeFindDomNode,\n    removeFindDomNode = _a$removeFindDomNode === void 0 ? false : _a$removeFindDomNode,\n    _a$onTooltipHidden = _a.onTooltipHidden,\n    onTooltipHidden = _a$onTooltipHidden === void 0 ? function () {} : _a$onTooltipHidden,\n    rest = __rest(_a, [\"content\", \"position\", \"trigger\", \"isVisible\", \"isContentLeftAligned\", \"enableFlip\", \"className\", \"entryDelay\", \"exitDelay\", \"appendTo\", \"zIndex\", \"maxWidth\", \"distance\", \"aria\", \"flipBehavior\", \"id\", \"children\", \"animationDuration\", \"reference\", 'aria-live', \"boundary\", \"isAppLauncher\", \"tippyProps\", \"removeFindDomNode\", \"onTooltipHidden\"]);\n  if (process.env.NODE_ENV !== 'production') {\n    boundary !== undefined && console.warn('The Tooltip boundary prop has been deprecated. If you want to constrain the popper to a specific element use the appendTo prop instead.');\n    isAppLauncher !== undefined && console.warn('The Tooltip isAppLauncher prop has been deprecated and is no longer used.');\n    tippyProps !== undefined && console.warn('The Tooltip tippyProps prop has been deprecated and is no longer used.');\n  }\n  // could make this a prop in the future (true | false | 'toggle')\n  var hideOnClick = true;\n  var triggerOnMouseenter = trigger.includes('mouseenter');\n  var triggerOnFocus = trigger.includes('focus');\n  var triggerOnClick = trigger.includes('click');\n  var triggerManually = trigger === 'manual';\n  var _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    visible = _React$useState2[0],\n    setVisible = _React$useState2[1];\n  var _React$useState3 = React.useState(0),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    opacity = _React$useState4[0],\n    setOpacity = _React$useState4[1];\n  var transitionTimerRef = React.useRef(null);\n  var showTimerRef = React.useRef(null);\n  var hideTimerRef = React.useRef(null);\n  var prevExitDelayRef = React.useRef();\n  var clearTimeouts = function clearTimeouts(timeoutRefs) {\n    timeoutRefs.forEach(function (ref) {\n      if (ref.current) {\n        clearTimeout(ref.current);\n      }\n    });\n  };\n  // Cancel all timers on unmount\n  React.useEffect(function () {\n    return function () {\n      clearTimeouts([transitionTimerRef, hideTimerRef, showTimerRef]);\n    };\n  }, []);\n  var onDocumentKeyDown = function onDocumentKeyDown(event) {\n    if (!triggerManually) {\n      if (event.key === KeyTypes.Escape && visible) {\n        hide();\n      }\n    }\n  };\n  var onTriggerEnter = function onTriggerEnter(event) {\n    if (event.key === KeyTypes.Enter) {\n      if (!visible) {\n        show();\n      } else {\n        hide();\n      }\n    }\n  };\n  React.useEffect(function () {\n    if (isVisible) {\n      show();\n    } else {\n      hide();\n    }\n  }, [isVisible]);\n  React.useEffect(function () {\n    if (prevExitDelayRef.current < exitDelay) {\n      clearTimeouts([transitionTimerRef, hideTimerRef]);\n      hideTimerRef.current = setTimeout(function () {\n        setOpacity(0);\n        transitionTimerRef.current = setTimeout(function () {\n          setVisible(false);\n          onTooltipHidden();\n        }, animationDuration);\n      }, exitDelay);\n    }\n    prevExitDelayRef.current = exitDelay;\n  }, [exitDelay]);\n  var show = function show() {\n    clearTimeouts([transitionTimerRef, hideTimerRef]);\n    showTimerRef.current = setTimeout(function () {\n      setVisible(true);\n      setOpacity(1);\n    }, entryDelay);\n  };\n  var hide = function hide() {\n    clearTimeouts([showTimerRef]);\n    hideTimerRef.current = setTimeout(function () {\n      setOpacity(0);\n      transitionTimerRef.current = setTimeout(function () {\n        setVisible(false);\n        onTooltipHidden();\n      }, animationDuration);\n    }, exitDelay);\n  };\n  var positionModifiers = {\n    top: styles.modifiers.top,\n    bottom: styles.modifiers.bottom,\n    left: styles.modifiers.left,\n    right: styles.modifiers.right,\n    'top-start': styles.modifiers.topLeft,\n    'top-end': styles.modifiers.topRight,\n    'bottom-start': styles.modifiers.bottomLeft,\n    'bottom-end': styles.modifiers.bottomRight,\n    'left-start': styles.modifiers.leftTop,\n    'left-end': styles.modifiers.leftBottom,\n    'right-start': styles.modifiers.rightTop,\n    'right-end': styles.modifiers.rightBottom\n  };\n  var hasCustomMaxWidth = maxWidth !== tooltipMaxWidth.value;\n  var content = React.createElement(\"div\", Object.assign({\n    \"aria-live\": ariaLive,\n    className: css(styles.tooltip, className),\n    role: \"tooltip\",\n    id: id,\n    style: {\n      maxWidth: hasCustomMaxWidth ? maxWidth : null,\n      opacity: opacity,\n      transition: getOpacityTransition(animationDuration)\n    }\n  }, rest), React.createElement(TooltipArrow, null), React.createElement(TooltipContent, {\n    isLeftAligned: isContentLeftAligned\n  }, bodyContent));\n  var onDocumentClick = function onDocumentClick(event, triggerElement) {\n    // event.currentTarget = document\n    // event.target could be triggerElement or something else\n    if (hideOnClick === true) {\n      // hide on inside the toggle as well as on outside clicks\n      if (visible) {\n        hide();\n      } else if (event.target === triggerElement) {\n        show();\n      }\n    } else if (hideOnClick === 'toggle' && event.target === triggerElement) {\n      // prevent outside clicks from hiding but allow it to still be toggled on toggle click\n      if (visible) {\n        hide();\n      } else {\n        show();\n      }\n    } else if (hideOnClick === false && !visible && event.target === triggerElement) {\n      show();\n    }\n  };\n  var addAriaToTrigger = function addAriaToTrigger() {\n    if (aria === 'describedby' && children && children.props && !children.props['aria-describedby']) {\n      return React.cloneElement(children, {\n        'aria-describedby': id\n      });\n    } else if (aria === 'labelledby' && children.props && !children.props['aria-labelledby']) {\n      return React.cloneElement(children, {\n        'aria-labelledby': id\n      });\n    }\n    return children;\n  };\n  return React.createElement(Popper, {\n    trigger: aria !== 'none' && visible ? addAriaToTrigger() : children,\n    reference: reference,\n    popper: content,\n    popperMatchesTriggerWidth: false,\n    appendTo: appendTo,\n    isVisible: visible,\n    positionModifiers: positionModifiers,\n    distance: distance,\n    placement: position,\n    onMouseEnter: triggerOnMouseenter && show,\n    onMouseLeave: triggerOnMouseenter && hide,\n    onPopperMouseEnter: triggerOnMouseenter && show,\n    onPopperMouseLeave: triggerOnMouseenter && hide,\n    onFocus: triggerOnFocus && show,\n    onBlur: triggerOnFocus && hide,\n    onDocumentClick: triggerOnClick && onDocumentClick,\n    onDocumentKeyDown: triggerManually ? null : onDocumentKeyDown,\n    onTriggerEnter: triggerManually ? null : onTriggerEnter,\n    enableFlip: enableFlip,\n    zIndex: zIndex,\n    flipBehavior: flipBehavior,\n    removeFindDomNode: removeFindDomNode\n  });\n};\nTooltip.displayName = 'Tooltip';","map":{"version":3,"names":["React","styles","css","TooltipContent","TooltipArrow","KeyTypes","tooltipMaxWidth","Popper","getOpacityTransition","TooltipPosition","pfTooltipIdCounter","Tooltip","_a","bodyContent","content","_a$position","position","_a$trigger","trigger","_a$isVisible","isVisible","_a$isContentLeftAlign","isContentLeftAligned","_a$enableFlip","enableFlip","_a$className","className","_a$entryDelay","entryDelay","_a$exitDelay","exitDelay","_a$appendTo","appendTo","document","body","_a$zIndex","zIndex","_a$maxWidth","maxWidth","value","_a$distance","distance","_a$aria","aria","_a$flipBehavior","flipBehavior","_a$id","id","concat","children","_a$animationDuration","animationDuration","reference","_a$ariaLive","ariaLive","boundary","isAppLauncher","tippyProps","_a$removeFindDomNode","removeFindDomNode","_a$onTooltipHidden","onTooltipHidden","rest","__rest","process","env","NODE_ENV","undefined","console","warn","hideOnClick","triggerOnMouseenter","includes","triggerOnFocus","triggerOnClick","triggerManually","_React$useState","useState","_React$useState2","_slicedToArray","visible","setVisible","_React$useState3","_React$useState4","opacity","setOpacity","transitionTimerRef","useRef","showTimerRef","hideTimerRef","prevExitDelayRef","clearTimeouts","timeoutRefs","forEach","ref","current","clearTimeout","useEffect","onDocumentKeyDown","event","key","Escape","hide","onTriggerEnter","Enter","show","setTimeout","positionModifiers","top","modifiers","bottom","left","right","topLeft","topRight","bottomLeft","bottomRight","leftTop","leftBottom","rightTop","rightBottom","hasCustomMaxWidth","createElement","Object","assign","tooltip","role","style","transition","isLeftAligned","onDocumentClick","triggerElement","target","addAriaToTrigger","props","cloneElement","popper","popperMatchesTriggerWidth","placement","onMouseEnter","onMouseLeave","onPopperMouseEnter","onPopperMouseLeave","onFocus","onBlur","displayName"],"sources":["/data/stackhub-web/plugins/myapps/node_modules/@patternfly/react-core/src/components/Tooltip/Tooltip.tsx"],"sourcesContent":["/* eslint-disable no-console */\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Tooltip/tooltip';\nimport { css } from '@patternfly/react-styles';\nimport { TooltipContent } from './TooltipContent';\nimport { TooltipArrow } from './TooltipArrow';\nimport { KeyTypes } from '../../helpers/constants';\nimport tooltipMaxWidth from '@patternfly/react-tokens/dist/esm/c_tooltip_MaxWidth';\nimport { ReactElement } from 'react';\nimport { Popper, getOpacityTransition } from '../../helpers/Popper/Popper';\nimport { Props as TippyProps } from '../../helpers/Popper/DeprecatedTippyTypes';\n\nexport enum TooltipPosition {\n  auto = 'auto',\n  top = 'top',\n  bottom = 'bottom',\n  left = 'left',\n  right = 'right',\n  topStart = 'top-start',\n  topEnd = 'top-end',\n  bottomStart = 'bottom-start',\n  bottomEnd = 'bottom-end',\n  leftStart = 'left-start',\n  leftEnd = 'left-end',\n  rightStart = 'right-start',\n  rightEnd = 'right-end'\n}\n\nexport interface TooltipProps extends Omit<React.HTMLProps<HTMLDivElement>, 'content'> {\n  /** The element to append the tooltip to, defaults to body */\n  appendTo?: HTMLElement | ((ref?: HTMLElement) => HTMLElement);\n  /**\n   * aria-labelledby or aria-describedby for tooltip.\n   * The trigger will be cloned to add the aria attribute, and the corresponding id in the form of 'pf-tooltip-#' is added to the content container.\n   * If you don't want that or prefer to add the aria attribute yourself on the trigger, set aria to 'none'.\n   */\n  aria?: 'describedby' | 'labelledby' | 'none';\n  /**\n   * Determines whether the tooltip is an aria-live region. If the reference prop is passed in the\n   * default behavior is 'polite' in order to ensure the tooltip contents is announced to\n   * assistive technologies. Otherwise the default behavior is 'off'.\n   */\n  'aria-live'?: 'off' | 'polite';\n  /**\n   * The reference element to which the Tooltip is relatively placed to.\n   * If you cannot wrap the reference with the Tooltip, you can use the reference prop instead.\n   * Usage: <Tooltip><Button>Reference</Button></Tooltip>\n   */\n  children?: ReactElement<any>;\n  /**\n   * The reference element to which the Tooltip is relatively placed to.\n   * If you can wrap the reference with the Tooltip, you can use the children prop instead.\n   * Usage: <Tooltip reference={() => document.getElementById('reference-element')} />\n   */\n  reference?: HTMLElement | (() => HTMLElement) | React.RefObject<any>;\n  /** Tooltip additional class */\n  className?: string;\n  /** Tooltip content */\n  content: React.ReactNode;\n  /** Distance of the tooltip to its target, defaults to 15 */\n  distance?: number;\n  /** If true, tries to keep the tooltip in view by flipping it if necessary */\n  enableFlip?: boolean;\n  /** Delay in ms before the tooltip appears */\n  entryDelay?: number;\n  /** Delay in ms before the tooltip disappears, Avoid passing in a value of \"0\", as users should\n   * be given ample time to move their mouse from the trigger to the tooltip content without the content\n   * being hidden.\n   */\n  exitDelay?: number;\n  /**\n   * The desired position to flip the tooltip to if the initial position is not possible.\n   * By setting this prop to 'flip' it attempts to flip the tooltip to the opposite side if there is no space.\n   * You can also pass an array of positions that determines the flip order. It should contain the initial position\n   * followed by alternative positions if that position is unavailable.\n   * Example: Initial position is 'top'. Button with tooltip is in the top right corner. 'flipBehavior' is set to\n   * ['top', 'right', 'left']. Since there is no space to the top, it checks if right is available. There's also no\n   * space to the right, so it finally shows the tooltip on the left.\n   */\n  flipBehavior?:\n    | 'flip'\n    | (\n        | 'top'\n        | 'bottom'\n        | 'left'\n        | 'right'\n        | 'top-start'\n        | 'top-end'\n        | 'bottom-start'\n        | 'bottom-end'\n        | 'left-start'\n        | 'left-end'\n        | 'right-start'\n        | 'right-end'\n      )[];\n  /** Maximum width of the tooltip (default 18.75rem) */\n  maxWidth?: string;\n  /** Callback when tooltip's hide transition has finished executing */\n  onTooltipHidden?: () => void;\n  /**\n   * Tooltip position. Note: With 'enableFlip' set to true,\n   * it will change the position if there is not enough space for the starting position.\n   * The behavior of where it flips to can be controlled through the flipBehavior prop.\n   * The 'auto' position chooses the side with the most space.\n   * The 'auto' position requires the 'enableFlip' prop to be true.\n   */\n  position?:\n    | TooltipPosition\n    | 'auto'\n    | 'top'\n    | 'bottom'\n    | 'left'\n    | 'right'\n    | 'top-start'\n    | 'top-end'\n    | 'bottom-start'\n    | 'bottom-end'\n    | 'left-start'\n    | 'left-end'\n    | 'right-start'\n    | 'right-end';\n  /**\n   * Tooltip trigger: click, mouseenter, focus, manual\n   * Set to manual to trigger tooltip programmatically (through the isVisible prop)\n   */\n  trigger?: string;\n  /** Flag to indicate that the text content is left aligned */\n  isContentLeftAligned?: boolean;\n  /** value for visibility when trigger is 'manual' */\n  isVisible?: boolean;\n  /** z-index of the tooltip */\n  zIndex?: number;\n  /** id of the tooltip */\n  id?: string;\n  /** CSS fade transition animation duration */\n  animationDuration?: number;\n  /** @deprecated - no longer used. if you want to constrain the popper to a specific element use the appendTo prop instead */\n  boundary?: 'scrollParent' | 'window' | 'viewport' | HTMLElement;\n  /** @deprecated - no longer used */\n  isAppLauncher?: boolean;\n  /** @deprecated - no longer used */\n  tippyProps?: Partial<TippyProps>;\n  /** @beta Opt-in for updated popper that does not use findDOMNode. */\n  removeFindDomNode?: boolean;\n}\n\n// id for associating trigger with the content aria-describedby or aria-labelledby\nlet pfTooltipIdCounter = 1;\n\nexport const Tooltip: React.FunctionComponent<TooltipProps> = ({\n  content: bodyContent,\n  position = 'top',\n  trigger = 'mouseenter focus',\n  isVisible = false,\n  isContentLeftAligned = false,\n  enableFlip = true,\n  className = '',\n  entryDelay = 300,\n  exitDelay = 300,\n  appendTo = () => document.body,\n  zIndex = 9999,\n  maxWidth = tooltipMaxWidth.value,\n  distance = 15,\n  aria = 'describedby',\n  // For every initial starting position, there are 3 escape positions\n  flipBehavior = ['top', 'right', 'bottom', 'left', 'top', 'right', 'bottom'],\n  id = `pf-tooltip-${pfTooltipIdCounter++}`,\n  children,\n  animationDuration = 300,\n  reference,\n  'aria-live': ariaLive = reference ? 'polite' : 'off',\n  boundary,\n  isAppLauncher,\n  tippyProps,\n  removeFindDomNode = false,\n  onTooltipHidden = () => {},\n  ...rest\n}: TooltipProps) => {\n  if (process.env.NODE_ENV !== 'production') {\n    boundary !== undefined &&\n      console.warn(\n        'The Tooltip boundary prop has been deprecated. If you want to constrain the popper to a specific element use the appendTo prop instead.'\n      );\n    isAppLauncher !== undefined &&\n      console.warn('The Tooltip isAppLauncher prop has been deprecated and is no longer used.');\n    tippyProps !== undefined && console.warn('The Tooltip tippyProps prop has been deprecated and is no longer used.');\n  }\n  // could make this a prop in the future (true | false | 'toggle')\n  const hideOnClick = true;\n  const triggerOnMouseenter = trigger.includes('mouseenter');\n  const triggerOnFocus = trigger.includes('focus');\n  const triggerOnClick = trigger.includes('click');\n  const triggerManually = trigger === 'manual';\n  const [visible, setVisible] = React.useState(false);\n  const [opacity, setOpacity] = React.useState(0);\n  const transitionTimerRef = React.useRef(null);\n  const showTimerRef = React.useRef(null);\n  const hideTimerRef = React.useRef(null);\n\n  const prevExitDelayRef = React.useRef<number>();\n\n  const clearTimeouts = (timeoutRefs: React.RefObject<any>[]) => {\n    timeoutRefs.forEach(ref => {\n      if (ref.current) {\n        clearTimeout(ref.current);\n      }\n    });\n  };\n\n  // Cancel all timers on unmount\n  React.useEffect(\n    () => () => {\n      clearTimeouts([transitionTimerRef, hideTimerRef, showTimerRef]);\n    },\n    []\n  );\n\n  const onDocumentKeyDown = (event: KeyboardEvent) => {\n    if (!triggerManually) {\n      if (event.key === KeyTypes.Escape && visible) {\n        hide();\n      }\n    }\n  };\n  const onTriggerEnter = (event: KeyboardEvent) => {\n    if (event.key === KeyTypes.Enter) {\n      if (!visible) {\n        show();\n      } else {\n        hide();\n      }\n    }\n  };\n  React.useEffect(() => {\n    if (isVisible) {\n      show();\n    } else {\n      hide();\n    }\n  }, [isVisible]);\n\n  React.useEffect(() => {\n    if (prevExitDelayRef.current < exitDelay) {\n      clearTimeouts([transitionTimerRef, hideTimerRef]);\n      hideTimerRef.current = setTimeout(() => {\n        setOpacity(0);\n        transitionTimerRef.current = setTimeout(() => {\n          setVisible(false);\n          onTooltipHidden();\n        }, animationDuration);\n      }, exitDelay);\n    }\n    prevExitDelayRef.current = exitDelay;\n  }, [exitDelay]);\n\n  const show = () => {\n    clearTimeouts([transitionTimerRef, hideTimerRef]);\n    showTimerRef.current = setTimeout(() => {\n      setVisible(true);\n      setOpacity(1);\n    }, entryDelay);\n  };\n  const hide = () => {\n    clearTimeouts([showTimerRef]);\n    hideTimerRef.current = setTimeout(() => {\n      setOpacity(0);\n      transitionTimerRef.current = setTimeout(() => {\n        setVisible(false);\n        onTooltipHidden();\n      }, animationDuration);\n    }, exitDelay);\n  };\n  const positionModifiers = {\n    top: styles.modifiers.top,\n    bottom: styles.modifiers.bottom,\n    left: styles.modifiers.left,\n    right: styles.modifiers.right,\n    'top-start': styles.modifiers.topLeft,\n    'top-end': styles.modifiers.topRight,\n    'bottom-start': styles.modifiers.bottomLeft,\n    'bottom-end': styles.modifiers.bottomRight,\n    'left-start': styles.modifiers.leftTop,\n    'left-end': styles.modifiers.leftBottom,\n    'right-start': styles.modifiers.rightTop,\n    'right-end': styles.modifiers.rightBottom\n  };\n  const hasCustomMaxWidth = maxWidth !== tooltipMaxWidth.value;\n  const content = (\n    <div\n      aria-live={ariaLive}\n      className={css(styles.tooltip, className)}\n      role=\"tooltip\"\n      id={id}\n      style={{\n        maxWidth: hasCustomMaxWidth ? maxWidth : null,\n        opacity,\n        transition: getOpacityTransition(animationDuration)\n      }}\n      {...rest}\n    >\n      <TooltipArrow />\n      <TooltipContent isLeftAligned={isContentLeftAligned}>{bodyContent}</TooltipContent>\n    </div>\n  );\n\n  const onDocumentClick = (event: MouseEvent, triggerElement: HTMLElement) => {\n    // event.currentTarget = document\n    // event.target could be triggerElement or something else\n    if (hideOnClick === true) {\n      // hide on inside the toggle as well as on outside clicks\n      if (visible) {\n        hide();\n      } else if (event.target === triggerElement) {\n        show();\n      }\n    } else if (hideOnClick === 'toggle' && event.target === triggerElement) {\n      // prevent outside clicks from hiding but allow it to still be toggled on toggle click\n      if (visible) {\n        hide();\n      } else {\n        show();\n      }\n    } else if (hideOnClick === false && !visible && event.target === triggerElement) {\n      show();\n    }\n  };\n\n  const addAriaToTrigger = () => {\n    if (aria === 'describedby' && children && children.props && !children.props['aria-describedby']) {\n      return React.cloneElement(children, { 'aria-describedby': id });\n    } else if (aria === 'labelledby' && children.props && !children.props['aria-labelledby']) {\n      return React.cloneElement(children, { 'aria-labelledby': id });\n    }\n    return children;\n  };\n\n  return (\n    <Popper\n      trigger={aria !== 'none' && visible ? addAriaToTrigger() : children}\n      reference={reference}\n      popper={content}\n      popperMatchesTriggerWidth={false}\n      appendTo={appendTo}\n      isVisible={visible}\n      positionModifiers={positionModifiers}\n      distance={distance}\n      placement={position}\n      onMouseEnter={triggerOnMouseenter && show}\n      onMouseLeave={triggerOnMouseenter && hide}\n      onPopperMouseEnter={triggerOnMouseenter && show}\n      onPopperMouseLeave={triggerOnMouseenter && hide}\n      onFocus={triggerOnFocus && show}\n      onBlur={triggerOnFocus && hide}\n      onDocumentClick={triggerOnClick && onDocumentClick}\n      onDocumentKeyDown={triggerManually ? null : onDocumentKeyDown}\n      onTriggerEnter={triggerManually ? null : onTriggerEnter}\n      enableFlip={enableFlip}\n      zIndex={zIndex}\n      flipBehavior={flipBehavior}\n      removeFindDomNode={removeFindDomNode}\n    />\n  );\n};\nTooltip.displayName = 'Tooltip';\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
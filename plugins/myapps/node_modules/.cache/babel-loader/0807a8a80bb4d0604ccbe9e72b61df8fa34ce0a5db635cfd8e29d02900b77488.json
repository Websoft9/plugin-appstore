{"ast":null,"code":"import _classCallCheck from \"/data/stackhub-web/plugins/myapps/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/data/stackhub-web/plugins/myapps/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/data/stackhub-web/plugins/myapps/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/data/stackhub-web/plugins/myapps/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Progress/progress';\nimport { css } from '@patternfly/react-styles';\nimport { ProgressContainer, ProgressMeasureLocation } from './ProgressContainer';\nimport { getUniqueId } from '../../helpers/util';\nexport var ProgressSize;\n(function (ProgressSize) {\n  ProgressSize[\"sm\"] = \"sm\";\n  ProgressSize[\"md\"] = \"md\";\n  ProgressSize[\"lg\"] = \"lg\";\n})(ProgressSize || (ProgressSize = {}));\nexport var Progress = /*#__PURE__*/function (_React$Component) {\n  _inherits(Progress, _React$Component);\n  var _super = _createSuper(Progress);\n  function Progress() {\n    var _this;\n    _classCallCheck(this, Progress);\n    _this = _super.apply(this, arguments);\n    _this.id = _this.props.id || getUniqueId();\n    return _this;\n  }\n  _createClass(Progress, [{\n    key: \"render\",\n    value: function render() {\n      var _a = this.props,\n        id = _a.id,\n        size = _a.size,\n        className = _a.className,\n        value = _a.value,\n        title = _a.title,\n        label = _a.label,\n        variant = _a.variant,\n        measureLocation = _a.measureLocation,\n        min = _a.min,\n        max = _a.max,\n        valueText = _a.valueText,\n        isTitleTruncated = _a.isTitleTruncated,\n        tooltipPosition = _a.tooltipPosition,\n        ariaLabel = _a['aria-label'],\n        ariaLabelledBy = _a['aria-labelledby'],\n        helperText = _a.helperText,\n        props = __rest(_a, [\"id\", \"size\", \"className\", \"value\", \"title\", \"label\", \"variant\", \"measureLocation\", \"min\", \"max\", \"valueText\", \"isTitleTruncated\", \"tooltipPosition\", 'aria-label', 'aria-labelledby', \"helperText\"]);\n      var progressBarAriaProps = {\n        'aria-valuemin': min,\n        'aria-valuenow': value,\n        'aria-valuemax': max\n      };\n      if (title || ariaLabelledBy) {\n        progressBarAriaProps['aria-labelledby'] = title ? \"\".concat(this.id, \"-description\") : ariaLabelledBy;\n      }\n      if (ariaLabel) {\n        progressBarAriaProps['aria-label'] = ariaLabel;\n      }\n      if (valueText) {\n        progressBarAriaProps['aria-valuetext'] = valueText;\n      }\n      if (!title && !ariaLabelledBy && !ariaLabel) {\n        /* eslint-disable no-console */\n        console.warn('One of aria-label or aria-labelledby properties should be passed when using the progress component without a title.');\n      }\n      var scaledValue = Math.min(100, Math.max(0, Math.floor((value - min) / (max - min) * 100))) || 0;\n      return React.createElement(\"div\", Object.assign({}, props, {\n        className: css(styles.progress, styles.modifiers[variant], ['inside', 'outside'].includes(measureLocation) && styles.modifiers[measureLocation], measureLocation === 'inside' ? styles.modifiers[ProgressSize.lg] : styles.modifiers[size], !title && styles.modifiers.singleline, className),\n        id: this.id\n      }), React.createElement(ProgressContainer, {\n        parentId: this.id,\n        value: scaledValue,\n        title: title,\n        label: label,\n        variant: variant,\n        measureLocation: measureLocation,\n        progressBarAriaProps: progressBarAriaProps,\n        isTitleTruncated: isTitleTruncated,\n        tooltipPosition: tooltipPosition,\n        helperText: helperText\n      }));\n    }\n  }]);\n  return Progress;\n}(React.Component);\nProgress.displayName = 'Progress';\nProgress.defaultProps = {\n  className: '',\n  measureLocation: ProgressMeasureLocation.top,\n  variant: null,\n  id: '',\n  title: '',\n  min: 0,\n  max: 100,\n  size: null,\n  label: null,\n  value: 0,\n  valueText: null,\n  isTitleTruncated: false,\n  tooltipPosition: 'top',\n  'aria-label': null,\n  'aria-labelledby': null\n};","map":{"version":3,"names":["React","styles","css","ProgressContainer","ProgressMeasureLocation","getUniqueId","ProgressSize","Progress","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","id","props","_createClass","key","value","render","_a","size","className","title","label","variant","measureLocation","min","max","valueText","isTitleTruncated","tooltipPosition","ariaLabel","ariaLabelledBy","helperText","__rest","progressBarAriaProps","concat","console","warn","scaledValue","Math","floor","createElement","Object","assign","progress","modifiers","includes","lg","singleline","parentId","Component","displayName","defaultProps","top"],"sources":["/data/stackhub-web/plugins/myapps/node_modules/@patternfly/react-core/src/components/Progress/Progress.tsx"],"sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Progress/progress';\nimport { css } from '@patternfly/react-styles';\nimport { ProgressContainer, ProgressMeasureLocation } from './ProgressContainer';\nimport { AriaProps } from './ProgressBar';\nimport { getUniqueId } from '../../helpers/util';\n\nexport enum ProgressSize {\n  sm = 'sm',\n  md = 'md',\n  lg = 'lg'\n}\n\nexport interface ProgressProps extends Omit<React.HTMLProps<HTMLDivElement>, 'size' | 'label' | 'title'> {\n  /** Classname for progress component. */\n  className?: string;\n  /** Size variant of progress. */\n  size?: 'sm' | 'md' | 'lg';\n  /** Where the measure percent will be located. */\n  measureLocation?: 'outside' | 'inside' | 'top' | 'none';\n  /** Status variant of progress. */\n  variant?: 'danger' | 'success' | 'warning';\n  /** Title above progress. The isTitleTruncated property will only affect string titles. Node title truncation must be handled manually. */\n  title?: React.ReactNode;\n  /** Text description of current progress value to display instead of percentage. */\n  label?: React.ReactNode;\n  /** Actual value of progress. */\n  value?: number;\n  /** DOM id for progress component. */\n  id?: string;\n  /** Minimal value of progress. */\n  min?: number;\n  /** Maximum value of progress. */\n  max?: number;\n  /** Accessible text description of current progress value, for when value is not a percentage. Use with label. */\n  valueText?: string;\n  /** Indicate whether to truncate the string title */\n  isTitleTruncated?: boolean;\n  /** Position of the tooltip which is displayed if title is truncated */\n  tooltipPosition?: 'auto' | 'top' | 'bottom' | 'left' | 'right';\n  /** Adds accessible text to the ProgressBar. Required when title not used and there is not any label associated with the progress bar */\n  'aria-label'?: string;\n  /** Associates the ProgressBar with it's label for accessibility purposes. Required when title not used */\n  'aria-labelledby'?: string;\n  /** @beta Content which can be used to convey additional information about the progress component.\n   * We recommend the helper text component as it was designed for this purpose.\n   */\n  helperText?: React.ReactNode;\n}\n\nexport class Progress extends React.Component<ProgressProps> {\n  static displayName = 'Progress';\n  static defaultProps: ProgressProps = {\n    className: '',\n    measureLocation: ProgressMeasureLocation.top,\n    variant: null,\n    id: '',\n    title: '',\n    min: 0,\n    max: 100,\n    size: null as ProgressSize,\n    label: null as React.ReactNode,\n    value: 0,\n    valueText: null as string,\n    isTitleTruncated: false,\n    tooltipPosition: 'top' as 'auto' | 'top' | 'bottom' | 'left' | 'right',\n    'aria-label': null as string,\n    'aria-labelledby': null as string\n  };\n\n  id = this.props.id || getUniqueId();\n\n  render() {\n    const {\n      /* eslint-disable @typescript-eslint/no-unused-vars */\n      id,\n      size,\n      /* eslint-enable @typescript-eslint/no-unused-vars */\n      className,\n      value,\n      title,\n      label,\n      variant,\n      measureLocation,\n      min,\n      max,\n      valueText,\n      isTitleTruncated,\n      tooltipPosition,\n      'aria-label': ariaLabel,\n      'aria-labelledby': ariaLabelledBy,\n      helperText,\n      ...props\n    } = this.props;\n\n    const progressBarAriaProps: AriaProps = {\n      'aria-valuemin': min,\n      'aria-valuenow': value,\n      'aria-valuemax': max\n    };\n\n    if (title || ariaLabelledBy) {\n      progressBarAriaProps['aria-labelledby'] = title ? `${this.id}-description` : ariaLabelledBy;\n    }\n\n    if (ariaLabel) {\n      progressBarAriaProps['aria-label'] = ariaLabel;\n    }\n\n    if (valueText) {\n      progressBarAriaProps['aria-valuetext'] = valueText;\n    }\n\n    if (!title && !ariaLabelledBy && !ariaLabel) {\n      /* eslint-disable no-console */\n      console.warn(\n        'One of aria-label or aria-labelledby properties should be passed when using the progress component without a title.'\n      );\n    }\n\n    const scaledValue = Math.min(100, Math.max(0, Math.floor(((value - min) / (max - min)) * 100))) || 0;\n    return (\n      <div\n        {...props}\n        className={css(\n          styles.progress,\n          styles.modifiers[variant],\n          ['inside', 'outside'].includes(measureLocation) && styles.modifiers[measureLocation as 'inside' | 'outside'],\n          measureLocation === 'inside' ? styles.modifiers[ProgressSize.lg] : styles.modifiers[size as 'sm' | 'lg'],\n          !title && styles.modifiers.singleline,\n          className\n        )}\n        id={this.id}\n      >\n        <ProgressContainer\n          parentId={this.id}\n          value={scaledValue}\n          title={title}\n          label={label}\n          variant={variant}\n          measureLocation={measureLocation}\n          progressBarAriaProps={progressBarAriaProps}\n          isTitleTruncated={isTitleTruncated}\n          tooltipPosition={tooltipPosition}\n          helperText={helperText}\n        />\n      </div>\n    );\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
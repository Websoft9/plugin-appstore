{"ast":null,"code":"import * as React from 'react';\nexport var DragDropContext = React.createContext({\n  onDrag: function onDrag(_source) {\n    return true;\n  },\n  onDragMove: function onDragMove(_source, _dest) {},\n  onDrop: function onDrop(_source, _dest) {\n    return false;\n  }\n});\nexport var DragDrop = function DragDrop(_ref) {\n  var children = _ref.children,\n    _ref$onDrag = _ref.onDrag,\n    onDrag = _ref$onDrag === void 0 ? function () {\n      return true;\n    } : _ref$onDrag,\n    _ref$onDragMove = _ref.onDragMove,\n    onDragMove = _ref$onDragMove === void 0 ? function () {} : _ref$onDragMove,\n    _ref$onDrop = _ref.onDrop,\n    onDrop = _ref$onDrop === void 0 ? function () {\n      return false;\n    } : _ref$onDrop;\n  return React.createElement(DragDropContext.Provider, {\n    value: {\n      onDrag: onDrag,\n      onDragMove: onDragMove,\n      onDrop: onDrop\n    }\n  }, children);\n};\nDragDrop.displayName = 'DragDrop';","map":{"version":3,"names":["React","DragDropContext","createContext","onDrag","_source","onDragMove","_dest","onDrop","DragDrop","_ref","children","_ref$onDrag","_ref$onDragMove","_ref$onDrop","createElement","Provider","value","displayName"],"sources":["/data/stackhub-web/plugins/myapps/node_modules/@patternfly/react-core/src/components/DragDrop/DragDrop.tsx"],"sourcesContent":["import * as React from 'react';\n\nexport interface DraggableItemPosition {\n  /** Parent droppableId */\n  droppableId: string;\n  /** Index of item in parent Droppable */\n  index: number;\n}\n\nexport const DragDropContext = React.createContext({\n  onDrag: (_source: DraggableItemPosition) => true as boolean,\n  onDragMove: (_source: DraggableItemPosition, _dest?: DraggableItemPosition) => {},\n  onDrop: (_source: DraggableItemPosition, _dest?: DraggableItemPosition) => false as boolean\n});\n\ninterface DragDropProps {\n  /** Potentially Droppable and Draggable children */\n  children?: React.ReactNode;\n  /** Callback for drag event. Return true to allow drag, false to disallow. */\n  onDrag?: (source: DraggableItemPosition) => boolean;\n  /** Callback on mouse move while dragging. */\n  onDragMove?: (source: DraggableItemPosition, dest?: DraggableItemPosition) => void;\n  /** Callback for drop event. Return true to allow drop, false to disallow. */\n  onDrop?: (source: DraggableItemPosition, dest?: DraggableItemPosition) => boolean;\n}\n\nexport const DragDrop: React.FunctionComponent<DragDropProps> = ({\n  children,\n  onDrag = () => true,\n  onDragMove = () => {},\n  onDrop = () => false\n}: DragDropProps) => (\n  <DragDropContext.Provider value={{ onDrag, onDragMove, onDrop }}>{children}</DragDropContext.Provider>\n);\nDragDrop.displayName = 'DragDrop';\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAS9B,OAAO,IAAMC,eAAe,GAAGD,KAAK,CAACE,aAAa,CAAC;EACjDC,MAAM,EAAE,SAAAA,OAACC,OAA8B;IAAA,OAAK,IAAe;EAAA;EAC3DC,UAAU,EAAE,SAAAA,WAACD,OAA8B,EAAEE,KAA6B,EAAI,CAAE,CAAC;EACjFC,MAAM,EAAE,SAAAA,OAACH,OAA8B,EAAEE,KAA6B;IAAA,OAAK,KAAgB;EAAA;CAC5F,CAAC;AAaF,OAAO,IAAME,QAAQ,GAA2C,SAAnDA,QAAQA,CAAAC,IAAA;EAAA,IACnBC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;IAAAC,WAAA,GAAAF,IAAA,CACRN,MAAM;IAANA,MAAM,GAAAQ,WAAA,cAAG;MAAA,OAAM,IAAI;IAAA,IAAAA,WAAA;IAAAC,eAAA,GAAAH,IAAA,CACnBJ,UAAU;IAAVA,UAAU,GAAAO,eAAA,cAAG,YAAK,CAAE,CAAC,GAAAA,eAAA;IAAAC,WAAA,GAAAJ,IAAA,CACrBF,MAAM;IAANA,MAAM,GAAAM,WAAA,cAAG;MAAA,OAAM,KAAK;IAAA,IAAAA,WAAA;EAAA,OAEpBb,KAAA,CAAAc,aAAA,CAACb,eAAe,CAACc,QAAQ;IAACC,KAAK,EAAE;MAAEb,MAAM,EAANA,MAAM;MAAEE,UAAU,EAAVA,UAAU;MAAEE,MAAM,EAANA;IAAM;EAAE,GAAGG,QAAQ,CAA4B;AAAA,CACvG;AACDF,QAAQ,CAACS,WAAW,GAAG,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}
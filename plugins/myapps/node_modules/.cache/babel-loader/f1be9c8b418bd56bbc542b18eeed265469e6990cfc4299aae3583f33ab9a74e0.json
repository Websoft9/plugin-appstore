{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { DropdownToggle, DropdownContext } from '../Dropdown';\nexport var OptionsMenuToggle = function OptionsMenuToggle(_a) {\n  var _a$isPlain = _a.isPlain,\n    isPlain = _a$isPlain === void 0 ? false : _a$isPlain,\n    _a$isDisabled = _a.isDisabled,\n    isDisabled = _a$isDisabled === void 0 ? false : _a$isDisabled,\n    _a$isOpen = _a.isOpen,\n    isOpen = _a$isOpen === void 0 ? false : _a$isOpen,\n    _a$parentId = _a.parentId,\n    parentId = _a$parentId === void 0 ? '' : _a$parentId,\n    _a$toggleTemplate = _a.toggleTemplate,\n    toggleTemplate = _a$toggleTemplate === void 0 ? React.createElement(React.Fragment, null) : _a$toggleTemplate,\n    _a$hideCaret = _a.hideCaret,\n    hideCaret = _a$hideCaret === void 0 ? false : _a$hideCaret,\n    _a$isActive = _a.isActive,\n    isActive = _a$isActive === void 0 ? false : _a$isActive,\n    _a$isSplitButton = _a.isSplitButton,\n    isSplitButton = _a$isSplitButton === void 0 ? false : _a$isSplitButton,\n    type = _a.type,\n    _a$ariaLabel = _a['aria-label'],\n    ariaLabel = _a$ariaLabel === void 0 ? 'Options menu' : _a$ariaLabel,\n    props = __rest(_a, [\"isPlain\", \"isDisabled\", \"isOpen\", \"parentId\", \"toggleTemplate\", \"hideCaret\", \"isActive\", \"isSplitButton\", \"type\", 'aria-label']);\n  return React.createElement(DropdownContext.Consumer, null, function (_ref) {\n    var contextId = _ref.id;\n    return React.createElement(DropdownToggle, Object.assign({}, (isPlain || hideCaret) && {\n      toggleIndicator: null\n    }, props, {\n      isPlain: isPlain,\n      isOpen: isOpen,\n      isDisabled: isDisabled,\n      isActive: isActive,\n      id: parentId ? \"\".concat(parentId, \"-toggle\") : \"\".concat(contextId, \"-toggle\"),\n      \"aria-haspopup\": \"listbox\",\n      \"aria-label\": ariaLabel,\n      \"aria-expanded\": isOpen\n    }, toggleTemplate ? {\n      children: toggleTemplate\n    } : {}));\n  });\n};\nOptionsMenuToggle.displayName = 'OptionsMenuToggle';","map":{"version":3,"names":["React","DropdownToggle","DropdownContext","OptionsMenuToggle","_a","isPlain","_a$isPlain","_a$isDisabled","isDisabled","_a$isOpen","isOpen","_a$parentId","parentId","_a$toggleTemplate","toggleTemplate","createElement","Fragment","_a$hideCaret","hideCaret","_a$isActive","isActive","_a$isSplitButton","isSplitButton","type","_a$ariaLabel","ariaLabel","props","__rest","Consumer","_ref","contextId","id","Object","assign","toggleIndicator","concat","children","displayName"],"sources":["/data/stackhub-web/plugins/myapps/node_modules/@patternfly/react-core/src/components/OptionsMenu/OptionsMenuToggle.tsx"],"sourcesContent":["import * as React from 'react';\nimport { DropdownToggle, DropdownContext } from '../Dropdown';\n\nexport interface OptionsMenuToggleProps extends React.HTMLProps<HTMLButtonElement> {\n  /** Id of the parent options menu component */\n  parentId?: string;\n  /** Callback for when this options menu is toggled */\n  onToggle?: (isOpen: boolean) => void;\n  /** Flag to indicate if menu is open */\n  isOpen?: boolean;\n  /** Flag to indicate if the button is plain */\n  isPlain?: boolean;\n  isSplitButton?: boolean;\n  /** Forces display of the active state of the options menu */\n  isActive?: boolean;\n  /** Disables the options menu toggle */\n  isDisabled?: boolean;\n  /** hide the toggle caret */\n  hideCaret?: boolean;\n  /** Provides an accessible name for the button when an icon is used instead of text */\n  'aria-label'?: string;\n  /** @hide Internal function to implement enter click */\n  onEnter?: (event: React.MouseEvent<HTMLButtonElement>) => void;\n  /** @hide Internal parent reference */\n  parentRef?: HTMLElement;\n  /** Content to be rendered in the options menu toggle button */\n  toggleTemplate?: React.ReactNode;\n}\n\nexport const OptionsMenuToggle: React.FunctionComponent<OptionsMenuToggleProps> = ({\n  isPlain = false,\n  isDisabled = false,\n  isOpen = false,\n  parentId = '',\n  toggleTemplate = <React.Fragment />,\n  hideCaret = false,\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  isActive = false,\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  isSplitButton = false,\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  type,\n  'aria-label': ariaLabel = 'Options menu',\n  ...props\n}: OptionsMenuToggleProps) => (\n  <DropdownContext.Consumer>\n    {({ id: contextId }) => (\n      <DropdownToggle\n        {...((isPlain || hideCaret) && { toggleIndicator: null })}\n        {...props}\n        isPlain={isPlain}\n        isOpen={isOpen}\n        isDisabled={isDisabled}\n        isActive={isActive}\n        id={parentId ? `${parentId}-toggle` : `${contextId}-toggle`}\n        aria-haspopup=\"listbox\"\n        aria-label={ariaLabel}\n        aria-expanded={isOpen}\n        {...(toggleTemplate ? { children: toggleTemplate } : {})}\n      />\n    )}\n  </DropdownContext.Consumer>\n);\nOptionsMenuToggle.displayName = 'OptionsMenuToggle';\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,cAAc,EAAEC,eAAe,QAAQ,aAAa;AA4B7D,OAAO,IAAMC,iBAAiB,GAAoD,SAArEA,iBAAiBA,CAAqDC,EAe1D,EAAI;mBAFaA,EAEjB,CAdvBC,OAAO;IAAPA,OAAO,GAAAC,UAAA,cAAG,KAAK,GAAAA,UAAA;IAAAC,aAAA,GAYyBH,EAEjB,CAbvBI,UAAU;IAAVA,UAAU,GAAAD,aAAA,cAAG,KAAK,GAAAA,aAAA;IAAAE,SAAA,GAWsBL,EAEjB,CAZvBM,MAAM;IAANA,MAAM,GAAAD,SAAA,cAAG,KAAK,GAAAA,SAAA;IAAAE,WAAA,GAU0BP,EAEjB,CAXvBQ,QAAQ;IAARA,QAAQ,GAAAD,WAAA,cAAG,EAAE,GAAAA,WAAA;IAAAE,iBAAA,GAS2BT,EAEjB,CAVvBU,cAAc;IAAdA,cAAc,GAAAD,iBAAA,cAAGb,KAAA,CAAAe,aAAA,CAACf,KAAK,CAACgB,QAAQ,OAAG,GAAAH,iBAAA;IAAAI,YAAA,GAQKb,EAEjB,CATvBc,SAAS;IAATA,SAAS,GAAAD,YAAA,cAAG,KAAK,GAAAA,YAAA;IAAAE,WAAA,GAOuBf,EAEjB,CAPvBgB,QAAQ;IAARA,QAAQ,GAAAD,WAAA,cAAG,KAAK,GAAAA,WAAA;IAAAE,gBAAA,GAKwBjB,EAEjB,CALvBkB,aAAa;IAAbA,aAAa,GAAAD,gBAAA,cAAG,KAAK,GAAAA,gBAAA;IAErBE,IAAI,GACoCnB,EAEjB,CAHvBmB,IAAI;IAAAC,YAAA,GACoCpB,EAEjB,CAFvB,YAAY;IAAEqB,SAAS,GAAAD,YAAA,cAAG,cAAc,GAAAA,YAAA;IACrCE,KAAK,GAAAC,MAAA,CAAAvB,EAAA,EAdyE,iIAelF,CADS;EACoB,OAC5BJ,KAAA,CAAAe,aAAA,CAACb,eAAe,CAAC0B,QAAQ,QACtB,UAAAC,IAAA;IAAA,IAAOC,SAAS,GAAAD,IAAA,CAAbE,EAAE;IAAA,OACJ/B,KAAA,CAAAe,aAAA,CAACd,cAAc,EAAA+B,MAAA,CAAAC,MAAA,KACR,CAAC5B,OAAO,IAAIa,SAAS,KAAK;MAAEgB,eAAe,EAAE;IAAI,CAAE,EACpDR,KAAK;MACTrB,OAAO,EAAEA,OAAO;MAChBK,MAAM,EAAEA,MAAM;MACdF,UAAU,EAAEA,UAAU;MACtBY,QAAQ,EAAEA,QAAQ;MAClBW,EAAE,EAAEnB,QAAQ,MAAAuB,MAAA,CAAMvB,QAAQ,kBAAAuB,MAAA,CAAeL,SAAS,YAAS;MAAA,iBAC7C,SAAS;MAAA,cACXL,SAAS;MAAA,iBACNf;IAAM,GAChBI,cAAc,GAAG;MAAEsB,QAAQ,EAAEtB;IAAc,CAAE,GAAG,EAAG,EACxD;EAAA,CACH,CACwB;CAC5B;AACDX,iBAAiB,CAACkC,WAAW,GAAG,mBAAmB"},"metadata":{},"sourceType":"module","externalDependencies":[]}
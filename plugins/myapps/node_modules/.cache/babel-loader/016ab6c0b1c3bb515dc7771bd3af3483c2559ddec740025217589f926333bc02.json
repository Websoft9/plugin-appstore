{"ast":null,"code":"import _classCallCheck from \"/data/stackhub-web/plugins/myapps/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/data/stackhub-web/plugins/myapps/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/data/stackhub-web/plugins/myapps/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/data/stackhub-web/plugins/myapps/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Toolbar/toolbar';\nimport { css } from '@patternfly/react-styles';\nimport { ToolbarContentContext, ToolbarContext } from './ToolbarUtils';\nimport { formatBreakpointMods } from '../../helpers/util';\nimport { ToolbarExpandableContent } from './ToolbarExpandableContent';\nimport { PageContext } from '../Page/PageContext';\nexport var ToolbarContent = /*#__PURE__*/function (_React$Component) {\n  _inherits(ToolbarContent, _React$Component);\n  var _super = _createSuper(ToolbarContent);\n  function ToolbarContent() {\n    var _this;\n    _classCallCheck(this, ToolbarContent);\n    _this = _super.apply(this, arguments);\n    _this.expandableContentRef = React.createRef();\n    _this.chipContainerRef = React.createRef();\n    return _this;\n  }\n  _createClass(ToolbarContent, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      var _a = this.props,\n        className = _a.className,\n        children = _a.children,\n        isExpanded = _a.isExpanded,\n        toolbarId = _a.toolbarId,\n        visibility = _a.visibility,\n        visiblity = _a.visiblity,\n        alignment = _a.alignment,\n        clearAllFilters = _a.clearAllFilters,\n        showClearFiltersButton = _a.showClearFiltersButton,\n        clearFiltersButtonText = _a.clearFiltersButtonText,\n        props = __rest(_a, [\"className\", \"children\", \"isExpanded\", \"toolbarId\", \"visibility\", \"visiblity\", \"alignment\", \"clearAllFilters\", \"showClearFiltersButton\", \"clearFiltersButtonText\"]);\n      if (visiblity !== undefined) {\n        // eslint-disable-next-line no-console\n        console.warn('The ToolbarContent visiblity prop has been deprecated. ' + 'Please use the correctly spelled visibility prop instead.');\n      }\n      return React.createElement(PageContext.Consumer, null, function (_ref) {\n        var width = _ref.width,\n          getBreakpoint = _ref.getBreakpoint;\n        return React.createElement(\"div\", Object.assign({\n          className: css(styles.toolbarContent, formatBreakpointMods(visibility || visiblity, styles, '', getBreakpoint(width)), formatBreakpointMods(alignment, styles, '', getBreakpoint(width)), className)\n        }, props), React.createElement(ToolbarContext.Consumer, null, function (_ref2) {\n          var clearAllFiltersContext = _ref2.clearAllFilters,\n            clearFiltersButtonContext = _ref2.clearFiltersButtonText,\n            showClearFiltersButtonContext = _ref2.showClearFiltersButton,\n            toolbarIdContext = _ref2.toolbarId;\n          var expandableContentId = \"\".concat(toolbarId || toolbarIdContext, \"-expandable-content-\").concat(ToolbarContent.currentId++);\n          return React.createElement(ToolbarContentContext.Provider, {\n            value: {\n              expandableContentRef: _this2.expandableContentRef,\n              expandableContentId: expandableContentId,\n              chipContainerRef: _this2.chipContainerRef\n            }\n          }, React.createElement(\"div\", {\n            className: css(styles.toolbarContentSection)\n          }, children), React.createElement(ToolbarExpandableContent, {\n            id: expandableContentId,\n            isExpanded: isExpanded,\n            expandableContentRef: _this2.expandableContentRef,\n            chipContainerRef: _this2.chipContainerRef,\n            clearAllFilters: clearAllFilters || clearAllFiltersContext,\n            showClearFiltersButton: showClearFiltersButton || showClearFiltersButtonContext,\n            clearFiltersButtonText: clearFiltersButtonText || clearFiltersButtonContext\n          }));\n        }));\n      });\n    }\n  }]);\n  return ToolbarContent;\n}(React.Component);\nToolbarContent.displayName = 'ToolbarContent';\nToolbarContent.currentId = 0;\nToolbarContent.defaultProps = {\n  isExpanded: false,\n  showClearFiltersButton: false\n};","map":{"version":3,"names":["React","styles","css","ToolbarContentContext","ToolbarContext","formatBreakpointMods","ToolbarExpandableContent","PageContext","ToolbarContent","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","expandableContentRef","createRef","chipContainerRef","_createClass","key","value","render","_this2","_a","props","className","children","isExpanded","toolbarId","visibility","visiblity","alignment","clearAllFilters","showClearFiltersButton","clearFiltersButtonText","__rest","undefined","console","warn","createElement","Consumer","_ref","width","getBreakpoint","Object","assign","toolbarContent","_ref2","clearAllFiltersContext","clearFiltersButtonContext","showClearFiltersButtonContext","toolbarIdContext","expandableContentId","concat","currentId","Provider","toolbarContentSection","id","Component","displayName","defaultProps"],"sources":["/data/stackhub-web/plugins/myapps/node_modules/@patternfly/react-core/src/components/Toolbar/ToolbarContent.tsx"],"sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Toolbar/toolbar';\nimport { css } from '@patternfly/react-styles';\nimport { ToolbarContentContext, ToolbarContext } from './ToolbarUtils';\nimport { formatBreakpointMods } from '../../helpers/util';\nimport { ToolbarExpandableContent } from './ToolbarExpandableContent';\nimport { PageContext } from '../Page/PageContext';\n\nexport interface ToolbarContentProps extends React.HTMLProps<HTMLDivElement> {\n  /** Classes applied to root element of the data toolbar content row */\n  className?: string;\n  /** Visibility at various breakpoints. */\n  visibility?: {\n    default?: 'hidden' | 'visible';\n    md?: 'hidden' | 'visible';\n    lg?: 'hidden' | 'visible';\n    xl?: 'hidden' | 'visible';\n    '2xl'?: 'hidden' | 'visible';\n  };\n  /** @deprecated prop misspelled */\n  visiblity?: {\n    default?: 'hidden' | 'visible';\n    md?: 'hidden' | 'visible';\n    lg?: 'hidden' | 'visible';\n    xl?: 'hidden' | 'visible';\n    '2xl'?: 'hidden' | 'visible';\n  };\n  /** Alignment at various breakpoints. */\n  alignment?: {\n    default?: 'alignRight' | 'alignLeft';\n    md?: 'alignRight' | 'alignLeft';\n    lg?: 'alignRight' | 'alignLeft';\n    xl?: 'alignRight' | 'alignLeft';\n    '2xl'?: 'alignRight' | 'alignLeft';\n  };\n  /** Content to be rendered as children of the content row */\n  children?: React.ReactNode;\n  /** Flag indicating if a data toolbar toggle group's expandable content is expanded */\n  isExpanded?: boolean;\n  /** Optional callback for clearing all filters in the toolbar */\n  clearAllFilters?: () => void;\n  /** Flag indicating that the clear all filters button should be visible */\n  showClearFiltersButton?: boolean;\n  /** Text to display in the clear all filters button */\n  clearFiltersButtonText?: string;\n  /** Id of the parent Toolbar component */\n  toolbarId?: string;\n}\n\nexport class ToolbarContent extends React.Component<ToolbarContentProps> {\n  static displayName = 'ToolbarContent';\n  private expandableContentRef = React.createRef<HTMLDivElement>();\n  private chipContainerRef = React.createRef<HTMLDivElement>();\n  private static currentId = 0;\n\n  static defaultProps: ToolbarContentProps = {\n    isExpanded: false,\n    showClearFiltersButton: false\n  };\n\n  render() {\n    const {\n      className,\n      children,\n      isExpanded,\n      toolbarId,\n      visibility,\n      visiblity,\n      alignment,\n      clearAllFilters,\n      showClearFiltersButton,\n      clearFiltersButtonText,\n      ...props\n    } = this.props;\n\n    if (visiblity !== undefined) {\n      // eslint-disable-next-line no-console\n      console.warn(\n        'The ToolbarContent visiblity prop has been deprecated. ' +\n          'Please use the correctly spelled visibility prop instead.'\n      );\n    }\n\n    return (\n      <PageContext.Consumer>\n        {({ width, getBreakpoint }) => (\n          <div\n            className={css(\n              styles.toolbarContent,\n              formatBreakpointMods(visibility || visiblity, styles, '', getBreakpoint(width)),\n              formatBreakpointMods(alignment, styles, '', getBreakpoint(width)),\n              className\n            )}\n            {...props}\n          >\n            <ToolbarContext.Consumer>\n              {({\n                clearAllFilters: clearAllFiltersContext,\n                clearFiltersButtonText: clearFiltersButtonContext,\n                showClearFiltersButton: showClearFiltersButtonContext,\n                toolbarId: toolbarIdContext\n              }) => {\n                const expandableContentId = `${toolbarId ||\n                  toolbarIdContext}-expandable-content-${ToolbarContent.currentId++}`;\n                return (\n                  <ToolbarContentContext.Provider\n                    value={{\n                      expandableContentRef: this.expandableContentRef,\n                      expandableContentId,\n                      chipContainerRef: this.chipContainerRef\n                    }}\n                  >\n                    <div className={css(styles.toolbarContentSection)}>{children}</div>\n                    <ToolbarExpandableContent\n                      id={expandableContentId}\n                      isExpanded={isExpanded}\n                      expandableContentRef={this.expandableContentRef}\n                      chipContainerRef={this.chipContainerRef}\n                      clearAllFilters={clearAllFilters || clearAllFiltersContext}\n                      showClearFiltersButton={showClearFiltersButton || showClearFiltersButtonContext}\n                      clearFiltersButtonText={clearFiltersButtonText || clearFiltersButtonContext}\n                    />\n                  </ToolbarContentContext.Provider>\n                );\n              }}\n            </ToolbarContext.Consumer>\n          </div>\n        )}\n      </PageContext.Consumer>\n    );\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
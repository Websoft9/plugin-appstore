{"ast":null,"code":"import _slicedToArray from \"/data/stackhub-web/plugins/myapps/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"colorSchemes\", \"components\"],\n  _excluded2 = [\"light\"];\nimport { deepmerge } from '@mui/utils';\nimport cssVarsParser from './cssVarsParser';\nfunction prepareCssVars(theme, parserConfig) {\n  // @ts-ignore - ignore components do not exist\n  var _theme$colorSchemes = theme.colorSchemes,\n    colorSchemes = _theme$colorSchemes === void 0 ? {} : _theme$colorSchemes,\n    otherTheme = _objectWithoutPropertiesLoose(theme, _excluded);\n  var _cssVarsParser = cssVarsParser(otherTheme, parserConfig),\n    rootVars = _cssVarsParser.vars,\n    rootCss = _cssVarsParser.css,\n    rootVarsWithDefaults = _cssVarsParser.varsWithDefaults;\n  var themeVars = rootVarsWithDefaults;\n  var colorSchemesMap = {};\n  var light = colorSchemes.light,\n    otherColorSchemes = _objectWithoutPropertiesLoose(colorSchemes, _excluded2);\n  Object.entries(otherColorSchemes || {}).forEach(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n      key = _ref2[0],\n      scheme = _ref2[1];\n    var _cssVarsParser2 = cssVarsParser(scheme, parserConfig),\n      vars = _cssVarsParser2.vars,\n      css = _cssVarsParser2.css,\n      varsWithDefaults = _cssVarsParser2.varsWithDefaults;\n    themeVars = deepmerge(themeVars, varsWithDefaults);\n    colorSchemesMap[key] = {\n      css: css,\n      vars: vars\n    };\n  });\n  if (light) {\n    // light color scheme vars should be merged last to set as default\n    var _cssVarsParser3 = cssVarsParser(light, parserConfig),\n      css = _cssVarsParser3.css,\n      vars = _cssVarsParser3.vars,\n      varsWithDefaults = _cssVarsParser3.varsWithDefaults;\n    themeVars = deepmerge(themeVars, varsWithDefaults);\n    colorSchemesMap.light = {\n      css: css,\n      vars: vars\n    };\n  }\n  var generateCssVars = function generateCssVars(colorScheme) {\n    if (!colorScheme) {\n      return {\n        css: _extends({}, rootCss),\n        vars: rootVars\n      };\n    }\n    return {\n      css: _extends({}, colorSchemesMap[colorScheme].css),\n      vars: colorSchemesMap[colorScheme].vars\n    };\n  };\n  return {\n    vars: themeVars,\n    generateCssVars: generateCssVars\n  };\n}\nexport default prepareCssVars;","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","_excluded","_excluded2","deepmerge","cssVarsParser","prepareCssVars","theme","parserConfig","_theme$colorSchemes","colorSchemes","otherTheme","_cssVarsParser","rootVars","vars","rootCss","css","rootVarsWithDefaults","varsWithDefaults","themeVars","colorSchemesMap","light","otherColorSchemes","Object","entries","forEach","_ref","_ref2","_slicedToArray","key","scheme","_cssVarsParser2","_cssVarsParser3","generateCssVars","colorScheme"],"sources":["/data/stackhub-web/plugins/myapps/node_modules/@mui/system/esm/cssVars/prepareCssVars.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"colorSchemes\", \"components\"],\n  _excluded2 = [\"light\"];\nimport { deepmerge } from '@mui/utils';\nimport cssVarsParser from './cssVarsParser';\nfunction prepareCssVars(theme, parserConfig) {\n  // @ts-ignore - ignore components do not exist\n  const {\n      colorSchemes = {}\n    } = theme,\n    otherTheme = _objectWithoutPropertiesLoose(theme, _excluded);\n  const {\n    vars: rootVars,\n    css: rootCss,\n    varsWithDefaults: rootVarsWithDefaults\n  } = cssVarsParser(otherTheme, parserConfig);\n  let themeVars = rootVarsWithDefaults;\n  const colorSchemesMap = {};\n  const {\n      light\n    } = colorSchemes,\n    otherColorSchemes = _objectWithoutPropertiesLoose(colorSchemes, _excluded2);\n  Object.entries(otherColorSchemes || {}).forEach(([key, scheme]) => {\n    const {\n      vars,\n      css,\n      varsWithDefaults\n    } = cssVarsParser(scheme, parserConfig);\n    themeVars = deepmerge(themeVars, varsWithDefaults);\n    colorSchemesMap[key] = {\n      css,\n      vars\n    };\n  });\n  if (light) {\n    // light color scheme vars should be merged last to set as default\n    const {\n      css,\n      vars,\n      varsWithDefaults\n    } = cssVarsParser(light, parserConfig);\n    themeVars = deepmerge(themeVars, varsWithDefaults);\n    colorSchemesMap.light = {\n      css,\n      vars\n    };\n  }\n  const generateCssVars = colorScheme => {\n    if (!colorScheme) {\n      return {\n        css: _extends({}, rootCss),\n        vars: rootVars\n      };\n    }\n    return {\n      css: _extends({}, colorSchemesMap[colorScheme].css),\n      vars: colorSchemesMap[colorScheme].vars\n    };\n  };\n  return {\n    vars: themeVars,\n    generateCssVars\n  };\n}\nexport default prepareCssVars;"],"mappings":";AAAA,OAAOA,QAAQ,MAAM,oCAAoC;AACzD,OAAOC,6BAA6B,MAAM,yDAAyD;AACnG,IAAMC,SAAS,GAAG,CAAC,cAAc,EAAE,YAAY,CAAC;EAC9CC,UAAU,GAAG,CAAC,OAAO,CAAC;AACxB,SAASC,SAAS,QAAQ,YAAY;AACtC,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,SAASC,cAAcA,CAACC,KAAK,EAAEC,YAAY,EAAE;EAC3C;EACA,IAAAC,mBAAA,GAEMF,KAAK,CADPG,YAAY;IAAZA,YAAY,GAAAD,mBAAA,cAAG,CAAC,CAAC,GAAAA,mBAAA;IAEnBE,UAAU,GAAGV,6BAA6B,CAACM,KAAK,EAAEL,SAAS,CAAC;EAC9D,IAAAU,cAAA,GAIIP,aAAa,CAACM,UAAU,EAAEH,YAAY,CAAC;IAHnCK,QAAQ,GAAAD,cAAA,CAAdE,IAAI;IACCC,OAAO,GAAAH,cAAA,CAAZI,GAAG;IACeC,oBAAoB,GAAAL,cAAA,CAAtCM,gBAAgB;EAElB,IAAIC,SAAS,GAAGF,oBAAoB;EACpC,IAAMG,eAAe,GAAG,CAAC,CAAC;EACpB,IACFC,KAAK,GACHX,YAAY,CADdW,KAAK;IAEPC,iBAAiB,GAAGrB,6BAA6B,CAACS,YAAY,EAAEP,UAAU,CAAC;EAC7EoB,MAAM,CAACC,OAAO,CAACF,iBAAiB,IAAI,CAAC,CAAC,CAAC,CAACG,OAAO,CAAC,UAAAC,IAAA,EAAmB;IAAA,IAAAC,KAAA,GAAAC,cAAA,CAAAF,IAAA;MAAjBG,GAAG,GAAAF,KAAA;MAAEG,MAAM,GAAAH,KAAA;IAC3D,IAAAI,eAAA,GAII1B,aAAa,CAACyB,MAAM,EAAEtB,YAAY,CAAC;MAHrCM,IAAI,GAAAiB,eAAA,CAAJjB,IAAI;MACJE,GAAG,GAAAe,eAAA,CAAHf,GAAG;MACHE,gBAAgB,GAAAa,eAAA,CAAhBb,gBAAgB;IAElBC,SAAS,GAAGf,SAAS,CAACe,SAAS,EAAED,gBAAgB,CAAC;IAClDE,eAAe,CAACS,GAAG,CAAC,GAAG;MACrBb,GAAG,EAAHA,GAAG;MACHF,IAAI,EAAJA;IACF,CAAC;EACH,CAAC,CAAC;EACF,IAAIO,KAAK,EAAE;IACT;IACA,IAAAW,eAAA,GAII3B,aAAa,CAACgB,KAAK,EAAEb,YAAY,CAAC;MAHpCQ,GAAG,GAAAgB,eAAA,CAAHhB,GAAG;MACHF,IAAI,GAAAkB,eAAA,CAAJlB,IAAI;MACJI,gBAAgB,GAAAc,eAAA,CAAhBd,gBAAgB;IAElBC,SAAS,GAAGf,SAAS,CAACe,SAAS,EAAED,gBAAgB,CAAC;IAClDE,eAAe,CAACC,KAAK,GAAG;MACtBL,GAAG,EAAHA,GAAG;MACHF,IAAI,EAAJA;IACF,CAAC;EACH;EACA,IAAMmB,eAAe,GAAG,SAAlBA,eAAeA,CAAGC,WAAW,EAAI;IACrC,IAAI,CAACA,WAAW,EAAE;MAChB,OAAO;QACLlB,GAAG,EAAEhB,QAAQ,CAAC,CAAC,CAAC,EAAEe,OAAO,CAAC;QAC1BD,IAAI,EAAED;MACR,CAAC;IACH;IACA,OAAO;MACLG,GAAG,EAAEhB,QAAQ,CAAC,CAAC,CAAC,EAAEoB,eAAe,CAACc,WAAW,CAAC,CAAClB,GAAG,CAAC;MACnDF,IAAI,EAAEM,eAAe,CAACc,WAAW,CAAC,CAACpB;IACrC,CAAC;EACH,CAAC;EACD,OAAO;IACLA,IAAI,EAAEK,SAAS;IACfc,eAAe,EAAfA;EACF,CAAC;AACH;AACA,eAAe3B,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Menu/menu';\nimport { css } from '@patternfly/react-styles';\nimport { MenuContext } from './MenuContext';\nexport var MenuList = function MenuList(_a) {\n  var _a$children = _a.children,\n    children = _a$children === void 0 ? null : _a$children,\n    className = _a.className,\n    _a$isAriaMultiselecta = _a.isAriaMultiselectable,\n    isAriaMultiselectable = _a$isAriaMultiselecta === void 0 ? false : _a$isAriaMultiselecta,\n    props = __rest(_a, [\"children\", \"className\", \"isAriaMultiselectable\"]);\n  var _React$useContext = React.useContext(MenuContext),\n    role = _React$useContext.role;\n  return React.createElement(\"ul\", Object.assign({\n    role: role\n  }, role === 'listbox' && {\n    'aria-multiselectable': isAriaMultiselectable\n  }, {\n    className: css(styles.menuList, className)\n  }, props), children);\n};\nMenuList.displayName = 'MenuList';","map":{"version":3,"names":["React","styles","css","MenuContext","MenuList","_a","children","_a$children","className","_a$isAriaMultiselecta","isAriaMultiselectable","props","__rest","_React$useContext","useContext","role","createElement","Object","assign","menuList","displayName"],"sources":["/data/stackhub-web/plugins/myapps/node_modules/@patternfly/react-core/src/components/Menu/MenuList.tsx"],"sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Menu/menu';\nimport { css } from '@patternfly/react-styles';\nimport { MenuContext } from './MenuContext';\n\nexport interface MenuListProps extends React.HTMLProps<HTMLUListElement> {\n  /** Anything that can be rendered inside of menu list */\n  children: React.ReactNode;\n  /** Additional classes added to the menu list */\n  className?: string;\n  /** @beta Indicates to assistive technologies whether more than one item can be selected\n   * for a non-checkbox menu. Only applies when the menu's role is \"listbox\".\n   */\n  isAriaMultiselectable?: boolean;\n}\n\nexport const MenuList: React.FunctionComponent<MenuListProps> = ({\n  children = null,\n  className,\n  isAriaMultiselectable = false,\n  ...props\n}: MenuListProps) => {\n  const { role } = React.useContext(MenuContext);\n\n  return (\n    <ul\n      role={role}\n      {...(role === 'listbox' && { 'aria-multiselectable': isAriaMultiselectable })}\n      className={css(styles.menuList, className)}\n      {...props}\n    >\n      {children}\n    </ul>\n  );\n};\nMenuList.displayName = 'MenuList';\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,MAAM,MAAM,mDAAmD;AACtE,SAASC,GAAG,QAAQ,0BAA0B;AAC9C,SAASC,WAAW,QAAQ,eAAe;AAa3C,OAAO,IAAMC,QAAQ,GAA2C,SAAnDA,QAAQA,CAA4CC,EAKjD,EAAI;oBAFWA,EAEf,CAJdC,QAAQ;IAARA,QAAQ,GAAAC,WAAA,cAAG,IAAI,GAAAA,WAAA;IACfC,SAAS,GACoBH,EAEf,CAHdG,SAAS;IAAAC,qBAAA,GACoBJ,EAEf,CAFdK,qBAAqB;IAArBA,qBAAqB,GAAAD,qBAAA,cAAG,KAAK,GAAAA,qBAAA;IAC1BE,KAAK,GAAAC,MAAA,CAAAP,EAAA,EAJuD,kDAKhE,CADS;EAER,IAAAQ,iBAAA,GAAiBb,KAAK,CAACc,UAAU,CAACX,WAAW,CAAC;IAAtCY,IAAI,GAAAF,iBAAA,CAAJE,IAAI;EAEZ,OACEf,KAAA,CAAAgB,aAAA,OAAAC,MAAA,CAAAC,MAAA;IACEH,IAAI,EAAEA;EAAI,GACLA,IAAI,KAAK,SAAS,IAAI;IAAE,sBAAsB,EAAEL;EAAqB,CAAE,EAAC;IAC7EF,SAAS,EAAEN,GAAG,CAACD,MAAM,CAACkB,QAAQ,EAAEX,SAAS;EAAC,GACtCG,KAAK,GAERL,QAAQ,CACN;AAET,CAAC;AACDF,QAAQ,CAACgB,WAAW,GAAG,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}
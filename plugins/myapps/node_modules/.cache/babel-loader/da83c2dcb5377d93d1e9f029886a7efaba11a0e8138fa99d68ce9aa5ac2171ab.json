{"ast":null,"code":"import _toConsumableArray from \"/data/stackhub-web/plugins/myapps/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { ListActionTypes } from './listActions.types';\n/**\n * Looks up the next valid item to highlight within the list.\n *\n * @param currentIndex The index of the start of the search.\n * @param lookupDirection Whether to look for the next or previous item.\n * @param items The array of items to search.\n * @param includeDisabledItems Whether to include disabled items in the search.\n * @param isItemDisabled A function that determines whether an item is disabled.\n * @param wrapAround Whether to wrap around the list when searching.\n * @returns The index of the next valid item to highlight or -1 if no valid item is found.\n */\nfunction findValidItemToHighlight(currentIndex, lookupDirection, items, includeDisabledItems, isItemDisabled, wrapAround) {\n  if (items.length === 0 || !includeDisabledItems && items.every(function (item, itemIndex) {\n    return isItemDisabled(item, itemIndex);\n  })) {\n    return -1;\n  }\n  var nextFocus = currentIndex;\n  for (;;) {\n    // No valid items found\n    if (!wrapAround && lookupDirection === 'next' && nextFocus === items.length || !wrapAround && lookupDirection === 'previous' && nextFocus === -1) {\n      return -1;\n    }\n    var nextFocusDisabled = includeDisabledItems ? false : isItemDisabled(items[nextFocus], nextFocus);\n    if (nextFocusDisabled) {\n      nextFocus += lookupDirection === 'next' ? 1 : -1;\n      if (wrapAround) {\n        nextFocus = (nextFocus + items.length) % items.length;\n      }\n    } else {\n      return nextFocus;\n    }\n  }\n}\n\n/**\n * Gets the next item to highlight based on the current highlighted item and the search direction.\n *\n * @param previouslyHighlightedValue The item from which to start the search for the next candidate.\n * @param offset The offset from the previously highlighted item to search for the next candidate or a special named value ('reset', 'start', 'end').\n * @param context The list action context.\n *\n * @returns The next item to highlight or null if no item is valid.\n */\nexport function moveHighlight(previouslyHighlightedValue, offset, context) {\n  var _items$nextIndex;\n  var items = context.items,\n    isItemDisabled = context.isItemDisabled,\n    disableListWrap = context.disableListWrap,\n    disabledItemsFocusable = context.disabledItemsFocusable,\n    itemComparer = context.itemComparer,\n    focusManagement = context.focusManagement;\n\n  // TODO: make this configurable\n  // The always should be an item highlighted when focus is managed by the DOM\n  // so that it's accessible by the `tab` key.\n  var defaultHighlightedIndex = focusManagement === 'DOM' ? 0 : -1;\n  var maxIndex = items.length - 1;\n  var previouslyHighlightedIndex = previouslyHighlightedValue == null ? -1 : items.findIndex(function (item) {\n    return itemComparer(item, previouslyHighlightedValue);\n  });\n  var nextIndexCandidate;\n  var lookupDirection;\n  var wrapAround = !disableListWrap;\n  switch (offset) {\n    case 'reset':\n      if (defaultHighlightedIndex === -1) {\n        return null;\n      }\n      nextIndexCandidate = 0;\n      lookupDirection = 'next';\n      wrapAround = false;\n      break;\n    case 'start':\n      nextIndexCandidate = 0;\n      lookupDirection = 'next';\n      wrapAround = false;\n      break;\n    case 'end':\n      nextIndexCandidate = maxIndex;\n      lookupDirection = 'previous';\n      wrapAround = false;\n      break;\n    default:\n      {\n        var newIndex = previouslyHighlightedIndex + offset;\n        if (newIndex < 0) {\n          if (!wrapAround && previouslyHighlightedIndex !== -1 || Math.abs(offset) > 1) {\n            nextIndexCandidate = 0;\n            lookupDirection = 'next';\n          } else {\n            nextIndexCandidate = maxIndex;\n            lookupDirection = 'previous';\n          }\n        } else if (newIndex > maxIndex) {\n          if (!wrapAround || Math.abs(offset) > 1) {\n            nextIndexCandidate = maxIndex;\n            lookupDirection = 'previous';\n          } else {\n            nextIndexCandidate = 0;\n            lookupDirection = 'next';\n          }\n        } else {\n          nextIndexCandidate = newIndex;\n          lookupDirection = offset >= 0 ? 'next' : 'previous';\n        }\n      }\n  }\n  var nextIndex = findValidItemToHighlight(nextIndexCandidate, lookupDirection, items, disabledItemsFocusable, isItemDisabled, wrapAround);\n\n  // If there are no valid items to highlight, return the previously highlighted item (if it's still valid).\n  if (nextIndex === -1 && previouslyHighlightedValue !== null && !isItemDisabled(previouslyHighlightedValue, previouslyHighlightedIndex)) {\n    return previouslyHighlightedValue;\n  }\n  return (_items$nextIndex = items[nextIndex]) != null ? _items$nextIndex : null;\n}\n\n/**\n * Toggles the selection of an item.\n *\n * @param item Item to toggle.\n * @param selectedValues Already selected items.\n * @param selectionMode The number of items that can be simultanously selected.\n * @param itemComparer A custom item comparer function.\n *\n * @returns The new array of selected items.\n */\nexport function toggleSelection(item, selectedValues, selectionMode, itemComparer) {\n  if (selectionMode === 'none') {\n    return [];\n  }\n  if (selectionMode === 'single') {\n    // if the item to select has already been selected, return the original array\n    if (itemComparer(selectedValues[0], item)) {\n      return selectedValues;\n    }\n    return [item];\n  }\n\n  // The toggled item is selected; remove it from the selection.\n  if (selectedValues.some(function (sv) {\n    return itemComparer(sv, item);\n  })) {\n    return selectedValues.filter(function (sv) {\n      return !itemComparer(sv, item);\n    });\n  }\n\n  // The toggled item is not selected - add it to the selection.\n  return [].concat(_toConsumableArray(selectedValues), [item]);\n}\nfunction handleItemSelection(item, state, context) {\n  var itemComparer = context.itemComparer,\n    isItemDisabled = context.isItemDisabled,\n    selectionMode = context.selectionMode,\n    items = context.items;\n  var selectedValues = state.selectedValues;\n  var itemIndex = items.findIndex(function (i) {\n    return itemComparer(item, i);\n  });\n  if (isItemDisabled(item, itemIndex)) {\n    return state;\n  }\n\n  // if the item is already selected, remove it from the selection, otherwise add it\n  var newSelectedValues = toggleSelection(item, selectedValues, selectionMode, itemComparer);\n  return _extends({}, state, {\n    selectedValues: newSelectedValues,\n    highlightedValue: item\n  });\n}\nfunction handleKeyDown(key, state, context) {\n  var previouslySelectedValue = state.highlightedValue;\n  var orientation = context.orientation,\n    pageSize = context.pageSize;\n  switch (key) {\n    case 'Home':\n      return _extends({}, state, {\n        highlightedValue: moveHighlight(previouslySelectedValue, 'start', context)\n      });\n    case 'End':\n      return _extends({}, state, {\n        highlightedValue: moveHighlight(previouslySelectedValue, 'end', context)\n      });\n    case 'PageUp':\n      return _extends({}, state, {\n        highlightedValue: moveHighlight(previouslySelectedValue, -pageSize, context)\n      });\n    case 'PageDown':\n      return _extends({}, state, {\n        highlightedValue: moveHighlight(previouslySelectedValue, pageSize, context)\n      });\n    case 'ArrowUp':\n      if (orientation !== 'vertical') {\n        break;\n      }\n      return _extends({}, state, {\n        highlightedValue: moveHighlight(previouslySelectedValue, -1, context)\n      });\n    case 'ArrowDown':\n      if (orientation !== 'vertical') {\n        break;\n      }\n      return _extends({}, state, {\n        highlightedValue: moveHighlight(previouslySelectedValue, 1, context)\n      });\n    case 'ArrowLeft':\n      {\n        if (orientation === 'vertical') {\n          break;\n        }\n        var offset = orientation === 'horizontal-ltr' ? -1 : 1;\n        return _extends({}, state, {\n          highlightedValue: moveHighlight(previouslySelectedValue, offset, context)\n        });\n      }\n    case 'ArrowRight':\n      {\n        if (orientation === 'vertical') {\n          break;\n        }\n        var _offset = orientation === 'horizontal-ltr' ? 1 : -1;\n        return _extends({}, state, {\n          highlightedValue: moveHighlight(previouslySelectedValue, _offset, context)\n        });\n      }\n    case 'Enter':\n    case ' ':\n      if (state.highlightedValue === null) {\n        return state;\n      }\n      return handleItemSelection(state.highlightedValue, state, context);\n    default:\n      break;\n  }\n  return state;\n}\nfunction handleBlur(state, context) {\n  if (context.focusManagement === 'DOM') {\n    return state;\n  }\n  return _extends({}, state, {\n    highlightedValue: null\n  });\n}\nfunction textCriteriaMatches(nextFocus, searchString, stringifyItem) {\n  var _stringifyItem;\n  var text = (_stringifyItem = stringifyItem(nextFocus)) == null ? void 0 : _stringifyItem.trim().toLowerCase();\n  if (!text || text.length === 0) {\n    // Make item not navigable if stringification fails or results in empty string.\n    return false;\n  }\n  return text.indexOf(searchString) === 0;\n}\nfunction handleTextNavigation(state, searchString, context) {\n  var items = context.items,\n    isItemDisabled = context.isItemDisabled,\n    disabledItemsFocusable = context.disabledItemsFocusable,\n    getItemAsString = context.getItemAsString;\n  var startWithCurrentItem = searchString.length > 1;\n  var nextItem = startWithCurrentItem ? state.highlightedValue : moveHighlight(state.highlightedValue, 1, context);\n  for (var index = 0; index < items.length; index += 1) {\n    // Return un-mutated state if looped back to the currently highlighted value\n    if (!nextItem || !startWithCurrentItem && state.highlightedValue === nextItem) {\n      return state;\n    }\n    if (textCriteriaMatches(nextItem, searchString, getItemAsString) && (!isItemDisabled(nextItem, items.indexOf(nextItem)) || disabledItemsFocusable)) {\n      // The nextItem is the element to be highlighted\n      return _extends({}, state, {\n        highlightedValue: nextItem\n      });\n    }\n    // Move to the next element.\n    nextItem = moveHighlight(nextItem, 1, context);\n  }\n\n  // No item matches the text search criteria\n  return state;\n}\nfunction handleItemsChange(items, previousItems, state, context) {\n  var _state$selectedValues;\n  var itemComparer = context.itemComparer,\n    focusManagement = context.focusManagement;\n  var newHighlightedValue = null;\n  if (state.highlightedValue != null) {\n    var _items$find;\n    newHighlightedValue = (_items$find = items.find(function (item) {\n      return itemComparer(item, state.highlightedValue);\n    })) != null ? _items$find : null;\n  } else if (focusManagement === 'DOM' && previousItems.length === 0) {\n    newHighlightedValue = moveHighlight(null, 'reset', context);\n  }\n\n  // exclude selected values that are no longer in the items list\n  var selectedValues = (_state$selectedValues = state.selectedValues) != null ? _state$selectedValues : [];\n  var newSelectedValues = selectedValues.filter(function (selectedValue) {\n    return items.some(function (item) {\n      return itemComparer(item, selectedValue);\n    });\n  });\n  return _extends({}, state, {\n    highlightedValue: newHighlightedValue,\n    selectedValues: newSelectedValues\n  });\n}\nexport default function listReducer(state, action) {\n  var type = action.type,\n    context = action.context;\n  switch (type) {\n    case ListActionTypes.keyDown:\n      return handleKeyDown(action.key, state, context);\n    case ListActionTypes.itemClick:\n      return handleItemSelection(action.item, state, context);\n    case ListActionTypes.blur:\n      return handleBlur(state, context);\n    case ListActionTypes.textNavigation:\n      return handleTextNavigation(state, action.searchString, context);\n    case ListActionTypes.itemsChange:\n      return handleItemsChange(action.items, action.previousItems, state, context);\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["_extends","ListActionTypes","findValidItemToHighlight","currentIndex","lookupDirection","items","includeDisabledItems","isItemDisabled","wrapAround","length","every","item","itemIndex","nextFocus","nextFocusDisabled","moveHighlight","previouslyHighlightedValue","offset","context","_items$nextIndex","disableListWrap","disabledItemsFocusable","itemComparer","focusManagement","defaultHighlightedIndex","maxIndex","previouslyHighlightedIndex","findIndex","nextIndexCandidate","newIndex","Math","abs","nextIndex","toggleSelection","selectedValues","selectionMode","some","sv","filter","concat","_toConsumableArray","handleItemSelection","state","i","newSelectedValues","highlightedValue","handleKeyDown","key","previouslySelectedValue","orientation","pageSize","handleBlur","textCriteriaMatches","searchString","stringifyItem","_stringifyItem","text","trim","toLowerCase","indexOf","handleTextNavigation","getItemAsString","startWithCurrentItem","nextItem","index","handleItemsChange","previousItems","_state$selectedValues","newHighlightedValue","_items$find","find","selectedValue","listReducer","action","type","keyDown","itemClick","blur","textNavigation","itemsChange"],"sources":["/data/stackhub-web/plugins/myapps/node_modules/@mui/base/useList/listReducer.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { ListActionTypes } from './listActions.types';\n/**\n * Looks up the next valid item to highlight within the list.\n *\n * @param currentIndex The index of the start of the search.\n * @param lookupDirection Whether to look for the next or previous item.\n * @param items The array of items to search.\n * @param includeDisabledItems Whether to include disabled items in the search.\n * @param isItemDisabled A function that determines whether an item is disabled.\n * @param wrapAround Whether to wrap around the list when searching.\n * @returns The index of the next valid item to highlight or -1 if no valid item is found.\n */\nfunction findValidItemToHighlight(currentIndex, lookupDirection, items, includeDisabledItems, isItemDisabled, wrapAround) {\n  if (items.length === 0 || !includeDisabledItems && items.every((item, itemIndex) => isItemDisabled(item, itemIndex))) {\n    return -1;\n  }\n  let nextFocus = currentIndex;\n  for (;;) {\n    // No valid items found\n    if (!wrapAround && lookupDirection === 'next' && nextFocus === items.length || !wrapAround && lookupDirection === 'previous' && nextFocus === -1) {\n      return -1;\n    }\n    const nextFocusDisabled = includeDisabledItems ? false : isItemDisabled(items[nextFocus], nextFocus);\n    if (nextFocusDisabled) {\n      nextFocus += lookupDirection === 'next' ? 1 : -1;\n      if (wrapAround) {\n        nextFocus = (nextFocus + items.length) % items.length;\n      }\n    } else {\n      return nextFocus;\n    }\n  }\n}\n\n/**\n * Gets the next item to highlight based on the current highlighted item and the search direction.\n *\n * @param previouslyHighlightedValue The item from which to start the search for the next candidate.\n * @param offset The offset from the previously highlighted item to search for the next candidate or a special named value ('reset', 'start', 'end').\n * @param context The list action context.\n *\n * @returns The next item to highlight or null if no item is valid.\n */\nexport function moveHighlight(previouslyHighlightedValue, offset, context) {\n  var _items$nextIndex;\n  const {\n    items,\n    isItemDisabled,\n    disableListWrap,\n    disabledItemsFocusable,\n    itemComparer,\n    focusManagement\n  } = context;\n\n  // TODO: make this configurable\n  // The always should be an item highlighted when focus is managed by the DOM\n  // so that it's accessible by the `tab` key.\n  const defaultHighlightedIndex = focusManagement === 'DOM' ? 0 : -1;\n  const maxIndex = items.length - 1;\n  const previouslyHighlightedIndex = previouslyHighlightedValue == null ? -1 : items.findIndex(item => itemComparer(item, previouslyHighlightedValue));\n  let nextIndexCandidate;\n  let lookupDirection;\n  let wrapAround = !disableListWrap;\n  switch (offset) {\n    case 'reset':\n      if (defaultHighlightedIndex === -1) {\n        return null;\n      }\n      nextIndexCandidate = 0;\n      lookupDirection = 'next';\n      wrapAround = false;\n      break;\n    case 'start':\n      nextIndexCandidate = 0;\n      lookupDirection = 'next';\n      wrapAround = false;\n      break;\n    case 'end':\n      nextIndexCandidate = maxIndex;\n      lookupDirection = 'previous';\n      wrapAround = false;\n      break;\n    default:\n      {\n        const newIndex = previouslyHighlightedIndex + offset;\n        if (newIndex < 0) {\n          if (!wrapAround && previouslyHighlightedIndex !== -1 || Math.abs(offset) > 1) {\n            nextIndexCandidate = 0;\n            lookupDirection = 'next';\n          } else {\n            nextIndexCandidate = maxIndex;\n            lookupDirection = 'previous';\n          }\n        } else if (newIndex > maxIndex) {\n          if (!wrapAround || Math.abs(offset) > 1) {\n            nextIndexCandidate = maxIndex;\n            lookupDirection = 'previous';\n          } else {\n            nextIndexCandidate = 0;\n            lookupDirection = 'next';\n          }\n        } else {\n          nextIndexCandidate = newIndex;\n          lookupDirection = offset >= 0 ? 'next' : 'previous';\n        }\n      }\n  }\n  const nextIndex = findValidItemToHighlight(nextIndexCandidate, lookupDirection, items, disabledItemsFocusable, isItemDisabled, wrapAround);\n\n  // If there are no valid items to highlight, return the previously highlighted item (if it's still valid).\n  if (nextIndex === -1 && previouslyHighlightedValue !== null && !isItemDisabled(previouslyHighlightedValue, previouslyHighlightedIndex)) {\n    return previouslyHighlightedValue;\n  }\n  return (_items$nextIndex = items[nextIndex]) != null ? _items$nextIndex : null;\n}\n\n/**\n * Toggles the selection of an item.\n *\n * @param item Item to toggle.\n * @param selectedValues Already selected items.\n * @param selectionMode The number of items that can be simultanously selected.\n * @param itemComparer A custom item comparer function.\n *\n * @returns The new array of selected items.\n */\nexport function toggleSelection(item, selectedValues, selectionMode, itemComparer) {\n  if (selectionMode === 'none') {\n    return [];\n  }\n  if (selectionMode === 'single') {\n    // if the item to select has already been selected, return the original array\n    if (itemComparer(selectedValues[0], item)) {\n      return selectedValues;\n    }\n    return [item];\n  }\n\n  // The toggled item is selected; remove it from the selection.\n  if (selectedValues.some(sv => itemComparer(sv, item))) {\n    return selectedValues.filter(sv => !itemComparer(sv, item));\n  }\n\n  // The toggled item is not selected - add it to the selection.\n  return [...selectedValues, item];\n}\nfunction handleItemSelection(item, state, context) {\n  const {\n    itemComparer,\n    isItemDisabled,\n    selectionMode,\n    items\n  } = context;\n  const {\n    selectedValues\n  } = state;\n  const itemIndex = items.findIndex(i => itemComparer(item, i));\n  if (isItemDisabled(item, itemIndex)) {\n    return state;\n  }\n\n  // if the item is already selected, remove it from the selection, otherwise add it\n  const newSelectedValues = toggleSelection(item, selectedValues, selectionMode, itemComparer);\n  return _extends({}, state, {\n    selectedValues: newSelectedValues,\n    highlightedValue: item\n  });\n}\nfunction handleKeyDown(key, state, context) {\n  const previouslySelectedValue = state.highlightedValue;\n  const {\n    orientation,\n    pageSize\n  } = context;\n  switch (key) {\n    case 'Home':\n      return _extends({}, state, {\n        highlightedValue: moveHighlight(previouslySelectedValue, 'start', context)\n      });\n    case 'End':\n      return _extends({}, state, {\n        highlightedValue: moveHighlight(previouslySelectedValue, 'end', context)\n      });\n    case 'PageUp':\n      return _extends({}, state, {\n        highlightedValue: moveHighlight(previouslySelectedValue, -pageSize, context)\n      });\n    case 'PageDown':\n      return _extends({}, state, {\n        highlightedValue: moveHighlight(previouslySelectedValue, pageSize, context)\n      });\n    case 'ArrowUp':\n      if (orientation !== 'vertical') {\n        break;\n      }\n      return _extends({}, state, {\n        highlightedValue: moveHighlight(previouslySelectedValue, -1, context)\n      });\n    case 'ArrowDown':\n      if (orientation !== 'vertical') {\n        break;\n      }\n      return _extends({}, state, {\n        highlightedValue: moveHighlight(previouslySelectedValue, 1, context)\n      });\n    case 'ArrowLeft':\n      {\n        if (orientation === 'vertical') {\n          break;\n        }\n        const offset = orientation === 'horizontal-ltr' ? -1 : 1;\n        return _extends({}, state, {\n          highlightedValue: moveHighlight(previouslySelectedValue, offset, context)\n        });\n      }\n    case 'ArrowRight':\n      {\n        if (orientation === 'vertical') {\n          break;\n        }\n        const offset = orientation === 'horizontal-ltr' ? 1 : -1;\n        return _extends({}, state, {\n          highlightedValue: moveHighlight(previouslySelectedValue, offset, context)\n        });\n      }\n    case 'Enter':\n    case ' ':\n      if (state.highlightedValue === null) {\n        return state;\n      }\n      return handleItemSelection(state.highlightedValue, state, context);\n    default:\n      break;\n  }\n  return state;\n}\nfunction handleBlur(state, context) {\n  if (context.focusManagement === 'DOM') {\n    return state;\n  }\n  return _extends({}, state, {\n    highlightedValue: null\n  });\n}\nfunction textCriteriaMatches(nextFocus, searchString, stringifyItem) {\n  var _stringifyItem;\n  const text = (_stringifyItem = stringifyItem(nextFocus)) == null ? void 0 : _stringifyItem.trim().toLowerCase();\n  if (!text || text.length === 0) {\n    // Make item not navigable if stringification fails or results in empty string.\n    return false;\n  }\n  return text.indexOf(searchString) === 0;\n}\nfunction handleTextNavigation(state, searchString, context) {\n  const {\n    items,\n    isItemDisabled,\n    disabledItemsFocusable,\n    getItemAsString\n  } = context;\n  const startWithCurrentItem = searchString.length > 1;\n  let nextItem = startWithCurrentItem ? state.highlightedValue : moveHighlight(state.highlightedValue, 1, context);\n  for (let index = 0; index < items.length; index += 1) {\n    // Return un-mutated state if looped back to the currently highlighted value\n    if (!nextItem || !startWithCurrentItem && state.highlightedValue === nextItem) {\n      return state;\n    }\n    if (textCriteriaMatches(nextItem, searchString, getItemAsString) && (!isItemDisabled(nextItem, items.indexOf(nextItem)) || disabledItemsFocusable)) {\n      // The nextItem is the element to be highlighted\n      return _extends({}, state, {\n        highlightedValue: nextItem\n      });\n    }\n    // Move to the next element.\n    nextItem = moveHighlight(nextItem, 1, context);\n  }\n\n  // No item matches the text search criteria\n  return state;\n}\nfunction handleItemsChange(items, previousItems, state, context) {\n  var _state$selectedValues;\n  const {\n    itemComparer,\n    focusManagement\n  } = context;\n  let newHighlightedValue = null;\n  if (state.highlightedValue != null) {\n    var _items$find;\n    newHighlightedValue = (_items$find = items.find(item => itemComparer(item, state.highlightedValue))) != null ? _items$find : null;\n  } else if (focusManagement === 'DOM' && previousItems.length === 0) {\n    newHighlightedValue = moveHighlight(null, 'reset', context);\n  }\n\n  // exclude selected values that are no longer in the items list\n  const selectedValues = (_state$selectedValues = state.selectedValues) != null ? _state$selectedValues : [];\n  const newSelectedValues = selectedValues.filter(selectedValue => items.some(item => itemComparer(item, selectedValue)));\n  return _extends({}, state, {\n    highlightedValue: newHighlightedValue,\n    selectedValues: newSelectedValues\n  });\n}\nexport default function listReducer(state, action) {\n  const {\n    type,\n    context\n  } = action;\n  switch (type) {\n    case ListActionTypes.keyDown:\n      return handleKeyDown(action.key, state, context);\n    case ListActionTypes.itemClick:\n      return handleItemSelection(action.item, state, context);\n    case ListActionTypes.blur:\n      return handleBlur(state, context);\n    case ListActionTypes.textNavigation:\n      return handleTextNavigation(state, action.searchString, context);\n    case ListActionTypes.itemsChange:\n      return handleItemsChange(action.items, action.previousItems, state, context);\n    default:\n      return state;\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import * as React from 'react';\nexport var SelectContext = React.createContext(null);\nexport var SelectProvider = SelectContext.Provider;\nexport var SelectConsumer = SelectContext.Consumer;\nexport var SelectVariant;\n(function (SelectVariant) {\n  SelectVariant[\"single\"] = \"single\";\n  SelectVariant[\"checkbox\"] = \"checkbox\";\n  SelectVariant[\"typeahead\"] = \"typeahead\";\n  SelectVariant[\"typeaheadMulti\"] = \"typeaheadmulti\";\n})(SelectVariant || (SelectVariant = {}));\nexport var SelectPosition;\n(function (SelectPosition) {\n  SelectPosition[\"right\"] = \"right\";\n  SelectPosition[\"left\"] = \"left\";\n})(SelectPosition || (SelectPosition = {}));\nexport var SelectDirection;\n(function (SelectDirection) {\n  SelectDirection[\"up\"] = \"up\";\n  SelectDirection[\"down\"] = \"down\";\n})(SelectDirection || (SelectDirection = {}));\nexport var SelectFooterTabbableItems = 'input, button, select, textarea, a[href]';","map":{"version":3,"names":["React","SelectContext","createContext","SelectProvider","Provider","SelectConsumer","Consumer","SelectVariant","SelectPosition","SelectDirection","SelectFooterTabbableItems"],"sources":["/data/stackhub-web/plugins/myapps/node_modules/@patternfly/react-core/src/components/Select/selectConstants.tsx"],"sourcesContent":["import * as React from 'react';\nimport { SelectOptionObject } from './SelectOption';\n\nexport interface SelectContextInterface {\n  onSelect: (\n    event: React.MouseEvent<any, MouseEvent> | React.ChangeEvent<HTMLInputElement>,\n    value: string | SelectOptionObject,\n    isPlaceholder?: boolean\n  ) => void;\n  onClose: () => void;\n  onFavorite: (itemId: string, isFavorite: boolean) => void;\n  variant: string;\n  inputIdPrefix: string;\n  shouldResetOnSelect: boolean;\n}\n\nexport const SelectContext = React.createContext<SelectContextInterface | null>(null);\n\nexport const SelectProvider = SelectContext.Provider;\nexport const SelectConsumer = SelectContext.Consumer;\n\nexport enum SelectVariant {\n  single = 'single',\n  checkbox = 'checkbox',\n  typeahead = 'typeahead',\n  typeaheadMulti = 'typeaheadmulti'\n}\n\nexport enum SelectPosition {\n  right = 'right',\n  left = 'left'\n}\n\nexport enum SelectDirection {\n  up = 'up',\n  down = 'down'\n}\n\nexport const SelectFooterTabbableItems = 'input, button, select, textarea, a[href]';\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAgB9B,OAAO,IAAMC,aAAa,GAAGD,KAAK,CAACE,aAAa,CAAgC,IAAI,CAAC;AAErF,OAAO,IAAMC,cAAc,GAAGF,aAAa,CAACG,QAAQ;AACpD,OAAO,IAAMC,cAAc,GAAGJ,aAAa,CAACK,QAAQ;AAEpD,WAAYC,aAKX;AALD,WAAYA,aAAa;EACvBA,aAAA,qBAAiB;EACjBA,aAAA,yBAAqB;EACrBA,aAAA,2BAAuB;EACvBA,aAAA,qCAAiC;AACnC,CAAC,EALWA,aAAa,KAAbA,aAAa;AAOzB,WAAYC,cAGX;AAHD,WAAYA,cAAc;EACxBA,cAAA,mBAAe;EACfA,cAAA,iBAAa;AACf,CAAC,EAHWA,cAAc,KAAdA,cAAc;AAK1B,WAAYC,eAGX;AAHD,WAAYA,eAAe;EACzBA,eAAA,aAAS;EACTA,eAAA,iBAAa;AACf,CAAC,EAHWA,eAAe,KAAfA,eAAe;AAK3B,OAAO,IAAMC,yBAAyB,GAAG,0CAA0C"},"metadata":{},"sourceType":"module","externalDependencies":[]}
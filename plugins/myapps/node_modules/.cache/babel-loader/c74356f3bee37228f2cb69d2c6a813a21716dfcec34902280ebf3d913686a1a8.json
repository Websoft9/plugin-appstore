{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Accordion/accordion';\nimport { AccordionContext } from './AccordionContext';\nexport var Accordion = function Accordion(_a) {\n  var _a$children = _a.children,\n    children = _a$children === void 0 ? null : _a$children,\n    _a$className = _a.className,\n    className = _a$className === void 0 ? '' : _a$className,\n    _a$ariaLabel = _a['aria-label'],\n    ariaLabel = _a$ariaLabel === void 0 ? '' : _a$ariaLabel,\n    _a$headingLevel = _a.headingLevel,\n    headingLevel = _a$headingLevel === void 0 ? 'h3' : _a$headingLevel,\n    _a$asDefinitionList = _a.asDefinitionList,\n    asDefinitionList = _a$asDefinitionList === void 0 ? true : _a$asDefinitionList,\n    _a$isBordered = _a.isBordered,\n    isBordered = _a$isBordered === void 0 ? false : _a$isBordered,\n    _a$displaySize = _a.displaySize,\n    displaySize = _a$displaySize === void 0 ? 'default' : _a$displaySize,\n    props = __rest(_a, [\"children\", \"className\", 'aria-label', \"headingLevel\", \"asDefinitionList\", \"isBordered\", \"displaySize\"]);\n  var AccordionList = asDefinitionList ? 'dl' : 'div';\n  return React.createElement(AccordionList, Object.assign({\n    className: css(styles.accordion, isBordered && styles.modifiers.bordered, displaySize === 'large' && styles.modifiers.displayLg, className),\n    \"aria-label\": ariaLabel\n  }, props), React.createElement(AccordionContext.Provider, {\n    value: {\n      ContentContainer: asDefinitionList ? 'dd' : 'div',\n      ToggleContainer: asDefinitionList ? 'dt' : headingLevel\n    }\n  }, children));\n};\nAccordion.displayName = 'Accordion';","map":{"version":3,"names":["React","css","styles","AccordionContext","Accordion","_a","children","_a$children","_a$className","className","_a$ariaLabel","ariaLabel","_a$headingLevel","headingLevel","_a$asDefinitionList","asDefinitionList","_a$isBordered","isBordered","_a$displaySize","displaySize","props","__rest","AccordionList","createElement","Object","assign","accordion","modifiers","bordered","displayLg","Provider","value","ContentContainer","ToggleContainer","displayName"],"sources":["/data/stackhub-web/plugins/myapps/node_modules/@patternfly/react-core/src/components/Accordion/Accordion.tsx"],"sourcesContent":["import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Accordion/accordion';\nimport { AccordionContext } from './AccordionContext';\n\nexport interface AccordionProps extends React.HTMLProps<HTMLDListElement> {\n  /** Content rendered inside the Accordion  */\n  children?: React.ReactNode;\n  /** Additional classes added to the Accordion  */\n  className?: string;\n  /** Adds accessible text to the Accordion */\n  'aria-label'?: string;\n  /** Heading level to use */\n  headingLevel?: 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6';\n  /** Flag to indicate whether use definition list or div */\n  asDefinitionList?: boolean;\n  /** Flag to indicate the accordion had a border */\n  isBordered?: boolean;\n  /** Display size variant. */\n  displaySize?: 'default' | 'large';\n}\n\nexport const Accordion: React.FunctionComponent<AccordionProps> = ({\n  children = null,\n  className = '',\n  'aria-label': ariaLabel = '',\n  headingLevel = 'h3',\n  asDefinitionList = true,\n  isBordered = false,\n  displaySize = 'default',\n  ...props\n}: AccordionProps) => {\n  const AccordionList: any = asDefinitionList ? 'dl' : 'div';\n  return (\n    <AccordionList\n      className={css(\n        styles.accordion,\n        isBordered && styles.modifiers.bordered,\n        displaySize === 'large' && styles.modifiers.displayLg,\n        className\n      )}\n      aria-label={ariaLabel}\n      {...props}\n    >\n      <AccordionContext.Provider\n        value={{\n          ContentContainer: asDefinitionList ? 'dd' : 'div',\n          ToggleContainer: asDefinitionList ? 'dt' : headingLevel\n        }}\n      >\n        {children}\n      </AccordionContext.Provider>\n    </AccordionList>\n  );\n};\nAccordion.displayName = 'Accordion';\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,GAAG,QAAQ,0BAA0B;AAC9C,OAAOC,MAAM,MAAM,6DAA6D;AAChF,SAASC,gBAAgB,QAAQ,oBAAoB;AAmBrD,OAAO,IAAMC,SAAS,GAA4C,SAArDA,SAASA,CAA6CC,EASlD,EAAI;oBAFIA,EAER,CARfC,QAAQ;IAARA,QAAQ,GAAAC,WAAA,cAAG,IAAI,GAAAA,WAAA;IAAAC,YAAA,GAMQH,EAER,CAPfI,SAAS;IAATA,SAAS,GAAAD,YAAA,cAAG,EAAE,GAAAA,YAAA;IAAAE,YAAA,GAKSL,EAER,CANf,YAAY;IAAEM,SAAS,GAAAD,YAAA,cAAG,EAAE,GAAAA,YAAA;IAAAE,eAAA,GAILP,EAER,CALfQ,YAAY;IAAZA,YAAY,GAAAD,eAAA,cAAG,IAAI,GAAAA,eAAA;IAAAE,mBAAA,GAGIT,EAER,CAJfU,gBAAgB;IAAhBA,gBAAgB,GAAAD,mBAAA,cAAG,IAAI,GAAAA,mBAAA;IAAAE,aAAA,GAEAX,EAER,CAHfY,UAAU;IAAVA,UAAU,GAAAD,aAAA,cAAG,KAAK,GAAAA,aAAA;IAAAE,cAAA,GACKb,EAER,CAFfc,WAAW;IAAXA,WAAW,GAAAD,cAAA,cAAG,SAAS,GAAAA,cAAA;IACpBE,KAAK,GAAAC,MAAA,CAAAhB,EAAA,EARyD,wGASlE,CADS;EAER,IAAMiB,aAAa,GAAQP,gBAAgB,GAAG,IAAI,GAAG,KAAK;EAC1D,OACEf,KAAA,CAAAuB,aAAA,CAACD,aAAa,EAAAE,MAAA,CAAAC,MAAA;IACZhB,SAAS,EAAER,GAAG,CACZC,MAAM,CAACwB,SAAS,EAChBT,UAAU,IAAIf,MAAM,CAACyB,SAAS,CAACC,QAAQ,EACvCT,WAAW,KAAK,OAAO,IAAIjB,MAAM,CAACyB,SAAS,CAACE,SAAS,EACrDpB,SAAS,CACV;IAAA,cACWE;EAAS,GACjBS,KAAK,GAETpB,KAAA,CAAAuB,aAAA,CAACpB,gBAAgB,CAAC2B,QAAQ;IACxBC,KAAK,EAAE;MACLC,gBAAgB,EAAEjB,gBAAgB,GAAG,IAAI,GAAG,KAAK;MACjDkB,eAAe,EAAElB,gBAAgB,GAAG,IAAI,GAAGF;;EAC5C,GAEAP,QAAQ,CACiB,CACd;AAEpB,CAAC;AACDF,SAAS,CAAC8B,WAAW,GAAG,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import invariant from \"../../../jsutils/invariant.mjs\";\nimport { GraphQLError } from \"../../../error/GraphQLError.mjs\";\nimport { getNamedType, isInputObjectType } from \"../../../type/definition.mjs\";\n\n/**\n * No deprecated\n *\n * A GraphQL document is only valid if all selected fields and all used enum values have not been\n * deprecated.\n *\n * Note: This rule is optional and is not part of the Validation section of the GraphQL\n * Specification. The main purpose of this rule is detection of deprecated usages and not\n * necessarily to forbid their use when querying a service.\n */\nexport function NoDeprecatedCustomRule(context) {\n  return {\n    Field: function Field(node) {\n      var fieldDef = context.getFieldDef();\n      var deprecationReason = fieldDef === null || fieldDef === void 0 ? void 0 : fieldDef.deprecationReason;\n      if (fieldDef && deprecationReason != null) {\n        var parentType = context.getParentType();\n        parentType != null || invariant(0);\n        context.reportError(new GraphQLError(\"The field \".concat(parentType.name, \".\").concat(fieldDef.name, \" is deprecated. \").concat(deprecationReason), node));\n      }\n    },\n    Argument: function Argument(node) {\n      var argDef = context.getArgument();\n      var deprecationReason = argDef === null || argDef === void 0 ? void 0 : argDef.deprecationReason;\n      if (argDef && deprecationReason != null) {\n        var directiveDef = context.getDirective();\n        if (directiveDef != null) {\n          context.reportError(new GraphQLError(\"Directive \\\"@\".concat(directiveDef.name, \"\\\" argument \\\"\").concat(argDef.name, \"\\\" is deprecated. \").concat(deprecationReason), node));\n        } else {\n          var parentType = context.getParentType();\n          var fieldDef = context.getFieldDef();\n          parentType != null && fieldDef != null || invariant(0);\n          context.reportError(new GraphQLError(\"Field \\\"\".concat(parentType.name, \".\").concat(fieldDef.name, \"\\\" argument \\\"\").concat(argDef.name, \"\\\" is deprecated. \").concat(deprecationReason), node));\n        }\n      }\n    },\n    ObjectField: function ObjectField(node) {\n      var inputObjectDef = getNamedType(context.getParentInputType());\n      if (isInputObjectType(inputObjectDef)) {\n        var inputFieldDef = inputObjectDef.getFields()[node.name.value]; // flowlint-next-line unnecessary-optional-chain:off\n\n        var deprecationReason = inputFieldDef === null || inputFieldDef === void 0 ? void 0 : inputFieldDef.deprecationReason;\n        if (deprecationReason != null) {\n          context.reportError(new GraphQLError(\"The input field \".concat(inputObjectDef.name, \".\").concat(inputFieldDef.name, \" is deprecated. \").concat(deprecationReason), node));\n        }\n      }\n    },\n    EnumValue: function EnumValue(node) {\n      var enumValueDef = context.getEnumValue();\n      var deprecationReason = enumValueDef === null || enumValueDef === void 0 ? void 0 : enumValueDef.deprecationReason;\n      if (enumValueDef && deprecationReason != null) {\n        var enumTypeDef = getNamedType(context.getInputType());\n        enumTypeDef != null || invariant(0);\n        context.reportError(new GraphQLError(\"The enum value \\\"\".concat(enumTypeDef.name, \".\").concat(enumValueDef.name, \"\\\" is deprecated. \").concat(deprecationReason), node));\n      }\n    }\n  };\n}","map":{"version":3,"names":["invariant","GraphQLError","getNamedType","isInputObjectType","NoDeprecatedCustomRule","context","Field","node","fieldDef","getFieldDef","deprecationReason","parentType","getParentType","reportError","concat","name","Argument","argDef","getArgument","directiveDef","getDirective","ObjectField","inputObjectDef","getParentInputType","inputFieldDef","getFields","value","EnumValue","enumValueDef","getEnumValue","enumTypeDef","getInputType"],"sources":["/data/stackhub-web/plugins/myapps/node_modules/graphql/validation/rules/custom/NoDeprecatedCustomRule.mjs"],"sourcesContent":["import invariant from \"../../../jsutils/invariant.mjs\";\nimport { GraphQLError } from \"../../../error/GraphQLError.mjs\";\nimport { getNamedType, isInputObjectType } from \"../../../type/definition.mjs\";\n\n/**\n * No deprecated\n *\n * A GraphQL document is only valid if all selected fields and all used enum values have not been\n * deprecated.\n *\n * Note: This rule is optional and is not part of the Validation section of the GraphQL\n * Specification. The main purpose of this rule is detection of deprecated usages and not\n * necessarily to forbid their use when querying a service.\n */\nexport function NoDeprecatedCustomRule(context) {\n  return {\n    Field: function Field(node) {\n      var fieldDef = context.getFieldDef();\n      var deprecationReason = fieldDef === null || fieldDef === void 0 ? void 0 : fieldDef.deprecationReason;\n\n      if (fieldDef && deprecationReason != null) {\n        var parentType = context.getParentType();\n        parentType != null || invariant(0);\n        context.reportError(new GraphQLError(\"The field \".concat(parentType.name, \".\").concat(fieldDef.name, \" is deprecated. \").concat(deprecationReason), node));\n      }\n    },\n    Argument: function Argument(node) {\n      var argDef = context.getArgument();\n      var deprecationReason = argDef === null || argDef === void 0 ? void 0 : argDef.deprecationReason;\n\n      if (argDef && deprecationReason != null) {\n        var directiveDef = context.getDirective();\n\n        if (directiveDef != null) {\n          context.reportError(new GraphQLError(\"Directive \\\"@\".concat(directiveDef.name, \"\\\" argument \\\"\").concat(argDef.name, \"\\\" is deprecated. \").concat(deprecationReason), node));\n        } else {\n          var parentType = context.getParentType();\n          var fieldDef = context.getFieldDef();\n          parentType != null && fieldDef != null || invariant(0);\n          context.reportError(new GraphQLError(\"Field \\\"\".concat(parentType.name, \".\").concat(fieldDef.name, \"\\\" argument \\\"\").concat(argDef.name, \"\\\" is deprecated. \").concat(deprecationReason), node));\n        }\n      }\n    },\n    ObjectField: function ObjectField(node) {\n      var inputObjectDef = getNamedType(context.getParentInputType());\n\n      if (isInputObjectType(inputObjectDef)) {\n        var inputFieldDef = inputObjectDef.getFields()[node.name.value]; // flowlint-next-line unnecessary-optional-chain:off\n\n        var deprecationReason = inputFieldDef === null || inputFieldDef === void 0 ? void 0 : inputFieldDef.deprecationReason;\n\n        if (deprecationReason != null) {\n          context.reportError(new GraphQLError(\"The input field \".concat(inputObjectDef.name, \".\").concat(inputFieldDef.name, \" is deprecated. \").concat(deprecationReason), node));\n        }\n      }\n    },\n    EnumValue: function EnumValue(node) {\n      var enumValueDef = context.getEnumValue();\n      var deprecationReason = enumValueDef === null || enumValueDef === void 0 ? void 0 : enumValueDef.deprecationReason;\n\n      if (enumValueDef && deprecationReason != null) {\n        var enumTypeDef = getNamedType(context.getInputType());\n        enumTypeDef != null || invariant(0);\n        context.reportError(new GraphQLError(\"The enum value \\\"\".concat(enumTypeDef.name, \".\").concat(enumValueDef.name, \"\\\" is deprecated. \").concat(deprecationReason), node));\n      }\n    }\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
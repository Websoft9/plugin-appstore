{"ast":null,"code":"/**\n * Returns a number indicating whether a reference string comes before, or after,\n * or is the same as the given string in natural sort order.\n *\n * See: https://en.wikipedia.org/wiki/Natural_sort_order\n *\n */\nexport default function naturalCompare(aStr, bStr) {\n  var aIdx = 0;\n  var bIdx = 0;\n  while (aIdx < aStr.length && bIdx < bStr.length) {\n    var aChar = aStr.charCodeAt(aIdx);\n    var bChar = bStr.charCodeAt(bIdx);\n    if (isDigit(aChar) && isDigit(bChar)) {\n      var aNum = 0;\n      do {\n        ++aIdx;\n        aNum = aNum * 10 + aChar - DIGIT_0;\n        aChar = aStr.charCodeAt(aIdx);\n      } while (isDigit(aChar) && aNum > 0);\n      var bNum = 0;\n      do {\n        ++bIdx;\n        bNum = bNum * 10 + bChar - DIGIT_0;\n        bChar = bStr.charCodeAt(bIdx);\n      } while (isDigit(bChar) && bNum > 0);\n      if (aNum < bNum) {\n        return -1;\n      }\n      if (aNum > bNum) {\n        return 1;\n      }\n    } else {\n      if (aChar < bChar) {\n        return -1;\n      }\n      if (aChar > bChar) {\n        return 1;\n      }\n      ++aIdx;\n      ++bIdx;\n    }\n  }\n  return aStr.length - bStr.length;\n}\nvar DIGIT_0 = 48;\nvar DIGIT_9 = 57;\nfunction isDigit(code) {\n  return !isNaN(code) && DIGIT_0 <= code && code <= DIGIT_9;\n}","map":{"version":3,"names":["naturalCompare","aStr","bStr","aIdx","bIdx","length","aChar","charCodeAt","bChar","isDigit","aNum","DIGIT_0","bNum","DIGIT_9","code","isNaN"],"sources":["/data/stackhub-web/plugins/myapps/node_modules/graphql/jsutils/naturalCompare.mjs"],"sourcesContent":["/**\n * Returns a number indicating whether a reference string comes before, or after,\n * or is the same as the given string in natural sort order.\n *\n * See: https://en.wikipedia.org/wiki/Natural_sort_order\n *\n */\nexport default function naturalCompare(aStr, bStr) {\n  var aIdx = 0;\n  var bIdx = 0;\n\n  while (aIdx < aStr.length && bIdx < bStr.length) {\n    var aChar = aStr.charCodeAt(aIdx);\n    var bChar = bStr.charCodeAt(bIdx);\n\n    if (isDigit(aChar) && isDigit(bChar)) {\n      var aNum = 0;\n\n      do {\n        ++aIdx;\n        aNum = aNum * 10 + aChar - DIGIT_0;\n        aChar = aStr.charCodeAt(aIdx);\n      } while (isDigit(aChar) && aNum > 0);\n\n      var bNum = 0;\n\n      do {\n        ++bIdx;\n        bNum = bNum * 10 + bChar - DIGIT_0;\n        bChar = bStr.charCodeAt(bIdx);\n      } while (isDigit(bChar) && bNum > 0);\n\n      if (aNum < bNum) {\n        return -1;\n      }\n\n      if (aNum > bNum) {\n        return 1;\n      }\n    } else {\n      if (aChar < bChar) {\n        return -1;\n      }\n\n      if (aChar > bChar) {\n        return 1;\n      }\n\n      ++aIdx;\n      ++bIdx;\n    }\n  }\n\n  return aStr.length - bStr.length;\n}\nvar DIGIT_0 = 48;\nvar DIGIT_9 = 57;\n\nfunction isDigit(code) {\n  return !isNaN(code) && DIGIT_0 <= code && code <= DIGIT_9;\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASA,cAAcA,CAACC,IAAI,EAAEC,IAAI,EAAE;EACjD,IAAIC,IAAI,GAAG,CAAC;EACZ,IAAIC,IAAI,GAAG,CAAC;EAEZ,OAAOD,IAAI,GAAGF,IAAI,CAACI,MAAM,IAAID,IAAI,GAAGF,IAAI,CAACG,MAAM,EAAE;IAC/C,IAAIC,KAAK,GAAGL,IAAI,CAACM,UAAU,CAACJ,IAAI,CAAC;IACjC,IAAIK,KAAK,GAAGN,IAAI,CAACK,UAAU,CAACH,IAAI,CAAC;IAEjC,IAAIK,OAAO,CAACH,KAAK,CAAC,IAAIG,OAAO,CAACD,KAAK,CAAC,EAAE;MACpC,IAAIE,IAAI,GAAG,CAAC;MAEZ,GAAG;QACD,EAAEP,IAAI;QACNO,IAAI,GAAGA,IAAI,GAAG,EAAE,GAAGJ,KAAK,GAAGK,OAAO;QAClCL,KAAK,GAAGL,IAAI,CAACM,UAAU,CAACJ,IAAI,CAAC;MAC/B,CAAC,QAAQM,OAAO,CAACH,KAAK,CAAC,IAAII,IAAI,GAAG,CAAC;MAEnC,IAAIE,IAAI,GAAG,CAAC;MAEZ,GAAG;QACD,EAAER,IAAI;QACNQ,IAAI,GAAGA,IAAI,GAAG,EAAE,GAAGJ,KAAK,GAAGG,OAAO;QAClCH,KAAK,GAAGN,IAAI,CAACK,UAAU,CAACH,IAAI,CAAC;MAC/B,CAAC,QAAQK,OAAO,CAACD,KAAK,CAAC,IAAII,IAAI,GAAG,CAAC;MAEnC,IAAIF,IAAI,GAAGE,IAAI,EAAE;QACf,OAAO,CAAC,CAAC;MACX;MAEA,IAAIF,IAAI,GAAGE,IAAI,EAAE;QACf,OAAO,CAAC;MACV;IACF,CAAC,MAAM;MACL,IAAIN,KAAK,GAAGE,KAAK,EAAE;QACjB,OAAO,CAAC,CAAC;MACX;MAEA,IAAIF,KAAK,GAAGE,KAAK,EAAE;QACjB,OAAO,CAAC;MACV;MAEA,EAAEL,IAAI;MACN,EAAEC,IAAI;IACR;EACF;EAEA,OAAOH,IAAI,CAACI,MAAM,GAAGH,IAAI,CAACG,MAAM;AAClC;AACA,IAAIM,OAAO,GAAG,EAAE;AAChB,IAAIE,OAAO,GAAG,EAAE;AAEhB,SAASJ,OAAOA,CAACK,IAAI,EAAE;EACrB,OAAO,CAACC,KAAK,CAACD,IAAI,CAAC,IAAIH,OAAO,IAAIG,IAAI,IAAIA,IAAI,IAAID,OAAO;AAC3D"},"metadata":{},"sourceType":"module","externalDependencies":[]}
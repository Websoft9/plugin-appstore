{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"children\", \"disabled\", \"label\", \"slotProps\", \"slots\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\nimport composeClasses from '../composeClasses';\nimport { getOptionUtilityClass } from './optionClasses';\nimport { useSlotProps } from '../utils';\nimport useOption from '../useOption';\nimport { useClassNamesOverride } from '../utils/ClassNameConfigurator';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction useUtilityClasses(ownerState) {\n  var disabled = ownerState.disabled,\n    highlighted = ownerState.highlighted,\n    selected = ownerState.selected;\n  var slots = {\n    root: ['root', disabled && 'disabled', highlighted && 'highlighted', selected && 'selected']\n  };\n  return composeClasses(slots, useClassNamesOverride(getOptionUtilityClass));\n}\n\n/**\n * An unstyled option to be used within a Select.\n */\nvar Option = /*#__PURE__*/React.forwardRef(function Option(props, forwardedRef) {\n  var _slots$root, _optionRef$current;\n  var children = props.children,\n    _props$disabled = props.disabled,\n    disabled = _props$disabled === void 0 ? false : _props$disabled,\n    label = props.label,\n    _props$slotProps = props.slotProps,\n    slotProps = _props$slotProps === void 0 ? {} : _props$slotProps,\n    _props$slots = props.slots,\n    slots = _props$slots === void 0 ? {} : _props$slots,\n    value = props.value,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  var Root = (_slots$root = slots.root) != null ? _slots$root : 'li';\n  var optionRef = React.useRef(null);\n  var combinedRef = useForkRef(optionRef, forwardedRef);\n\n  // If `label` is not explicitly provided, the `children` are used for convenience.\n  // This is used to populate the select's trigger with the selected option's label.\n  var computedLabel = label != null ? label : typeof children === 'string' ? children : (_optionRef$current = optionRef.current) == null ? void 0 : _optionRef$current.innerText;\n  var _useOption = useOption({\n      disabled: disabled,\n      label: computedLabel,\n      rootRef: combinedRef,\n      value: value\n    }),\n    getRootProps = _useOption.getRootProps,\n    selected = _useOption.selected,\n    highlighted = _useOption.highlighted,\n    index = _useOption.index;\n  var ownerState = _extends({}, props, {\n    disabled: disabled,\n    highlighted: highlighted,\n    index: index,\n    selected: selected\n  });\n  var classes = useUtilityClasses(ownerState);\n  var rootProps = useSlotProps({\n    getSlotProps: getRootProps,\n    elementType: Root,\n    externalSlotProps: slotProps.root,\n    externalForwardedProps: other,\n    className: classes.root,\n    ownerState: ownerState\n  });\n  return /*#__PURE__*/_jsx(Root, _extends({}, rootProps, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Option.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * If `true`, the option will be disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * A text representation of the option's content.\n   * Used for keyboard text navigation matching.\n   */\n  label: PropTypes.string,\n  /**\n   * The props used for each slot inside the Option.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside the Option.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    root: PropTypes.elementType\n  }),\n  /**\n   * The value of the option.\n   */\n  value: PropTypes.any.isRequired\n} : void 0;\n\n/**\n * An unstyled option to be used within a Select.\n *\n * Demos:\n *\n * - [Select](https://mui.com/base/react-select/)\n *\n * API:\n *\n * - [Option API](https://mui.com/base/react-select/components-api/#option)\n */\nexport default /*#__PURE__*/React.memo(Option);","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","PropTypes","unstable_useForkRef","useForkRef","composeClasses","getOptionUtilityClass","useSlotProps","useOption","useClassNamesOverride","jsx","_jsx","useUtilityClasses","ownerState","disabled","highlighted","selected","slots","root","Option","forwardRef","props","forwardedRef","_slots$root","_optionRef$current","children","_props$disabled","label","_props$slotProps","slotProps","_props$slots","value","other","Root","optionRef","useRef","combinedRef","computedLabel","current","innerText","_useOption","rootRef","getRootProps","index","classes","rootProps","getSlotProps","elementType","externalSlotProps","externalForwardedProps","className","process","env","NODE_ENV","propTypes","node","bool","string","shape","oneOfType","func","object","any","isRequired","memo"],"sources":["/data/stackhub-web/plugins/myapps/node_modules/@mui/base/Option/Option.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"disabled\", \"label\", \"slotProps\", \"slots\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\nimport composeClasses from '../composeClasses';\nimport { getOptionUtilityClass } from './optionClasses';\nimport { useSlotProps } from '../utils';\nimport useOption from '../useOption';\nimport { useClassNamesOverride } from '../utils/ClassNameConfigurator';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction useUtilityClasses(ownerState) {\n  const {\n    disabled,\n    highlighted,\n    selected\n  } = ownerState;\n  const slots = {\n    root: ['root', disabled && 'disabled', highlighted && 'highlighted', selected && 'selected']\n  };\n  return composeClasses(slots, useClassNamesOverride(getOptionUtilityClass));\n}\n\n/**\n * An unstyled option to be used within a Select.\n */\nconst Option = /*#__PURE__*/React.forwardRef(function Option(props, forwardedRef) {\n  var _slots$root, _optionRef$current;\n  const {\n      children,\n      disabled = false,\n      label,\n      slotProps = {},\n      slots = {},\n      value\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const Root = (_slots$root = slots.root) != null ? _slots$root : 'li';\n  const optionRef = React.useRef(null);\n  const combinedRef = useForkRef(optionRef, forwardedRef);\n\n  // If `label` is not explicitly provided, the `children` are used for convenience.\n  // This is used to populate the select's trigger with the selected option's label.\n  const computedLabel = label != null ? label : typeof children === 'string' ? children : (_optionRef$current = optionRef.current) == null ? void 0 : _optionRef$current.innerText;\n  const {\n    getRootProps,\n    selected,\n    highlighted,\n    index\n  } = useOption({\n    disabled,\n    label: computedLabel,\n    rootRef: combinedRef,\n    value\n  });\n  const ownerState = _extends({}, props, {\n    disabled,\n    highlighted,\n    index,\n    selected\n  });\n  const classes = useUtilityClasses(ownerState);\n  const rootProps = useSlotProps({\n    getSlotProps: getRootProps,\n    elementType: Root,\n    externalSlotProps: slotProps.root,\n    externalForwardedProps: other,\n    className: classes.root,\n    ownerState\n  });\n  return /*#__PURE__*/_jsx(Root, _extends({}, rootProps, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Option.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * If `true`, the option will be disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * A text representation of the option's content.\n   * Used for keyboard text navigation matching.\n   */\n  label: PropTypes.string,\n  /**\n   * The props used for each slot inside the Option.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside the Option.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    root: PropTypes.elementType\n  }),\n  /**\n   * The value of the option.\n   */\n  value: PropTypes.any.isRequired\n} : void 0;\n\n/**\n * An unstyled option to be used within a Select.\n *\n * Demos:\n *\n * - [Select](https://mui.com/base/react-select/)\n *\n * API:\n *\n * - [Option API](https://mui.com/base/react-select/components-api/#option)\n */\nexport default /*#__PURE__*/React.memo(Option);"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,oCAAoC;AACzD,OAAOC,6BAA6B,MAAM,yDAAyD;AACnG,IAAMC,SAAS,GAAG,CAAC,UAAU,EAAE,UAAU,EAAE,OAAO,EAAE,WAAW,EAAE,OAAO,EAAE,OAAO,CAAC;AAClF,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,mBAAmB,IAAIC,UAAU,QAAQ,YAAY;AAC9D,OAAOC,cAAc,MAAM,mBAAmB;AAC9C,SAASC,qBAAqB,QAAQ,iBAAiB;AACvD,SAASC,YAAY,QAAQ,UAAU;AACvC,OAAOC,SAAS,MAAM,cAAc;AACpC,SAASC,qBAAqB,QAAQ,gCAAgC;AACtE,SAASC,GAAG,IAAIC,IAAI,QAAQ,mBAAmB;AAC/C,SAASC,iBAAiBA,CAACC,UAAU,EAAE;EACrC,IACEC,QAAQ,GAGND,UAAU,CAHZC,QAAQ;IACRC,WAAW,GAETF,UAAU,CAFZE,WAAW;IACXC,QAAQ,GACNH,UAAU,CADZG,QAAQ;EAEV,IAAMC,KAAK,GAAG;IACZC,IAAI,EAAE,CAAC,MAAM,EAAEJ,QAAQ,IAAI,UAAU,EAAEC,WAAW,IAAI,aAAa,EAAEC,QAAQ,IAAI,UAAU;EAC7F,CAAC;EACD,OAAOX,cAAc,CAACY,KAAK,EAAER,qBAAqB,CAACH,qBAAqB,CAAC,CAAC;AAC5E;;AAEA;AACA;AACA;AACA,IAAMa,MAAM,GAAG,aAAalB,KAAK,CAACmB,UAAU,CAAC,SAASD,MAAMA,CAACE,KAAK,EAAEC,YAAY,EAAE;EAChF,IAAIC,WAAW,EAAEC,kBAAkB;EACnC,IACIC,QAAQ,GAMNJ,KAAK,CANPI,QAAQ;IAAAC,eAAA,GAMNL,KAAK,CALPP,QAAQ;IAARA,QAAQ,GAAAY,eAAA,cAAG,KAAK,GAAAA,eAAA;IAChBC,KAAK,GAIHN,KAAK,CAJPM,KAAK;IAAAC,gBAAA,GAIHP,KAAK,CAHPQ,SAAS;IAATA,SAAS,GAAAD,gBAAA,cAAG,CAAC,CAAC,GAAAA,gBAAA;IAAAE,YAAA,GAGZT,KAAK,CAFPJ,KAAK;IAALA,KAAK,GAAAa,YAAA,cAAG,CAAC,CAAC,GAAAA,YAAA;IACVC,KAAK,GACHV,KAAK,CADPU,KAAK;IAEPC,KAAK,GAAGjC,6BAA6B,CAACsB,KAAK,EAAErB,SAAS,CAAC;EACzD,IAAMiC,IAAI,GAAG,CAACV,WAAW,GAAGN,KAAK,CAACC,IAAI,KAAK,IAAI,GAAGK,WAAW,GAAG,IAAI;EACpE,IAAMW,SAAS,GAAGjC,KAAK,CAACkC,MAAM,CAAC,IAAI,CAAC;EACpC,IAAMC,WAAW,GAAGhC,UAAU,CAAC8B,SAAS,EAAEZ,YAAY,CAAC;;EAEvD;EACA;EACA,IAAMe,aAAa,GAAGV,KAAK,IAAI,IAAI,GAAGA,KAAK,GAAG,OAAOF,QAAQ,KAAK,QAAQ,GAAGA,QAAQ,GAAG,CAACD,kBAAkB,GAAGU,SAAS,CAACI,OAAO,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGd,kBAAkB,CAACe,SAAS;EAChL,IAAAC,UAAA,GAKIhC,SAAS,CAAC;MACZM,QAAQ,EAARA,QAAQ;MACRa,KAAK,EAAEU,aAAa;MACpBI,OAAO,EAAEL,WAAW;MACpBL,KAAK,EAALA;IACF,CAAC,CAAC;IATAW,YAAY,GAAAF,UAAA,CAAZE,YAAY;IACZ1B,QAAQ,GAAAwB,UAAA,CAARxB,QAAQ;IACRD,WAAW,GAAAyB,UAAA,CAAXzB,WAAW;IACX4B,KAAK,GAAAH,UAAA,CAALG,KAAK;EAOP,IAAM9B,UAAU,GAAGf,QAAQ,CAAC,CAAC,CAAC,EAAEuB,KAAK,EAAE;IACrCP,QAAQ,EAARA,QAAQ;IACRC,WAAW,EAAXA,WAAW;IACX4B,KAAK,EAALA,KAAK;IACL3B,QAAQ,EAARA;EACF,CAAC,CAAC;EACF,IAAM4B,OAAO,GAAGhC,iBAAiB,CAACC,UAAU,CAAC;EAC7C,IAAMgC,SAAS,GAAGtC,YAAY,CAAC;IAC7BuC,YAAY,EAAEJ,YAAY;IAC1BK,WAAW,EAAEd,IAAI;IACjBe,iBAAiB,EAAEnB,SAAS,CAACX,IAAI;IACjC+B,sBAAsB,EAAEjB,KAAK;IAC7BkB,SAAS,EAAEN,OAAO,CAAC1B,IAAI;IACvBL,UAAU,EAAVA;EACF,CAAC,CAAC;EACF,OAAO,aAAaF,IAAI,CAACsB,IAAI,EAAEnC,QAAQ,CAAC,CAAC,CAAC,EAAE+C,SAAS,EAAE;IACrDpB,QAAQ,EAAEA;EACZ,CAAC,CAAC,CAAC;AACL,CAAC,CAAC;AACF0B,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAGlC,MAAM,CAACmC,SAAS,CAAC,yBAAyB;EAChF;EACA;EACA;EACA;EACA;AACF;AACA;EACE7B,QAAQ,EAAEvB,SAAS,CAACqD,IAAI;EACxB;AACF;AACA;AACA;EACEzC,QAAQ,EAAEZ,SAAS,CAACsD,IAAI;EACxB;AACF;AACA;AACA;EACE7B,KAAK,EAAEzB,SAAS,CAACuD,MAAM;EACvB;AACF;AACA;AACA;EACE5B,SAAS,EAAE3B,SAAS,CAACwD,KAAK,CAAC;IACzBxC,IAAI,EAAEhB,SAAS,CAACyD,SAAS,CAAC,CAACzD,SAAS,CAAC0D,IAAI,EAAE1D,SAAS,CAAC2D,MAAM,CAAC;EAC9D,CAAC,CAAC;EACF;AACF;AACA;AACA;AACA;EACE5C,KAAK,EAAEf,SAAS,CAACwD,KAAK,CAAC;IACrBxC,IAAI,EAAEhB,SAAS,CAAC6C;EAClB,CAAC,CAAC;EACF;AACF;AACA;EACEhB,KAAK,EAAE7B,SAAS,CAAC4D,GAAG,CAACC;AACvB,CAAC,GAAG,KAAK,CAAC;;AAEV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,aAAa9D,KAAK,CAAC+D,IAAI,CAAC7C,MAAM,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
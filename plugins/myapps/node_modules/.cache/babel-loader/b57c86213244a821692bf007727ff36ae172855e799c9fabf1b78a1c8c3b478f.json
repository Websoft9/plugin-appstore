{"ast":null,"code":"import { useEffect, useState } from 'react';\nexport function useReactiveVar(rv) {\n  var value = rv();\n  var setValue = useState(value)[1];\n  useEffect(function () {\n    var probablySameValue = rv();\n    if (value !== probablySameValue) {\n      setValue(probablySameValue);\n    } else {\n      return rv.onNextChange(setValue);\n    }\n  }, [value]);\n  return value;\n}","map":{"version":3,"names":["useEffect","useState","useReactiveVar","rv","value","setValue","probablySameValue","onNextChange"],"sources":["/data/stackhub-web/plugins/myapps/node_modules/@apollo/src/react/hooks/useReactiveVar.ts"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { ReactiveVar } from '../../core';\n\nexport function useReactiveVar<T>(rv: ReactiveVar<T>): T {\n  const value = rv();\n\n  // We don't actually care what useState thinks the value of the variable\n  // is, so we take only the update function from the returned array.\n  const setValue = useState(value)[1];\n\n  // We subscribe to variable updates on initial mount and when the value has\n  // changed. This avoids a subtle bug in React.StrictMode where multiple\n  // listeners are added, leading to inconsistent updates.\n  useEffect(() => {\n    const probablySameValue = rv();\n    if (value !== probablySameValue) {\n      // If the value of rv has already changed, we don't need to listen for the\n      // next change, because we can report this change immediately.\n      setValue(probablySameValue);\n    } else {\n      return rv.onNextChange(setValue);\n    }\n  }, [value]);\n\n  return value;\n}\n"],"mappings":"AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAG3C,OAAM,SAAUC,cAAcA,CAAIC,EAAkB;EAClD,IAAMC,KAAK,GAAGD,EAAE,EAAE;EAIlB,IAAME,QAAQ,GAAGJ,QAAQ,CAACG,KAAK,CAAC,CAAC,CAAC,CAAC;EAKnCJ,SAAS,CAAC;IACR,IAAMM,iBAAiB,GAAGH,EAAE,EAAE;IAC9B,IAAIC,KAAK,KAAKE,iBAAiB,EAAE;MAG/BD,QAAQ,CAACC,iBAAiB,CAAC;KAC5B,MAAM;MACL,OAAOH,EAAE,CAACI,YAAY,CAACF,QAAQ,CAAC;;EAEpC,CAAC,EAAE,CAACD,KAAK,CAAC,CAAC;EAEX,OAAOA,KAAK;AACd"},"metadata":{},"sourceType":"module","externalDependencies":[]}
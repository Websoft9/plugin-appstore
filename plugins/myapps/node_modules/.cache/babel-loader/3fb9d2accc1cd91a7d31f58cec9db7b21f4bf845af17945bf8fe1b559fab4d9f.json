{"ast":null,"code":"import { __rest } from \"tslib\";\n/* eslint-disable no-console */\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Page/page';\nimport { css } from '@patternfly/react-styles';\nimport BarsIcon from '@patternfly/react-icons/dist/esm/icons/bars-icon';\nimport { Button, ButtonVariant } from '../../components/Button';\nimport { PageContextConsumer } from './PageContext';\nexport var PageHeader = function PageHeader(_a) {\n  var _a$className = _a.className,\n    className = _a$className === void 0 ? '' : _a$className,\n    _a$logo = _a.logo,\n    logo = _a$logo === void 0 ? null : _a$logo,\n    _a$logoProps = _a.logoProps,\n    logoProps = _a$logoProps === void 0 ? null : _a$logoProps,\n    _a$logoComponent = _a.logoComponent,\n    logoComponent = _a$logoComponent === void 0 ? 'a' : _a$logoComponent,\n    _a$headerTools = _a.headerTools,\n    headerTools = _a$headerTools === void 0 ? null : _a$headerTools,\n    _a$topNav = _a.topNav,\n    topNav = _a$topNav === void 0 ? null : _a$topNav,\n    _a$isNavOpen = _a.isNavOpen,\n    isNavOpen = _a$isNavOpen === void 0 ? true : _a$isNavOpen,\n    _a$isManagedSidebar = _a.isManagedSidebar,\n    deprecatedIsManagedSidebar = _a$isManagedSidebar === void 0 ? undefined : _a$isManagedSidebar,\n    _a$role = _a.role,\n    role = _a$role === void 0 ? undefined : _a$role,\n    _a$showNavToggle = _a.showNavToggle,\n    showNavToggle = _a$showNavToggle === void 0 ? false : _a$showNavToggle,\n    _a$navToggleId = _a.navToggleId,\n    navToggleId = _a$navToggleId === void 0 ? 'nav-toggle' : _a$navToggleId,\n    _a$onNavToggle = _a.onNavToggle,\n    onNavToggle = _a$onNavToggle === void 0 ? function () {\n      return undefined;\n    } : _a$onNavToggle,\n    _a$ariaLabel = _a['aria-label'],\n    ariaLabel = _a$ariaLabel === void 0 ? 'Global navigation' : _a$ariaLabel,\n    _a$ariaControls = _a['aria-controls'],\n    ariaControls = _a$ariaControls === void 0 ? null : _a$ariaControls,\n    props = __rest(_a, [\"className\", \"logo\", \"logoProps\", \"logoComponent\", \"headerTools\", \"topNav\", \"isNavOpen\", \"isManagedSidebar\", \"role\", \"showNavToggle\", \"navToggleId\", \"onNavToggle\", 'aria-label', 'aria-controls']);\n  var LogoComponent = logoComponent;\n  if ([false, true].includes(deprecatedIsManagedSidebar)) {\n    console.warn('isManagedSidebar is deprecated in the PageHeader component. To make the sidebar toggle uncontrolled, pass this prop in the Page component');\n  }\n  return React.createElement(PageContextConsumer, null, function (_ref) {\n    var isManagedSidebar = _ref.isManagedSidebar,\n      managedOnNavToggle = _ref.onNavToggle,\n      managedIsNavOpen = _ref.isNavOpen;\n    var navToggle = isManagedSidebar ? managedOnNavToggle : onNavToggle;\n    var navOpen = isManagedSidebar ? managedIsNavOpen : isNavOpen;\n    return React.createElement(\"header\", Object.assign({\n      role: role,\n      className: css(styles.pageHeader, className)\n    }, props), (showNavToggle || logo) && React.createElement(\"div\", {\n      className: css(styles.pageHeaderBrand)\n    }, showNavToggle && React.createElement(\"div\", {\n      className: css(styles.pageHeaderBrandToggle)\n    }, React.createElement(Button, {\n      id: navToggleId,\n      onClick: navToggle,\n      \"aria-label\": ariaLabel,\n      \"aria-controls\": ariaControls,\n      \"aria-expanded\": navOpen ? 'true' : 'false',\n      variant: ButtonVariant.plain\n    }, React.createElement(BarsIcon, null))), logo && React.createElement(LogoComponent, Object.assign({\n      className: css(styles.pageHeaderBrandLink)\n    }, logoProps), logo)), topNav && React.createElement(\"div\", {\n      className: css(styles.pageHeaderNav)\n    }, topNav), headerTools);\n  });\n};\nPageHeader.displayName = 'PageHeader';","map":{"version":3,"names":["React","styles","css","BarsIcon","Button","ButtonVariant","PageContextConsumer","PageHeader","_a","className","_a$className","_a$logo","logo","_a$logoProps","logoProps","_a$logoComponent","logoComponent","_a$headerTools","headerTools","_a$topNav","topNav","_a$isNavOpen","isNavOpen","_a$isManagedSidebar","isManagedSidebar","deprecatedIsManagedSidebar","undefined","_a$role","role","_a$showNavToggle","showNavToggle","_a$navToggleId","navToggleId","_a$onNavToggle","onNavToggle","_a$ariaLabel","ariaLabel","_a$ariaControls","ariaControls","props","__rest","LogoComponent","includes","console","warn","createElement","_ref","managedOnNavToggle","managedIsNavOpen","navToggle","navOpen","Object","assign","pageHeader","pageHeaderBrand","pageHeaderBrandToggle","id","onClick","variant","plain","pageHeaderBrandLink","pageHeaderNav","displayName"],"sources":["/data/stackhub-web/plugins/myapps/node_modules/@patternfly/react-core/src/components/Page/PageHeader.tsx"],"sourcesContent":["/* eslint-disable no-console */\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Page/page';\nimport { css } from '@patternfly/react-styles';\nimport BarsIcon from '@patternfly/react-icons/dist/esm/icons/bars-icon';\nimport { Button, ButtonVariant } from '../../components/Button';\nimport { PageContextConsumer, PageContextProps } from './PageContext';\n\nexport interface PageHeaderProps extends React.HTMLProps<HTMLDivElement> {\n  /** Additional classes added to the page header */\n  className?: string;\n  /** Component to render the logo/brand, use <Brand /> */\n  logo?: React.ReactNode;\n  /** Additional props passed to the logo anchor container */\n  logoProps?: object;\n  /** Component to use to wrap the passed <logo> */\n  logoComponent?: React.ReactNode;\n  /** Component to render the header tools, use <PageHeaderTools />  */\n  headerTools?: React.ReactNode;\n  /** Component to render navigation within the header, use <Nav /> */\n  topNav?: React.ReactNode;\n  /** True to show the nav toggle button (toggles side nav) */\n  showNavToggle?: boolean;\n  /** Id for the nav toggle button */\n  navToggleId?: string;\n  /** True if the side nav is shown  */\n  isNavOpen?: boolean;\n  /** This prop is no longer managed through PageHeader but in the Page component. */\n  isManagedSidebar?: boolean;\n  /** Sets the value for role on the <main> element */\n  role?: string;\n  /** Callback function to handle the side nav toggle button, managed by the Page component if the Page isManagedSidebar prop is set to true */\n  onNavToggle?: () => void;\n  /** Aria Label for the nav toggle button */\n  'aria-label'?: string;\n}\n\nexport const PageHeader: React.FunctionComponent<PageHeaderProps> = ({\n  className = '',\n  logo = null as React.ReactNode,\n  logoProps = null as object,\n  logoComponent = 'a',\n  headerTools = null as React.ReactNode,\n  topNav = null as React.ReactNode,\n  isNavOpen = true,\n  isManagedSidebar: deprecatedIsManagedSidebar = undefined,\n  role = undefined as string,\n  showNavToggle = false,\n  navToggleId = 'nav-toggle',\n  onNavToggle = () => undefined as any,\n  'aria-label': ariaLabel = 'Global navigation',\n  'aria-controls': ariaControls = null,\n  ...props\n}: PageHeaderProps) => {\n  const LogoComponent = logoComponent as any;\n  if ([false, true].includes(deprecatedIsManagedSidebar)) {\n    console.warn(\n      'isManagedSidebar is deprecated in the PageHeader component. To make the sidebar toggle uncontrolled, pass this prop in the Page component'\n    );\n  }\n  return (\n    <PageContextConsumer>\n      {({ isManagedSidebar, onNavToggle: managedOnNavToggle, isNavOpen: managedIsNavOpen }: PageContextProps) => {\n        const navToggle = isManagedSidebar ? managedOnNavToggle : onNavToggle;\n        const navOpen = isManagedSidebar ? managedIsNavOpen : isNavOpen;\n\n        return (\n          <header role={role} className={css(styles.pageHeader, className)} {...props}>\n            {(showNavToggle || logo) && (\n              <div className={css(styles.pageHeaderBrand)}>\n                {showNavToggle && (\n                  <div className={css(styles.pageHeaderBrandToggle)}>\n                    <Button\n                      id={navToggleId}\n                      onClick={navToggle}\n                      aria-label={ariaLabel}\n                      aria-controls={ariaControls}\n                      aria-expanded={navOpen ? 'true' : 'false'}\n                      variant={ButtonVariant.plain}\n                    >\n                      <BarsIcon />\n                    </Button>\n                  </div>\n                )}\n                {logo && (\n                  <LogoComponent className={css(styles.pageHeaderBrandLink)} {...logoProps}>\n                    {logo}\n                  </LogoComponent>\n                )}\n              </div>\n            )}\n            {topNav && <div className={css(styles.pageHeaderNav)}>{topNav}</div>}\n            {headerTools}\n          </header>\n        );\n      }}\n    </PageContextConsumer>\n  );\n};\nPageHeader.displayName = 'PageHeader';\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
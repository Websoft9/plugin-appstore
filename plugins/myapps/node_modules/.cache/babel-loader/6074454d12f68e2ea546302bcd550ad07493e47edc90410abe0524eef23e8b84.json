{"ast":null,"code":"import _classCallCheck from \"/data/stackhub-web/plugins/myapps/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/data/stackhub-web/plugins/myapps/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/data/stackhub-web/plugins/myapps/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/data/stackhub-web/plugins/myapps/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Nav/nav';\nimport { css } from '@patternfly/react-styles';\nimport AngleLeftIcon from '@patternfly/react-icons/dist/esm/icons/angle-left-icon';\nimport AngleRightIcon from '@patternfly/react-icons/dist/esm/icons/angle-right-icon';\nimport { isElementInView } from '../../helpers/util';\nimport { NavContext } from './Nav';\nimport { PageSidebarContext } from '../Page/PageSidebar';\nimport { getResizeObserver } from '../../helpers/resizeObserver';\nexport var NavList = /*#__PURE__*/function (_React$Component) {\n  _inherits(NavList, _React$Component);\n  var _super = _createSuper(NavList);\n  function NavList() {\n    var _this;\n    _classCallCheck(this, NavList);\n    _this = _super.apply(this, arguments);\n    _this.state = {\n      scrollViewAtStart: false,\n      scrollViewAtEnd: false\n    };\n    _this.navList = React.createRef();\n    _this.observer = function () {};\n    _this.handleScrollButtons = function () {\n      var container = _this.navList.current;\n      if (container) {\n        // check if it elements are in view\n        var scrollViewAtStart = isElementInView(container, container.firstChild, false);\n        var scrollViewAtEnd = isElementInView(container, container.lastChild, false);\n        _this.setState({\n          scrollViewAtStart: scrollViewAtStart,\n          scrollViewAtEnd: scrollViewAtEnd\n        });\n        _this.context.updateIsScrollable(!scrollViewAtStart || !scrollViewAtEnd);\n      }\n    };\n    _this.scrollLeft = function () {\n      // find first Element that is fully in view on the left, then scroll to the element before it\n      var container = _this.navList.current;\n      if (container) {\n        var childrenArr = Array.from(container.children);\n        var firstElementInView;\n        var lastElementOutOfView;\n        for (var i = 0; i < childrenArr.length && !firstElementInView; i++) {\n          if (isElementInView(container, childrenArr[i], false)) {\n            firstElementInView = childrenArr[i];\n            lastElementOutOfView = childrenArr[i - 1];\n          }\n        }\n        if (lastElementOutOfView) {\n          container.scrollLeft -= lastElementOutOfView.scrollWidth;\n        }\n        _this.handleScrollButtons();\n      }\n    };\n    _this.scrollRight = function () {\n      // find last Element that is fully in view on the right, then scroll to the element after it\n      var container = _this.navList.current;\n      if (container) {\n        var childrenArr = Array.from(container.children);\n        var lastElementInView;\n        var firstElementOutOfView;\n        for (var i = childrenArr.length - 1; i >= 0 && !lastElementInView; i--) {\n          if (isElementInView(container, childrenArr[i], false)) {\n            lastElementInView = childrenArr[i];\n            firstElementOutOfView = childrenArr[i + 1];\n          }\n        }\n        if (firstElementOutOfView) {\n          container.scrollLeft += firstElementOutOfView.scrollWidth;\n        }\n        _this.handleScrollButtons();\n      }\n    };\n    return _this;\n  }\n  _createClass(NavList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.observer = getResizeObserver(this.navList.current, this.handleScrollButtons);\n      this.handleScrollButtons();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.observer();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      var _a = this.props,\n        children = _a.children,\n        className = _a.className,\n        ariaLeftScroll = _a.ariaLeftScroll,\n        ariaRightScroll = _a.ariaRightScroll,\n        props = __rest(_a, [\"children\", \"className\", \"ariaLeftScroll\", \"ariaRightScroll\"]);\n      var _this$state = this.state,\n        scrollViewAtStart = _this$state.scrollViewAtStart,\n        scrollViewAtEnd = _this$state.scrollViewAtEnd;\n      return React.createElement(NavContext.Consumer, null, function (_ref) {\n        var isHorizontal = _ref.isHorizontal;\n        return React.createElement(PageSidebarContext.Consumer, null, function (_ref2) {\n          var isNavOpen = _ref2.isNavOpen;\n          return React.createElement(React.Fragment, null, isHorizontal && React.createElement(\"button\", {\n            className: css(styles.navScrollButton),\n            \"aria-label\": ariaLeftScroll,\n            onClick: _this2.scrollLeft,\n            disabled: scrollViewAtStart,\n            tabIndex: isNavOpen ? null : -1\n          }, React.createElement(AngleLeftIcon, null)), React.createElement(\"ul\", Object.assign({\n            ref: _this2.navList,\n            className: css(styles.navList, className),\n            onScroll: _this2.handleScrollButtons\n          }, props), children), isHorizontal && React.createElement(\"button\", {\n            className: css(styles.navScrollButton),\n            \"aria-label\": ariaRightScroll,\n            onClick: _this2.scrollRight,\n            disabled: scrollViewAtEnd,\n            tabIndex: isNavOpen ? null : -1\n          }, React.createElement(AngleRightIcon, null)));\n        });\n      });\n    }\n  }]);\n  return NavList;\n}(React.Component);\nNavList.displayName = 'NavList';\nNavList.contextType = NavContext;\nNavList.defaultProps = {\n  ariaLeftScroll: 'Scroll left',\n  ariaRightScroll: 'Scroll right'\n};","map":{"version":3,"names":["React","styles","css","AngleLeftIcon","AngleRightIcon","isElementInView","NavContext","PageSidebarContext","getResizeObserver","NavList","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","state","scrollViewAtStart","scrollViewAtEnd","navList","createRef","observer","handleScrollButtons","container","current","firstChild","lastChild","setState","context","updateIsScrollable","scrollLeft","childrenArr","Array","from","children","firstElementInView","lastElementOutOfView","i","length","scrollWidth","scrollRight","lastElementInView","firstElementOutOfView","_createClass","key","value","componentDidMount","componentWillUnmount","render","_this2","_a","props","className","ariaLeftScroll","ariaRightScroll","__rest","_this$state","createElement","Consumer","_ref","isHorizontal","_ref2","isNavOpen","Fragment","navScrollButton","onClick","disabled","tabIndex","Object","assign","ref","onScroll","Component","displayName","contextType","defaultProps"],"sources":["/data/stackhub-web/plugins/myapps/node_modules/@patternfly/react-core/src/components/Nav/NavList.tsx"],"sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Nav/nav';\nimport { css } from '@patternfly/react-styles';\nimport AngleLeftIcon from '@patternfly/react-icons/dist/esm/icons/angle-left-icon';\nimport AngleRightIcon from '@patternfly/react-icons/dist/esm/icons/angle-right-icon';\nimport { isElementInView } from '../../helpers/util';\nimport { NavContext } from './Nav';\nimport { PageSidebarContext } from '../Page/PageSidebar';\nimport { getResizeObserver } from '../../helpers/resizeObserver';\n\nexport interface NavListProps\n  extends React.DetailedHTMLProps<React.HTMLAttributes<HTMLUListElement>, HTMLUListElement> {\n  /** Children nodes */\n  children?: React.ReactNode;\n  /** Additional classes added to the list */\n  className?: string;\n  /** Aria-label for the left scroll button */\n  ariaLeftScroll?: string;\n  /** Aria-label for the right scroll button */\n  ariaRightScroll?: string;\n}\n\nexport class NavList extends React.Component<NavListProps> {\n  static displayName = 'NavList';\n  static contextType = NavContext;\n  context!: React.ContextType<typeof NavContext>;\n  static defaultProps: NavListProps = {\n    ariaLeftScroll: 'Scroll left',\n    ariaRightScroll: 'Scroll right'\n  };\n\n  state = {\n    scrollViewAtStart: false,\n    scrollViewAtEnd: false\n  };\n\n  navList = React.createRef<HTMLUListElement>();\n  observer: any = () => {};\n\n  handleScrollButtons = () => {\n    const container = this.navList.current;\n    if (container) {\n      // check if it elements are in view\n      const scrollViewAtStart = isElementInView(container, container.firstChild as HTMLElement, false);\n      const scrollViewAtEnd = isElementInView(container, container.lastChild as HTMLElement, false);\n      this.setState({\n        scrollViewAtStart,\n        scrollViewAtEnd\n      });\n      this.context.updateIsScrollable(!scrollViewAtStart || !scrollViewAtEnd);\n    }\n  };\n\n  scrollLeft = () => {\n    // find first Element that is fully in view on the left, then scroll to the element before it\n    const container = this.navList.current;\n    if (container) {\n      const childrenArr = Array.from(container.children);\n      let firstElementInView: Element;\n      let lastElementOutOfView: Element;\n      for (let i = 0; i < childrenArr.length && !firstElementInView; i++) {\n        if (isElementInView(container, childrenArr[i] as HTMLElement, false)) {\n          firstElementInView = childrenArr[i];\n          lastElementOutOfView = childrenArr[i - 1];\n        }\n      }\n      if (lastElementOutOfView) {\n        container.scrollLeft -= lastElementOutOfView.scrollWidth;\n      }\n      this.handleScrollButtons();\n    }\n  };\n\n  scrollRight = () => {\n    // find last Element that is fully in view on the right, then scroll to the element after it\n    const container = this.navList.current;\n    if (container) {\n      const childrenArr = Array.from(container.children);\n      let lastElementInView: Element;\n      let firstElementOutOfView: Element;\n      for (let i = childrenArr.length - 1; i >= 0 && !lastElementInView; i--) {\n        if (isElementInView(container, childrenArr[i] as HTMLElement, false)) {\n          lastElementInView = childrenArr[i];\n          firstElementOutOfView = childrenArr[i + 1];\n        }\n      }\n      if (firstElementOutOfView) {\n        container.scrollLeft += firstElementOutOfView.scrollWidth;\n      }\n      this.handleScrollButtons();\n    }\n  };\n\n  componentDidMount() {\n    this.observer = getResizeObserver(this.navList.current, this.handleScrollButtons);\n    this.handleScrollButtons();\n  }\n\n  componentWillUnmount() {\n    this.observer();\n  }\n\n  render() {\n    const { children, className, ariaLeftScroll, ariaRightScroll, ...props } = this.props;\n    const { scrollViewAtStart, scrollViewAtEnd } = this.state;\n\n    return (\n      <NavContext.Consumer>\n        {({ isHorizontal }) => (\n          <PageSidebarContext.Consumer>\n            {({ isNavOpen }) => (\n              <React.Fragment>\n                {isHorizontal && (\n                  <button\n                    className={css(styles.navScrollButton)}\n                    aria-label={ariaLeftScroll}\n                    onClick={this.scrollLeft}\n                    disabled={scrollViewAtStart}\n                    tabIndex={isNavOpen ? null : -1}\n                  >\n                    <AngleLeftIcon />\n                  </button>\n                )}\n                <ul\n                  ref={this.navList}\n                  className={css(styles.navList, className)}\n                  onScroll={this.handleScrollButtons}\n                  {...props}\n                >\n                  {children}\n                </ul>\n                {isHorizontal && (\n                  <button\n                    className={css(styles.navScrollButton)}\n                    aria-label={ariaRightScroll}\n                    onClick={this.scrollRight}\n                    disabled={scrollViewAtEnd}\n                    tabIndex={isNavOpen ? null : -1}\n                  >\n                    <AngleRightIcon />\n                  </button>\n                )}\n              </React.Fragment>\n            )}\n          </PageSidebarContext.Consumer>\n        )}\n      </NavContext.Consumer>\n    );\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
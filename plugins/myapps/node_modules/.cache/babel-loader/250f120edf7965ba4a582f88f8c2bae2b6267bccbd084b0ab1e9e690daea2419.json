{"ast":null,"code":"import _objectSpread from \"/data/stackhub-web/plugins/myapps/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/data/stackhub-web/plugins/myapps/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"as\", \"className\", \"type\", \"tooltip\"];\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar propTypes = {\n  /**\n   * Specify whether the feedback is for valid or invalid fields\n   *\n   * @type {('valid'|'invalid')}\n   */\n  type: PropTypes.string,\n  /** Display feedback as a tooltip. */\n  tooltip: PropTypes.bool,\n  as: PropTypes.elementType\n};\nvar Feedback = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\nfunction (_ref, ref) {\n  var _ref$as = _ref.as,\n    Component = _ref$as === void 0 ? 'div' : _ref$as,\n    className = _ref.className,\n    _ref$type = _ref.type,\n    type = _ref$type === void 0 ? 'valid' : _ref$type,\n    _ref$tooltip = _ref.tooltip,\n    tooltip = _ref$tooltip === void 0 ? false : _ref$tooltip,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/_jsx(Component, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    className: classNames(className, \"\".concat(type, \"-\").concat(tooltip ? 'tooltip' : 'feedback'))\n  }));\n});\nFeedback.displayName = 'Feedback';\nFeedback.propTypes = propTypes;\nexport default Feedback;","map":{"version":3,"names":["classNames","React","PropTypes","jsx","_jsx","propTypes","type","string","tooltip","bool","as","elementType","Feedback","forwardRef","_ref","ref","_ref$as","Component","className","_ref$type","_ref$tooltip","props","_objectWithoutProperties","_excluded","_objectSpread","concat","displayName"],"sources":["/data/stackhub-web/plugins/myapps/node_modules/react-bootstrap/esm/Feedback.js"],"sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * Specify whether the feedback is for valid or invalid fields\n   *\n   * @type {('valid'|'invalid')}\n   */\n  type: PropTypes.string,\n  /** Display feedback as a tooltip. */\n  tooltip: PropTypes.bool,\n  as: PropTypes.elementType\n};\nconst Feedback = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  as: Component = 'div',\n  className,\n  type = 'valid',\n  tooltip = false,\n  ...props\n}, ref) => /*#__PURE__*/_jsx(Component, {\n  ...props,\n  ref: ref,\n  className: classNames(className, `${type}-${tooltip ? 'tooltip' : 'feedback'}`)\n}));\nFeedback.displayName = 'Feedback';\nFeedback.propTypes = propTypes;\nexport default Feedback;"],"mappings":";;;AAAA,OAAOA,UAAU,MAAM,YAAY;AACnC,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,GAAG,IAAIC,IAAI,QAAQ,mBAAmB;AAC/C,IAAMC,SAAS,GAAG;EAChB;AACF;AACA;AACA;AACA;EACEC,IAAI,EAAEJ,SAAS,CAACK,MAAM;EACtB;EACAC,OAAO,EAAEN,SAAS,CAACO,IAAI;EACvBC,EAAE,EAAER,SAAS,CAACS;AAChB,CAAC;AACD,IAAMC,QAAQ,GAAG,aAAaX,KAAK,CAACY,UAAU;AAC9C;AACA,UAAAC,IAAA,EAMGC,GAAG;EAAA,IAAAC,OAAA,GAAAF,IAAA,CALJJ,EAAE;IAAEO,SAAS,GAAAD,OAAA,cAAG,KAAK,GAAAA,OAAA;IACrBE,SAAS,GAAAJ,IAAA,CAATI,SAAS;IAAAC,SAAA,GAAAL,IAAA,CACTR,IAAI;IAAJA,IAAI,GAAAa,SAAA,cAAG,OAAO,GAAAA,SAAA;IAAAC,YAAA,GAAAN,IAAA,CACdN,OAAO;IAAPA,OAAO,GAAAY,YAAA,cAAG,KAAK,GAAAA,YAAA;IACZC,KAAK,GAAAC,wBAAA,CAAAR,IAAA,EAAAS,SAAA;EAAA,OACC,aAAanB,IAAI,CAACa,SAAS,EAAAO,aAAA,CAAAA,aAAA,KACjCH,KAAK;IACRN,GAAG,EAAEA,GAAG;IACRG,SAAS,EAAElB,UAAU,CAACkB,SAAS,KAAAO,MAAA,CAAKnB,IAAI,OAAAmB,MAAA,CAAIjB,OAAO,GAAG,SAAS,GAAG,UAAU,CAAE;EAAC,EAChF,CAAC;AAAA,EAAC;AACHI,QAAQ,CAACc,WAAW,GAAG,UAAU;AACjCd,QAAQ,CAACP,SAAS,GAAGA,SAAS;AAC9B,eAAeO,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}
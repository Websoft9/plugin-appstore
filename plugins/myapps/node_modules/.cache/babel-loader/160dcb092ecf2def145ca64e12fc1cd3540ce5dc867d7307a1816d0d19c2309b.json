{"ast":null,"code":"import _slicedToArray from \"/data/stackhub-web/plugins/myapps/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/DragDrop/drag-drop';\nimport { DroppableContext } from './DroppableContext';\nimport { DragDropContext } from './DragDrop';\n// Browsers really like being different from each other.\nfunction getDefaultBackground() {\n  var div = document.createElement('div');\n  document.head.appendChild(div);\n  var bg = window.getComputedStyle(div).backgroundColor;\n  document.head.removeChild(div);\n  return bg;\n}\nfunction getInheritedBackgroundColor(el) {\n  var defaultStyle = getDefaultBackground();\n  var backgroundColor = window.getComputedStyle(el).backgroundColor;\n  if (backgroundColor !== defaultStyle) {\n    return backgroundColor;\n  } else if (!el.parentElement) {\n    return defaultStyle;\n  }\n  return getInheritedBackgroundColor(el.parentElement);\n}\nfunction removeBlankDiv(node) {\n  if (node.getAttribute('blankDiv') === 'true') {\n    // eslint-disable-next-line @typescript-eslint/prefer-for-of\n    for (var i = 0; i < node.children.length; i++) {\n      var child = node.children[i];\n      if (child.getAttribute('blankDiv') === 'true') {\n        node.removeChild(child);\n        node.setAttribute('blankDiv', 'false');\n        break;\n      }\n    }\n  }\n}\n// Reset per-element state\nfunction resetDroppableItem(droppableItem) {\n  removeBlankDiv(droppableItem.node);\n  droppableItem.node.classList.remove(styles.modifiers.dragging);\n  droppableItem.node.classList.remove(styles.modifiers.dragOutside);\n  droppableItem.draggableNodes.forEach(function (n, i) {\n    n.style.transform = '';\n    n.style.transition = '';\n    droppableItem.draggableNodesRects[i] = n.getBoundingClientRect();\n  });\n}\nfunction overlaps(ev, rect) {\n  return ev.clientX > rect.x && ev.clientX < rect.x + rect.width && ev.clientY > rect.y && ev.clientY < rect.y + rect.height;\n}\nexport var Draggable = function Draggable(_a) {\n  var className = _a.className,\n    children = _a.children,\n    _a$style = _a.style,\n    styleProp = _a$style === void 0 ? {} : _a$style,\n    _a$hasNoWrapper = _a.hasNoWrapper,\n    hasNoWrapper = _a$hasNoWrapper === void 0 ? false : _a$hasNoWrapper,\n    props = __rest(_a, [\"className\", \"children\", \"style\", \"hasNoWrapper\"]);\n  /* eslint-disable prefer-const */\n  var _React$useState = React.useState(styleProp),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    style = _React$useState2[0],\n    setStyle = _React$useState2[1];\n  /* eslint-enable prefer-const */\n  var _React$useState3 = React.useState(false),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    isDragging = _React$useState4[0],\n    setIsDragging = _React$useState4[1];\n  var _React$useState5 = React.useState(true),\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\n    isValidDrag = _React$useState6[0],\n    setIsValidDrag = _React$useState6[1];\n  var _React$useContext = React.useContext(DroppableContext),\n    zone = _React$useContext.zone,\n    droppableId = _React$useContext.droppableId;\n  var _React$useContext2 = React.useContext(DragDropContext),\n    onDrag = _React$useContext2.onDrag,\n    onDragMove = _React$useContext2.onDragMove,\n    onDrop = _React$useContext2.onDrop;\n  // Some state is better just to leave as vars passed around between various callbacks\n  // You can only drag around one item at a time anyways...\n  var startX = 0;\n  var startY = 0;\n  var index = null; // Index of this draggable\n  var hoveringDroppable;\n  var hoveringIndex = null;\n  var mouseMoveListener;\n  var mouseUpListener;\n  // Makes it so dragging the _bottom_ of the item over the halfway of another moves it\n  var startYOffset = 0;\n  // After item returning to where it started animation completes\n  var onTransitionEnd = function onTransitionEnd(_ev) {\n    if (isDragging) {\n      setIsDragging(false);\n      setStyle(styleProp);\n    }\n  };\n  function getSourceAndDest() {\n    var hoveringDroppableId = hoveringDroppable ? hoveringDroppable.getAttribute('data-pf-droppableid') : null;\n    var source = {\n      droppableId: droppableId,\n      index: index\n    };\n    var dest = hoveringDroppableId !== null && hoveringIndex !== null ? {\n      droppableId: hoveringDroppableId,\n      index: hoveringIndex\n    } : undefined;\n    return {\n      source: source,\n      dest: dest,\n      hoveringDroppableId: hoveringDroppableId\n    };\n  }\n  var onMouseUpWhileDragging = function onMouseUpWhileDragging(droppableItems) {\n    droppableItems.forEach(resetDroppableItem);\n    document.removeEventListener('mousemove', mouseMoveListener);\n    document.removeEventListener('mouseup', mouseUpListener);\n    document.removeEventListener('contextmenu', mouseUpListener);\n    var _getSourceAndDest = getSourceAndDest(),\n      source = _getSourceAndDest.source,\n      dest = _getSourceAndDest.dest,\n      hoveringDroppableId = _getSourceAndDest.hoveringDroppableId;\n    var consumerReordered = onDrop(source, dest);\n    if (consumerReordered && droppableId === hoveringDroppableId) {\n      setIsDragging(false);\n      setStyle(styleProp);\n    } else if (!consumerReordered) {\n      // Animate item returning to where it started\n      setStyle(Object.assign(Object.assign({}, style), {\n        transition: 'transform 0.5s cubic-bezier(0.2, 1, 0.1, 1) 0s',\n        transform: '',\n        background: styleProp.background,\n        boxShadow: styleProp.boxShadow\n      }));\n    }\n  };\n  // This is where the magic happens\n  var onMouseMoveWhileDragging = function onMouseMoveWhileDragging(ev, droppableItems, blankDivRect) {\n    // Compute each time what droppable node we are hovering over\n    hoveringDroppable = null;\n    droppableItems.forEach(function (droppableItem) {\n      var node = droppableItem.node,\n        rect = droppableItem.rect,\n        isDraggingHost = droppableItem.isDraggingHost,\n        draggableNodes = droppableItem.draggableNodes,\n        draggableNodesRects = droppableItem.draggableNodesRects;\n      if (overlaps(ev, rect)) {\n        // Add valid dropzone style\n        node.classList.remove(styles.modifiers.dragOutside);\n        hoveringDroppable = node;\n        // Check if we need to add a blank div row\n        if (node.getAttribute('blankDiv') !== 'true' && !isDraggingHost) {\n          var blankDiv = document.createElement('div');\n          blankDiv.setAttribute('blankDiv', 'true'); // Makes removing easier\n          var blankDivPos = -1;\n          for (var i = 0; i < draggableNodes.length; i++) {\n            var childRect = draggableNodesRects[i];\n            var isLast = i === draggableNodes.length - 1;\n            var startOverlaps = childRect.y >= startY - startYOffset;\n            if ((startOverlaps || isLast) && blankDivPos === -1) {\n              if (isLast && !startOverlaps) {\n                draggableNodes[i].after(blankDiv);\n              } else {\n                draggableNodes[i].before(blankDiv);\n              }\n              blankDiv.style.height = \"\".concat(blankDivRect.height, \"px\");\n              blankDiv.style.width = \"\".concat(blankDivRect.width, \"px\");\n              node.setAttribute('blankDiv', 'true'); // Makes removing easier\n              blankDivPos = i;\n            }\n            if (blankDivPos !== -1) {\n              childRect.y += blankDivRect.height;\n            }\n          }\n          // Insert so drag + drop behavior matches single-list case\n          draggableNodes.splice(blankDivPos, 0, blankDiv);\n          draggableNodesRects.splice(blankDivPos, 0, blankDivRect);\n          // Extend hitbox of droppable zone\n          rect.height += blankDivRect.height;\n        }\n      } else {\n        resetDroppableItem(droppableItem);\n        node.classList.add(styles.modifiers.dragging);\n        node.classList.add(styles.modifiers.dragOutside);\n      }\n    });\n    // Move hovering draggable and style it based on cursor position\n    setStyle(Object.assign(Object.assign({}, style), {\n      transform: \"translate(\".concat(ev.pageX - startX, \"px, \").concat(ev.pageY - startY, \"px)\")\n    }));\n    setIsValidDrag(Boolean(hoveringDroppable));\n    // Iterate through sibling draggable nodes to reposition them and store correct hoveringIndex for onDrop\n    hoveringIndex = null;\n    if (hoveringDroppable) {\n      var _droppableItems$find = droppableItems.find(function (item) {\n          return item.node === hoveringDroppable;\n        }),\n        draggableNodes = _droppableItems$find.draggableNodes,\n        draggableNodesRects = _droppableItems$find.draggableNodesRects;\n      var lastTranslate = 0;\n      draggableNodes.forEach(function (n, i) {\n        n.style.transition = 'transform 0.5s cubic-bezier(0.2, 1, 0.1, 1) 0s';\n        var rect = draggableNodesRects[i];\n        var halfway = rect.y + rect.height / 2;\n        var translateY = 0;\n        // Use offset for more interactive translations\n        if (startY < halfway && ev.pageY + (blankDivRect.height - startYOffset) > halfway) {\n          translateY -= blankDivRect.height;\n        } else if (startY >= halfway && ev.pageY - startYOffset <= halfway) {\n          translateY += blankDivRect.height;\n        }\n        // Clever way to find item currently hovering over\n        if (translateY <= lastTranslate && translateY < 0 || translateY > lastTranslate && translateY > 0) {\n          hoveringIndex = i;\n        }\n        n.style.transform = \"translate(0, \".concat(translateY, \"px\");\n        lastTranslate = translateY;\n      });\n    }\n    var _getSourceAndDest2 = getSourceAndDest(),\n      source = _getSourceAndDest2.source,\n      dest = _getSourceAndDest2.dest;\n    onDragMove(source, dest);\n  };\n  var onDragStart = function onDragStart(ev) {\n    // Default HTML drag and drop doesn't allow us to change what the thing\n    // being dragged looks like. Because of this we'll use prevent the default\n    // and use `mouseMove` and `mouseUp` instead\n    ev.preventDefault();\n    if (isDragging) {\n      // still in animation\n      return;\n    }\n    // Cache droppable and draggable nodes and their bounding rects\n    var dragging = ev.target;\n    var rect = dragging.getBoundingClientRect();\n    var droppableNodes = Array.from(document.querySelectorAll(\"[data-pf-droppable=\\\"\".concat(zone, \"\\\"]\")));\n    var droppableItems = droppableNodes.reduce(function (acc, cur) {\n      cur.classList.add(styles.modifiers.dragging);\n      var draggableNodes = Array.from(cur.querySelectorAll(\"[data-pf-draggable-zone=\\\"\".concat(zone, \"\\\"]\")));\n      var isDraggingHost = cur.contains(dragging);\n      if (isDraggingHost) {\n        index = draggableNodes.indexOf(dragging);\n      }\n      var droppableItem = {\n        node: cur,\n        rect: cur.getBoundingClientRect(),\n        isDraggingHost: isDraggingHost,\n        // We don't want styles to apply to the left behind div in onMouseMoveWhileDragging\n        draggableNodes: draggableNodes.map(function (node) {\n          return node === dragging ? node.cloneNode(false) : node;\n        }),\n        draggableNodesRects: draggableNodes.map(function (node) {\n          return node.getBoundingClientRect();\n        })\n      };\n      acc.push(droppableItem);\n      return acc;\n    }, []);\n    if (!onDrag({\n      droppableId: droppableId,\n      index: index\n    })) {\n      // Consumer disallowed drag\n      return;\n    }\n    // Set initial style so future style mods take effect\n    style = Object.assign(Object.assign({}, style), {\n      top: rect.y,\n      left: rect.x,\n      width: rect.width,\n      height: rect.height,\n      '--pf-c-draggable--m-dragging--BackgroundColor': getInheritedBackgroundColor(dragging),\n      position: 'fixed',\n      zIndex: 5000\n    });\n    setStyle(style);\n    // Store event details\n    startX = ev.pageX;\n    startY = ev.pageY;\n    startYOffset = startY - rect.y;\n    setIsDragging(true);\n    mouseMoveListener = function mouseMoveListener(ev) {\n      return onMouseMoveWhileDragging(ev, droppableItems, rect);\n    };\n    mouseUpListener = function mouseUpListener() {\n      return onMouseUpWhileDragging(droppableItems);\n    };\n    document.addEventListener('mousemove', mouseMoveListener);\n    document.addEventListener('mouseup', mouseUpListener);\n    // Comment out this line to debug while dragging by right clicking\n    // document.addEventListener('contextmenu', mouseUpListener);\n  };\n\n  var childProps = Object.assign({\n    'data-pf-draggable-zone': isDragging ? null : zone,\n    draggable: true,\n    className: css(styles.draggable, isDragging && styles.modifiers.dragging, !isValidDrag && styles.modifiers.dragOutside, className),\n    onDragStart: onDragStart,\n    onTransitionEnd: onTransitionEnd,\n    style: style\n  }, props);\n  return React.createElement(React.Fragment, null, isDragging && React.createElement(\"div\", Object.assign({\n    draggable: true\n  }, props, {\n    style: Object.assign(Object.assign({}, styleProp), {\n      visibility: 'hidden'\n    })\n  }), children), hasNoWrapper ? React.cloneElement(children, childProps) : React.createElement(\"div\", Object.assign({}, childProps), children));\n};\nDraggable.displayName = 'Draggable';","map":{"version":3,"names":["React","css","styles","DroppableContext","DragDropContext","getDefaultBackground","div","document","createElement","head","appendChild","bg","window","getComputedStyle","backgroundColor","removeChild","getInheritedBackgroundColor","el","defaultStyle","parentElement","removeBlankDiv","node","getAttribute","i","children","length","child","setAttribute","resetDroppableItem","droppableItem","classList","remove","modifiers","dragging","dragOutside","draggableNodes","forEach","n","style","transform","transition","draggableNodesRects","getBoundingClientRect","overlaps","ev","rect","clientX","x","width","clientY","y","height","Draggable","_a","className","_a$style","styleProp","_a$hasNoWrapper","hasNoWrapper","props","__rest","_React$useState","useState","_React$useState2","_slicedToArray","setStyle","_React$useState3","_React$useState4","isDragging","setIsDragging","_React$useState5","_React$useState6","isValidDrag","setIsValidDrag","_React$useContext","useContext","zone","droppableId","_React$useContext2","onDrag","onDragMove","onDrop","startX","startY","index","hoveringDroppable","hoveringIndex","mouseMoveListener","mouseUpListener","startYOffset","onTransitionEnd","_ev","getSourceAndDest","hoveringDroppableId","source","dest","undefined","onMouseUpWhileDragging","droppableItems","removeEventListener","_getSourceAndDest","consumerReordered","Object","assign","background","boxShadow","onMouseMoveWhileDragging","blankDivRect","isDraggingHost","blankDiv","blankDivPos","childRect","isLast","startOverlaps","after","before","concat","splice","add","pageX","pageY","Boolean","_droppableItems$find","find","item","lastTranslate","halfway","translateY","_getSourceAndDest2","onDragStart","preventDefault","target","droppableNodes","Array","from","querySelectorAll","reduce","acc","cur","contains","indexOf","map","cloneNode","push","top","left","position","zIndex","addEventListener","childProps","draggable","Fragment","visibility","cloneElement","displayName"],"sources":["/data/stackhub-web/plugins/myapps/node_modules/@patternfly/react-core/src/components/DragDrop/Draggable.tsx"],"sourcesContent":["import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/DragDrop/drag-drop';\nimport { DroppableContext } from './DroppableContext';\nimport { DragDropContext } from './DragDrop';\n\nexport interface DraggableProps extends React.HTMLProps<HTMLDivElement> {\n  /** Content rendered inside DragDrop */\n  children?: React.ReactNode;\n  /** Don't wrap the component in a div. Requires passing a single child. */\n  hasNoWrapper?: boolean;\n  /** Class to add to outer div */\n  className?: string;\n}\n\n// Browsers really like being different from each other.\nfunction getDefaultBackground() {\n  const div = document.createElement('div');\n  document.head.appendChild(div);\n  const bg = window.getComputedStyle(div).backgroundColor;\n  document.head.removeChild(div);\n  return bg;\n}\n\nfunction getInheritedBackgroundColor(el: HTMLElement): string {\n  const defaultStyle = getDefaultBackground();\n  const backgroundColor = window.getComputedStyle(el).backgroundColor;\n\n  if (backgroundColor !== defaultStyle) {\n    return backgroundColor;\n  } else if (!el.parentElement) {\n    return defaultStyle;\n  }\n\n  return getInheritedBackgroundColor(el.parentElement);\n}\n\nfunction removeBlankDiv(node: HTMLElement) {\n  if (node.getAttribute('blankDiv') === 'true') {\n    // eslint-disable-next-line @typescript-eslint/prefer-for-of\n    for (let i = 0; i < node.children.length; i++) {\n      const child = node.children[i];\n      if (child.getAttribute('blankDiv') === 'true') {\n        node.removeChild(child);\n        node.setAttribute('blankDiv', 'false');\n        break;\n      }\n    }\n  }\n}\n\ninterface DroppableItem {\n  node: HTMLElement;\n  rect: DOMRect;\n  isDraggingHost: boolean;\n  draggableNodes: HTMLElement[];\n  draggableNodesRects: DOMRect[];\n}\n\n// Reset per-element state\nfunction resetDroppableItem(droppableItem: DroppableItem) {\n  removeBlankDiv(droppableItem.node);\n  droppableItem.node.classList.remove(styles.modifiers.dragging);\n  droppableItem.node.classList.remove(styles.modifiers.dragOutside);\n  droppableItem.draggableNodes.forEach((n, i) => {\n    n.style.transform = '';\n    n.style.transition = '';\n    droppableItem.draggableNodesRects[i] = n.getBoundingClientRect();\n  });\n}\n\nfunction overlaps(ev: MouseEvent, rect: DOMRect) {\n  return (\n    ev.clientX > rect.x && ev.clientX < rect.x + rect.width && ev.clientY > rect.y && ev.clientY < rect.y + rect.height\n  );\n}\n\nexport const Draggable: React.FunctionComponent<DraggableProps> = ({\n  className,\n  children,\n  style: styleProp = {},\n  hasNoWrapper = false,\n  ...props\n}: DraggableProps) => {\n  /* eslint-disable prefer-const */\n  let [style, setStyle] = React.useState(styleProp);\n  /* eslint-enable prefer-const */\n  const [isDragging, setIsDragging] = React.useState(false);\n  const [isValidDrag, setIsValidDrag] = React.useState(true);\n  const { zone, droppableId } = React.useContext(DroppableContext);\n  const { onDrag, onDragMove, onDrop } = React.useContext(DragDropContext);\n  // Some state is better just to leave as vars passed around between various callbacks\n  // You can only drag around one item at a time anyways...\n  let startX = 0;\n  let startY = 0;\n  let index: number = null; // Index of this draggable\n  let hoveringDroppable: HTMLElement;\n  let hoveringIndex: number = null;\n  let mouseMoveListener: EventListener;\n  let mouseUpListener: EventListener;\n  // Makes it so dragging the _bottom_ of the item over the halfway of another moves it\n  let startYOffset = 0;\n\n  // After item returning to where it started animation completes\n  const onTransitionEnd = (_ev: React.TransitionEvent<HTMLElement>) => {\n    if (isDragging) {\n      setIsDragging(false);\n      setStyle(styleProp);\n    }\n  };\n\n  function getSourceAndDest() {\n    const hoveringDroppableId = hoveringDroppable ? hoveringDroppable.getAttribute('data-pf-droppableid') : null;\n    const source = {\n      droppableId,\n      index\n    };\n    const dest =\n      hoveringDroppableId !== null && hoveringIndex !== null\n        ? {\n            droppableId: hoveringDroppableId,\n            index: hoveringIndex\n          }\n        : undefined;\n    return { source, dest, hoveringDroppableId };\n  }\n\n  const onMouseUpWhileDragging = (droppableItems: DroppableItem[]) => {\n    droppableItems.forEach(resetDroppableItem);\n    document.removeEventListener('mousemove', mouseMoveListener);\n    document.removeEventListener('mouseup', mouseUpListener);\n    document.removeEventListener('contextmenu', mouseUpListener);\n    const { source, dest, hoveringDroppableId } = getSourceAndDest();\n    const consumerReordered = onDrop(source, dest);\n    if (consumerReordered && droppableId === hoveringDroppableId) {\n      setIsDragging(false);\n      setStyle(styleProp);\n    } else if (!consumerReordered) {\n      // Animate item returning to where it started\n      setStyle({\n        ...style,\n        transition: 'transform 0.5s cubic-bezier(0.2, 1, 0.1, 1) 0s',\n        transform: '',\n        background: styleProp.background,\n        boxShadow: styleProp.boxShadow\n      });\n    }\n  };\n\n  // This is where the magic happens\n  const onMouseMoveWhileDragging = (ev: MouseEvent, droppableItems: DroppableItem[], blankDivRect: DOMRect) => {\n    // Compute each time what droppable node we are hovering over\n    hoveringDroppable = null;\n    droppableItems.forEach(droppableItem => {\n      const { node, rect, isDraggingHost, draggableNodes, draggableNodesRects } = droppableItem;\n      if (overlaps(ev, rect)) {\n        // Add valid dropzone style\n        node.classList.remove(styles.modifiers.dragOutside);\n        hoveringDroppable = node;\n        // Check if we need to add a blank div row\n        if (node.getAttribute('blankDiv') !== 'true' && !isDraggingHost) {\n          const blankDiv = document.createElement('div');\n          blankDiv.setAttribute('blankDiv', 'true'); // Makes removing easier\n          let blankDivPos = -1;\n          for (let i = 0; i < draggableNodes.length; i++) {\n            const childRect = draggableNodesRects[i];\n            const isLast = i === draggableNodes.length - 1;\n            const startOverlaps = childRect.y >= startY - startYOffset;\n            if ((startOverlaps || isLast) && blankDivPos === -1) {\n              if (isLast && !startOverlaps) {\n                draggableNodes[i].after(blankDiv);\n              } else {\n                draggableNodes[i].before(blankDiv);\n              }\n              blankDiv.style.height = `${blankDivRect.height}px`;\n              blankDiv.style.width = `${blankDivRect.width}px`;\n              node.setAttribute('blankDiv', 'true'); // Makes removing easier\n              blankDivPos = i;\n            }\n            if (blankDivPos !== -1) {\n              childRect.y += blankDivRect.height;\n            }\n          }\n          // Insert so drag + drop behavior matches single-list case\n          draggableNodes.splice(blankDivPos, 0, blankDiv);\n          draggableNodesRects.splice(blankDivPos, 0, blankDivRect);\n          // Extend hitbox of droppable zone\n          rect.height += blankDivRect.height;\n        }\n      } else {\n        resetDroppableItem(droppableItem);\n        node.classList.add(styles.modifiers.dragging);\n        node.classList.add(styles.modifiers.dragOutside);\n      }\n    });\n\n    // Move hovering draggable and style it based on cursor position\n    setStyle({\n      ...style,\n      transform: `translate(${ev.pageX - startX}px, ${ev.pageY - startY}px)`\n    });\n    setIsValidDrag(Boolean(hoveringDroppable));\n\n    // Iterate through sibling draggable nodes to reposition them and store correct hoveringIndex for onDrop\n    hoveringIndex = null;\n    if (hoveringDroppable) {\n      const { draggableNodes, draggableNodesRects } = droppableItems.find(item => item.node === hoveringDroppable);\n      let lastTranslate = 0;\n      draggableNodes.forEach((n, i) => {\n        n.style.transition = 'transform 0.5s cubic-bezier(0.2, 1, 0.1, 1) 0s';\n        const rect = draggableNodesRects[i];\n        const halfway = rect.y + rect.height / 2;\n        let translateY = 0;\n        // Use offset for more interactive translations\n        if (startY < halfway && ev.pageY + (blankDivRect.height - startYOffset) > halfway) {\n          translateY -= blankDivRect.height;\n        } else if (startY >= halfway && ev.pageY - startYOffset <= halfway) {\n          translateY += blankDivRect.height;\n        }\n        // Clever way to find item currently hovering over\n        if ((translateY <= lastTranslate && translateY < 0) || (translateY > lastTranslate && translateY > 0)) {\n          hoveringIndex = i;\n        }\n        n.style.transform = `translate(0, ${translateY}px`;\n        lastTranslate = translateY;\n      });\n    }\n\n    const { source, dest } = getSourceAndDest();\n    onDragMove(source, dest);\n  };\n\n  const onDragStart = (ev: React.DragEvent<HTMLElement>) => {\n    // Default HTML drag and drop doesn't allow us to change what the thing\n    // being dragged looks like. Because of this we'll use prevent the default\n    // and use `mouseMove` and `mouseUp` instead\n    ev.preventDefault();\n    if (isDragging) {\n      // still in animation\n      return;\n    }\n\n    // Cache droppable and draggable nodes and their bounding rects\n    const dragging = ev.target as HTMLElement;\n    const rect = dragging.getBoundingClientRect();\n    const droppableNodes = Array.from(document.querySelectorAll(`[data-pf-droppable=\"${zone}\"]`)) as HTMLElement[];\n    const droppableItems = droppableNodes.reduce((acc, cur) => {\n      cur.classList.add(styles.modifiers.dragging);\n      const draggableNodes = Array.from(cur.querySelectorAll(`[data-pf-draggable-zone=\"${zone}\"]`)) as HTMLElement[];\n      const isDraggingHost = cur.contains(dragging);\n      if (isDraggingHost) {\n        index = draggableNodes.indexOf(dragging);\n      }\n      const droppableItem = {\n        node: cur,\n        rect: cur.getBoundingClientRect(),\n        isDraggingHost,\n        // We don't want styles to apply to the left behind div in onMouseMoveWhileDragging\n        draggableNodes: draggableNodes.map(node => (node === dragging ? node.cloneNode(false) : node)),\n        draggableNodesRects: draggableNodes.map(node => node.getBoundingClientRect())\n      };\n      acc.push(droppableItem);\n      return acc;\n    }, []);\n\n    if (!onDrag({ droppableId, index })) {\n      // Consumer disallowed drag\n      return;\n    }\n\n    // Set initial style so future style mods take effect\n    style = {\n      ...style,\n      top: rect.y,\n      left: rect.x,\n      width: rect.width,\n      height: rect.height,\n      '--pf-c-draggable--m-dragging--BackgroundColor': getInheritedBackgroundColor(dragging),\n      position: 'fixed',\n      zIndex: 5000\n    } as any;\n    setStyle(style);\n    // Store event details\n    startX = ev.pageX;\n    startY = ev.pageY;\n    startYOffset = startY - rect.y;\n    setIsDragging(true);\n    mouseMoveListener = ev => onMouseMoveWhileDragging(ev as MouseEvent, droppableItems, rect);\n    mouseUpListener = () => onMouseUpWhileDragging(droppableItems);\n    document.addEventListener('mousemove', mouseMoveListener);\n    document.addEventListener('mouseup', mouseUpListener);\n    // Comment out this line to debug while dragging by right clicking\n    // document.addEventListener('contextmenu', mouseUpListener);\n  };\n\n  const childProps = {\n    'data-pf-draggable-zone': isDragging ? null : zone,\n    draggable: true,\n    className: css(\n      styles.draggable,\n      isDragging && styles.modifiers.dragging,\n      !isValidDrag && styles.modifiers.dragOutside,\n      className\n    ),\n    onDragStart,\n    onTransitionEnd,\n    style,\n    ...props\n  };\n\n  return (\n    <React.Fragment>\n      {/* Leave behind blank spot per-design */}\n      {isDragging && (\n        <div draggable {...props} style={{ ...styleProp, visibility: 'hidden' }}>\n          {children}\n        </div>\n      )}\n      {hasNoWrapper ? (\n        React.cloneElement(children as React.ReactElement, childProps)\n      ) : (\n        <div {...childProps}>{children}</div>\n      )}\n    </React.Fragment>\n  );\n};\nDraggable.displayName = 'Draggable';\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
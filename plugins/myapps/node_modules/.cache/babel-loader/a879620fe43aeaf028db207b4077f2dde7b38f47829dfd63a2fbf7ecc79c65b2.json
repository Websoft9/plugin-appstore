{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport extractEventHandlers from '../utils/extractEventHandlers';\n\n/**\n * The basic building block for creating custom snackbar.\n *\n * Demos:\n *\n * - [Snackbar](https://mui.com/base/react-snackbar/#hook)\n *\n * API:\n *\n * - [useSnackbar API](https://mui.com/base/react-snackbar/hooks-api/#use-snackbar)\n */\nexport default function useSnackbar(parameters) {\n  var _parameters$autoHideD = parameters.autoHideDuration,\n    autoHideDuration = _parameters$autoHideD === void 0 ? null : _parameters$autoHideD,\n    _parameters$disableWi = parameters.disableWindowBlurListener,\n    disableWindowBlurListener = _parameters$disableWi === void 0 ? false : _parameters$disableWi,\n    onClose = parameters.onClose,\n    open = parameters.open,\n    resumeHideDuration = parameters.resumeHideDuration;\n  var timerAutoHide = React.useRef();\n  React.useEffect(function () {\n    if (!open) {\n      return undefined;\n    }\n\n    /**\n     * @param {KeyboardEvent} nativeEvent\n     */\n    function handleKeyDown(nativeEvent) {\n      if (!nativeEvent.defaultPrevented) {\n        // IE11, Edge (prior to using Blink?) use 'Esc'\n        if (nativeEvent.key === 'Escape' || nativeEvent.key === 'Esc') {\n          // not calling `preventDefault` since we don't know if people may ignore this event e.g. a permanently open snackbar\n          onClose == null ? void 0 : onClose(nativeEvent, 'escapeKeyDown');\n        }\n      }\n    }\n    document.addEventListener('keydown', handleKeyDown);\n    return function () {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [open, onClose]);\n  var handleClose = useEventCallback(function (event, reason) {\n    onClose == null ? void 0 : onClose(event, reason);\n  });\n  var setAutoHideTimer = useEventCallback(function (autoHideDurationParam) {\n    if (!onClose || autoHideDurationParam == null) {\n      return;\n    }\n    clearTimeout(timerAutoHide.current);\n    timerAutoHide.current = setTimeout(function () {\n      handleClose(null, 'timeout');\n    }, autoHideDurationParam);\n  });\n  React.useEffect(function () {\n    if (open) {\n      setAutoHideTimer(autoHideDuration);\n    }\n    return function () {\n      clearTimeout(timerAutoHide.current);\n    };\n  }, [open, autoHideDuration, setAutoHideTimer]);\n  var handleClickAway = function handleClickAway(event) {\n    onClose == null ? void 0 : onClose(event, 'clickaway');\n  };\n\n  // Pause the timer when the user is interacting with the Snackbar\n  // or when the user hide the window.\n  var handlePause = function handlePause() {\n    clearTimeout(timerAutoHide.current);\n  };\n\n  // Restart the timer when the user is no longer interacting with the Snackbar\n  // or when the window is shown back.\n  var handleResume = React.useCallback(function () {\n    if (autoHideDuration != null) {\n      setAutoHideTimer(resumeHideDuration != null ? resumeHideDuration : autoHideDuration * 0.5);\n    }\n  }, [autoHideDuration, resumeHideDuration, setAutoHideTimer]);\n  var createHandleBlur = function createHandleBlur(otherHandlers) {\n    return function (event) {\n      var onBlurCallback = otherHandlers.onBlur;\n      onBlurCallback == null ? void 0 : onBlurCallback(event);\n      handleResume();\n    };\n  };\n  var createHandleFocus = function createHandleFocus(otherHandlers) {\n    return function (event) {\n      var onFocusCallback = otherHandlers.onFocus;\n      onFocusCallback == null ? void 0 : onFocusCallback(event);\n      handlePause();\n    };\n  };\n  var createMouseEnter = function createMouseEnter(otherHandlers) {\n    return function (event) {\n      var onMouseEnterCallback = otherHandlers.onMouseEnter;\n      onMouseEnterCallback == null ? void 0 : onMouseEnterCallback(event);\n      handlePause();\n    };\n  };\n  var createMouseLeave = function createMouseLeave(otherHandlers) {\n    return function (event) {\n      var onMouseLeaveCallback = otherHandlers.onMouseLeave;\n      onMouseLeaveCallback == null ? void 0 : onMouseLeaveCallback(event);\n      handleResume();\n    };\n  };\n  React.useEffect(function () {\n    // TODO: window global should be refactored here\n    if (!disableWindowBlurListener && open) {\n      window.addEventListener('focus', handleResume);\n      window.addEventListener('blur', handlePause);\n      return function () {\n        window.removeEventListener('focus', handleResume);\n        window.removeEventListener('blur', handlePause);\n      };\n    }\n    return undefined;\n  }, [disableWindowBlurListener, handleResume, open]);\n  var getRootProps = function getRootProps() {\n    var otherHandlers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var propsEventHandlers = extractEventHandlers(parameters);\n    var externalEventHandlers = _extends({}, propsEventHandlers, otherHandlers);\n    return _extends({\n      // ClickAwayListener adds an `onClick` prop which results in the alert not being announced.\n      // See https://github.com/mui/material-ui/issues/29080\n      role: 'presentation'\n    }, externalEventHandlers, {\n      onBlur: createHandleBlur(externalEventHandlers),\n      onFocus: createHandleFocus(externalEventHandlers),\n      onMouseEnter: createMouseEnter(externalEventHandlers),\n      onMouseLeave: createMouseLeave(externalEventHandlers)\n    });\n  };\n  return {\n    getRootProps: getRootProps,\n    onClickAway: handleClickAway\n  };\n}","map":{"version":3,"names":["_extends","React","unstable_useEventCallback","useEventCallback","extractEventHandlers","useSnackbar","parameters","_parameters$autoHideD","autoHideDuration","_parameters$disableWi","disableWindowBlurListener","onClose","open","resumeHideDuration","timerAutoHide","useRef","useEffect","undefined","handleKeyDown","nativeEvent","defaultPrevented","key","document","addEventListener","removeEventListener","handleClose","event","reason","setAutoHideTimer","autoHideDurationParam","clearTimeout","current","setTimeout","handleClickAway","handlePause","handleResume","useCallback","createHandleBlur","otherHandlers","onBlurCallback","onBlur","createHandleFocus","onFocusCallback","onFocus","createMouseEnter","onMouseEnterCallback","onMouseEnter","createMouseLeave","onMouseLeaveCallback","onMouseLeave","window","getRootProps","arguments","length","propsEventHandlers","externalEventHandlers","role","onClickAway"],"sources":["/data/stackhub-web/plugins/myapps/node_modules/@mui/base/useSnackbar/useSnackbar.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport extractEventHandlers from '../utils/extractEventHandlers';\n\n/**\n * The basic building block for creating custom snackbar.\n *\n * Demos:\n *\n * - [Snackbar](https://mui.com/base/react-snackbar/#hook)\n *\n * API:\n *\n * - [useSnackbar API](https://mui.com/base/react-snackbar/hooks-api/#use-snackbar)\n */\nexport default function useSnackbar(parameters) {\n  const {\n    autoHideDuration = null,\n    disableWindowBlurListener = false,\n    onClose,\n    open,\n    resumeHideDuration\n  } = parameters;\n  const timerAutoHide = React.useRef();\n  React.useEffect(() => {\n    if (!open) {\n      return undefined;\n    }\n\n    /**\n     * @param {KeyboardEvent} nativeEvent\n     */\n    function handleKeyDown(nativeEvent) {\n      if (!nativeEvent.defaultPrevented) {\n        // IE11, Edge (prior to using Blink?) use 'Esc'\n        if (nativeEvent.key === 'Escape' || nativeEvent.key === 'Esc') {\n          // not calling `preventDefault` since we don't know if people may ignore this event e.g. a permanently open snackbar\n          onClose == null ? void 0 : onClose(nativeEvent, 'escapeKeyDown');\n        }\n      }\n    }\n    document.addEventListener('keydown', handleKeyDown);\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [open, onClose]);\n  const handleClose = useEventCallback((event, reason) => {\n    onClose == null ? void 0 : onClose(event, reason);\n  });\n  const setAutoHideTimer = useEventCallback(autoHideDurationParam => {\n    if (!onClose || autoHideDurationParam == null) {\n      return;\n    }\n    clearTimeout(timerAutoHide.current);\n    timerAutoHide.current = setTimeout(() => {\n      handleClose(null, 'timeout');\n    }, autoHideDurationParam);\n  });\n  React.useEffect(() => {\n    if (open) {\n      setAutoHideTimer(autoHideDuration);\n    }\n    return () => {\n      clearTimeout(timerAutoHide.current);\n    };\n  }, [open, autoHideDuration, setAutoHideTimer]);\n  const handleClickAway = event => {\n    onClose == null ? void 0 : onClose(event, 'clickaway');\n  };\n\n  // Pause the timer when the user is interacting with the Snackbar\n  // or when the user hide the window.\n  const handlePause = () => {\n    clearTimeout(timerAutoHide.current);\n  };\n\n  // Restart the timer when the user is no longer interacting with the Snackbar\n  // or when the window is shown back.\n  const handleResume = React.useCallback(() => {\n    if (autoHideDuration != null) {\n      setAutoHideTimer(resumeHideDuration != null ? resumeHideDuration : autoHideDuration * 0.5);\n    }\n  }, [autoHideDuration, resumeHideDuration, setAutoHideTimer]);\n  const createHandleBlur = otherHandlers => event => {\n    const onBlurCallback = otherHandlers.onBlur;\n    onBlurCallback == null ? void 0 : onBlurCallback(event);\n    handleResume();\n  };\n  const createHandleFocus = otherHandlers => event => {\n    const onFocusCallback = otherHandlers.onFocus;\n    onFocusCallback == null ? void 0 : onFocusCallback(event);\n    handlePause();\n  };\n  const createMouseEnter = otherHandlers => event => {\n    const onMouseEnterCallback = otherHandlers.onMouseEnter;\n    onMouseEnterCallback == null ? void 0 : onMouseEnterCallback(event);\n    handlePause();\n  };\n  const createMouseLeave = otherHandlers => event => {\n    const onMouseLeaveCallback = otherHandlers.onMouseLeave;\n    onMouseLeaveCallback == null ? void 0 : onMouseLeaveCallback(event);\n    handleResume();\n  };\n  React.useEffect(() => {\n    // TODO: window global should be refactored here\n    if (!disableWindowBlurListener && open) {\n      window.addEventListener('focus', handleResume);\n      window.addEventListener('blur', handlePause);\n      return () => {\n        window.removeEventListener('focus', handleResume);\n        window.removeEventListener('blur', handlePause);\n      };\n    }\n    return undefined;\n  }, [disableWindowBlurListener, handleResume, open]);\n  const getRootProps = (otherHandlers = {}) => {\n    const propsEventHandlers = extractEventHandlers(parameters);\n    const externalEventHandlers = _extends({}, propsEventHandlers, otherHandlers);\n    return _extends({\n      // ClickAwayListener adds an `onClick` prop which results in the alert not being announced.\n      // See https://github.com/mui/material-ui/issues/29080\n      role: 'presentation'\n    }, externalEventHandlers, {\n      onBlur: createHandleBlur(externalEventHandlers),\n      onFocus: createHandleFocus(externalEventHandlers),\n      onMouseEnter: createMouseEnter(externalEventHandlers),\n      onMouseLeave: createMouseLeave(externalEventHandlers)\n    });\n  };\n  return {\n    getRootProps,\n    onClickAway: handleClickAway\n  };\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import _classCallCheck from \"/data/stackhub-web/plugins/myapps/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/data/stackhub-web/plugins/myapps/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/data/stackhub-web/plugins/myapps/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/data/stackhub-web/plugins/myapps/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/SimpleList/simple-list';\nimport { SimpleListGroup } from './SimpleListGroup';\nexport var SimpleListContext = React.createContext({});\nexport var SimpleList = /*#__PURE__*/function (_React$Component) {\n  _inherits(SimpleList, _React$Component);\n  var _super = _createSuper(SimpleList);\n  function SimpleList() {\n    var _this;\n    _classCallCheck(this, SimpleList);\n    _this = _super.apply(this, arguments);\n    _this.state = {\n      currentRef: null\n    };\n    _this.handleCurrentUpdate = function (newCurrentRef, itemProps) {\n      _this.setState({\n        currentRef: newCurrentRef\n      });\n      var onSelect = _this.props.onSelect;\n      onSelect && onSelect(newCurrentRef, itemProps);\n    };\n    return _this;\n  }\n  _createClass(SimpleList, [{\n    key: \"render\",\n    value: function render() {\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      var _a = this.props,\n        children = _a.children,\n        className = _a.className,\n        onSelect = _a.onSelect,\n        isControlled = _a.isControlled,\n        ariaLabel = _a['aria-label'],\n        props = __rest(_a, [\"children\", \"className\", \"onSelect\", \"isControlled\", 'aria-label']);\n      var isGrouped = false;\n      if (children) {\n        isGrouped = React.Children.toArray(children)[0].type === SimpleListGroup;\n      }\n      return React.createElement(SimpleListContext.Provider, {\n        value: {\n          currentRef: this.state.currentRef,\n          updateCurrentRef: this.handleCurrentUpdate,\n          isControlled: isControlled\n        }\n      }, React.createElement(\"div\", Object.assign({\n        className: css(styles.simpleList, className)\n      }, props), isGrouped && children, !isGrouped && React.createElement(\"ul\", {\n        \"aria-label\": ariaLabel\n      }, children)));\n    }\n  }]);\n  return SimpleList;\n}(React.Component);\nSimpleList.displayName = 'SimpleList';\nSimpleList.defaultProps = {\n  children: null,\n  className: '',\n  isControlled: true\n};","map":{"version":3,"names":["React","css","styles","SimpleListGroup","SimpleListContext","createContext","SimpleList","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","state","currentRef","handleCurrentUpdate","newCurrentRef","itemProps","setState","onSelect","props","_createClass","key","value","render","_a","children","className","isControlled","ariaLabel","__rest","isGrouped","Children","toArray","type","createElement","Provider","updateCurrentRef","Object","assign","simpleList","Component","displayName","defaultProps"],"sources":["/data/stackhub-web/plugins/myapps/node_modules/@patternfly/react-core/src/components/SimpleList/SimpleList.tsx"],"sourcesContent":["import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/SimpleList/simple-list';\nimport { SimpleListGroup } from './SimpleListGroup';\nimport { SimpleListItemProps } from './SimpleListItem';\n\nexport interface SimpleListProps extends Omit<React.HTMLProps<HTMLDivElement>, 'onSelect'> {\n  /** Content rendered inside the SimpleList */\n  children?: React.ReactNode;\n  /** Additional classes added to the SimpleList container */\n  className?: string;\n  /** Callback when an item is selected */\n  onSelect?: (\n    ref: React.RefObject<HTMLButtonElement> | React.RefObject<HTMLAnchorElement>,\n    props: SimpleListItemProps\n  ) => void;\n  /** Indicates whether component is controlled by its internal state */\n  isControlled?: boolean;\n  /** aria-label for the <ul> element that wraps the SimpleList items. */\n  'aria-label'?: string;\n}\n\nexport interface SimpleListState {\n  /** Ref of the current SimpleListItem */\n  currentRef: React.RefObject<HTMLButtonElement> | React.RefObject<HTMLAnchorElement>;\n}\n\ninterface SimpleListContextProps {\n  currentRef: React.RefObject<HTMLButtonElement> | React.RefObject<HTMLAnchorElement>;\n  updateCurrentRef: (\n    id: React.RefObject<HTMLButtonElement> | React.RefObject<HTMLAnchorElement>,\n    props: SimpleListItemProps\n  ) => void;\n  isControlled: boolean;\n}\n\nexport const SimpleListContext = React.createContext<Partial<SimpleListContextProps>>({});\n\nexport class SimpleList extends React.Component<SimpleListProps, SimpleListState> {\n  static displayName = 'SimpleList';\n  state = {\n    currentRef: null as React.RefObject<HTMLButtonElement> | React.RefObject<HTMLAnchorElement>\n  };\n\n  static defaultProps: SimpleListProps = {\n    children: null as React.ReactNode,\n    className: '',\n    isControlled: true\n  };\n\n  handleCurrentUpdate = (\n    newCurrentRef: React.RefObject<HTMLButtonElement> | React.RefObject<HTMLAnchorElement>,\n    itemProps: SimpleListItemProps\n  ) => {\n    this.setState({ currentRef: newCurrentRef });\n    const { onSelect } = this.props;\n    onSelect && onSelect(newCurrentRef, itemProps);\n  };\n\n  render() {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const { children, className, onSelect, isControlled, 'aria-label': ariaLabel, ...props } = this.props;\n\n    let isGrouped = false;\n    if (children) {\n      isGrouped = (React.Children.toArray(children)[0] as React.ReactElement).type === SimpleListGroup;\n    }\n\n    return (\n      <SimpleListContext.Provider\n        value={{\n          currentRef: this.state.currentRef,\n          updateCurrentRef: this.handleCurrentUpdate,\n          isControlled\n        }}\n      >\n        <div className={css(styles.simpleList, className)} {...props}>\n          {isGrouped && children}\n          {!isGrouped && <ul aria-label={ariaLabel}>{children}</ul>}\n        </div>\n      </SimpleListContext.Provider>\n    );\n  }\n}\n"],"mappings":";;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,GAAG,QAAQ,0BAA0B;AAC9C,OAAOC,MAAM,MAAM,gEAAgE;AACnF,SAASC,eAAe,QAAQ,mBAAmB;AAiCnD,OAAO,IAAMC,iBAAiB,GAAGJ,KAAK,CAACK,aAAa,CAAkC,EAAE,CAAC;AAEzF,WAAaC,UAAW,0BAAAC,gBAAA;EAAAC,SAAA,CAAAF,UAAA,EAAAC,gBAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,UAAA;EAAxB,SAAAA,WAAA;IAAA,IAAAK,KAAA;IAAAC,eAAA,OAAAN,UAAA;;IAEEK,KAAA,CAAAE,KAAK,GAAG;MACNC,UAAU,EAAE;KACb;IAQDH,KAAA,CAAAI,mBAAmB,GAAG,UACpBC,aAAsF,EACtFC,SAA8B,EAC5B;MACFN,KAAA,CAAKO,QAAQ,CAAC;QAAEJ,UAAU,EAAEE;MAAa,CAAE,CAAC;MAC5C,IAAQG,QAAQ,GAAKR,KAAA,CAAKS,KAAK,CAAvBD,QAAQ;MAChBA,QAAQ,IAAIA,QAAQ,CAACH,aAAa,EAAEC,SAAS,CAAC;IAChD,CAAC;IAAC,OAAAN,KAAA;EA0BJ;EAACU,YAAA,CAAAf,UAAA;IAAAgB,GAAA;IAAAC,KAAA,EAxBC,SAAAC,OAAA,EAAM;MACJ;MACM,IAAAC,EAAA,GAAqF,IAAI,CAACL,KAAK;QAA7FM,QAAQ,GAA4DD,EAAyB,CAA7FC,QAAQ;QAAEC,SAAS,GAAiDF,EAAyB,CAAnFE,SAAS;QAAER,QAAQ,GAAuCM,EAAyB,CAAxEN,QAAQ;QAAES,YAAY,GAAyBH,EAAyB,CAA9DG,YAAY;QAAgBC,SAAS,GAAAJ,EAAyB,CAAhD,YAAY;QAAgBL,KAAK,GAAAU,MAAA,CAAAL,EAAA,EAAhF,mEAAkF,CAAa;MAErG,IAAIM,SAAS,GAAG,KAAK;MACrB,IAAIL,QAAQ,EAAE;QACZK,SAAS,GAAI/B,KAAK,CAACgC,QAAQ,CAACC,OAAO,CAACP,QAAQ,CAAC,CAAC,CAAC,CAAwB,CAACQ,IAAI,KAAK/B,eAAe;;MAGlG,OACEH,KAAA,CAAAmC,aAAA,CAAC/B,iBAAiB,CAACgC,QAAQ;QACzBb,KAAK,EAAE;UACLT,UAAU,EAAE,IAAI,CAACD,KAAK,CAACC,UAAU;UACjCuB,gBAAgB,EAAE,IAAI,CAACtB,mBAAmB;UAC1Ca,YAAY,EAAZA;;MACD,GAED5B,KAAA,CAAAmC,aAAA,QAAAG,MAAA,CAAAC,MAAA;QAAKZ,SAAS,EAAE1B,GAAG,CAACC,MAAM,CAACsC,UAAU,EAAEb,SAAS;MAAC,GAAMP,KAAK,GACzDW,SAAS,IAAIL,QAAQ,EACrB,CAACK,SAAS,IAAI/B,KAAA,CAAAmC,aAAA;QAAA,cAAgBN;MAAS,GAAGH,QAAQ,CAAM,CACrD,CACqB;IAEjC;EAAC;EAAA,OAAApB,UAAA;AAAA,EA5C6BN,KAAK,CAACyC,SAA2C;AACxEnC,UAAA,CAAAoC,WAAW,GAAG,YAAY;AAK1BpC,UAAA,CAAAqC,YAAY,GAAoB;EACrCjB,QAAQ,EAAE,IAAuB;EACjCC,SAAS,EAAE,EAAE;EACbC,YAAY,EAAE;CACf"},"metadata":{},"sourceType":"module","externalDependencies":[]}
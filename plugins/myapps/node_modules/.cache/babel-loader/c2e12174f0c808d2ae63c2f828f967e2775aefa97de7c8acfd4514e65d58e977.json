{"ast":null,"code":"import invariant from \"./invariant.mjs\";\nimport nodejsCustomInspectSymbol from \"./nodejsCustomInspectSymbol.mjs\";\n/**\n * The `defineInspect()` function defines `inspect()` prototype method as alias of `toJSON`\n */\n\nexport default function defineInspect(classObject) {\n  var fn = classObject.prototype.toJSON;\n  typeof fn === 'function' || invariant(0);\n  classObject.prototype.inspect = fn; // istanbul ignore else (See: 'https://github.com/graphql/graphql-js/issues/2317')\n\n  if (nodejsCustomInspectSymbol) {\n    classObject.prototype[nodejsCustomInspectSymbol] = fn;\n  }\n}","map":{"version":3,"names":["invariant","nodejsCustomInspectSymbol","defineInspect","classObject","fn","prototype","toJSON","inspect"],"sources":["/data/stackhub-web/plugins/myapps/node_modules/graphql/jsutils/defineInspect.mjs"],"sourcesContent":["import invariant from \"./invariant.mjs\";\nimport nodejsCustomInspectSymbol from \"./nodejsCustomInspectSymbol.mjs\";\n/**\n * The `defineInspect()` function defines `inspect()` prototype method as alias of `toJSON`\n */\n\nexport default function defineInspect(classObject) {\n  var fn = classObject.prototype.toJSON;\n  typeof fn === 'function' || invariant(0);\n  classObject.prototype.inspect = fn; // istanbul ignore else (See: 'https://github.com/graphql/graphql-js/issues/2317')\n\n  if (nodejsCustomInspectSymbol) {\n    classObject.prototype[nodejsCustomInspectSymbol] = fn;\n  }\n}\n"],"mappings":"AAAA,OAAOA,SAAS,MAAM,iBAAiB;AACvC,OAAOC,yBAAyB,MAAM,iCAAiC;AACvE;AACA;AACA;;AAEA,eAAe,SAASC,aAAaA,CAACC,WAAW,EAAE;EACjD,IAAIC,EAAE,GAAGD,WAAW,CAACE,SAAS,CAACC,MAAM;EACrC,OAAOF,EAAE,KAAK,UAAU,IAAIJ,SAAS,CAAC,CAAC,CAAC;EACxCG,WAAW,CAACE,SAAS,CAACE,OAAO,GAAGH,EAAE,CAAC,CAAC;;EAEpC,IAAIH,yBAAyB,EAAE;IAC7BE,WAAW,CAACE,SAAS,CAACJ,yBAAyB,CAAC,GAAGG,EAAE;EACvD;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}
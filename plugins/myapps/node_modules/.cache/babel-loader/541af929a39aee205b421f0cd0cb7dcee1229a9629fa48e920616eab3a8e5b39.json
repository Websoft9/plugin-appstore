{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Banner/banner';\nimport { css } from '@patternfly/react-styles';\nexport var Banner = function Banner(_a) {\n  var children = _a.children,\n    className = _a.className,\n    _a$variant = _a.variant,\n    variant = _a$variant === void 0 ? 'default' : _a$variant,\n    screenReaderText = _a.screenReaderText,\n    _a$isSticky = _a.isSticky,\n    isSticky = _a$isSticky === void 0 ? false : _a$isSticky,\n    props = __rest(_a, [\"children\", \"className\", \"variant\", \"screenReaderText\", \"isSticky\"]);\n  return React.createElement(\"div\", Object.assign({\n    className: css(styles.banner, styles.modifiers[variant], isSticky && styles.modifiers.sticky, className)\n  }, props), screenReaderText && React.createElement(\"span\", {\n    className: \"pf-u-screen-reader\"\n  }, screenReaderText), children);\n};\nBanner.displayName = 'Banner';","map":{"version":3,"names":["React","styles","css","Banner","_a","children","className","_a$variant","variant","screenReaderText","_a$isSticky","isSticky","props","__rest","createElement","Object","assign","banner","modifiers","sticky","displayName"],"sources":["/data/stackhub-web/plugins/myapps/node_modules/@patternfly/react-core/src/components/Banner/Banner.tsx"],"sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Banner/banner';\nimport { css } from '@patternfly/react-styles';\n\nexport interface BannerProps extends React.HTMLProps<HTMLDivElement> {\n  /** Content rendered inside the banner. */\n  children?: React.ReactNode;\n  /** Additional classes added to the banner. */\n  className?: string;\n  /** If set to true, the banner sticks to the top of its container */\n  isSticky?: boolean;\n  /** Text announced by screen readers to indicate the type of banner. This prop should only\n   * be passed in when the banner conveys status/severity.\n   */\n  screenReaderText?: string;\n  /** Variant styles for the banner. */\n  variant?: 'default' | 'info' | 'danger' | 'success' | 'warning';\n}\n\nexport const Banner: React.FunctionComponent<BannerProps> = ({\n  children,\n  className,\n  variant = 'default',\n  screenReaderText,\n  isSticky = false,\n  ...props\n}: BannerProps) => (\n  <div\n    className={css(\n      styles.banner,\n      styles.modifiers[variant as 'success' | 'danger' | 'warning' | 'info'],\n      isSticky && styles.modifiers.sticky,\n      className\n    )}\n    {...props}\n  >\n    {screenReaderText && <span className=\"pf-u-screen-reader\">{screenReaderText}</span>}\n    {children}\n  </div>\n);\nBanner.displayName = 'Banner';\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,MAAM,MAAM,uDAAuD;AAC1E,SAASC,GAAG,QAAQ,0BAA0B;AAiB9C,OAAO,IAAMC,MAAM,GAAyC,SAA/CA,MAAMA,CAA0CC,EAO/C,EAAI;MANhBC,QAAQ,GAIQD,EAEJ,CANZC,QAAQ;IACRC,SAAS,GAGOF,EAEJ,CALZE,SAAS;IAAAC,UAAA,GAGOH,EAEJ,CAJZI,OAAO;IAAPA,OAAO,GAAAD,UAAA,cAAG,SAAS,GAAAA,UAAA;IACnBE,gBAAgB,GACAL,EAEJ,CAHZK,gBAAgB;IAAAC,WAAA,GACAN,EAEJ,CAFZO,QAAQ;IAARA,QAAQ,GAAAD,WAAA,cAAG,KAAK,GAAAA,WAAA;IACbE,KAAK,GAAAC,MAAA,CAAAT,EAAA,EANmD,oEAO5D,CADS;EACS,OACjBJ,KAAA,CAAAc,aAAA,QAAAC,MAAA,CAAAC,MAAA;IACEV,SAAS,EAAEJ,GAAG,CACZD,MAAM,CAACgB,MAAM,EACbhB,MAAM,CAACiB,SAAS,CAACV,OAAoD,CAAC,EACtEG,QAAQ,IAAIV,MAAM,CAACiB,SAAS,CAACC,MAAM,EACnCb,SAAS;EACV,GACGM,KAAK,GAERH,gBAAgB,IAAIT,KAAA,CAAAc,aAAA;IAAMR,SAAS,EAAC;EAAoB,GAAEG,gBAAgB,CAAQ,EAClFJ,QAAQ,CACL;CACP;AACDF,MAAM,CAACiB,WAAW,GAAG,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}
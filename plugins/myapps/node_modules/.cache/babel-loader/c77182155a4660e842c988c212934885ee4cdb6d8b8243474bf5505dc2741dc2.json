{"ast":null,"code":"import { Kind } from \"../language/kinds.mjs\";\n/**\n * Returns an operation AST given a document AST and optionally an operation\n * name. If a name is not provided, an operation is only returned if only one is\n * provided in the document.\n */\n\nexport function getOperationAST(documentAST, operationName) {\n  var operation = null;\n  for (var _i2 = 0, _documentAST$definiti2 = documentAST.definitions; _i2 < _documentAST$definiti2.length; _i2++) {\n    var definition = _documentAST$definiti2[_i2];\n    if (definition.kind === Kind.OPERATION_DEFINITION) {\n      var _definition$name;\n      if (operationName == null) {\n        // If no operation name was provided, only return an Operation if there\n        // is one defined in the document. Upon encountering the second, return\n        // null.\n        if (operation) {\n          return null;\n        }\n        operation = definition;\n      } else if (((_definition$name = definition.name) === null || _definition$name === void 0 ? void 0 : _definition$name.value) === operationName) {\n        return definition;\n      }\n    }\n  }\n  return operation;\n}","map":{"version":3,"names":["Kind","getOperationAST","documentAST","operationName","operation","_i2","_documentAST$definiti2","definitions","length","definition","kind","OPERATION_DEFINITION","_definition$name","name","value"],"sources":["/data/stackhub-web/plugins/myapps/node_modules/graphql/utilities/getOperationAST.mjs"],"sourcesContent":["import { Kind } from \"../language/kinds.mjs\";\n/**\n * Returns an operation AST given a document AST and optionally an operation\n * name. If a name is not provided, an operation is only returned if only one is\n * provided in the document.\n */\n\nexport function getOperationAST(documentAST, operationName) {\n  var operation = null;\n\n  for (var _i2 = 0, _documentAST$definiti2 = documentAST.definitions; _i2 < _documentAST$definiti2.length; _i2++) {\n    var definition = _documentAST$definiti2[_i2];\n\n    if (definition.kind === Kind.OPERATION_DEFINITION) {\n      var _definition$name;\n\n      if (operationName == null) {\n        // If no operation name was provided, only return an Operation if there\n        // is one defined in the document. Upon encountering the second, return\n        // null.\n        if (operation) {\n          return null;\n        }\n\n        operation = definition;\n      } else if (((_definition$name = definition.name) === null || _definition$name === void 0 ? void 0 : _definition$name.value) === operationName) {\n        return definition;\n      }\n    }\n  }\n\n  return operation;\n}\n"],"mappings":"AAAA,SAASA,IAAI,QAAQ,uBAAuB;AAC5C;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASC,eAAeA,CAACC,WAAW,EAAEC,aAAa,EAAE;EAC1D,IAAIC,SAAS,GAAG,IAAI;EAEpB,KAAK,IAAIC,GAAG,GAAG,CAAC,EAAEC,sBAAsB,GAAGJ,WAAW,CAACK,WAAW,EAAEF,GAAG,GAAGC,sBAAsB,CAACE,MAAM,EAAEH,GAAG,EAAE,EAAE;IAC9G,IAAII,UAAU,GAAGH,sBAAsB,CAACD,GAAG,CAAC;IAE5C,IAAII,UAAU,CAACC,IAAI,KAAKV,IAAI,CAACW,oBAAoB,EAAE;MACjD,IAAIC,gBAAgB;MAEpB,IAAIT,aAAa,IAAI,IAAI,EAAE;QACzB;QACA;QACA;QACA,IAAIC,SAAS,EAAE;UACb,OAAO,IAAI;QACb;QAEAA,SAAS,GAAGK,UAAU;MACxB,CAAC,MAAM,IAAI,CAAC,CAACG,gBAAgB,GAAGH,UAAU,CAACI,IAAI,MAAM,IAAI,IAAID,gBAAgB,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,gBAAgB,CAACE,KAAK,MAAMX,aAAa,EAAE;QAC7I,OAAOM,UAAU;MACnB;IACF;EACF;EAEA,OAAOL,SAAS;AAClB"},"metadata":{},"sourceType":"module","externalDependencies":[]}
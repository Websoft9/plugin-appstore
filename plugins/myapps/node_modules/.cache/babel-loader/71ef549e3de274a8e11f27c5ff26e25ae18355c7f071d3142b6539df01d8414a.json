{"ast":null,"code":"export function getTypeByValue(value) {\n  var valueType = typeof value;\n  switch (valueType) {\n    case 'number':\n      if (Number.isNaN(value)) {\n        return 'NaN';\n      }\n      if (!Number.isFinite(value)) {\n        return 'Infinity';\n      }\n      if (value !== Math.floor(value)) {\n        return 'float';\n      }\n      return 'number';\n    case 'object':\n      if (value === null) {\n        return 'null';\n      }\n      return value.constructor.name;\n    default:\n      return valueType;\n  }\n}\n\n// IE 11 support\nfunction ponyfillIsInteger(x) {\n  // eslint-disable-next-line no-restricted-globals\n  return typeof x === 'number' && isFinite(x) && Math.floor(x) === x;\n}\nvar isInteger = Number.isInteger || ponyfillIsInteger;\nfunction requiredInteger(props, propName, componentName, location) {\n  var propValue = props[propName];\n  if (propValue == null || !isInteger(propValue)) {\n    var propType = getTypeByValue(propValue);\n    return new RangeError(\"Invalid \".concat(location, \" `\").concat(propName, \"` of type `\").concat(propType, \"` supplied to `\").concat(componentName, \"`, expected `integer`.\"));\n  }\n  return null;\n}\nfunction validator(props, propName) {\n  var propValue = props[propName];\n  if (propValue === undefined) {\n    return null;\n  }\n  for (var _len = arguments.length, other = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    other[_key - 2] = arguments[_key];\n  }\n  return requiredInteger.apply(void 0, [props, propName].concat(other));\n}\nfunction validatorNoop() {\n  return null;\n}\nvalidator.isRequired = requiredInteger;\nvalidatorNoop.isRequired = validatorNoop;\nexport default process.env.NODE_ENV === 'production' ? validatorNoop : validator;","map":{"version":3,"names":["getTypeByValue","value","valueType","Number","isNaN","isFinite","Math","floor","constructor","name","ponyfillIsInteger","x","isInteger","requiredInteger","props","propName","componentName","location","propValue","propType","RangeError","concat","validator","undefined","_len","arguments","length","other","Array","_key","apply","validatorNoop","isRequired","process","env","NODE_ENV"],"sources":["/data/stackhub-web/plugins/myapps/node_modules/@mui/utils/esm/integerPropType.js"],"sourcesContent":["export function getTypeByValue(value) {\n  const valueType = typeof value;\n  switch (valueType) {\n    case 'number':\n      if (Number.isNaN(value)) {\n        return 'NaN';\n      }\n      if (!Number.isFinite(value)) {\n        return 'Infinity';\n      }\n      if (value !== Math.floor(value)) {\n        return 'float';\n      }\n      return 'number';\n    case 'object':\n      if (value === null) {\n        return 'null';\n      }\n      return value.constructor.name;\n    default:\n      return valueType;\n  }\n}\n\n// IE 11 support\nfunction ponyfillIsInteger(x) {\n  // eslint-disable-next-line no-restricted-globals\n  return typeof x === 'number' && isFinite(x) && Math.floor(x) === x;\n}\nconst isInteger = Number.isInteger || ponyfillIsInteger;\nfunction requiredInteger(props, propName, componentName, location) {\n  const propValue = props[propName];\n  if (propValue == null || !isInteger(propValue)) {\n    const propType = getTypeByValue(propValue);\n    return new RangeError(`Invalid ${location} \\`${propName}\\` of type \\`${propType}\\` supplied to \\`${componentName}\\`, expected \\`integer\\`.`);\n  }\n  return null;\n}\nfunction validator(props, propName, ...other) {\n  const propValue = props[propName];\n  if (propValue === undefined) {\n    return null;\n  }\n  return requiredInteger(props, propName, ...other);\n}\nfunction validatorNoop() {\n  return null;\n}\nvalidator.isRequired = requiredInteger;\nvalidatorNoop.isRequired = validatorNoop;\nexport default process.env.NODE_ENV === 'production' ? validatorNoop : validator;"],"mappings":"AAAA,OAAO,SAASA,cAAcA,CAACC,KAAK,EAAE;EACpC,IAAMC,SAAS,GAAG,OAAOD,KAAK;EAC9B,QAAQC,SAAS;IACf,KAAK,QAAQ;MACX,IAAIC,MAAM,CAACC,KAAK,CAACH,KAAK,CAAC,EAAE;QACvB,OAAO,KAAK;MACd;MACA,IAAI,CAACE,MAAM,CAACE,QAAQ,CAACJ,KAAK,CAAC,EAAE;QAC3B,OAAO,UAAU;MACnB;MACA,IAAIA,KAAK,KAAKK,IAAI,CAACC,KAAK,CAACN,KAAK,CAAC,EAAE;QAC/B,OAAO,OAAO;MAChB;MACA,OAAO,QAAQ;IACjB,KAAK,QAAQ;MACX,IAAIA,KAAK,KAAK,IAAI,EAAE;QAClB,OAAO,MAAM;MACf;MACA,OAAOA,KAAK,CAACO,WAAW,CAACC,IAAI;IAC/B;MACE,OAAOP,SAAS;EACpB;AACF;;AAEA;AACA,SAASQ,iBAAiBA,CAACC,CAAC,EAAE;EAC5B;EACA,OAAO,OAAOA,CAAC,KAAK,QAAQ,IAAIN,QAAQ,CAACM,CAAC,CAAC,IAAIL,IAAI,CAACC,KAAK,CAACI,CAAC,CAAC,KAAKA,CAAC;AACpE;AACA,IAAMC,SAAS,GAAGT,MAAM,CAACS,SAAS,IAAIF,iBAAiB;AACvD,SAASG,eAAeA,CAACC,KAAK,EAAEC,QAAQ,EAAEC,aAAa,EAAEC,QAAQ,EAAE;EACjE,IAAMC,SAAS,GAAGJ,KAAK,CAACC,QAAQ,CAAC;EACjC,IAAIG,SAAS,IAAI,IAAI,IAAI,CAACN,SAAS,CAACM,SAAS,CAAC,EAAE;IAC9C,IAAMC,QAAQ,GAAGnB,cAAc,CAACkB,SAAS,CAAC;IAC1C,OAAO,IAAIE,UAAU,YAAAC,MAAA,CAAYJ,QAAQ,QAAAI,MAAA,CAAMN,QAAQ,iBAAAM,MAAA,CAAgBF,QAAQ,qBAAAE,MAAA,CAAoBL,aAAa,2BAA2B,CAAC;EAC9I;EACA,OAAO,IAAI;AACb;AACA,SAASM,SAASA,CAACR,KAAK,EAAEC,QAAQ,EAAY;EAC5C,IAAMG,SAAS,GAAGJ,KAAK,CAACC,QAAQ,CAAC;EACjC,IAAIG,SAAS,KAAKK,SAAS,EAAE;IAC3B,OAAO,IAAI;EACb;EAAC,SAAAC,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAJoCC,KAAK,OAAAC,KAAA,CAAAJ,IAAA,OAAAA,IAAA,WAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;IAALF,KAAK,CAAAE,IAAA,QAAAJ,SAAA,CAAAI,IAAA;EAAA;EAK1C,OAAOhB,eAAe,CAAAiB,KAAA,UAAChB,KAAK,EAAEC,QAAQ,EAAAM,MAAA,CAAKM,KAAK,EAAC;AACnD;AACA,SAASI,aAAaA,CAAA,EAAG;EACvB,OAAO,IAAI;AACb;AACAT,SAAS,CAACU,UAAU,GAAGnB,eAAe;AACtCkB,aAAa,CAACC,UAAU,GAAGD,aAAa;AACxC,eAAeE,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAGJ,aAAa,GAAGT,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}
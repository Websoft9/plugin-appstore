{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Content/content';\nimport { css } from '@patternfly/react-styles';\nexport var TextListVariants;\n(function (TextListVariants) {\n  TextListVariants[\"ul\"] = \"ul\";\n  TextListVariants[\"ol\"] = \"ol\";\n  TextListVariants[\"dl\"] = \"dl\";\n})(TextListVariants || (TextListVariants = {}));\nexport var TextList = function TextList(_a) {\n  var _a$children = _a.children,\n    children = _a$children === void 0 ? null : _a$children,\n    _a$className = _a.className,\n    className = _a$className === void 0 ? '' : _a$className,\n    _a$component = _a.component,\n    component = _a$component === void 0 ? TextListVariants.ul : _a$component,\n    _a$isPlain = _a.isPlain,\n    isPlain = _a$isPlain === void 0 ? false : _a$isPlain,\n    props = __rest(_a, [\"children\", \"className\", \"component\", \"isPlain\"]);\n  var Component = component;\n  return React.createElement(Component, Object.assign({}, props, {\n    className: css(isPlain && styles.modifiers.plain, className)\n  }), children);\n};\nTextList.displayName = 'TextList';","map":{"version":3,"names":["React","styles","css","TextListVariants","TextList","_a","children","_a$children","_a$className","className","_a$component","component","ul","_a$isPlain","isPlain","props","__rest","Component","createElement","Object","assign","modifiers","plain","displayName"],"sources":["/data/stackhub-web/plugins/myapps/node_modules/@patternfly/react-core/src/components/Text/TextList.tsx"],"sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Content/content';\nimport { css } from '@patternfly/react-styles';\n\nexport enum TextListVariants {\n  ul = 'ul',\n  ol = 'ol',\n  dl = 'dl'\n}\n\nexport interface TextListProps extends React.HTMLProps<HTMLElement> {\n  /** Content rendered within the TextList */\n  children?: React.ReactNode;\n  /** Additional classes added to the TextList */\n  className?: string;\n  /** The text list component */\n  component?: 'ul' | 'ol' | 'dl';\n  /** Modifies the list to include plain styling */\n  isPlain?: boolean;\n}\n\nexport const TextList: React.FunctionComponent<TextListProps> = ({\n  children = null,\n  className = '',\n  component = TextListVariants.ul,\n  isPlain = false,\n  ...props\n}: TextListProps) => {\n  const Component: any = component;\n\n  return (\n    <Component {...props} className={css(isPlain && styles.modifiers.plain, className)}>\n      {children}\n    </Component>\n  );\n};\nTextList.displayName = 'TextList';\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,MAAM,MAAM,yDAAyD;AAC5E,SAASC,GAAG,QAAQ,0BAA0B;AAE9C,WAAYC,gBAIX;AAJD,WAAYA,gBAAgB;EAC1BA,gBAAA,aAAS;EACTA,gBAAA,aAAS;EACTA,gBAAA,aAAS;AACX,CAAC,EAJWA,gBAAgB,KAAhBA,gBAAgB;AAiB5B,OAAO,IAAMC,QAAQ,GAA2C,SAAnDA,QAAQA,CAA4CC,EAMjD,EAAI;oBAFHA,EAED,CALdC,QAAQ;IAARA,QAAQ,GAAAC,WAAA,cAAG,IAAI,GAAAA,WAAA;IAAAC,YAAA,GAGAH,EAED,CAJdI,SAAS;IAATA,SAAS,GAAAD,YAAA,cAAG,EAAE,GAAAA,YAAA;IAAAE,YAAA,GAECL,EAED,CAHdM,SAAS;IAATA,SAAS,GAAAD,YAAA,cAAGP,gBAAgB,CAACS,EAAE,GAAAF,YAAA;IAAAG,UAAA,GAChBR,EAED,CAFdS,OAAO;IAAPA,OAAO,GAAAD,UAAA,cAAG,KAAK,GAAAA,UAAA;IACZE,KAAK,GAAAC,MAAA,CAAAX,EAAA,EALuD,iDAMhE,CADS;EAER,IAAMY,SAAS,GAAQN,SAAS;EAEhC,OACEX,KAAA,CAAAkB,aAAA,CAACD,SAAS,EAAAE,MAAA,CAAAC,MAAA,KAAKL,KAAK;IAAEN,SAAS,EAAEP,GAAG,CAACY,OAAO,IAAIb,MAAM,CAACoB,SAAS,CAACC,KAAK,EAAEb,SAAS;EAAC,IAC/EH,QAAQ,CACC;AAEhB,CAAC;AACDF,QAAQ,CAACmB,WAAW,GAAG,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}
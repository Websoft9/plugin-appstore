{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/DataList/data-list';\nexport var DataListCheck = function DataListCheck(_a) {\n  var _a$className = _a.className,\n    className = _a$className === void 0 ? '' : _a$className,\n    _a$onChange = _a.onChange,\n    _onChange = _a$onChange === void 0 ? function (checked, event) {} : _a$onChange,\n    _a$isValid = _a.isValid,\n    isValid = _a$isValid === void 0 ? true : _a$isValid,\n    _a$isDisabled = _a.isDisabled,\n    isDisabled = _a$isDisabled === void 0 ? false : _a$isDisabled,\n    _a$isChecked = _a.isChecked,\n    isChecked = _a$isChecked === void 0 ? false : _a$isChecked,\n    _a$checked = _a.checked,\n    checked = _a$checked === void 0 ? false : _a$checked,\n    defaultChecked = _a.defaultChecked,\n    _a$otherControls = _a.otherControls,\n    otherControls = _a$otherControls === void 0 ? false : _a$otherControls,\n    props = __rest(_a, [\"className\", \"onChange\", \"isValid\", \"isDisabled\", \"isChecked\", \"checked\", \"defaultChecked\", \"otherControls\"]);\n  var check = React.createElement(\"div\", {\n    className: css(styles.dataListCheck)\n  }, React.createElement(\"input\", Object.assign({}, props, {\n    type: \"checkbox\",\n    onChange: function onChange(event) {\n      return _onChange(event.currentTarget.checked, event);\n    },\n    \"aria-invalid\": !isValid,\n    disabled: isDisabled\n  }, [true, false].includes(defaultChecked) && {\n    defaultChecked: defaultChecked\n  }, ![true, false].includes(defaultChecked) && {\n    checked: isChecked || checked\n  })));\n  return React.createElement(React.Fragment, null, !otherControls && React.createElement(\"div\", {\n    className: css(styles.dataListItemControl, className)\n  }, check), otherControls && check);\n};\nDataListCheck.displayName = 'DataListCheck';","map":{"version":3,"names":["React","css","styles","DataListCheck","_a","className","_a$className","_a$onChange","onChange","checked","event","_a$isValid","isValid","_a$isDisabled","isDisabled","_a$isChecked","isChecked","_a$checked","defaultChecked","_a$otherControls","otherControls","props","__rest","check","createElement","dataListCheck","Object","assign","type","currentTarget","disabled","includes","Fragment","dataListItemControl","displayName"],"sources":["/data/stackhub-web/plugins/myapps/node_modules/@patternfly/react-core/src/components/DataList/DataListCheck.tsx"],"sourcesContent":["import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/DataList/data-list';\n\nexport interface DataListCheckProps extends Omit<React.HTMLProps<HTMLInputElement>, 'onChange' | 'checked'> {\n  /** Additional classes added to the DataList item checkbox */\n  className?: string;\n  /** Flag to show if the DataList checkbox selection is valid or invalid */\n  isValid?: boolean;\n  /** Flag to show if the DataList checkbox is disabled */\n  isDisabled?: boolean;\n  /** Flag to show if the DataList checkbox is checked when it is controlled by React state. Both isChecked and checked are valid,\n   * but only use one.\n   * To make the DataList checkbox uncontrolled, instead use the defaultChecked prop, but do not use both.\n   */\n  isChecked?: boolean;\n  /** Flag to show if the DataList checkbox is checked when it is controlled by React state. Both isChecked and checked are valid,\n   * but only use one.\n   * To make the DataList checkbox uncontrolled, instead use the defaultChecked prop, but do not use both.\n   */\n  checked?: boolean;\n  /** Flag to set default value of DataList checkbox when it is uncontrolled by React state.\n   * To make the DataList checkbox controlled, instead use the isChecked prop, but do not use both.\n   */\n  defaultChecked?: boolean;\n  /** A callback for when the DataList checkbox selection changes */\n  onChange?: (checked: boolean, event: React.FormEvent<HTMLInputElement>) => void;\n  /** Aria-labelledby of the DataList checkbox */\n  'aria-labelledby': string;\n  /** Flag to indicate if other controls are used in the DataListItem */\n  otherControls?: boolean;\n}\n\nexport const DataListCheck: React.FunctionComponent<DataListCheckProps> = ({\n  className = '',\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  onChange = (checked: boolean, event: React.FormEvent<HTMLInputElement>) => {},\n  isValid = true,\n  isDisabled = false,\n  isChecked = false,\n  checked = false,\n  defaultChecked,\n  otherControls = false,\n  ...props\n}: DataListCheckProps) => {\n  const check = (\n    <div className={css(styles.dataListCheck)}>\n      <input\n        {...props}\n        type=\"checkbox\"\n        onChange={event => onChange(event.currentTarget.checked, event)}\n        aria-invalid={!isValid}\n        disabled={isDisabled}\n        {...([true, false].includes(defaultChecked) && { defaultChecked })}\n        {...(![true, false].includes(defaultChecked) && { checked: isChecked || checked })}\n      />\n    </div>\n  );\n  return (\n    <React.Fragment>\n      {!otherControls && <div className={css(styles.dataListItemControl, className)}>{check}</div>}\n      {otherControls && check}\n    </React.Fragment>\n  );\n};\nDataListCheck.displayName = 'DataListCheck';\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,GAAG,QAAQ,0BAA0B;AAC9C,OAAOC,MAAM,MAAM,4DAA4D;AA+B/E,OAAO,IAAMC,aAAa,GAAgD,SAA7DA,aAAaA,CAAiDC,EAWtD,EAAI;qBAFFA,EAEF,CAVnBC,SAAS;IAATA,SAAS,GAAAC,YAAA,cAAG,EAAE,GAAAA,YAAA;IAAAC,WAAA,GAQOH,EAEF,CARnBI,QAAQ;IAARA,SAAQ,GAAAD,WAAA,cAAG,UAACE,OAAgB,EAAEC,KAAwC,EAAI,CAAE,CAAC,GAAAH,WAAA;IAAAI,UAAA,GAMxDP,EAEF,CAPnBQ,OAAO;IAAPA,OAAO,GAAAD,UAAA,cAAG,IAAI,GAAAA,UAAA;IAAAE,aAAA,GAKOT,EAEF,CANnBU,UAAU;IAAVA,UAAU,GAAAD,aAAA,cAAG,KAAK,GAAAA,aAAA;IAAAE,YAAA,GAIGX,EAEF,CALnBY,SAAS;IAATA,SAAS,GAAAD,YAAA,cAAG,KAAK,GAAAA,YAAA;IAAAE,UAAA,GAGIb,EAEF,CAJnBK,OAAO;IAAPA,OAAO,GAAAQ,UAAA,cAAG,KAAK,GAAAA,UAAA;IACfC,cAAc,GACOd,EAEF,CAHnBc,cAAc;IAAAC,gBAAA,GACOf,EAEF,CAFnBgB,aAAa;IAAbA,aAAa,GAAAD,gBAAA,cAAG,KAAK,GAAAA,gBAAA;IAClBE,KAAK,GAAAC,MAAA,CAAAlB,EAAA,EAViE,6GAW1E,CADS;EAER,IAAMmB,KAAK,GACTvB,KAAA,CAAAwB,aAAA;IAAKnB,SAAS,EAAEJ,GAAG,CAACC,MAAM,CAACuB,aAAa;EAAC,GACvCzB,KAAA,CAAAwB,aAAA,UAAAE,MAAA,CAAAC,MAAA,KACMN,KAAK;IACTO,IAAI,EAAC,UAAU;IACfpB,QAAQ,EAAE,SAAAA,SAAAE,KAAK;MAAA,OAAIF,SAAQ,CAACE,KAAK,CAACmB,aAAa,CAACpB,OAAO,EAAEC,KAAK,CAAC;IAAA;IAAA,gBACjD,CAACE,OAAO;IACtBkB,QAAQ,EAAEhB;EAAU,GACf,CAAC,IAAI,EAAE,KAAK,CAAC,CAACiB,QAAQ,CAACb,cAAc,CAAC,IAAI;IAAEA,cAAc,EAAdA;EAAc,CAAE,EAC5D,CAAC,CAAC,IAAI,EAAE,KAAK,CAAC,CAACa,QAAQ,CAACb,cAAc,CAAC,IAAI;IAAET,OAAO,EAAEO,SAAS,IAAIP;EAAO,CAAG,EAClF,CAEL;EACD,OACET,KAAA,CAAAwB,aAAA,CAACxB,KAAK,CAACgC,QAAQ,QACZ,CAACZ,aAAa,IAAIpB,KAAA,CAAAwB,aAAA;IAAKnB,SAAS,EAAEJ,GAAG,CAACC,MAAM,CAAC+B,mBAAmB,EAAE5B,SAAS;EAAC,GAAGkB,KAAK,CAAO,EAC3FH,aAAa,IAAIG,KAAK,CACR;AAErB,CAAC;AACDpB,aAAa,CAAC+B,WAAW,GAAG,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}
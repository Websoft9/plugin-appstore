{"ast":null,"code":"import _slicedToArray from \"/data/stackhub-web/plugins/myapps/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _defineProperty from \"/data/stackhub-web/plugins/myapps/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nvar _styled;\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"action\", \"centerRipple\", \"children\", \"className\", \"component\", \"disabled\", \"disableRipple\", \"disableTouchRipple\", \"focusRipple\", \"focusVisibleClassName\", \"LinkComponent\", \"onBlur\", \"onClick\", \"onContextMenu\", \"onDragLeave\", \"onFocus\", \"onFocusVisible\", \"onKeyDown\", \"onKeyUp\", \"onMouseDown\", \"onMouseLeave\", \"onMouseUp\", \"onTouchEnd\", \"onTouchMove\", \"onTouchStart\", \"tabIndex\", \"TouchRippleProps\", \"touchRippleRef\", \"type\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { elementTypeAcceptingRef, refType } from '@mui/utils';\nimport composeClasses from '@mui/base/composeClasses';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport useForkRef from '../utils/useForkRef';\nimport useEventCallback from '../utils/useEventCallback';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport TouchRipple from './TouchRipple';\nimport buttonBaseClasses, { getButtonBaseUtilityClass } from './buttonBaseClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar useUtilityClasses = function useUtilityClasses(ownerState) {\n  var disabled = ownerState.disabled,\n    focusVisible = ownerState.focusVisible,\n    focusVisibleClassName = ownerState.focusVisibleClassName,\n    classes = ownerState.classes;\n  var slots = {\n    root: ['root', disabled && 'disabled', focusVisible && 'focusVisible']\n  };\n  var composedClasses = composeClasses(slots, getButtonBaseUtilityClass, classes);\n  if (focusVisible && focusVisibleClassName) {\n    composedClasses.root += \" \".concat(focusVisibleClassName);\n  }\n  return composedClasses;\n};\nexport var ButtonBaseRoot = styled('button', {\n  name: 'MuiButtonBase',\n  slot: 'Root',\n  overridesResolver: function overridesResolver(props, styles) {\n    return styles.root;\n  }\n})((_styled = {\n  display: 'inline-flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  position: 'relative',\n  boxSizing: 'border-box',\n  WebkitTapHighlightColor: 'transparent',\n  backgroundColor: 'transparent',\n  // Reset default value\n  // We disable the focus ring for mouse, touch and keyboard users.\n  outline: 0,\n  border: 0,\n  margin: 0,\n  // Remove the margin in Safari\n  borderRadius: 0,\n  padding: 0,\n  // Remove the padding in Firefox\n  cursor: 'pointer',\n  userSelect: 'none',\n  verticalAlign: 'middle',\n  MozAppearance: 'none',\n  // Reset\n  WebkitAppearance: 'none',\n  // Reset\n  textDecoration: 'none',\n  // So we take precedent over the style of a native <a /> element.\n  color: 'inherit',\n  '&::-moz-focus-inner': {\n    borderStyle: 'none' // Remove Firefox dotted outline.\n  }\n}, _defineProperty(_styled, \"&.\".concat(buttonBaseClasses.disabled), {\n  pointerEvents: 'none',\n  // Disable link interactions\n  cursor: 'default'\n}), _defineProperty(_styled, '@media print', {\n  colorAdjust: 'exact'\n}), _styled));\n\n/**\n * `ButtonBase` contains as few styles as possible.\n * It aims to be a simple building block for creating a button.\n * It contains a load of style reset and some focus/ripple logic.\n */\nvar ButtonBase = /*#__PURE__*/React.forwardRef(function ButtonBase(inProps, ref) {\n  var props = useThemeProps({\n    props: inProps,\n    name: 'MuiButtonBase'\n  });\n  var action = props.action,\n    _props$centerRipple = props.centerRipple,\n    centerRipple = _props$centerRipple === void 0 ? false : _props$centerRipple,\n    children = props.children,\n    className = props.className,\n    _props$component = props.component,\n    component = _props$component === void 0 ? 'button' : _props$component,\n    _props$disabled = props.disabled,\n    disabled = _props$disabled === void 0 ? false : _props$disabled,\n    _props$disableRipple = props.disableRipple,\n    disableRipple = _props$disableRipple === void 0 ? false : _props$disableRipple,\n    _props$disableTouchRi = props.disableTouchRipple,\n    disableTouchRipple = _props$disableTouchRi === void 0 ? false : _props$disableTouchRi,\n    _props$focusRipple = props.focusRipple,\n    focusRipple = _props$focusRipple === void 0 ? false : _props$focusRipple,\n    _props$LinkComponent = props.LinkComponent,\n    LinkComponent = _props$LinkComponent === void 0 ? 'a' : _props$LinkComponent,\n    onBlur = props.onBlur,\n    onClick = props.onClick,\n    onContextMenu = props.onContextMenu,\n    onDragLeave = props.onDragLeave,\n    onFocus = props.onFocus,\n    onFocusVisible = props.onFocusVisible,\n    onKeyDown = props.onKeyDown,\n    onKeyUp = props.onKeyUp,\n    onMouseDown = props.onMouseDown,\n    onMouseLeave = props.onMouseLeave,\n    onMouseUp = props.onMouseUp,\n    onTouchEnd = props.onTouchEnd,\n    onTouchMove = props.onTouchMove,\n    onTouchStart = props.onTouchStart,\n    _props$tabIndex = props.tabIndex,\n    tabIndex = _props$tabIndex === void 0 ? 0 : _props$tabIndex,\n    TouchRippleProps = props.TouchRippleProps,\n    touchRippleRef = props.touchRippleRef,\n    type = props.type,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  var buttonRef = React.useRef(null);\n  var rippleRef = React.useRef(null);\n  var handleRippleRef = useForkRef(rippleRef, touchRippleRef);\n  var _useIsFocusVisible = useIsFocusVisible(),\n    isFocusVisibleRef = _useIsFocusVisible.isFocusVisibleRef,\n    handleFocusVisible = _useIsFocusVisible.onFocus,\n    handleBlurVisible = _useIsFocusVisible.onBlur,\n    focusVisibleRef = _useIsFocusVisible.ref;\n  var _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    focusVisible = _React$useState2[0],\n    setFocusVisible = _React$useState2[1];\n  if (disabled && focusVisible) {\n    setFocusVisible(false);\n  }\n  React.useImperativeHandle(action, function () {\n    return {\n      focusVisible: function focusVisible() {\n        setFocusVisible(true);\n        buttonRef.current.focus();\n      }\n    };\n  }, []);\n  var _React$useState3 = React.useState(false),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    mountedState = _React$useState4[0],\n    setMountedState = _React$useState4[1];\n  React.useEffect(function () {\n    setMountedState(true);\n  }, []);\n  var enableTouchRipple = mountedState && !disableRipple && !disabled;\n  React.useEffect(function () {\n    if (focusVisible && focusRipple && !disableRipple && mountedState) {\n      rippleRef.current.pulsate();\n    }\n  }, [disableRipple, focusRipple, focusVisible, mountedState]);\n  function useRippleHandler(rippleAction, eventCallback) {\n    var skipRippleAction = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : disableTouchRipple;\n    return useEventCallback(function (event) {\n      if (eventCallback) {\n        eventCallback(event);\n      }\n      var ignore = skipRippleAction;\n      if (!ignore && rippleRef.current) {\n        rippleRef.current[rippleAction](event);\n      }\n      return true;\n    });\n  }\n  var handleMouseDown = useRippleHandler('start', onMouseDown);\n  var handleContextMenu = useRippleHandler('stop', onContextMenu);\n  var handleDragLeave = useRippleHandler('stop', onDragLeave);\n  var handleMouseUp = useRippleHandler('stop', onMouseUp);\n  var handleMouseLeave = useRippleHandler('stop', function (event) {\n    if (focusVisible) {\n      event.preventDefault();\n    }\n    if (onMouseLeave) {\n      onMouseLeave(event);\n    }\n  });\n  var handleTouchStart = useRippleHandler('start', onTouchStart);\n  var handleTouchEnd = useRippleHandler('stop', onTouchEnd);\n  var handleTouchMove = useRippleHandler('stop', onTouchMove);\n  var handleBlur = useRippleHandler('stop', function (event) {\n    handleBlurVisible(event);\n    if (isFocusVisibleRef.current === false) {\n      setFocusVisible(false);\n    }\n    if (onBlur) {\n      onBlur(event);\n    }\n  }, false);\n  var handleFocus = useEventCallback(function (event) {\n    // Fix for https://github.com/facebook/react/issues/7769\n    if (!buttonRef.current) {\n      buttonRef.current = event.currentTarget;\n    }\n    handleFocusVisible(event);\n    if (isFocusVisibleRef.current === true) {\n      setFocusVisible(true);\n      if (onFocusVisible) {\n        onFocusVisible(event);\n      }\n    }\n    if (onFocus) {\n      onFocus(event);\n    }\n  });\n  var isNonNativeButton = function isNonNativeButton() {\n    var button = buttonRef.current;\n    return component && component !== 'button' && !(button.tagName === 'A' && button.href);\n  };\n\n  /**\n   * IE11 shim for https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/repeat\n   */\n  var keydownRef = React.useRef(false);\n  var handleKeyDown = useEventCallback(function (event) {\n    // Check if key is already down to avoid repeats being counted as multiple activations\n    if (focusRipple && !keydownRef.current && focusVisible && rippleRef.current && event.key === ' ') {\n      keydownRef.current = true;\n      rippleRef.current.stop(event, function () {\n        rippleRef.current.start(event);\n      });\n    }\n    if (event.target === event.currentTarget && isNonNativeButton() && event.key === ' ') {\n      event.preventDefault();\n    }\n    if (onKeyDown) {\n      onKeyDown(event);\n    }\n\n    // Keyboard accessibility for non interactive elements\n    if (event.target === event.currentTarget && isNonNativeButton() && event.key === 'Enter' && !disabled) {\n      event.preventDefault();\n      if (onClick) {\n        onClick(event);\n      }\n    }\n  });\n  var handleKeyUp = useEventCallback(function (event) {\n    // calling preventDefault in keyUp on a <button> will not dispatch a click event if Space is pressed\n    // https://codesandbox.io/s/button-keyup-preventdefault-dn7f0\n    if (focusRipple && event.key === ' ' && rippleRef.current && focusVisible && !event.defaultPrevented) {\n      keydownRef.current = false;\n      rippleRef.current.stop(event, function () {\n        rippleRef.current.pulsate(event);\n      });\n    }\n    if (onKeyUp) {\n      onKeyUp(event);\n    }\n\n    // Keyboard accessibility for non interactive elements\n    if (onClick && event.target === event.currentTarget && isNonNativeButton() && event.key === ' ' && !event.defaultPrevented) {\n      onClick(event);\n    }\n  });\n  var ComponentProp = component;\n  if (ComponentProp === 'button' && (other.href || other.to)) {\n    ComponentProp = LinkComponent;\n  }\n  var buttonProps = {};\n  if (ComponentProp === 'button') {\n    buttonProps.type = type === undefined ? 'button' : type;\n    buttonProps.disabled = disabled;\n  } else {\n    if (!other.href && !other.to) {\n      buttonProps.role = 'button';\n    }\n    if (disabled) {\n      buttonProps['aria-disabled'] = disabled;\n    }\n  }\n  var handleRef = useForkRef(ref, focusVisibleRef, buttonRef);\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(function () {\n      if (enableTouchRipple && !rippleRef.current) {\n        console.error(['MUI: The `component` prop provided to ButtonBase is invalid.', 'Please make sure the children prop is rendered in this custom component.'].join('\\n'));\n      }\n    }, [enableTouchRipple]);\n  }\n  var ownerState = _extends({}, props, {\n    centerRipple: centerRipple,\n    component: component,\n    disabled: disabled,\n    disableRipple: disableRipple,\n    disableTouchRipple: disableTouchRipple,\n    focusRipple: focusRipple,\n    tabIndex: tabIndex,\n    focusVisible: focusVisible\n  });\n  var classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(ButtonBaseRoot, _extends({\n    as: ComponentProp,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    onBlur: handleBlur,\n    onClick: onClick,\n    onContextMenu: handleContextMenu,\n    onFocus: handleFocus,\n    onKeyDown: handleKeyDown,\n    onKeyUp: handleKeyUp,\n    onMouseDown: handleMouseDown,\n    onMouseLeave: handleMouseLeave,\n    onMouseUp: handleMouseUp,\n    onDragLeave: handleDragLeave,\n    onTouchEnd: handleTouchEnd,\n    onTouchMove: handleTouchMove,\n    onTouchStart: handleTouchStart,\n    ref: handleRef,\n    tabIndex: disabled ? -1 : tabIndex,\n    type: type\n  }, buttonProps, other, {\n    children: [children, enableTouchRipple ? /*#__PURE__*/\n    /* TouchRipple is only needed client-side, x2 boost on the server. */\n    _jsx(TouchRipple, _extends({\n      ref: handleRippleRef,\n      center: centerRipple\n    }, TouchRippleProps)) : null]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? ButtonBase.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * A ref for imperative actions.\n   * It currently only supports `focusVisible()` action.\n   */\n  action: refType,\n  /**\n   * If `true`, the ripples are centered.\n   * They won't start at the cursor interaction position.\n   * @default false\n   */\n  centerRipple: PropTypes.bool,\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: elementTypeAcceptingRef,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the ripple effect is disabled.\n   *\n   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\n   * to highlight the element by applying separate styles with the `.Mui-focusVisible` class.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n  /**\n   * If `true`, the touch ripple effect is disabled.\n   * @default false\n   */\n  disableTouchRipple: PropTypes.bool,\n  /**\n   * If `true`, the base button will have a keyboard focus ripple.\n   * @default false\n   */\n  focusRipple: PropTypes.bool,\n  /**\n   * This prop can help identify which element has keyboard focus.\n   * The class name will be applied when the element gains the focus through keyboard interaction.\n   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).\n   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).\n   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components\n   * if needed.\n   */\n  focusVisibleClassName: PropTypes.string,\n  /**\n   * @ignore\n   */\n  href: PropTypes /* @typescript-to-proptypes-ignore */.any,\n  /**\n   * The component used to render a link when the `href` prop is provided.\n   * @default 'a'\n   */\n  LinkComponent: PropTypes.elementType,\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onContextMenu: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onDragLeave: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n  /**\n   * Callback fired when the component is focused with a keyboard.\n   * We trigger a `onFocus` callback too.\n   */\n  onFocusVisible: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onKeyDown: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onKeyUp: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onMouseDown: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onMouseLeave: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onMouseUp: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onTouchEnd: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onTouchMove: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onTouchStart: PropTypes.func,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * @default 0\n   */\n  tabIndex: PropTypes.number,\n  /**\n   * Props applied to the `TouchRipple` element.\n   */\n  TouchRippleProps: PropTypes.object,\n  /**\n   * A ref that points to the `TouchRipple` element.\n   */\n  touchRippleRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.shape({\n      pulsate: PropTypes.func.isRequired,\n      start: PropTypes.func.isRequired,\n      stop: PropTypes.func.isRequired\n    })\n  })]),\n  /**\n   * @ignore\n   */\n  type: PropTypes.oneOfType([PropTypes.oneOf(['button', 'reset', 'submit']), PropTypes.string])\n} : void 0;\nexport default ButtonBase;","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","PropTypes","clsx","elementTypeAcceptingRef","refType","composeClasses","styled","useThemeProps","useForkRef","useEventCallback","useIsFocusVisible","TouchRipple","buttonBaseClasses","getButtonBaseUtilityClass","jsx","_jsx","jsxs","_jsxs","useUtilityClasses","ownerState","disabled","focusVisible","focusVisibleClassName","classes","slots","root","composedClasses","concat","ButtonBaseRoot","name","slot","overridesResolver","props","styles","_styled","display","alignItems","justifyContent","position","boxSizing","WebkitTapHighlightColor","backgroundColor","outline","border","margin","borderRadius","padding","cursor","userSelect","verticalAlign","MozAppearance","WebkitAppearance","textDecoration","color","borderStyle","_defineProperty","pointerEvents","colorAdjust","ButtonBase","forwardRef","inProps","ref","action","_props$centerRipple","centerRipple","children","className","_props$component","component","_props$disabled","_props$disableRipple","disableRipple","_props$disableTouchRi","disableTouchRipple","_props$focusRipple","focusRipple","_props$LinkComponent","LinkComponent","onBlur","onClick","onContextMenu","onDragLeave","onFocus","onFocusVisible","onKeyDown","onKeyUp","onMouseDown","onMouseLeave","onMouseUp","onTouchEnd","onTouchMove","onTouchStart","_props$tabIndex","tabIndex","TouchRippleProps","touchRippleRef","type","other","buttonRef","useRef","rippleRef","handleRippleRef","_useIsFocusVisible","isFocusVisibleRef","handleFocusVisible","handleBlurVisible","focusVisibleRef","_React$useState","useState","_React$useState2","_slicedToArray","setFocusVisible","useImperativeHandle","current","focus","_React$useState3","_React$useState4","mountedState","setMountedState","useEffect","enableTouchRipple","pulsate","useRippleHandler","rippleAction","eventCallback","skipRippleAction","arguments","length","undefined","event","ignore","handleMouseDown","handleContextMenu","handleDragLeave","handleMouseUp","handleMouseLeave","preventDefault","handleTouchStart","handleTouchEnd","handleTouchMove","handleBlur","handleFocus","currentTarget","isNonNativeButton","button","tagName","href","keydownRef","handleKeyDown","key","stop","start","target","handleKeyUp","defaultPrevented","ComponentProp","to","buttonProps","role","handleRef","process","env","NODE_ENV","console","error","join","as","center","propTypes","bool","node","object","string","any","elementType","func","sx","oneOfType","arrayOf","number","shape","isRequired","oneOf"],"sources":["/data/stackhub-web/plugins/myapps/node_modules/@mui/material/ButtonBase/ButtonBase.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"action\", \"centerRipple\", \"children\", \"className\", \"component\", \"disabled\", \"disableRipple\", \"disableTouchRipple\", \"focusRipple\", \"focusVisibleClassName\", \"LinkComponent\", \"onBlur\", \"onClick\", \"onContextMenu\", \"onDragLeave\", \"onFocus\", \"onFocusVisible\", \"onKeyDown\", \"onKeyUp\", \"onMouseDown\", \"onMouseLeave\", \"onMouseUp\", \"onTouchEnd\", \"onTouchMove\", \"onTouchStart\", \"tabIndex\", \"TouchRippleProps\", \"touchRippleRef\", \"type\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { elementTypeAcceptingRef, refType } from '@mui/utils';\nimport composeClasses from '@mui/base/composeClasses';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport useForkRef from '../utils/useForkRef';\nimport useEventCallback from '../utils/useEventCallback';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport TouchRipple from './TouchRipple';\nimport buttonBaseClasses, { getButtonBaseUtilityClass } from './buttonBaseClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    disabled,\n    focusVisible,\n    focusVisibleClassName,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', disabled && 'disabled', focusVisible && 'focusVisible']\n  };\n  const composedClasses = composeClasses(slots, getButtonBaseUtilityClass, classes);\n  if (focusVisible && focusVisibleClassName) {\n    composedClasses.root += ` ${focusVisibleClassName}`;\n  }\n  return composedClasses;\n};\nexport const ButtonBaseRoot = styled('button', {\n  name: 'MuiButtonBase',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  display: 'inline-flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  position: 'relative',\n  boxSizing: 'border-box',\n  WebkitTapHighlightColor: 'transparent',\n  backgroundColor: 'transparent',\n  // Reset default value\n  // We disable the focus ring for mouse, touch and keyboard users.\n  outline: 0,\n  border: 0,\n  margin: 0,\n  // Remove the margin in Safari\n  borderRadius: 0,\n  padding: 0,\n  // Remove the padding in Firefox\n  cursor: 'pointer',\n  userSelect: 'none',\n  verticalAlign: 'middle',\n  MozAppearance: 'none',\n  // Reset\n  WebkitAppearance: 'none',\n  // Reset\n  textDecoration: 'none',\n  // So we take precedent over the style of a native <a /> element.\n  color: 'inherit',\n  '&::-moz-focus-inner': {\n    borderStyle: 'none' // Remove Firefox dotted outline.\n  },\n\n  [`&.${buttonBaseClasses.disabled}`]: {\n    pointerEvents: 'none',\n    // Disable link interactions\n    cursor: 'default'\n  },\n  '@media print': {\n    colorAdjust: 'exact'\n  }\n});\n\n/**\n * `ButtonBase` contains as few styles as possible.\n * It aims to be a simple building block for creating a button.\n * It contains a load of style reset and some focus/ripple logic.\n */\nconst ButtonBase = /*#__PURE__*/React.forwardRef(function ButtonBase(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiButtonBase'\n  });\n  const {\n      action,\n      centerRipple = false,\n      children,\n      className,\n      component = 'button',\n      disabled = false,\n      disableRipple = false,\n      disableTouchRipple = false,\n      focusRipple = false,\n      LinkComponent = 'a',\n      onBlur,\n      onClick,\n      onContextMenu,\n      onDragLeave,\n      onFocus,\n      onFocusVisible,\n      onKeyDown,\n      onKeyUp,\n      onMouseDown,\n      onMouseLeave,\n      onMouseUp,\n      onTouchEnd,\n      onTouchMove,\n      onTouchStart,\n      tabIndex = 0,\n      TouchRippleProps,\n      touchRippleRef,\n      type\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const buttonRef = React.useRef(null);\n  const rippleRef = React.useRef(null);\n  const handleRippleRef = useForkRef(rippleRef, touchRippleRef);\n  const {\n    isFocusVisibleRef,\n    onFocus: handleFocusVisible,\n    onBlur: handleBlurVisible,\n    ref: focusVisibleRef\n  } = useIsFocusVisible();\n  const [focusVisible, setFocusVisible] = React.useState(false);\n  if (disabled && focusVisible) {\n    setFocusVisible(false);\n  }\n  React.useImperativeHandle(action, () => ({\n    focusVisible: () => {\n      setFocusVisible(true);\n      buttonRef.current.focus();\n    }\n  }), []);\n  const [mountedState, setMountedState] = React.useState(false);\n  React.useEffect(() => {\n    setMountedState(true);\n  }, []);\n  const enableTouchRipple = mountedState && !disableRipple && !disabled;\n  React.useEffect(() => {\n    if (focusVisible && focusRipple && !disableRipple && mountedState) {\n      rippleRef.current.pulsate();\n    }\n  }, [disableRipple, focusRipple, focusVisible, mountedState]);\n  function useRippleHandler(rippleAction, eventCallback, skipRippleAction = disableTouchRipple) {\n    return useEventCallback(event => {\n      if (eventCallback) {\n        eventCallback(event);\n      }\n      const ignore = skipRippleAction;\n      if (!ignore && rippleRef.current) {\n        rippleRef.current[rippleAction](event);\n      }\n      return true;\n    });\n  }\n  const handleMouseDown = useRippleHandler('start', onMouseDown);\n  const handleContextMenu = useRippleHandler('stop', onContextMenu);\n  const handleDragLeave = useRippleHandler('stop', onDragLeave);\n  const handleMouseUp = useRippleHandler('stop', onMouseUp);\n  const handleMouseLeave = useRippleHandler('stop', event => {\n    if (focusVisible) {\n      event.preventDefault();\n    }\n    if (onMouseLeave) {\n      onMouseLeave(event);\n    }\n  });\n  const handleTouchStart = useRippleHandler('start', onTouchStart);\n  const handleTouchEnd = useRippleHandler('stop', onTouchEnd);\n  const handleTouchMove = useRippleHandler('stop', onTouchMove);\n  const handleBlur = useRippleHandler('stop', event => {\n    handleBlurVisible(event);\n    if (isFocusVisibleRef.current === false) {\n      setFocusVisible(false);\n    }\n    if (onBlur) {\n      onBlur(event);\n    }\n  }, false);\n  const handleFocus = useEventCallback(event => {\n    // Fix for https://github.com/facebook/react/issues/7769\n    if (!buttonRef.current) {\n      buttonRef.current = event.currentTarget;\n    }\n    handleFocusVisible(event);\n    if (isFocusVisibleRef.current === true) {\n      setFocusVisible(true);\n      if (onFocusVisible) {\n        onFocusVisible(event);\n      }\n    }\n    if (onFocus) {\n      onFocus(event);\n    }\n  });\n  const isNonNativeButton = () => {\n    const button = buttonRef.current;\n    return component && component !== 'button' && !(button.tagName === 'A' && button.href);\n  };\n\n  /**\n   * IE11 shim for https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/repeat\n   */\n  const keydownRef = React.useRef(false);\n  const handleKeyDown = useEventCallback(event => {\n    // Check if key is already down to avoid repeats being counted as multiple activations\n    if (focusRipple && !keydownRef.current && focusVisible && rippleRef.current && event.key === ' ') {\n      keydownRef.current = true;\n      rippleRef.current.stop(event, () => {\n        rippleRef.current.start(event);\n      });\n    }\n    if (event.target === event.currentTarget && isNonNativeButton() && event.key === ' ') {\n      event.preventDefault();\n    }\n    if (onKeyDown) {\n      onKeyDown(event);\n    }\n\n    // Keyboard accessibility for non interactive elements\n    if (event.target === event.currentTarget && isNonNativeButton() && event.key === 'Enter' && !disabled) {\n      event.preventDefault();\n      if (onClick) {\n        onClick(event);\n      }\n    }\n  });\n  const handleKeyUp = useEventCallback(event => {\n    // calling preventDefault in keyUp on a <button> will not dispatch a click event if Space is pressed\n    // https://codesandbox.io/s/button-keyup-preventdefault-dn7f0\n    if (focusRipple && event.key === ' ' && rippleRef.current && focusVisible && !event.defaultPrevented) {\n      keydownRef.current = false;\n      rippleRef.current.stop(event, () => {\n        rippleRef.current.pulsate(event);\n      });\n    }\n    if (onKeyUp) {\n      onKeyUp(event);\n    }\n\n    // Keyboard accessibility for non interactive elements\n    if (onClick && event.target === event.currentTarget && isNonNativeButton() && event.key === ' ' && !event.defaultPrevented) {\n      onClick(event);\n    }\n  });\n  let ComponentProp = component;\n  if (ComponentProp === 'button' && (other.href || other.to)) {\n    ComponentProp = LinkComponent;\n  }\n  const buttonProps = {};\n  if (ComponentProp === 'button') {\n    buttonProps.type = type === undefined ? 'button' : type;\n    buttonProps.disabled = disabled;\n  } else {\n    if (!other.href && !other.to) {\n      buttonProps.role = 'button';\n    }\n    if (disabled) {\n      buttonProps['aria-disabled'] = disabled;\n    }\n  }\n  const handleRef = useForkRef(ref, focusVisibleRef, buttonRef);\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(() => {\n      if (enableTouchRipple && !rippleRef.current) {\n        console.error(['MUI: The `component` prop provided to ButtonBase is invalid.', 'Please make sure the children prop is rendered in this custom component.'].join('\\n'));\n      }\n    }, [enableTouchRipple]);\n  }\n  const ownerState = _extends({}, props, {\n    centerRipple,\n    component,\n    disabled,\n    disableRipple,\n    disableTouchRipple,\n    focusRipple,\n    tabIndex,\n    focusVisible\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(ButtonBaseRoot, _extends({\n    as: ComponentProp,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    onBlur: handleBlur,\n    onClick: onClick,\n    onContextMenu: handleContextMenu,\n    onFocus: handleFocus,\n    onKeyDown: handleKeyDown,\n    onKeyUp: handleKeyUp,\n    onMouseDown: handleMouseDown,\n    onMouseLeave: handleMouseLeave,\n    onMouseUp: handleMouseUp,\n    onDragLeave: handleDragLeave,\n    onTouchEnd: handleTouchEnd,\n    onTouchMove: handleTouchMove,\n    onTouchStart: handleTouchStart,\n    ref: handleRef,\n    tabIndex: disabled ? -1 : tabIndex,\n    type: type\n  }, buttonProps, other, {\n    children: [children, enableTouchRipple ?\n    /*#__PURE__*/\n    /* TouchRipple is only needed client-side, x2 boost on the server. */\n    _jsx(TouchRipple, _extends({\n      ref: handleRippleRef,\n      center: centerRipple\n    }, TouchRippleProps)) : null]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? ButtonBase.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * A ref for imperative actions.\n   * It currently only supports `focusVisible()` action.\n   */\n  action: refType,\n  /**\n   * If `true`, the ripples are centered.\n   * They won't start at the cursor interaction position.\n   * @default false\n   */\n  centerRipple: PropTypes.bool,\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: elementTypeAcceptingRef,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the ripple effect is disabled.\n   *\n   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\n   * to highlight the element by applying separate styles with the `.Mui-focusVisible` class.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n  /**\n   * If `true`, the touch ripple effect is disabled.\n   * @default false\n   */\n  disableTouchRipple: PropTypes.bool,\n  /**\n   * If `true`, the base button will have a keyboard focus ripple.\n   * @default false\n   */\n  focusRipple: PropTypes.bool,\n  /**\n   * This prop can help identify which element has keyboard focus.\n   * The class name will be applied when the element gains the focus through keyboard interaction.\n   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).\n   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).\n   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components\n   * if needed.\n   */\n  focusVisibleClassName: PropTypes.string,\n  /**\n   * @ignore\n   */\n  href: PropTypes /* @typescript-to-proptypes-ignore */.any,\n  /**\n   * The component used to render a link when the `href` prop is provided.\n   * @default 'a'\n   */\n  LinkComponent: PropTypes.elementType,\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onContextMenu: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onDragLeave: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n  /**\n   * Callback fired when the component is focused with a keyboard.\n   * We trigger a `onFocus` callback too.\n   */\n  onFocusVisible: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onKeyDown: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onKeyUp: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onMouseDown: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onMouseLeave: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onMouseUp: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onTouchEnd: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onTouchMove: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onTouchStart: PropTypes.func,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * @default 0\n   */\n  tabIndex: PropTypes.number,\n  /**\n   * Props applied to the `TouchRipple` element.\n   */\n  TouchRippleProps: PropTypes.object,\n  /**\n   * A ref that points to the `TouchRipple` element.\n   */\n  touchRippleRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.shape({\n      pulsate: PropTypes.func.isRequired,\n      start: PropTypes.func.isRequired,\n      stop: PropTypes.func.isRequired\n    })\n  })]),\n  /**\n   * @ignore\n   */\n  type: PropTypes.oneOfType([PropTypes.oneOf(['button', 'reset', 'submit']), PropTypes.string])\n} : void 0;\nexport default ButtonBase;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"version":3,"file":"mergeOptions.js","sourceRoot":"","sources":["../../../src/utilities/common/mergeOptions.ts"],"names":[],"mappings":";AAOA,OAAO,EAAE,OAAO,EAAE,MAAM,WAAW,CAAC;AAOpC,MAAM,UAAU,YAAY,CAG1B,QAAkD,EAClD,OAAqC;IAErC,OAAO,OAAO,CAAC,QAAQ,EAAE,OAAO,EAAE,OAAO,CAAC,SAAS,IAAI;QACrD,SAAS,wBACJ,CAAC,QAAQ,IAAI,QAAQ,CAAC,SAAS,CAAC,GAChC,OAAO,CAAC,SAAS,CACrB;KACF,CAAC,CAAC;AACL,CAAC","sourcesContent":["import type {\n  QueryOptions,\n  WatchQueryOptions,\n  MutationOptions,\n  OperationVariables,\n} from \"../../core\";\n\nimport { compact } from \"./compact\";\n\ntype OptionsUnion<TData, TVariables extends OperationVariables, TContext> =\n  | WatchQueryOptions<TVariables, TData>\n  | QueryOptions<TVariables, TData>\n  | MutationOptions<TData, TVariables, TContext>;\n\nexport function mergeOptions<\n  TOptions extends Partial<OptionsUnion<any, any, any>>\n>(\n  defaults: TOptions | Partial<TOptions> | undefined,\n  options: TOptions | Partial<TOptions>,\n): TOptions {\n  return compact(defaults, options, options.variables && {\n    variables: {\n      ...(defaults && defaults.variables),\n      ...options.variables,\n    },\n  });\n}\n"]}
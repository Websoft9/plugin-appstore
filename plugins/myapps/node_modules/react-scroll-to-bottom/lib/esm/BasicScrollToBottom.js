import classNames from 'classnames';
import PropTypes from 'prop-types';
import React from 'react';
import AutoHideFollowButton from './ScrollToBottom/AutoHideFollowButton';
import Composer from './ScrollToBottom/Composer';
import Panel from './ScrollToBottom/Panel';
import useStyleToClassName from './hooks/internal/useStyleToClassName';
var ROOT_STYLE = {
  position: 'relative'
};

var BasicScrollToBottomCore = function BasicScrollToBottomCore(_ref) {
  var children = _ref.children,
      className = _ref.className,
      followButtonClassName = _ref.followButtonClassName,
      scrollViewClassName = _ref.scrollViewClassName;
  var rootCSS = useStyleToClassName()(ROOT_STYLE);
  return /*#__PURE__*/React.createElement("div", {
    className: classNames(rootCSS, (className || '') + '')
  }, /*#__PURE__*/React.createElement(Panel, {
    className: (scrollViewClassName || '') + ''
  }, children), /*#__PURE__*/React.createElement(AutoHideFollowButton, {
    className: (followButtonClassName || '') + ''
  }));
};

BasicScrollToBottomCore.defaultProps = {
  children: undefined,
  className: undefined,
  followButtonClassName: undefined,
  scrollViewClassName: undefined
};
BasicScrollToBottomCore.propTypes = {
  children: PropTypes.any,
  className: PropTypes.string,
  followButtonClassName: PropTypes.string,
  scrollViewClassName: PropTypes.string
};

var BasicScrollToBottom = function BasicScrollToBottom(_ref2) {
  var checkInterval = _ref2.checkInterval,
      children = _ref2.children,
      className = _ref2.className,
      debounce = _ref2.debounce,
      debug = _ref2.debug,
      followButtonClassName = _ref2.followButtonClassName,
      initialScrollBehavior = _ref2.initialScrollBehavior,
      mode = _ref2.mode,
      nonce = _ref2.nonce,
      scroller = _ref2.scroller,
      scrollViewClassName = _ref2.scrollViewClassName;
  return /*#__PURE__*/React.createElement(Composer, {
    checkInterval: checkInterval,
    debounce: debounce,
    debug: debug,
    initialScrollBehavior: initialScrollBehavior,
    mode: mode,
    nonce: nonce,
    scroller: scroller
  }, /*#__PURE__*/React.createElement(BasicScrollToBottomCore, {
    className: className,
    followButtonClassName: followButtonClassName,
    scrollViewClassName: scrollViewClassName
  }, children));
};

BasicScrollToBottom.defaultProps = {
  checkInterval: undefined,
  children: undefined,
  className: undefined,
  debounce: undefined,
  debug: undefined,
  followButtonClassName: undefined,
  initialScrollBehavior: 'smooth',
  mode: undefined,
  nonce: undefined,
  scroller: undefined,
  scrollViewClassName: undefined
};
BasicScrollToBottom.propTypes = {
  checkInterval: PropTypes.number,
  children: PropTypes.any,
  className: PropTypes.string,
  debounce: PropTypes.number,
  debug: PropTypes.bool,
  followButtonClassName: PropTypes.string,
  initialScrollBehavior: PropTypes.oneOf(['auto', 'smooth']),
  mode: PropTypes.oneOf(['bottom', 'top']),
  nonce: PropTypes.string,
  scroller: PropTypes.func,
  scrollViewClassName: PropTypes.string
};
export default BasicScrollToBottom;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
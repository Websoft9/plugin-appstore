{"version":3,"file":"static/js/81.f1142d28.chunk.js","mappings":"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","sources":["helpers/api/apiCore.js","helpers/api/appManager.js","components/FormInput.js","pages/appstore.js"],"sourcesContent":["import axios from 'axios';\nimport { Navigate } from \"react-router-dom\";\n\n// 定义一个全局变量来存储 config.json 的内容\nlet credentials;\n\nasync function getCredentials() {\n    // 如果 credentials 不存在，就从 config.json 中获取它\n    if (!credentials) {\n        const response = await fetch('../myapps/config.json');\n        const data = await response.json();\n        const userName = data.APPMANAGE.APPMANAGE_USERNAME;\n        const uerPassword = data.APPMANAGE.APPMANAGE_PASSWORD;\n        credentials = btoa(userName + \":\" + uerPassword);\n    }\n    // 返回 credentials\n    return credentials;\n}\n\n// 设置 axios 的默认配置\naxios.defaults.headers.post['Content-Type'] = 'application/json';\naxios.defaults.headers.get['Content-Type'] = 'application/json';\naxios.defaults.headers.common['Cache-Control'] = 'no-cache';\naxios.defaults.headers.common['Pragma'] = 'no-cache';\naxios.defaults.headers.common['Expires'] = '0';\n\n// 拦截响应以捕获错误\naxios.interceptors.response.use(\n    (response) => {\n        return response;\n    },\n    (error) => {\n        // 任何不在 2xx 范围内的状态码都会触发这个函数\n        let message;\n\n        if (error && error.response && error.response.status === 404) {\n            <Navigate to=\"/error-404\" />\n        } else if (error && error.response && error.response.status === 500) {\n            <Navigate to=\"/error-500\" />\n        } else {\n            message = error.response && error.response.data ? error.response.data['message'] : error.message || error;\n            return Promise.reject(message);\n        }\n    }\n);\n\nclass APICore {\n    /**\n    * Fetches data from given url\n    */\n    get = async (url, params) => {\n        // 等待获取凭证并设置授权头\n        axios.defaults.headers.common['Authorization'] = 'Basic ' + await getCredentials();\n        let response;\n        if (params) {\n            var queryString = params\n                ? Object.keys(params)\n                    .map((key) => key + '=' + params[key])\n                    .join('&')\n                : '';\n            response = axios.get(`${url}?${queryString}`, params);\n        } else {\n            response = axios.get(`${url}`, params);\n        }\n        return response;\n    };\n\n    /**\n    * post given data to url\n    */\n    create = async (url, data) => {\n        // 等待获取凭证并设置授权头\n        axios.defaults.headers.common['Authorization'] = 'Basic ' + await getCredentials();\n        return axios.post(url, data);\n    };\n}\n\nexport { APICore };\n","import { APICore } from './apiCore';\n\nconst api = new APICore();\n\n//App 安装\nfunction AppInstall(params: any): Promise<any> {\n    const baseUrl = '/AppManage/AppInstall';\n    return api.get(`${baseUrl}`, params);\n}\n\n\n//更新应用列表\nfunction AppStoreUpdate(params: any): Promise<any> {\n    const baseUrl = '/AppManage/AppStoreUpdate';\n    return api.get(`${baseUrl}`, params);\n}\n\nexport { AppInstall, AppStoreUpdate };\n\n","// @flow\nimport classNames from 'classnames';\nimport React, { useState } from 'react';\nimport { Form, InputGroup } from 'react-bootstrap';\n\n/* Password Input */\nconst PasswordInput = ({ name, placeholder, refCallback, errors, register, className, value, readOnly }) => {\n    const [showPassword, setShowPassword] = useState(false);\n\n    return (\n        <>\n            <InputGroup className=\"mb-0\">\n                <Form.Control\n                    type={showPassword ? 'text' : 'password'}\n                    placeholder={placeholder}\n                    name={name}\n                    id={name}\n                    as=\"input\"\n                    ref={(r) => {\n                        if (refCallback) refCallback(r);\n                    }}\n                    className={className}\n                    isInvalid={errors && errors[name] ? true : false}\n                    {...(register ? register(name) : {})}\n                    autoComplete={name}\n                    defaultValue={value}\n                    readOnly={readOnly}\n                />\n                <div\n                    className={classNames('input-group-text', 'input-group-password', {\n                        'show-password': showPassword,\n                    })}\n                    data-password={showPassword ? 'true' : 'false'}>\n                    <span\n                        className=\"password-eye\"\n                        onClick={() => {\n                            setShowPassword(!showPassword);\n                        }}></span>\n                </div>\n            </InputGroup>\n        </>\n    );\n};\n\ntype FormInputProps = {\n    label?: string,\n    type?: string,\n    name?: string,\n    value?: string,\n    placeholder?: string,\n    register?: any,\n    errors?: any,\n    className?: string,\n    labelClassName?: string,\n    containerClass?: string,\n    refCallback?: any,\n    children?: any,\n};\n\nconst FormInput = ({\n    label,\n    type,\n    name,\n    value,\n    readOnly,\n    placeholder,\n    register,\n    errors,\n    className,\n    labelClassName,\n    containerClass,\n    refCallback,\n    children,\n    ...otherProps\n}: FormInputProps): React$Element<React$FragmentType> => {\n    // handle input type\n    const comp = type === 'textarea' ? 'textarea' : type === 'select' ? 'select' : 'input';\n\n    return (\n        <>\n            {type === 'hidden' ? (\n                <input type={type} name={name} {...(register ? register(name) : {})} {...otherProps} />\n            ) : (\n                <>\n                    {type === 'password' ? (\n                        <>\n                            <Form.Group className={containerClass}>\n                                {label ? (\n                                    <>\n                                        {' '}\n                                        <Form.Label className={labelClassName}>{label}</Form.Label> {children}{' '}\n                                    </>\n                                ) : null}\n                                <PasswordInput\n                                    name={name}\n                                    placeholder={placeholder}\n                                    refCallback={refCallback}\n                                    errors={errors}\n                                    register={register}\n                                    className={className}\n                                    value={value}\n                                    readOnly={readOnly}\n                                />\n\n                                {errors && errors[name] ? (\n                                    <Form.Control.Feedback type=\"invalid\" className=\"d-block\">\n                                        {errors[name]['message']}\n                                    </Form.Control.Feedback>\n                                ) : null}\n                            </Form.Group>\n                        </>\n                    ) : (\n                        <>\n                            {type === 'select' ? (\n                                <>\n                                    <Form.Group className={containerClass}>\n                                        {label ? <Form.Label className={labelClassName}>{label}</Form.Label> : null}\n\n                                        <Form.Select\n                                            type={type}\n                                            label={label}\n                                            name={name}\n                                            id={name}\n                                            ref={(r) => {\n                                                if (refCallback) refCallback(r);\n                                            }}\n                                            comp={comp}\n                                            className={className}\n                                            isInvalid={errors && errors[name] ? true : false}\n                                            {...(register ? register(name) : {})}\n                                            {...otherProps}>\n                                            {children}\n                                        </Form.Select>\n\n                                        {errors && errors[name] ? (\n                                            <Form.Control.Feedback type=\"invalid\">\n                                                {errors[name]['message']}\n                                            </Form.Control.Feedback>\n                                        ) : null}\n                                    </Form.Group>\n                                </>\n                            ) : (\n                                <>\n                                    {type === 'checkbox' || type === 'radio' ? (\n                                        <>\n                                            <Form.Group className={containerClass}>\n                                                <Form.Check\n                                                    type={type}\n                                                    label={label}\n                                                    name={name}\n                                                    id={name}\n                                                    ref={(r) => {\n                                                        if (refCallback) refCallback(r);\n                                                    }}\n                                                    className={className}\n                                                    isInvalid={errors && errors[name] ? true : false}\n                                                    {...(register ? register(name) : {})}\n                                                    {...otherProps}\n                                                />\n\n                                                {errors && errors[name] ? (\n                                                    <Form.Control.Feedback type=\"invalid\">\n                                                        {errors[name]['message']}\n                                                    </Form.Control.Feedback>\n                                                ) : null}\n                                            </Form.Group>\n                                        </>\n                                    ) : (\n                                        <Form.Group className={containerClass}>\n                                            {label ? <Form.Label className={labelClassName}>{label}</Form.Label> : null}\n\n                                            <Form.Control\n                                                type={type}\n                                                placeholder={placeholder}\n                                                value={value}\n                                                name={name}\n                                                id={name}\n                                                as={comp}\n                                                ref={(r) => {\n                                                    if (refCallback) refCallback(r);\n                                                }}\n                                                className={className}\n                                                isInvalid={errors && errors[name] ? true : false}\n                                                {...(register ? register(name) : {})}\n                                                {...otherProps}\n                                                autoComplete={name}>\n                                                {children ? children : null}\n                                            </Form.Control>\n\n                                            {errors && errors[name] ? (\n                                                <Form.Control.Feedback type=\"invalid\">\n                                                    {errors[name]['message']}\n                                                </Form.Control.Feedback>\n                                            ) : null}\n                                        </Form.Group>\n                                    )}\n                                </>\n                            )}\n                        </>\n                    )}\n                </>\n            )}\n        </>\n    );\n};\n\nexport default FormInput;\n","// @flow\nimport MuiAlert from '@mui/material/Alert';\nimport Snackbar from '@mui/material/Snackbar';\nimport axios from 'axios';\nimport cockpit from 'cockpit';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { Button, Carousel, Col, Form, Modal, Row } from 'react-bootstrap';\nimport Spinner from 'react-bootstrap/Spinner';\nimport { useNavigate } from \"react-router-dom\";\nimport DefaultImg from '../assets/images/default.png';\nimport FormInput from '../components/FormInput';\nimport { AppInstall } from '../helpers';\n\nconst _ = cockpit.gettext;\nconst language = cockpit.language;//获取cockpit的当前语言环境\n\nconst Alert = React.forwardRef(function Alert(props, ref) {\n    return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\n});\n\n//应用详情弹窗\nconst AppDetailModal = ({ product, showFlag, onClose }) => {\n    const [index, setIndex] = useState(0); //用户图片浏览\n    const navigate = useNavigate(); //用于页面跳转\n    const [visible, setVisible] = useState(true); //用于显示安装选项：版本和应用名称\n    const [customName, setCustomName] = useState(\"\"); //用户存储用户输入的应用名称\n    const [showAlert, setShowAlert] = useState(false); //用于是否显示错误提示\n    const [alertMessage, setAlertMessage] = useState(\"\");//用于显示错误提示消息\n    const [disable, setDisable] = useState(false);//用于按钮禁用\n\n    //用户单击“安装”按钮\n    async function handleInstallClick() {\n        if (!visible) {\n            if (!customName || customName.length < 2 || customName.length > 20) { //判断用户是否输入应用名称\n                setShowAlert(true);\n                setAlertMessage(_(\"Please enter a custom application name between 2 and 20 characters.\"))\n            }\n            else {\n                //调用应用安装接口\n                try {\n                    setDisable(true);\n                    const response = await AppInstall({ app_name: product.key, app_version: selectedVersion, customer_app_name: customName })\n                    if (response.data.Error) {\n                        setShowAlert(true);\n                        setAlertMessage(response.data.Error.Message);\n                        setDisable(false);\n                    }\n                    else {\n                        setShowAlert(false);\n                        setAlertMessage(\"\");\n                        cockpit.file('/etc/hostname').watch(content => {\n                            console.log(content);\n                        });\n                        cockpit.jump(\"/myapps\");\n                        onClose();\n                    }\n                }\n                catch (error) {\n                    setShowAlert(false);\n                    setAlertMessage(\"\");\n                    navigate(\"/error-500\");\n                }\n            }\n            return;\n        }\n        setVisible(!visible);\n    }\n\n    const handleSelect = (selectedIndex, e) => {\n        setIndex(selectedIndex);\n    };\n\n    let versions = (product.distribution?.filter(item => item.key === \"Community\") || []).map(version => { return version.value });//获取应用的版本\n\n    let versionList = (versions && versions.length === 1) ? versions.toString().split(\",\") : versions;\n\n    const [selectedVersion, setselectedVersion] = useState(versionList[0]); //存储用户选择的安装版本\n\n    const imagName = product?.logo?.imageurl?.split(\"/\").pop(); //获取图片名称\n\n    const changeVersion = (version) => {\n        setselectedVersion(version);\n    };\n\n    const handleInputChange = (inputValue) => {\n        setCustomName(inputValue);\n        if (!inputValue) { //验证输入应用名称\n            setShowAlert(true);\n            setAlertMessage(_(\"Please enter a custom application name between 2 and 20 characters.\"))\n        }\n        else {\n            const newValue = inputValue.replace(/[^a-z0-9]/gi, '').toLowerCase(); //先替换输入值\n            setCustomName(newValue);\n            setShowAlert(false);\n            setAlertMessage(\"\");\n        }\n    }\n\n    const handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        setShowAlert(false);\n        setAlertMessage(\"\");\n    };\n\n    return (\n        <>\n            <Modal show={showFlag} onHide={onClose} size=\"lg\" scrollable=\"true\" backdrop=\"static\">\n                <Modal.Header onHide={onClose} closeButton>\n                    <div style={{ padding: \"10px\" }}>\n                        <div className='appstore-item-content-icon col-same-height'>\n                            <img\n                                src={`./static/data/logos/${imagName}`}\n                                alt=\"\"\n                                className=\"app-icon\"\n                                onError={(e) => (e.target.src = DefaultImg)}\n                            />\n                        </div>\n                        <div className='col-same-height'>\n                            <h4 className=\"appstore-item-content-title\" style={{ marginTop: \"5px\" }}>\n                                {product.trademark}\n                            </h4>\n                            <div>\n                                <a rel=\"noreferrer\" href={`https://support.websoft9.com/docs/` + product.key} target=\"_blank\" style={{ color: '#2196f3' }} >{product.trademark} {_(\"developers\")}</a>\n                            </div>\n                            <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                                <span style={{ marginRight: \"5px\" }}>{_(\"Version\")} : </span> {versions}\n                            </div>\n                            <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                                <span style={{ marginRight: \"5px\" }}>{_(\"Requires at least\")} : {product.vcpu} vCPU,  {product.memory}  GB memory, {product.storage} GB storage</span>\n                            </div>\n                        </div>\n                    </div>\n                </Modal.Header>\n                <Modal.Body>\n                    <div style={{ display: visible ? \"block\" : \"none\" }}>\n                        <Carousel activeIndex={index} onSelect={handleSelect} style={{ width: \"80%\", margin: \"0 auto\" }}>\n                            {\n                                (product.screenshots || []).map((item) => {\n                                    const filename = item.value.split(\"/\").pop();\n                                    return (\n                                        <Carousel.Item key={item?.id} >\n                                            <img\n                                                className=\"d-block\"\n                                                src={`./static/data/screenshots/${language === \"zh_CN\" ? \"zh\" : \"en\"}/${filename}`}\n                                                alt={item?.key}\n                                                width=\"100%\"\n                                                height=\"300px\"\n                                            />\n                                        </Carousel.Item>\n                                    );\n                                })\n                            }\n                        </Carousel>\n                        <div style={{ padding: \"10px\" }}>\n                            <h4>{_(\"Overview\")}</h4>\n                            {product.overview}\n                        </div>\n                        <div style={{ padding: \"10px\" }}>\n                            <h4>{_(\"Description\")}</h4>\n                            {product.description}\n                        </div>\n                    </div>\n                    <div style={{ display: visible ? \"none\" : \"block\" }}>\n                        <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n                            <div>\n                                <span style={{ marginRight: \"5px\" }}>{_(\"Version\")} :</span>\n                                {\n                                    versionList && <FormInput\n                                        name=\"select\"\n                                        type=\"select\"\n                                        className=\"form-select\"\n                                        onChange={(e) => changeVersion(e.target.value)}\n                                        key=\"select\">\n                                        {\n                                            (versionList || []).map((version, i) => {\n                                                return <option value={version} key={version + i}>{version}</option>\n                                            })\n                                        }\n                                    </FormInput>\n                                }\n                            </div>\n                            <div style={{ marginTop: \"5px\" }}>\n                                <span style={{ marginRight: \"5px\" }}>{_(\"Name\")} :</span>\n                                <FormInput type=\"text\" value={customName} name=\"app_Name\"\n                                    placeholder={_(\"Only letters and numbers from 2 to 20 are allowed. No special characters.\")}\n                                    onChange={(e) => { handleInputChange(e.target.value) }} />\n                            </div>\n                        </div>\n                    </div>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"light\" onClick={onClose}>\n                        {_(\"Close\")}\n                    </Button>{' '}\n                    <Button disabled={disable} variant=\"primary\" onClick={handleInstallClick}>\n                        {_(\"Install\")}\n                    </Button>\n                </Modal.Footer>\n            </Modal >\n            {\n                showAlert &&\n                <Snackbar open={showAlert} autoHideDuration={5000} onClose={handleClose} anchorOrigin={{ vertical: 'top', horizontal: 'center' }}>\n                    <Alert onClose={handleClose} severity=\"error\" sx={{ width: '100%' }}>\n                        {alertMessage}\n                    </Alert>\n                </Snackbar>\n            }\n        </>\n    );\n}\n\n\nconst AppStore = (): React$Element<React$FragmentType> => {\n    const [showModal, setShowModal] = useState(false); //用于显示弹窗的标识\n    const [selectedProduct, setSelectedProduct] = useState(null); //用于存储被选中的产品（点击应用详情时使用）\n    const [subCatalogs, setSubCatalogs] = useState(null); //用于存储二级目录\n    const [allMainCatalogApps, setAllMainCatalogApps] = useState(null); //用于存储某个一级子目录下的所有应用\n    const [isAllSelected, setIsAllSelected] = useState(true);\n    const [searchValue, setSearchValue] = useState(\"\");\n    const [mainCatalogs, setMainCatalogs] = useState([]);\n    const [apps, setApps] = useState([]); //用于存储通过目录筛选出来的数据\n    const [appList, setAppList] = useState([]); //用于存储通过目录筛选出来的数据\n    const [loading, setLoading] = useState(false);\n    const navigate = useNavigate(); //用于页面跳转\n\n\n    //读取数据文件\n    const getData = useCallback(async () => {\n        setLoading(true);\n        try {\n            const [catalogResponse, productResponse] = await Promise.all([\n                axios.get(`./static/data/json/catalog_${language === \"zh_CN\" ? \"zh\" : \"en\"}.json`),\n                axios.get(`./static/data/json/product_${language === \"zh_CN\" ? \"zh\" : \"en\"}.json`)\n            ]);\n            if (catalogResponse.status === 200) {\n                const catalogSort = catalogResponse.data.sort(function (a, b) {\n                    if (a.position === null && b.position === null) {\n                        return 0;\n                    } else if (a.position === null) {\n                        return 1;\n                    } else if (b.position === null) {\n                        return -1;\n                    } else {\n                        return a.position - b.position;\n                    }\n                });\n                setMainCatalogs(catalogSort);\n            }\n            else {\n                return <p>Error: Failed to fetch directory data </p>;\n            }\n\n            if (productResponse.status === 200) {\n                setApps(productResponse.data);\n                setAppList(productResponse.data);\n            }\n            else {\n                return <p>Error: Failed to fetch product data </p>;\n            }\n        }\n        catch {\n            navigate(\"/error-500\");\n        }\n        setLoading(false);\n    }, [language, setMainCatalogs, setApps, setAppList]);\n\n    useEffect(() => {\n        getData();\n    }, [getData]);\n\n    if (loading) return <Spinner className='dis_mid' />\n    // if (dataError) return <p>Error : ${dataError.message} </p>;\n\n    //用于显示应用详情的弹窗\n    const handleClick = (product) => {\n        setSelectedProduct(product);\n        setShowModal(true);\n    };\n\n    //用于关闭应用详情的弹窗\n    const handleClose = () => {\n        setShowModal(false);\n        setSelectedProduct(null);\n    };\n\n    //当主目录改变时\n    const changeMainCatalog = (selectedMainCatalog) => {\n        // 查询主目录下的二级目录\n        let updatedData = null;\n        //  filter\n        updatedData =\n            selectedMainCatalog === 'All'\n                ? []\n                : mainCatalogs.filter(c => c.key === selectedMainCatalog)?.[0]?.linkedFrom?.catalogCollection?.items;\n        const data = updatedData.sort(function (a, b) {\n            if (a.position === null && b.position === null) {\n                return 0;\n            } else if (a.position === null) {\n                return 1;\n            } else if (b.position === null) {\n                return -1;\n            } else {\n                return a.position - b.position;\n            }\n        });\n        setSubCatalogs(data);\n\n        //根据主目录过滤app数据\n        let subCatalogApps = null;\n        let mainCatalogAllApps = null;\n        mainCatalogAllApps = apps.filter(app => app?.catalogCollection?.items.some(sub => sub?.catalogCollection?.items.some(subsub => subsub.key === selectedMainCatalog)));\n        subCatalogApps =\n            selectedMainCatalog === \"All\"\n                ? apps\n                : mainCatalogAllApps;\n        setAppList(subCatalogApps);\n        setAllMainCatalogApps(mainCatalogAllApps);\n        setIsAllSelected(false);\n        setSearchValue(\"\");\n    };\n\n    //当子目录改变时，过滤应用数据\n    const changeSubCatalog = (selectedSubCatalog) => {\n        let updatedData = null;\n        updatedData =\n            selectedSubCatalog === \"All\"\n                ? allMainCatalogApps\n                : apps.filter(app => app?.catalogCollection?.items.some(c => c.key === selectedSubCatalog));\n        setAppList(updatedData);\n        setSearchValue(\"\");\n    };\n\n    //当搜索框的内容发生改变时，进行app的过滤搜索\n    const handleInputChange = (searchString) => {\n        setSearchValue(searchString);\n        let updatedData = null;\n        updatedData =\n            searchString === \"\"\n                ? apps\n                : apps.filter(app => { return app.trademark.toLowerCase().includes(searchString) || app.key.toLowerCase().includes(searchString) || app.summary.toLowerCase().includes(searchString) });\n\n        setAppList(updatedData);\n        setIsAllSelected(true);\n        setSubCatalogs(null);\n    }\n\n    return (\n        <>\n            <Row className=\"mb-2\">\n                <Col sm={6}>\n                    <Form.Group as={Row}>\n                        <Col sm={6}>\n                            <FormInput\n                                name=\"select1\"\n                                type=\"select\"\n                                className=\"form-select\"\n                                key=\"select1\"\n                                onChange={(e) => changeMainCatalog(e.target.value)}>\n                                <option value=\"All\" selected={isAllSelected}>{_(\"All\")}</option>\n                                {\n                                    (mainCatalogs || []).map((item, i) => {\n                                        return (\n                                            <option value={item?.key} key={item?.key + i}>{item?.title}</option>\n                                        );\n                                    })\n                                }\n                            </FormInput>\n                        </Col>\n                        <Col sm={6}>\n                            <FormInput\n                                name=\"select2\"\n                                type=\"select\"\n                                className=\"form-select\"\n                                key=\"select2\"\n                                onChange={(e) => changeSubCatalog(e.target.value)}>\n                                <option value=\"All\">{_(\"All\")}</option>\n                                {\n                                    (subCatalogs || []).map((item, i) => {\n                                        return (\n                                            <option value={item?.key} key={item?.key + i}>{item?.title}</option>\n                                        );\n                                    })\n                                }\n                            </FormInput>\n                        </Col>\n                    </Form.Group>\n                </Col>\n                <Col sm={6}>\n                    <Col xs=\"auto\">\n                        <FormInput type=\"text\" name=\"search\"\n                            placeholder={_(\"Search for apps like WordPress, MySQL, GitLab, …\")}\n                            value={searchValue}\n                            onChange={(e) => handleInputChange(e.target.value)} />\n                    </Col>\n                </Col>\n            </Row>\n            <Row>\n                {(appList || []).map((app, i) => {\n                    const imagName = app?.logo?.imageurl?.split(\"/\").pop();\n                    return (\n                        <Col xxl={3} sm={6} md={4} key={\"app-\" + i} className=\"appstore-item\">\n                            <div className='appstore-item-content highlight' onClick={() => { handleClick(app) }}>\n                                <div className='appstore-item-content-icon col-same-height'>\n                                    <img\n                                        src={`./static/data/logos/${imagName}`}\n                                        alt=\"\"\n                                        className=\"app-icon\"\n                                        onError={(e) => (e.target.src = DefaultImg)}\n                                    />\n                                </div>\n                                <div className='col-same-height' style={{ textAlign: \"initial\" }}>\n                                    <h4 className=\"appstore-item-content-title\">\n                                        {app?.trademark}\n                                    </h4>\n                                    <div className='appstore-item-content-tagline text-muted'>\n                                        {app?.summary}\n                                    </div>\n                                </div>\n                            </div>\n                        </Col>\n                    );\n                })}\n            </Row>\n            {showModal && <AppDetailModal product={selectedProduct} showFlag={showModal} onClose={handleClose} />}\n        </>\n    );\n};\n\nexport default AppStore;\n"],"names":["credentials","getCredentials","_getCredentials","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee3","response","data","userName","uerPassword","wrap","_context3","prev","next","fetch","sent","json","APPMANAGE","APPMANAGE_USERNAME","APPMANAGE_PASSWORD","btoa","abrupt","stop","axios","defaults","headers","post","get","common","interceptors","use","error","message","status","Navigate","Promise","reject","APICore","_createClass","_classCallCheck","_ref","_callee","url","params","queryString","_context","t0","Object","keys","map","key","join","concat","_x","_x2","create","_ref2","_callee2","_context2","_x3","_x4","api","AppInstall","AppStoreUpdate","PasswordInput","name","placeholder","refCallback","errors","register","className","value","readOnly","_useState","useState","_useState2","_slicedToArray","showPassword","setShowPassword","_jsx","_Fragment","children","_jsxs","InputGroup","Form","Control","_objectSpread","type","id","as","ref","r","isInvalid","autoComplete","defaultValue","classNames","onClick","label","labelClassName","containerClass","otherProps","_objectWithoutProperties","_excluded","comp","Group","Label","Feedback","Select","Check","_","cockpit","language","Alert","React","props","MuiAlert","elevation","variant","AppDetailModal","_product$distribution","_product$logo","_product$logo$imageur","product","showFlag","onClose","index","setIndex","navigate","useNavigate","_useState3","_useState4","visible","setVisible","_useState5","_useState6","customName","setCustomName","_useState7","_useState8","showAlert","setShowAlert","_useState9","_useState10","alertMessage","setAlertMessage","_useState11","_useState12","disable","setDisable","_handleInstallClick","length","app_name","app_version","selectedVersion","customer_app_name","Error","Message","watch","content","console","log","versions","distribution","filter","item","version","versionList","toString","split","_useState13","_useState14","setselectedVersion","imagName","logo","imageurl","pop","handleClose","event","reason","Modal","show","onHide","size","scrollable","backdrop","Header","closeButton","style","padding","src","alt","onError","e","target","DefaultImg","marginTop","trademark","rel","href","color","display","alignItems","marginRight","vcpu","memory","storage","Body","Carousel","activeIndex","onSelect","selectedIndex","width","margin","screenshots","filename","Item","height","overview","description","flexDirection","FormInput","onChange","i","inputValue","newValue","replace","toLowerCase","handleInputChange","Footer","Button","disabled","Snackbar","open","autoHideDuration","anchorOrigin","vertical","horizontal","severity","sx","_useState15","_useState16","showModal","setShowModal","_useState17","_useState18","selectedProduct","setSelectedProduct","_useState19","_useState20","subCatalogs","setSubCatalogs","_useState21","_useState22","allMainCatalogApps","setAllMainCatalogApps","_useState23","_useState24","isAllSelected","setIsAllSelected","_useState25","_useState26","searchValue","setSearchValue","_useState27","_useState28","mainCatalogs","setMainCatalogs","_useState29","_useState30","apps","setApps","_useState31","_useState32","appList","setAppList","_useState33","_useState34","loading","setLoading","getData","useCallback","_yield$Promise$all","_yield$Promise$all2","catalogResponse","productResponse","catalogSort","all","sort","a","b","position","useEffect","Spinner","Row","Col","sm","selectedMainCatalog","_mainCatalogs$filter","_mainCatalogs$filter$","_mainCatalogs$filter$2","_mainCatalogs$filter$3","mainCatalogAllApps","c","linkedFrom","catalogCollection","items","app","_app$catalogCollectio","some","sub","_sub$catalogCollectio","subsub","changeMainCatalog","selected","title","selectedSubCatalog","updatedData","_app$catalogCollectio2","changeSubCatalog","xs","searchString","includes","summary","_app$logo","_app$logo$imageurl","xxl","md","textAlign"],"sourceRoot":""}
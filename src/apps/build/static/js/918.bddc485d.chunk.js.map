{"version":3,"file":"static/js/918.bddc485d.chunk.js","mappings":"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","sources":["components/FormInput.js","components/Spinner.js","helpers/api/apiCore.js","helpers/api/appManager.js","pages/appstore.js"],"sourcesContent":["// @flow\nimport classNames from 'classnames';\nimport React, { useState } from 'react';\nimport { Form, InputGroup } from 'react-bootstrap';\n\n/* Password Input */\nconst PasswordInput = ({ name, placeholder, refCallback, errors, register, className, value, readOnly }) => {\n    const [showPassword, setShowPassword] = useState(false);\n\n    return (\n        <>\n            <InputGroup className=\"mb-0\">\n                <Form.Control\n                    type={showPassword ? 'text' : 'password'}\n                    placeholder={placeholder}\n                    name={name}\n                    id={name}\n                    as=\"input\"\n                    ref={(r) => {\n                        if (refCallback) refCallback(r);\n                    }}\n                    className={className}\n                    isInvalid={errors && errors[name] ? true : false}\n                    {...(register ? register(name) : {})}\n                    autoComplete={name}\n                    defaultValue={value}\n                    readOnly={readOnly}\n                />\n                <div\n                    className={classNames('input-group-text', 'input-group-password', {\n                        'show-password': showPassword,\n                    })}\n                    data-password={showPassword ? 'true' : 'false'}>\n                    <span\n                        className=\"password-eye\"\n                        onClick={() => {\n                            setShowPassword(!showPassword);\n                        }}></span>\n                </div>\n            </InputGroup>\n        </>\n    );\n};\n\ntype FormInputProps = {\n    label?: string,\n    type?: string,\n    name?: string,\n    value?: string,\n    placeholder?: string,\n    register?: any,\n    errors?: any,\n    className?: string,\n    labelClassName?: string,\n    containerClass?: string,\n    refCallback?: any,\n    children?: any,\n};\n\nconst FormInput = ({\n    label,\n    type,\n    name,\n    value,\n    readOnly,\n    placeholder,\n    register,\n    errors,\n    className,\n    labelClassName,\n    containerClass,\n    refCallback,\n    children,\n    ...otherProps\n}: FormInputProps): React$Element<React$FragmentType> => {\n    // handle input type\n    const comp = type === 'textarea' ? 'textarea' : type === 'select' ? 'select' : 'input';\n\n    return (\n        <>\n            {type === 'hidden' ? (\n                <input type={type} name={name} {...(register ? register(name) : {})} {...otherProps} />\n            ) : (\n                <>\n                    {type === 'password' ? (\n                        <>\n                            <Form.Group className={containerClass}>\n                                {label ? (\n                                    <>\n                                        {' '}\n                                        <Form.Label className={labelClassName}>{label}</Form.Label> {children}{' '}\n                                    </>\n                                ) : null}\n                                <PasswordInput\n                                    name={name}\n                                    placeholder={placeholder}\n                                    refCallback={refCallback}\n                                    errors={errors}\n                                    register={register}\n                                    className={className}\n                                    value={value}\n                                    readOnly={readOnly}\n                                />\n\n                                {errors && errors[name] ? (\n                                    <Form.Control.Feedback type=\"invalid\" className=\"d-block\">\n                                        {errors[name]['message']}\n                                    </Form.Control.Feedback>\n                                ) : null}\n                            </Form.Group>\n                        </>\n                    ) : (\n                        <>\n                            {type === 'select' ? (\n                                <>\n                                    <Form.Group className={containerClass}>\n                                        {label ? <Form.Label className={labelClassName}>{label}</Form.Label> : null}\n\n                                        <Form.Select\n                                            type={type}\n                                            label={label}\n                                            name={name}\n                                            id={name}\n                                            ref={(r) => {\n                                                if (refCallback) refCallback(r);\n                                            }}\n                                            comp={comp}\n                                            className={className}\n                                            isInvalid={errors && errors[name] ? true : false}\n                                            {...(register ? register(name) : {})}\n                                            {...otherProps}>\n                                            {children}\n                                        </Form.Select>\n\n                                        {errors && errors[name] ? (\n                                            <Form.Control.Feedback type=\"invalid\">\n                                                {errors[name]['message']}\n                                            </Form.Control.Feedback>\n                                        ) : null}\n                                    </Form.Group>\n                                </>\n                            ) : (\n                                <>\n                                    {type === 'checkbox' || type === 'radio' ? (\n                                        <>\n                                            <Form.Group className={containerClass}>\n                                                <Form.Check\n                                                    type={type}\n                                                    label={label}\n                                                    name={name}\n                                                    id={name}\n                                                    ref={(r) => {\n                                                        if (refCallback) refCallback(r);\n                                                    }}\n                                                    className={className}\n                                                    isInvalid={errors && errors[name] ? true : false}\n                                                    {...(register ? register(name) : {})}\n                                                    {...otherProps}\n                                                />\n\n                                                {errors && errors[name] ? (\n                                                    <Form.Control.Feedback type=\"invalid\">\n                                                        {errors[name]['message']}\n                                                    </Form.Control.Feedback>\n                                                ) : null}\n                                            </Form.Group>\n                                        </>\n                                    ) : (\n                                        <Form.Group className={containerClass}>\n                                            {label ? <Form.Label className={labelClassName}>{label}</Form.Label> : null}\n\n                                            <Form.Control\n                                                type={type}\n                                                placeholder={placeholder}\n                                                value={value}\n                                                name={name}\n                                                id={name}\n                                                as={comp}\n                                                ref={(r) => {\n                                                    if (refCallback) refCallback(r);\n                                                }}\n                                                className={className}\n                                                isInvalid={errors && errors[name] ? true : false}\n                                                {...(register ? register(name) : {})}\n                                                {...otherProps}\n                                                autoComplete={name}>\n                                                {children ? children : null}\n                                            </Form.Control>\n\n                                            {errors && errors[name] ? (\n                                                <Form.Control.Feedback type=\"invalid\">\n                                                    {errors[name]['message']}\n                                                </Form.Control.Feedback>\n                                            ) : null}\n                                        </Form.Group>\n                                    )}\n                                </>\n                            )}\n                        </>\n                    )}\n                </>\n            )}\n        </>\n    );\n};\n\nexport default FormInput;\n","// @flow\nimport React from 'react';\nimport classNames from 'classnames';\n\ntype SpinnerProps = {\n    tag?: string,\n    className?: string,\n    size?: 'lg' | 'md' | 'sm',\n    type?: 'bordered' | 'grow',\n    color?: string,\n    children?: any,\n};\n\n/**\n * Spinner\n */\nconst Spinner = (props: SpinnerProps): React$Element<any> => {\n    const children = props.children || null;\n    const Tag = props.tag || 'div';\n    const color = props.color || 'secondary';\n    const size = props.size || '';\n\n    return (\n        <Tag\n            role=\"status\"\n            className={classNames(\n                {\n                    'spinner-border': props.type === 'bordered',\n                    'spinner-grow': props.type === 'grow',\n                },\n                [`text-${color}`],\n                { [`avatar-${size}`]: size },\n                props.className\n            )}>\n            {children}\n        </Tag>\n    );\n};\n\nSpinner.defaultProps = {\n    tag: 'div',\n    type: 'bordered',\n};\n\nexport default Spinner;\n","import axios from 'axios';\nimport { Navigate } from \"react-router-dom\";\n//import config from '../../config';\n\n// content type\naxios.defaults.headers.post['Content-Type'] = 'application/json';\naxios.defaults.headers.get['Content-Type'] = 'application/json';\naxios.defaults.headers = {\n    'Cache-Control': 'no-cache',\n    'Pragma': 'no-cache',\n    'Expires': '0',\n};\n//axios.defaults.baseURL = config.API_URL;\n\n// intercepting to capture errors\naxios.interceptors.response.use(\n    (response) => {\n        return response;\n    },\n    (error) => {\n        // Any status codes that falls outside the range of 2xx cause this function to trigger\n        let message;\n\n        if (error && error.response && error.response.status === 404) {\n            <Navigate to=\"/error-404\" />\n        } else if (error && error.response && error.response.status === 500) {\n            <Navigate to=\"/error-500\" />\n        } else {\n            message = error.response && error.response.data ? error.response.data['message'] : error.message || error;\n            return Promise.reject(message);\n        }\n    }\n);\n\nclass APICore {\n    /**\n     * Fetches data from given url\n     */\n    get = (url, params) => {\n        let response;\n        if (params) {\n            var queryString = params\n                ? Object.keys(params)\n                    .map((key) => key + '=' + params[key])\n                    .join('&')\n                : '';\n            response = axios.get(`${url}?${queryString}`, params);\n        } else {\n            response = axios.get(`${url}`, params);\n        }\n        return response;\n    };\n\n    /**\n     * post given data to url\n     */\n    create = (url, data) => {\n        return axios.post(url, data);\n    };\n}\n\nexport { APICore };\n","import { APICore } from './apiCore';\n\nconst api = new APICore();\n\n//App 安装\nfunction AppInstall(params: any): Promise<any> {\n    const baseUrl = '/AppManage/AppInstall';\n    return api.get(`${baseUrl}`, params);\n}\n\n//App 列表查询\nfunction AppList(params: any): Promise<any> {\n    const baseUrl = '/AppManage/AppList';\n    return api.get(`${baseUrl}`, params);\n}\n\n//App 卸载\nfunction AppUninstall(params: any): Promise<any> {\n    const baseUrl = '/AppManage/AppUninstall';\n    return api.get(`${baseUrl}`, params);\n}\n\n//App 停止\nfunction AppStop(params: any): Promise<any> {\n    const baseUrl = '/AppManage/AppStop';\n    return api.get(`${baseUrl}`, params);\n}\n\n//App 启动\nfunction AppStart(params: any): Promise<any> {\n    const baseUrl = '/AppManage/AppStart';\n    return api.get(`${baseUrl}`, params);\n}\n\n//App 重启\nfunction AppRestart(params: any): Promise<any> {\n    const baseUrl = '/AppManage/AppRestart';\n    return api.get(`${baseUrl}`, params);\n}\n\n//App 状态查询\nfunction AppStatus(params: any): Promise<any> {\n    const baseUrl = '/AppManage/AppStatus';\n    return api.get(`${baseUrl}`, params);\n}\n\nexport { AppInstall, AppList, AppUninstall, AppStop, AppStart, AppRestart, AppStatus };\n\n","// @flow\nimport { gql, useQuery } from '@apollo/client';\nimport MuiAlert from '@mui/material/Alert';\nimport Snackbar from '@mui/material/Snackbar';\nimport cockpit from 'cockpit';\nimport React, { useEffect, useState } from 'react';\nimport { Button, Carousel, Col, Form, Modal, Row } from 'react-bootstrap';\nimport { useNavigate } from \"react-router-dom\";\nimport FormInput from '../components/FormInput';\nimport Spinner from '../components/Spinner';\nimport { AppInstall } from '../helpers';\n\nconst _ = cockpit.gettext;\nconst language = cockpit.language;//获取cockpit的当前语言环境\n\nconst Alert = React.forwardRef(function Alert(props, ref) {\n    return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\n});\n\nconst getContentfulData = gql`\n    query($locale: String!){\n        productCollection(locale:$locale) {\n            items {\n            sys {\n                id\n            }\n            key\n            trademark\n            summary\n            overview\n            websiteurl\n            description\n            screenshots\n            distribution\n            highlights\n            vcpu\n            memory\n            storage\n            logo {\n                imageurl\n            }\n            catalogCollection(limit:20) {\n                items {\n                key\n                title\n                catalogCollection(limit:1){\n                    items{\n                        key\n                        title\n                    }\n                    }\n                }\n            }\n            }\n        }\n        catalog(id: \"2Yp0TY3kBHgG6VDjsHZNpK\",locale:$locale) {\n            linkedFrom(allowedLocales:[\"en-US\"]) {\n            catalogCollection(limit:20) {\n                items {\n                key\n                title\n                linkedFrom(allowedLocales:[\"en-US\"]) {\n                    catalogCollection(limit:20) {\n                    items {\n                        key\n                        title\n                    }\n                    }\n                }\n                }\n            }\n            }\n        }\n    }\n`;\n\n//应用详情弹窗\nconst AppDetailModal = ({ product, showFlag, onClose }) => {\n    const [index, setIndex] = useState(0); //用户图片浏览\n    const navigate = useNavigate(); //用于页面跳转\n    const [visible, setVisible] = useState(true); //用于显示安装选项：版本和应用名称\n    const [customName, setCustomName] = useState(\"\"); //用户存储用户输入的应用名称\n    const [showAlert, setShowAlert] = useState(false); //用于是否显示错误提示\n    const [alertMessage, setAlertMessage] = useState(\"\");//用于显示错误提示消息\n    const [disable, setDisable] = useState(false);//用于按钮禁用\n\n    //用户单击“安装”按钮\n    async function handleInstallClick() {\n        if (!visible) {\n            if (!customName) { //判断用户是否输入应用名称\n                setShowAlert(true);\n                setAlertMessage(_(\"Please enter a custom application name\"))\n            }\n            else {\n                //调用应用安装接口\n                try {\n                    setDisable(true);\n                    const response = await AppInstall({ app_name: product.key, app_version: selectedVersion, customer_app_name: customName })\n                    if (response.data.Error) {\n                        setShowAlert(true);\n                        setAlertMessage(response.data.Error.Message);\n                        setDisable(false);\n                    }\n                    else {\n                        setShowAlert(false);\n                        setAlertMessage(\"\");\n                        navigate(\"/myapps\");\n                    }\n                }\n                catch (error) {\n                    setShowAlert(false);\n                    setAlertMessage(\"\");\n                    navigate(\"/error-500\");\n                }\n            }\n            return;\n        }\n        setVisible(!visible);\n    }\n\n    const handleSelect = (selectedIndex, e) => {\n        setIndex(selectedIndex);\n    };\n\n    let versions = (product.distribution?.filter(item => item.key === \"Community\") || []).map(version => { return version.value });//获取应用的版本\n\n    let versionList = (versions && versions.length === 1) ? versions.toString().split(\",\") : versions;\n\n    const [selectedVersion, setselectedVersion] = useState(versionList[0]); //存储用户选择的安装版本\n\n    const changeVersion = (version) => {\n        setselectedVersion(version);\n    };\n\n    const handleInputChange = (inputValue) => {\n        setCustomName(inputValue);\n        if (!inputValue) { //当用户没有输入应用名称\n            setShowAlert(true);\n            setAlertMessage(_(\"Please enter a custom application name\"))\n        }\n        else {\n            const newValue = inputValue.replace(/[^a-z0-9]/gi, '').toLowerCase(); //先替换输入值\n            setCustomName(newValue);\n            setShowAlert(false);\n            setAlertMessage(\"\");\n        }\n    }\n\n    const handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        setShowAlert(false);\n        setAlertMessage(\"\");\n    };\n\n    return (\n        <>\n            <Modal show={showFlag} onHide={onClose} size=\"lg\" scrollable=\"true\" backdrop=\"static\">\n                <Modal.Header onHide={onClose} closeButton>\n                    <div style={{ padding: \"10px\" }}>\n                        <div className='appstore-item-content-icon col-same-height'>\n                            <img\n                                src={product.logo.imageurl}\n                                alt=\"\"\n                                className=\"app-icon\"\n                            />\n                        </div>\n                        <div className='col-same-height'>\n                            <h4 className=\"appstore-item-content-title\" style={{ marginTop: \"5px\" }}>\n                                {product.trademark}\n                            </h4>\n                            <div>\n                                <a rel=\"noreferrer\" href={`https://support.websoft9.com/docs/` + product.key} target=\"_blank\" style={{ color: '#2196f3' }} >{product.trademark} {_(\"developers\")}</a>\n                            </div>\n                            <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                                <span style={{ marginRight: \"5px\" }}>{_(\"Version\")} : </span> {versions}\n                            </div>\n                            <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                                <span style={{ marginRight: \"5px\" }}>{_(\"Requires at least\")} : {product.vcpu} vCPU,  {product.memory}  GB memory, {product.storage} GB storage</span>\n                            </div>\n                        </div>\n                    </div>\n                </Modal.Header>\n                <Modal.Body>\n                    <div style={{ display: visible ? \"block\" : \"none\" }}>\n                        <Carousel activeIndex={index} onSelect={handleSelect} style={{ width: \"80%\", margin: \"0 auto\" }}>\n                            {\n                                (product.screenshots || []).map((item) => {\n                                    return (\n                                        <Carousel.Item key={item?.id} >\n                                            <img\n                                                className=\"d-block\"\n                                                src={item?.value}\n                                                alt={item?.key}\n                                                width=\"100%\"\n                                                height=\"300px\"\n                                            />\n                                        </Carousel.Item>\n                                    );\n                                })\n                            }\n                        </Carousel>\n                        <div style={{ padding: \"10px\" }}>\n                            <h4>{_(\"Overview\")}</h4>\n                            {product.overview}\n                        </div>\n                        <div style={{ padding: \"10px\" }}>\n                            <h4>{_(\"Description\")}</h4>\n                            {product.description}\n                        </div>\n                    </div>\n                    <div style={{ display: visible ? \"none\" : \"block\" }}>\n                        <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n                            <div>\n                                <span style={{ marginRight: \"5px\" }}>{_(\"Version\")} :</span>\n                                {\n                                    versionList && <FormInput\n                                        name=\"select\"\n                                        type=\"select\"\n                                        className=\"form-select\"\n                                        onChange={(e) => changeVersion(e.target.value)}\n                                        key=\"select\">\n                                        {\n                                            (versionList || []).map((version, i) => {\n                                                return <option value={version} key={version + i}>{version}</option>\n                                            })\n                                        }\n                                    </FormInput>\n                                }\n                            </div>\n                            <div style={{ marginTop: \"5px\" }}>\n                                <span style={{ marginRight: \"5px\" }}>{_(\"Name\")} :</span>\n                                <FormInput type=\"text\" value={customName} name=\"app_Name\"\n                                    placeholder={_(\"Only letters and numbers are allowed. No special characters.\")}\n                                    onChange={(e) => { handleInputChange(e.target.value) }} />\n                            </div>\n                        </div>\n                    </div>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"light\" onClick={onClose}>\n                        {_(\"Close\")}\n                    </Button>{' '}\n                    <Button disabled={disable} variant=\"primary\" onClick={handleInstallClick}>\n                        {_(\"Install\")}\n                    </Button>\n                </Modal.Footer>\n            </Modal >\n            {\n                showAlert &&\n                <Snackbar open={showAlert} autoHideDuration={5000} onClose={handleClose} anchorOrigin={{ vertical: 'top', horizontal: 'center' }}>\n                    <Alert onClose={handleClose} severity=\"error\" sx={{ width: '100%' }}>\n                        {alertMessage}\n                    </Alert>\n                </Snackbar>\n            }\n        </>\n    );\n}\n\nconst AppStore = (): React$Element<React$FragmentType> => {\n    const [showModal, setShowModal] = useState(false); //用于显示弹窗的标识\n    const [selectedProduct, setSelectedProduct] = useState(null); //用于存储被选中的产品（点击应用详情时使用）\n    const [subCatalogs, setSubCatalogs] = useState(null); //用于存储二级目录\n    const [allMainCatalogApps, setAllMainCatalogApps] = useState(null); //用于存储某个一级子目录下的所有应用\n    const [isAllSelected, setIsAllSelected] = useState(true);\n    const [searchValue, setSearchValue] = useState(\"\");\n\n    const { loading: dataLoading, error: dataError, data: allData } = useQuery(getContentfulData, { variables: { locale: language === \"zh_CN\" ? \"zh-CN\" : \"en-US\" } });\n\n    const mainCatalogs = allData?.catalog.linkedFrom.catalogCollection.items; //主目录数据\n    const apps = allData?.productCollection?.items;//所有应用数据\n\n    const [appList, setAppList] = useState(apps); //用于存储通过目录筛选出来的数据\n\n    useEffect(() => {\n        setAppList(apps);\n    }, [apps])\n\n    // if (dataLoading) return <p>Loading...</p>;\n\n    if (dataLoading) return <Spinner className='dis_mid' />/*<Spinner className='dis_mid' color=\"primary\" size=\"md\" />*/;\n    if (dataError) return <p>Error : ${dataError.message} </p>;\n\n    //用于显示应用详情的弹窗\n    const handleClick = (product) => {\n        setSelectedProduct(product);\n        setShowModal(true);\n    };\n\n    //用于关闭应用详情的弹窗\n    const handleClose = () => {\n        setShowModal(false);\n        setSelectedProduct(null);\n    };\n\n    //当主目录改变时\n    const changeMainCatalog = (selectedMainCatalog) => {\n        // 查询主目录下的二级目录\n        let updatedData = null;\n        //  filter\n        updatedData =\n            selectedMainCatalog === 'All'\n                ? []\n                : mainCatalogs.filter(c => c.key === selectedMainCatalog)?.[0]?.linkedFrom?.catalogCollection?.items;\n        setSubCatalogs(updatedData);\n\n        //根据主目录过滤app数据\n        let subCatalogApps = null;\n        let mainCatalogAllApps = null;\n        mainCatalogAllApps = apps.filter(app => app?.catalogCollection?.items.some(sub => sub?.catalogCollection?.items.some(subsub => subsub.key === selectedMainCatalog)));\n        subCatalogApps =\n            selectedMainCatalog === \"All\"\n                ? apps\n                : mainCatalogAllApps;\n        setAppList(subCatalogApps);\n        setAllMainCatalogApps(mainCatalogAllApps);\n        setIsAllSelected(false);\n        setSearchValue(\"\");\n    };\n\n    //当子目录改变时，过滤应用数据\n    const changeSubCatalog = (selectedSubCatalog) => {\n        let updatedData = null;\n        updatedData =\n            selectedSubCatalog === \"All\"\n                ? allMainCatalogApps\n                : apps.filter(app => app?.catalogCollection?.items.some(c => c.key === selectedSubCatalog));\n        setAppList(updatedData);\n        setSearchValue(\"\");\n    };\n\n    //当搜索框的内容发生改变时，进行app的过滤搜索\n    const handleInputChange = (searchString) => {\n        setSearchValue(searchString);\n        let updatedData = null;\n        updatedData =\n            searchString === \"\"\n                ? apps\n                : apps.filter(app => { return app.trademark.toLowerCase().includes(searchString) || app.key.toLowerCase().includes(searchString) });\n\n        setAppList(updatedData);\n        setIsAllSelected(true);\n        setSubCatalogs(null);\n    }\n\n    return (\n        <>\n            <Row className=\"mb-2\">\n                <Col sm={6}>\n                    <Form.Group as={Row}>\n                        <Col sm={6}>\n                            <FormInput\n                                name=\"select1\"\n                                type=\"select\"\n                                className=\"form-select\"\n                                key=\"select1\"\n                                onChange={(e) => changeMainCatalog(e.target.value)}>\n                                <option value=\"All\" selected={isAllSelected}>{_(\"All\")}</option>\n                                {\n                                    (mainCatalogs || []).map((item, i) => {\n                                        return (\n                                            <option value={item?.key} key={item?.key + i}>{item?.title}</option>\n                                        );\n                                    })\n                                }\n                            </FormInput>\n                        </Col>\n                        <Col sm={6}>\n                            <FormInput\n                                name=\"select2\"\n                                type=\"select\"\n                                className=\"form-select\"\n                                key=\"select2\"\n                                onChange={(e) => changeSubCatalog(e.target.value)}>\n                                <option value=\"All\">{_(\"All\")}</option>\n                                {\n                                    (subCatalogs || []).map((item, i) => {\n                                        return (\n                                            <option value={item?.key} key={item?.key + i}>{item?.title}</option>\n                                        );\n                                    })\n                                }\n                            </FormInput>\n                        </Col>\n                    </Form.Group>\n                </Col>\n                <Col sm={6}>\n                    <Col xs=\"auto\">\n                        <FormInput type=\"text\" name=\"search\"\n                            placeholder=\"Search for apps like WordPress, Dropbox, Slack, Trello, …\"\n                            value={searchValue}\n                            onChange={(e) => handleInputChange(e.target.value)} />\n                    </Col>\n                </Col>\n            </Row>\n            <Row>\n                {(appList || []).map((app, i) => {\n                    return (\n                        <Col xxl={3} md={6} key={app.sys.id} className=\"appstore-item\">\n                            <div className='appstore-item-content highlight' onClick={() => { handleClick(app) }}>\n                                <div className='appstore-item-content-icon col-same-height'>\n                                    <img\n                                        src={app.logo.imageurl}\n                                        alt=\"\"\n                                        className=\"app-icon\"\n                                    />\n                                </div>\n                                <div className='col-same-height'>\n                                    <h4 className=\"appstore-item-content-title\">\n                                        {app.trademark}\n                                    </h4>\n                                    <div className='appstore-item-content-tagline text-muted'>\n                                        {app.summary}\n                                    </div>\n                                </div>\n                            </div>\n                        </Col>\n                    );\n                })}\n            </Row>\n            {showModal && <AppDetailModal product={selectedProduct} showFlag={showModal} onClose={handleClose} />}\n        </>\n    );\n};\n\nexport default AppStore;\n"],"names":["PasswordInput","_ref","name","placeholder","refCallback","errors","register","className","value","readOnly","_useState","useState","_useState2","_slicedToArray","showPassword","setShowPassword","_jsx","_Fragment","children","_jsxs","InputGroup","Form","_objectSpread","type","id","as","ref","r","isInvalid","autoComplete","defaultValue","classNames","onClick","_ref2","label","labelClassName","containerClass","otherProps","_objectWithoutProperties","_excluded","comp","Spinner","props","Tag","tag","color","size","role","concat","_defineProperty","defaultProps","axios","response","error","message","status","Navigate","data","Promise","reject","api","_createClass","APICore","_classCallCheck","get","url","params","queryString","Object","keys","map","key","join","create","AppInstall","AppList","AppUninstall","AppStop","AppStart","AppRestart","_","cockpit","language","Alert","React","MuiAlert","elevation","variant","getContentfulData","gql","_templateObject","_taggedTemplateLiteral","AppDetailModal","_product$distribution","product","showFlag","onClose","index","setIndex","navigate","useNavigate","_useState3","_useState4","visible","setVisible","_useState5","_useState6","customName","setCustomName","_useState7","_useState8","showAlert","setShowAlert","_useState9","_useState10","alertMessage","setAlertMessage","_useState11","_useState12","disable","setDisable","_handleInstallClick","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","app_name","app_version","selectedVersion","customer_app_name","sent","Error","Message","t0","abrupt","stop","apply","arguments","versions","distribution","filter","item","version","versionList","length","toString","split","_useState13","_useState14","setselectedVersion","handleClose","event","reason","Modal","show","onHide","scrollable","backdrop","closeButton","style","padding","src","logo","imageurl","alt","marginTop","trademark","rel","href","target","display","alignItems","marginRight","vcpu","memory","storage","Carousel","activeIndex","onSelect","selectedIndex","e","width","margin","screenshots","height","overview","description","flexDirection","FormInput","onChange","i","inputValue","newValue","replace","toLowerCase","handleInputChange","Button","disabled","Snackbar","open","autoHideDuration","anchorOrigin","vertical","horizontal","severity","sx","_allData$productColle","_useState15","_useState16","showModal","setShowModal","_useState17","_useState18","selectedProduct","setSelectedProduct","_useState19","_useState20","subCatalogs","setSubCatalogs","_useState21","_useState22","allMainCatalogApps","setAllMainCatalogApps","_useState23","_useState24","isAllSelected","setIsAllSelected","_useState25","_useState26","searchValue","setSearchValue","_useQuery","useQuery","variables","locale","dataLoading","loading","dataError","allData","mainCatalogs","catalog","linkedFrom","catalogCollection","items","apps","productCollection","_useState27","_useState28","appList","setAppList","useEffect","Row","Col","sm","selectedMainCatalog","_mainCatalogs$filter","_mainCatalogs$filter$","_mainCatalogs$filter$2","_mainCatalogs$filter$3","updatedData","mainCatalogAllApps","c","app","_app$catalogCollectio","some","sub","_sub$catalogCollectio","subsub","changeMainCatalog","selected","title","selectedSubCatalog","_app$catalogCollectio2","changeSubCatalog","xs","searchString","includes","xxl","md","summary","sys"],"sourceRoot":""}
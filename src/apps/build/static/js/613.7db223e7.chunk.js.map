{"version":3,"file":"static/js/613.7db223e7.chunk.js","mappings":"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","sources":["components/FormInput.js","components/Spinner.js","helpers/api/apiCore.js","helpers/api/appManager.js","pages/appdetailtabs/appaccess.js","pages/appdetailtabs/appcontainer.js","pages/appdetailtabs/appoverview.js","pages/appdetailtabs/appuninstall.js","pages/appdetail.js","pages/myapps.js"],"sourcesContent":["// @flow\nimport classNames from 'classnames';\nimport React, { useState } from 'react';\nimport { Form, InputGroup } from 'react-bootstrap';\n\n/* Password Input */\nconst PasswordInput = ({ name, placeholder, refCallback, errors, register, className, value, readOnly }) => {\n    const [showPassword, setShowPassword] = useState(false);\n\n    return (\n        <>\n            <InputGroup className=\"mb-0\">\n                <Form.Control\n                    type={showPassword ? 'text' : 'password'}\n                    placeholder={placeholder}\n                    name={name}\n                    id={name}\n                    as=\"input\"\n                    ref={(r) => {\n                        if (refCallback) refCallback(r);\n                    }}\n                    className={className}\n                    isInvalid={errors && errors[name] ? true : false}\n                    {...(register ? register(name) : {})}\n                    autoComplete={name}\n                    defaultValue={value}\n                    readOnly={readOnly}\n                />\n                <div\n                    className={classNames('input-group-text', 'input-group-password', {\n                        'show-password': showPassword,\n                    })}\n                    data-password={showPassword ? 'true' : 'false'}>\n                    <span\n                        className=\"password-eye\"\n                        onClick={() => {\n                            setShowPassword(!showPassword);\n                        }}></span>\n                </div>\n            </InputGroup>\n        </>\n    );\n};\n\ntype FormInputProps = {\n    label?: string,\n    type?: string,\n    name?: string,\n    value?: string,\n    placeholder?: string,\n    register?: any,\n    errors?: any,\n    className?: string,\n    labelClassName?: string,\n    containerClass?: string,\n    refCallback?: any,\n    children?: any,\n};\n\nconst FormInput = ({\n    label,\n    type,\n    name,\n    value,\n    readOnly,\n    placeholder,\n    register,\n    errors,\n    className,\n    labelClassName,\n    containerClass,\n    refCallback,\n    children,\n    ...otherProps\n}: FormInputProps): React$Element<React$FragmentType> => {\n    // handle input type\n    const comp = type === 'textarea' ? 'textarea' : type === 'select' ? 'select' : 'input';\n\n    return (\n        <>\n            {type === 'hidden' ? (\n                <input type={type} name={name} {...(register ? register(name) : {})} {...otherProps} />\n            ) : (\n                <>\n                    {type === 'password' ? (\n                        <>\n                            <Form.Group className={containerClass}>\n                                {label ? (\n                                    <>\n                                        {' '}\n                                        <Form.Label className={labelClassName}>{label}</Form.Label> {children}{' '}\n                                    </>\n                                ) : null}\n                                <PasswordInput\n                                    name={name}\n                                    placeholder={placeholder}\n                                    refCallback={refCallback}\n                                    errors={errors}\n                                    register={register}\n                                    className={className}\n                                    value={value}\n                                    readOnly={readOnly}\n                                />\n\n                                {errors && errors[name] ? (\n                                    <Form.Control.Feedback type=\"invalid\" className=\"d-block\">\n                                        {errors[name]['message']}\n                                    </Form.Control.Feedback>\n                                ) : null}\n                            </Form.Group>\n                        </>\n                    ) : (\n                        <>\n                            {type === 'select' ? (\n                                <>\n                                    <Form.Group className={containerClass}>\n                                        {label ? <Form.Label className={labelClassName}>{label}</Form.Label> : null}\n\n                                        <Form.Select\n                                            type={type}\n                                            label={label}\n                                            name={name}\n                                            id={name}\n                                            ref={(r) => {\n                                                if (refCallback) refCallback(r);\n                                            }}\n                                            comp={comp}\n                                            className={className}\n                                            isInvalid={errors && errors[name] ? true : false}\n                                            {...(register ? register(name) : {})}\n                                            {...otherProps}>\n                                            {children}\n                                        </Form.Select>\n\n                                        {errors && errors[name] ? (\n                                            <Form.Control.Feedback type=\"invalid\">\n                                                {errors[name]['message']}\n                                            </Form.Control.Feedback>\n                                        ) : null}\n                                    </Form.Group>\n                                </>\n                            ) : (\n                                <>\n                                    {type === 'checkbox' || type === 'radio' ? (\n                                        <>\n                                            <Form.Group className={containerClass}>\n                                                <Form.Check\n                                                    type={type}\n                                                    label={label}\n                                                    name={name}\n                                                    id={name}\n                                                    ref={(r) => {\n                                                        if (refCallback) refCallback(r);\n                                                    }}\n                                                    className={className}\n                                                    isInvalid={errors && errors[name] ? true : false}\n                                                    {...(register ? register(name) : {})}\n                                                    {...otherProps}\n                                                />\n\n                                                {errors && errors[name] ? (\n                                                    <Form.Control.Feedback type=\"invalid\">\n                                                        {errors[name]['message']}\n                                                    </Form.Control.Feedback>\n                                                ) : null}\n                                            </Form.Group>\n                                        </>\n                                    ) : (\n                                        <Form.Group className={containerClass}>\n                                            {label ? <Form.Label className={labelClassName}>{label}</Form.Label> : null}\n\n                                            <Form.Control\n                                                type={type}\n                                                placeholder={placeholder}\n                                                value={value}\n                                                name={name}\n                                                id={name}\n                                                as={comp}\n                                                ref={(r) => {\n                                                    if (refCallback) refCallback(r);\n                                                }}\n                                                className={className}\n                                                isInvalid={errors && errors[name] ? true : false}\n                                                {...(register ? register(name) : {})}\n                                                {...otherProps}\n                                                autoComplete={name}>\n                                                {children ? children : null}\n                                            </Form.Control>\n\n                                            {errors && errors[name] ? (\n                                                <Form.Control.Feedback type=\"invalid\">\n                                                    {errors[name]['message']}\n                                                </Form.Control.Feedback>\n                                            ) : null}\n                                        </Form.Group>\n                                    )}\n                                </>\n                            )}\n                        </>\n                    )}\n                </>\n            )}\n        </>\n    );\n};\n\nexport default FormInput;\n","// @flow\nimport React from 'react';\nimport classNames from 'classnames';\n\ntype SpinnerProps = {\n    tag?: string,\n    className?: string,\n    size?: 'lg' | 'md' | 'sm',\n    type?: 'bordered' | 'grow',\n    color?: string,\n    children?: any,\n};\n\n/**\n * Spinner\n */\nconst Spinner = (props: SpinnerProps): React$Element<any> => {\n    const children = props.children || null;\n    const Tag = props.tag || 'div';\n    const color = props.color || 'secondary';\n    const size = props.size || '';\n\n    return (\n        <Tag\n            role=\"status\"\n            className={classNames(\n                {\n                    'spinner-border': props.type === 'bordered',\n                    'spinner-grow': props.type === 'grow',\n                },\n                [`text-${color}`],\n                { [`avatar-${size}`]: size },\n                props.className\n            )}>\n            {children}\n        </Tag>\n    );\n};\n\nSpinner.defaultProps = {\n    tag: 'div',\n    type: 'bordered',\n};\n\nexport default Spinner;\n","import axios from 'axios';\nimport { Navigate } from \"react-router-dom\";\n\n// 定义一个全局变量来存储 config.json 的内容\nlet credentials;\n\nasync function getCredentials() {\n    // 如果 credentials 不存在，就从 config.json 中获取它\n    if (!credentials) {\n        const response = await fetch('./config.json');\n        const data = await response.json();\n        const userName = data.APPMANAGE.APPMANAGE_USERNAME;\n        const uerPassword = data.APPMANAGE.APPMANAGE_PASSWORD;\n        credentials = btoa(userName + \":\" + uerPassword);\n    }\n    // 返回 credentials\n    return credentials;\n}\n\n// 设置 axios 的默认配置\naxios.defaults.headers.post['Content-Type'] = 'application/json';\naxios.defaults.headers.get['Content-Type'] = 'application/json';\naxios.defaults.headers.common['Cache-Control'] = 'no-cache';\naxios.defaults.headers.common['Pragma'] = 'no-cache';\naxios.defaults.headers.common['Expires'] = '0';\n\n// 拦截响应以捕获错误\naxios.interceptors.response.use(\n    (response) => {\n        return response;\n    },\n    (error) => {\n        // 任何不在 2xx 范围内的状态码都会触发这个函数\n        let message;\n\n        if (error && error.response && error.response.status === 404) {\n            <Navigate to=\"/error-404\" />\n        } else if (error && error.response && error.response.status === 500) {\n            <Navigate to=\"/error-500\" />\n        } else {\n            message = error.response && error.response.data ? error.response.data['message'] : error.message || error;\n            return Promise.reject(message);\n        }\n    }\n);\n\nclass APICore {\n    /**\n    * Fetches data from given url\n    */\n    get = async (url, params) => {\n        // 等待获取凭证并设置授权头\n        axios.defaults.headers.common['Authorization'] = 'Basic ' + await getCredentials();\n        let response;\n        if (params) {\n            var queryString = params\n                ? Object.keys(params)\n                    .map((key) => key + '=' + params[key])\n                    .join('&')\n                : '';\n            response = axios.get(`${url}?${queryString}`, params);\n        } else {\n            response = axios.get(`${url}`, params);\n        }\n        return response;\n    };\n\n    /**\n    * post given data to url\n    */\n    create = async (url, data) => {\n        // 等待获取凭证并设置授权头\n        axios.defaults.headers.common['Authorization'] = 'Basic ' + await getCredentials();\n        return axios.post(url, data);\n    };\n}\n\nexport { APICore };\n","import { APICore } from './apiCore';\n\nconst api = new APICore();\n\n//App 安装\nfunction AppInstall(params: any): Promise<any> {\n    const baseUrl = '/AppManage/AppInstall';\n    return api.get(`${baseUrl}`, params);\n}\n\n//App 列表查询\nfunction AppList(params: any): Promise<any> {\n    const baseUrl = '/AppManage/AppList';\n    return api.get(`${baseUrl}`, params);\n}\n\n//App 卸载\nfunction AppUninstall(params: any): Promise<any> {\n    const baseUrl = '/AppManage/AppUninstall';\n    return api.get(`${baseUrl}`, params);\n}\n\n//App 停止\nfunction AppStop(params: any): Promise<any> {\n    const baseUrl = '/AppManage/AppStop';\n    return api.get(`${baseUrl}`, params);\n}\n\n//App 启动\nfunction AppStart(params: any): Promise<any> {\n    const baseUrl = '/AppManage/AppStart';\n    return api.get(`${baseUrl}`, params);\n}\n\n//App 重启\nfunction AppRestart(params: any): Promise<any> {\n    const baseUrl = '/AppManage/AppRestart';\n    return api.get(`${baseUrl}`, params);\n}\n\n//App 状态查询\nfunction AppStatus(params: any): Promise<any> {\n    const baseUrl = '/AppManage/AppStatus';\n    return api.get(`${baseUrl}`, params);\n}\n\n//查询APP对应的域名\nfunction AppDomainList(params: any): Promise<any> {\n    const baseUrl = '/AppManage/AppDomainList';\n    return api.get(`${baseUrl}`, params);\n}\n\n//删除APP绑定的域名\nfunction AppDomainDelete(params: any): Promise<any> {\n    const baseUrl = '/AppManage/AppDomainDelete';\n    return api.get(`${baseUrl}`, params);\n}\n\n//修改APP绑定的域名\nfunction AppDomainUpdate(params: any): Promise<any> {\n    const baseUrl = '/AppManage/AppDomainUpdate';\n    return api.get(`${baseUrl}`, params);\n}\n\n//APP绑定域名\nfunction AppDomainAdd(params: any): Promise<any> {\n    const baseUrl = '/AppManage/AppDomainAdd';\n    return api.get(`${baseUrl}`, params);\n}\n\n//设定默认域名\nfunction AppDomainSet(params: any): Promise<any> {\n    const baseUrl = '/AppManage/AppDomainSet';\n    return api.get(`${baseUrl}`, params);\n}\n\nexport { AppInstall, AppList, AppUninstall, AppStop, AppStart, AppRestart, AppStatus, AppDomainList, AppDomainDelete, AppDomainUpdate, AppDomainAdd, AppDomainSet };\n\n","import ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport Accordion from '@mui/material/Accordion';\nimport AccordionDetails from '@mui/material/AccordionDetails';\nimport AccordionSummary from '@mui/material/AccordionSummary';\nimport MuiAlert from '@mui/material/Alert';\nimport Snackbar from '@mui/material/Snackbar';\nimport Typography from '@mui/material/Typography';\nimport classNames from 'classnames';\nimport cockpit from 'cockpit';\nimport { default as React, useEffect, useState } from 'react';\nimport { Alert, Badge, Button, Card, Col, Form, Modal, Row } from 'react-bootstrap';\nimport { useNavigate } from 'react-router-dom';\nimport FormInput from '../../components/FormInput';\nimport Spinner from '../../components/Spinner';\nimport { AppDomainAdd, AppDomainDelete, AppDomainList, AppDomainSet, AppDomainUpdate } from '../../helpers';\n\nconst _ = cockpit.gettext;\n\nconst MyMuiAlert = React.forwardRef(function Alert(props, ref) {\n    return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\n});\n\n//删除绑定的域名\nconst RemoveDomain = (props): React$Element<React$FragmentType> => {\n    const navigate = useNavigate(); //用于页面跳转\n    const [disable, setDisable] = useState(false);//用于按钮禁用\n    const [showAlert, setShowAlert] = useState(false); //用于是否显示错误提示\n    const [alertMessage, setAlertMessage] = useState(\"\");//用于显示错误提示消息\n\n    function closeAllModals() {\n        //关闭所有弹窗\n        props.onClose();\n        props.onDataChange();\n    }\n\n    return (\n        <Modal show={props.showConform} onHide={props.onClose} size=\"lg\"\n            scrollable=\"true\" backdrop=\"static\" style={{ backgroundColor: \"rgba(0,0,0,0.8)\" }}>\n            <Modal.Header onHide={props.onClose} className={classNames('modal-colored-header', 'bg-warning')}>\n                <h4>{_(\"Delete domain binding\")}</h4>\n            </Modal.Header>\n            <Modal.Body className=\"row\" >\n                <span style={{ margin: \"10px 0px\" }}>{_(\"Are you sure you want to delete the domain for:\")} {props.deleteRowData.domainValue} ? </span>\n                <div>\n                    {showAlert && <Alert variant=\"danger\" className=\"my-2\">\n                        {alertMessage}\n                    </Alert>}\n                </div>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"light\" onClick={props.onClose}>\n                    {_(\"Close\")}\n                </Button>{\" \"}\n                <Button disabled={disable} variant=\"warning\" onClick={async () => {\n                    try {\n                        setDisable(true);\n                        const response = await AppDomainDelete({ app_id: props.deleteRowData.app_id, domain: props.deleteRowData.domainValue });\n                        if (response.data.Error) {\n                            setShowAlert(true);\n                            setAlertMessage(response.data.Error.Message);\n                        }\n                        else { //删除成功\n                            setDisable(false);\n                            closeAllModals();\n                        }\n                    }\n                    catch (error) {\n                        navigate(\"/error-500\");\n                    }\n                    finally {\n                        setDisable(false);\n                    }\n                }}>\n                    {disable && <Spinner className=\"spinner-border-sm me-1\" tag=\"span\" color=\"white\" />} {_(\"Delete\")}\n                </Button>\n            </Modal.Footer>\n        </Modal >\n    );\n}\n\nconst AppAccess = (props): React$Element<React$FragmentType> => {\n    const navigate = useNavigate(); //用于页面跳转\n    const [domains, setDomains] = useState([]); // 定义域名数组\n    const [loading, setLoading] = useState(false); // 定义执行操作时的加载转态\n\n    const [showAlert, setShowAlert] = useState(false); //用于是否显示错误提示\n    const [alertMessage, setAlertMessage] = useState(\"\");  //用于显示错误提示消息\n    const [alertType, setAlertType] = useState(\"\");  //用于确定弹窗的类型：error\\success\n    const [showRemoveDomain, setShowRemoveDomain] = useState(false); //用于显示状态为failed时显示确定删除的弹窗\n    const [deleteRowData, setDeleteRowData] = useState(null); //用于保存将要删除的行数据\n    const [inputDomainValue, setInputDomainValue] = useState(\"\");//用户保存用户输入的域名\n\n    const [isExpandedForDomain, setIsExpandedForDomain] = React.useState(true); //用于保存“域名绑定”的折叠状态\n    const [isExpandedForNoDomain, setIsExpandedForNoDomain] = React.useState(true);//用于保存“无域名访问”的折叠状态\n    const [isExpandedForAccount, setIsExpandedForAccount] = React.useState(false);//用于保存“无域名访问”的折叠状态\n\n    const getDomains = async () => {\n        try {\n            const response = await AppDomainList({ app_id: props.data.app_id });\n            if (response.data.Error) {\n                setShowAlert(true);\n                setAlertType(\"error\")\n                setAlertMessage(response.data.Error.Message);\n            }\n            else {\n                let responseData = response.data.ResponseData.Domain_set;\n                let defaultdomain = responseData.default_domain; //获取返回的默认域名数据\n\n                let resturnDomains = responseData.domains.map(domain => {\n                    return {\n                        app_id: props.data.app_id,\n                        domainValue: domain,\n                        newDomainValue: domain,\n                        isEditable: false,\n                        isFromAPI: true,\n                        isDefaultDomain: domain === defaultdomain ? true : false\n                    };\n                });\n                //排序：将默认域名放前面\n                // resturnDomains.sort((a, b) => {\n                //     return b.isDefaultDomain - a.isDefaultDomain;\n                // });\n                setDomains(resturnDomains);\n            }\n        }\n        catch (error) {\n            navigate(\"/error-500\");\n        }\n    }\n\n    useEffect(() => {\n        getDomains();\n    }, []);\n\n    //添加域名\n    const addRow = () => {\n        if (domains.length < 10) {\n            // 限制最多只能有10个domain\n            setDomains([\n                ...domains,\n                {\n                    app_id: props.data.app_id,\n                    domainValue: \"\",\n                    newDomainValue: \"\",\n                    isEditable: true,\n                    isFromAPI: false,\n                    isDefaultDomain: false\n                },\n            ]);\n        }\n    }\n\n    //删除域名\n    const deleteRow = async (row, index) => {\n        if (!row.isFromAPI) { //如果是点“添加”产生的记录行，则直接删除，不需要调用接口\n            const newRows = [...domains]; // 复制状态数组\n            newRows.splice(index, 1); // 删除指定索引的对象\n            setDomains(newRows); // 更新状态数组\n        }\n        else { //表示记录是从接口获取的，删除时需要调用接口删除\n            setShowRemoveDomain(true);\n            setDeleteRowData(row);\n        }\n    }\n\n    //编辑\n    const editRow = (index) => {\n        const newRows = [...domains]; // 复制状态数组\n        newRows[index].isEditable = !newRows[index].isEditable; // 切换isEditable属性\n        setDomains(newRows); // 更新状态数组\n    }\n\n    //取消编辑\n    const cancelEditRow = (index) => {\n        const newRows = [...domains]; // 复制状态数组\n        newRows[index].newDomainValue = newRows[index].domainValue; // 用户有修改但是取消编辑，需要将数据还原\n        newRows[index].isEditable = !newRows[index].isEditable; // 切换isEditable属性\n        setDomains(newRows); // 更新状态数组\n    }\n\n    //设为默认域名\n    const setDefaultDomain = async (index) => {\n        const defaultDomain = domains[index].newDomainValue; //获取域名\n        setLoading(true);\n        try {  //调用设定默认域名接口\n            const response = await AppDomainSet({ app_id: props.data.app_id, domain: defaultDomain });\n            if (response.data.Error) {\n                setShowAlert(true);\n                setAlertType(\"error\")\n                setAlertMessage(response.data.Error.Message);\n            }\n            else {\n                setShowAlert(true);\n                setAlertType(\"success\")\n                setAlertMessage(\"设置成功!\");\n                getDomains();\n            }\n        }\n        catch (error) {\n            navigate(\"/error-500\");\n        }\n        finally {\n            setLoading(false);\n        }\n    }\n\n    //保存\n    const saveRow = async (row, index) => {\n        const input = document.getElementsByName(`domain-${index}`)[0]; // 获取搜索框元素\n        const value = input.value; // 获取搜索框的值\n        const regex = /^(?!https?:\\/\\/)([\\da-z\\.-]+\\.)*([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([\\/\\w \\.-]*)*\\/?$/; // 定义一个正则表达式，用来验证域名的格式\n        if (value) {\n            if (regex.test(value)) {\n                if (row.isFromAPI) { //如果取到isFromAPI为true,表示要修改数据\n                    if (row.domainValue != row.newDomainValue) { //如果修改前的数据不等于修改后的数据，则调用修改接口\n                        setLoading(true);\n                        try {\n                            const response = await AppDomainUpdate({ app_id: props.data.app_id, domain_old: row.domainValue, domain_new: value });\n                            if (response.data.Error) {\n                                setShowAlert(true);\n                                setAlertType(\"error\")\n                                setAlertMessage(response.data.Error.Message);\n                            }\n                            else {\n                                setShowAlert(true);\n                                setAlertType(\"success\")\n                                setAlertMessage(\"Success\");\n                                getDomains();\n                            }\n                        }\n                        catch (error) {\n                            navigate(\"/error-500\");\n                        }\n                        finally {\n                            setLoading(false);\n                        }\n                    }\n                    else {\n                        const newRows = [...domains]; // 复制状态数组\n                        newRows[index].isEditable = !newRows[index].isEditable; // 切换isEditable属性\n                        setDomains(newRows); // 更新状态数组\n                    }\n                }\n                else { //如果取到isFromAPI为false,表示是绑定数据 \n                    try {\n                        setLoading(true);\n                        const response = await AppDomainAdd({ app_id: props.data.app_id, domains: value });\n                        if (response.data.Error) {\n                            setShowAlert(true);\n                            setAlertType(\"error\")\n                            setAlertMessage(response.data.Error.Message);\n                        }\n                        else {\n                            setShowAlert(true);\n                            setAlertType(\"success\")\n                            setAlertMessage(\"Success\");\n                            getDomains();\n                        }\n                    }\n                    catch (error) {\n                        navigate(\"/error-500\");\n                    }\n                    finally {\n                        setLoading(false);\n                    }\n                }\n            } else {\n                setShowAlert(true);\n                setAlertType(\"error\")\n                setAlertMessage(_(\"Please enter the correct domain name and cannot start with http or https!\"));\n            }\n        }\n        else {\n            // 如果搜索框的值为空\n            setShowAlert(true);\n            setAlertType(\"error\")\n            setAlertMessage(_(\"Domain name cannot be empty\"));\n        }\n    }\n\n    //处理输入\n    function handleChange(index, e) {\n        const newRows = [...domains]; // 复制状态数组\n        newRows[index].newDomainValue = e.target.value; // 修改inputValue属性\n        setDomains(newRows); // 更新状态数组\n    }\n\n    const handleAlertClose = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        setShowAlert(false);\n        setAlertMessage(\"\");\n    };\n\n    //用于取消删除域名弹窗\n    const cancelRemoveDomain = () => {\n        setShowRemoveDomain(false);\n    };\n\n    const [isOpen, setIsOpen] = useState(false);\n    const toggle = () => setIsOpen(!isOpen);\n\n    const handleChangefordomin = (event, newExpanded) => {\n        setIsExpandedForDomain(newExpanded);\n    };\n\n    const handleChangefornodomin = (event, newExpanded) => {\n        setIsExpandedForNoDomain(newExpanded);\n    };\n\n    const handleChangeforaccount = (event, newExpanded) => {\n        setIsExpandedForAccount(newExpanded);\n    };\n\n    return (\n        <>\n            <Card>\n                {loading && (\n                    <div className=\"card-disabled\" style={{ zIndex: 999 }}>\n                        <div className=\"card-portlets-loader\"></div>\n                    </div>\n                )}\n                <Card.Body>\n                    <Accordion defaultExpanded={true} onChange={handleChangefordomin} className='mb-2'>\n                        <AccordionSummary\n                            expandIcon={<ExpandMoreIcon />}\n                            aria-controls=\"panel1a-content\"\n                            id=\"panel1a-header\"\n                        >\n                            <Typography>\n                                <label className=\"me-2 fs-5 d-block\">域名访问</label>\n                                <span className=\"me-2 fs-6\" style={{ display: isExpandedForDomain ? 'inline' : 'none' }}>\n                                    建议绑定域名访问应用，以免无域名造成应用异常\n                                </span>\n                            </Typography>\n                        </AccordionSummary>\n                        <AccordionDetails>\n                            <Typography>\n                                <Card>\n                                    <Card.Header>\n                                        <Row className=\"mb-2 align-items-center\">\n                                            <Col xs={12} md={9}></Col>\n                                            <Col xs={12} md={3} className=\"d-flex justify-content-end\">\n                                                <Button variant=\"primary\" size=\"sm\" className=\"me-2\" onClick={() => addRow()}>添加域名</Button>\n                                                {\n                                                    props.data?.config?.admin_domain_url && (\n                                                        <a href={props.data?.config?.admin_domain_url} target=\"_blank\" className=\"me-2\">\n                                                            <Button variant=\"primary\" size=\"sm\">访问后台</Button>\n                                                        </a>\n                                                    )\n                                                }\n                                                <Button size=\"sm\" className=\"me-2\" variant=\"primary\"\n                                                    onClick={async () => {\n                                                        setLoading(true);\n                                                        await getDomains();\n                                                        setLoading(false);\n                                                    }} > {_(\"Refresh\")}\n                                                </Button>\n                                            </Col>\n                                        </Row>\n                                    </Card.Header>\n                                    <Card.Body>\n                                        {domains.map((row, index) => (\n                                            <Row className=\"mb-2\" key={index}>\n                                                <Col xs={12} md={9}>\n                                                    <Col xs=\"auto\">\n                                                        <FormInput className=\"mb-2 mb-md-0\" type=\"text\"\n                                                            name={`domain-${index}`}\n                                                            value={row.newDomainValue}\n                                                            disabled={!row.isEditable}\n                                                            onChange={(e) => handleChange(index, e)} />\n                                                    </Col>\n                                                </Col>\n                                                <Col xs={12} md={3}>\n                                                    <Button variant=\"link text-danger\" style={{ padding: \"5px\" }} onClick={() => deleteRow(row, index)}>\n                                                        {_(\"delete\")}\n                                                    </Button>\n                                                    {row.isEditable && row.isFromAPI && (\n                                                        <>\n                                                            <Button variant=\"link text-success\" style={{ padding: \"5px\" }} onClick={() => saveRow(row, index)}>\n                                                                {_(\"save\")}\n                                                            </Button>\n                                                            <Button variant=\"link text-success\" style={{ padding: \"5px\" }} onClick={() => cancelEditRow(index)}>\n                                                                {_(\"cancel\")}\n                                                            </Button>\n                                                        </>\n                                                    )}\n                                                    {row.isEditable && !row.isFromAPI && (\n\n                                                        <Button variant=\"link text-success\" style={{ padding: \"5px\" }} onClick={() => saveRow(row, index)}>\n                                                            {_(\"save\")}\n                                                        </Button>\n                                                    )}\n                                                    {!row.isEditable && (\n                                                        <>\n                                                            <Button variant=\"link text-primary\" style={{ padding: \"5px\" }} onClick={() => editRow(index)}>\n                                                                {_(\"edit\")}\n                                                            </Button>\n                                                            <a href={'http://' + row.domainValue} target=\"_blank\">\n                                                                <Button variant=\"link text-primary\" style={{ padding: \"5px\" }}>{_(\"access\")}</Button>\n                                                            </a>\n                                                            {\n                                                                row.isDefaultDomain ? (\n                                                                    <Badge className=\"ms-2 bg-success\"> {_(\"default\")} </Badge>\n                                                                ) : (\n                                                                    <Button variant=\"link text-primary\" onClick={() => setDefaultDomain(index)}>\n                                                                        {_(\"set as default\")}\n                                                                    </Button>\n                                                                )\n                                                            }\n                                                        </>\n                                                    )}\n                                                </Col>\n                                            </Row>\n                                        ))}\n                                    </Card.Body>\n                                    <Card.Footer>\n                                        <Row className=\"mb-2 mt-2\">\n                                            <Col sm={12}>\n                                                <span>\n                                                    如要需要进行Https设置,或者更多自定义配置，请点击更多\n                                                </span>\n                                                <a href=\"/nginx\" target=\"_parent\" className=\"me-2 float-end\">\n                                                    <Button variant=\"primary\" size=\"sm\">{_(\"More\")}</Button>\n                                                </a>\n                                            </Col>\n                                        </Row>\n                                    </Card.Footer>\n                                </Card >\n                            </Typography>\n                        </AccordionDetails>\n                    </Accordion>\n                    {\n                        (props.data?.config?.url && ((props.data?.config?.default_domain && !props.data?.app_replace_url) || (!props.data?.config?.default_domain))) &&\n                        <Accordion defaultExpanded={true} onChange={handleChangefornodomin} className='mb-2'>\n                            <AccordionSummary\n                                expandIcon={<ExpandMoreIcon />}\n                                aria-controls=\"panel2a-content\"\n                                id=\"panel2a-header\"\n                            >\n                                <Typography>\n                                    <label className=\"me-2 fs-5 d-block\">无域名访问</label>\n                                    <span className=\"me-2 fs-6\" style={{ display: isExpandedForNoDomain ? 'inline' : 'none' }}>没有域名可以通过IP+端口的方式临时访问应用</span>\n                                </Typography>\n                            </AccordionSummary>\n                            <AccordionDetails>\n                                <Typography>\n                                    <Card>\n                                        <Card.Body>\n                                            {\n                                                props.data?.config?.url &&\n                                                (\n                                                    <div>\n                                                        <label className=\"me-2 fs-5\">前台:</label>\n                                                        <a href={props.data?.config?.url} target=\"_blank\" className=\"me-2\">\n                                                            {props.data?.config?.url}\n                                                        </a>\n                                                    </div>\n                                                )\n                                            }\n                                            {\n                                                props.data?.config?.admin_url &&\n                                                (\n                                                    <div>\n                                                        <label className=\"me-2 fs-5\">后台:</label>\n                                                        <a href={props.data?.config?.admin_url} target=\"_blank\" className=\"me-2\">\n                                                            {props.data?.config?.admin_url}\n                                                        </a>\n                                                    </div>\n                                                )\n                                            }\n                                        </Card.Body>\n                                    </Card>\n                                </Typography>\n                            </AccordionDetails>\n                        </Accordion>\n                    }\n                    {\n                        props.data?.config?.admin_username &&\n                        <Accordion className='mb-2' onChange={handleChangeforaccount}>\n                            <AccordionSummary\n                                expandIcon={<ExpandMoreIcon />}\n                                aria-controls=\"panel3a-content\"\n                                id=\"panel3a-header\"\n                            >\n                                <Typography>\n                                    <label className=\"me-2 fs-5 d-block\">初始账号</label>\n                                    <span className=\"me-2 fs-6\" style={{ display: isExpandedForAccount ? 'inline' : 'none' }}>\n                                        此应用程序是使用管理员帐户预先设置的，请立即更改管理员密码。初始凭据为：\n                                    </span>\n                                </Typography>\n                            </AccordionSummary>\n                            <AccordionDetails>\n                                <Typography>\n                                    <Card>\n                                        <Card.Body>\n                                            {/* <p>\n                                                This app is pre-setup with an admin account,Please change the admin password immediately. The initial credentials are:\n                                            </p> */}\n                                            <Form.Group as={Row} className=\"mb-3\">\n                                                <Form.Label htmlFor=\"username\" column md={2} className='fs-5'>\n                                                    UserName\n                                                </Form.Label>\n                                                <Col md={4}>\n                                                    <Form.Control\n                                                        type=\"text\"\n                                                        name=\"username\"\n                                                        id=\"username\"\n                                                        defaultValue={props.data?.config?.admin_username}\n                                                        readOnly\n                                                    />\n                                                </Col>\n                                            </Form.Group>\n\n                                            <Form.Group as={Row} className=\"mb-3\">\n                                                <Form.Label htmlFor=\"password\" column md={2} className='fs-5'>\n                                                    Password\n                                                </Form.Label>\n                                                <Col md={4}>\n                                                    <FormInput\n                                                        type=\"password\"\n                                                        name=\"password\"\n                                                        containerClass={'mb-3'}\n                                                        value={props.data?.config?.admin_password}\n                                                        readOnly\n                                                    />\n                                                </Col>\n                                            </Form.Group>\n                                        </Card.Body>\n                                    </Card>\n                                </Typography>\n                            </AccordionDetails>\n                        </Accordion>\n                    }\n                </Card.Body>\n            </Card >\n            {\n                showRemoveDomain &&\n                <RemoveDomain showConform={showRemoveDomain} onClose={cancelRemoveDomain} deleteRowData={deleteRowData} onDataChange={getDomains} />\n            }\n            {\n                showAlert &&\n                <Snackbar open={showAlert} autoHideDuration={5000} onClose={handleAlertClose} anchorOrigin={{ vertical: 'top', horizontal: 'center' }}>\n                    <MyMuiAlert onClose={handleAlertClose} severity={alertType} sx={{ width: '100%' }}>\n                        {alertMessage}\n                    </MyMuiAlert>\n                </Snackbar>\n            }\n        </>\n    );\n}\n\nexport default AppAccess;","import axios from 'axios';\nimport cockpit from \"cockpit\";\nimport React, { useEffect, useState } from 'react';\nimport { Badge, Button, Card, Col, Row, Table } from 'react-bootstrap';\nimport { useNavigate } from 'react-router-dom';\n\nconst _ = cockpit.gettext;\n\nconst AppContainer = (props): React$Element<React$FragmentType> => {\n    const navigate = useNavigate(); //用于页面跳转\n    const [containersInfo, setContainersInfo] = useState([]);\n    const customer_name = props.data.customer_name;\n    const [endpointsId, setEndpointsId] = useState(null);\n\n    //通过Portainer的接口获取容器数据\n    const getContainersData = async () => {\n        try {\n            let jwt = window.localStorage.getItem(\"portainer.JWT2\"); //获取存储在本地的JWT数据 \n\n            //如果获取不到jwt，则模拟登录并写入新的jwt\n            if (jwt === null) {\n                const response = await axios.get('./config.json'); //从项目下读取配置文件\n                if (response.status === 200) {\n                    let config = response.data.PORTAINER;\n                    const { PORTAINER_USERNAME, PORTAINER_PASSWORD, PORTAINER_AUTH_URL, PORTAINER_HOME_PAGE } = config;\n\n                    //调用portainer的登录API，模拟登录\n                    const authResponse = await axios.post(PORTAINER_AUTH_URL, {\n                        username: PORTAINER_USERNAME,\n                        password: PORTAINER_PASSWORD\n                    });\n                    if (authResponse.status === 200) {\n                        //jwt = \"\\\"\" + authResponse.data.jwt + \"\\\"\";\n                        jwt = authResponse.data.jwt\n                        //let jwt_localStorage = \"\\\"\" + authResponse.data.jwt + \"\\\"\";\n                        window.localStorage.setItem('portainer\\.JWT2', jwt); //关键是将通过API登录后获取的jwt，存储到本地localStorage\n                    } else {\n                        console.error('Error:', authResponse);\n                    }\n                }\n                else {\n                    console.error('Error:', response);\n                }\n            }\n            else {\n                jwt = jwt.replace(/\"/g, '')\n            }\n\n            //从portainer接口获取endpoints\n            const endpointsData = await axios.get('/portainer/api/endpoints', {\n                headers: {\n                    'Authorization': 'Bearer ' + jwt\n                }\n            });\n            if (endpointsData.status === 200) {\n                //应该可能会返回“远程”的endpoint，这里只获取“本地”endpoint,条件为URL包含'/var/run/docker.sock'\n                const id = endpointsData.data.find(({ URL }) => URL.includes('/var/run/docker.sock')).Id;\n                setEndpointsId(id)\n                //调用接口获取\n                const containersData = await axios.get(`/portainer/api/endpoints/${id}/docker/containers/json`, {\n                    headers: {\n                        'Authorization': 'Bearer ' + jwt\n                    },\n                    params: {\n                        all: true,\n                        filters: JSON.stringify({ \"label\": [`com.docker.compose.project=${customer_name}`] })\n                    }\n                })\n                if (containersData.status === 200) {\n                    setContainersInfo(containersData.data);\n                }\n                else {\n                    console.error('Error:', containersData);\n                }\n            }\n            else {\n                console.error('Error:', endpointsData);\n            }\n        }\n        catch (error) {\n            console.error('Error:', error);\n            //navigate(\"/error-500\");\n        }\n    }\n\n    useEffect(() => {\n        getContainersData();\n    }, []);\n\n    return (\n        <Row>\n            <Col xs={12}>\n                <Card>\n                    <Card.Header>\n                        <Row className=\"align-items-center\">\n                            <Col xs={12} md={10}>\n                                <label className=\"me-2 fs-5 d-block\">{_(\"Container\")}</label>\n                                <span className=\"me-2 fs-6\">本应用由如下容器组成，名称为 {customer_name} 的为主容器  </span>\n                            </Col>\n                            <Col xs={12} md={2}>\n                                <a href={`/portainer/#!/${endpointsId}/docker/stacks/${customer_name}?type=2&regular=false&external=true&orphaned=false`}\n                                    target=\"_blank\" className=\"me-2\">\n                                    <Button variant=\"primary\" size=\"sm\" className=\"float-end\">{_(\"More\")}</Button>\n                                </a>\n                            </Col>\n                        </Row>\n                    </Card.Header>\n                    <Card.Body>\n                        <Table className=\"mb-0\">\n                            <thead>\n                                <tr>\n                                    <th>Name</th>\n                                    <th>State</th>\n                                    <th style={{ textAlign: 'center' }}>Actions</th>\n                                    <th>Image</th>\n                                    <th>Created</th>\n                                    <th>Ip Address</th>\n                                    <th>Published Ports</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {containersInfo.map((container, index) => {\n                                    return (\n                                        <tr key={index}>\n                                            <td>{container.Names?.[0]?.replace(/^\\/|\\/$/g, '')}</td>\n                                            <td>\n                                                <Badge className={`${container.State === 'running' ? 'bg-success' : container.State === 'exited' ? 'bg-danger' : 'info'}`}>\n                                                    {container.State}\n                                                </Badge>\n                                            </td>\n                                            <td style={{ textAlign: 'center' }}>\n                                                <a href={`/portainer/#!/${endpointsId}/docker/containers/${container.Id}/logs`}\n                                                    target=\"_blank\" title='Logs'>\n                                                    <i className=\"dripicons-document-remove noti-icon\"></i>{' '}\n                                                </a>\n                                                {\n                                                    container.State === \"running\" && (\n                                                        <a href={`/portainer/#!/${endpointsId}/docker/containers/${container.Id}/stats`}\n                                                            target=\"_blank\" title='Stats'>\n                                                            <i className=\"dripicons-pulse noti-icon\"></i>{' '}\n                                                        </a>\n                                                    )\n                                                }\n\n                                            </td>\n                                            <td>{container.Image}</td>\n                                            <td>{new Date(container.Created * 1000).toLocaleString()}</td>\n                                            <td>{container.NetworkSettings.Networks[container.HostConfig.NetworkMode].IPAddress}</td>\n                                            <td>{container.Ports.find(port => port.IP && /^(\\d{1,3}\\.){3}\\d{1,3}$/.test(port.IP))?.PublicPort}:{container.Ports.find(port => port.IP && /^(\\d{1,3}\\.){3}\\d{1,3}$/.test(port.IP))?.PrivatePort}</td>\n                                        </tr>\n                                    );\n                                })}\n                            </tbody>\n                        </Table>\n                    </Card.Body>\n                </Card>\n            </Col>\n        </Row >\n    );\n}\n\nexport default AppContainer;","import cockpit from \"cockpit\";\nimport React from 'react';\nimport { Card, Col, Row, Table } from 'react-bootstrap';\nimport { useNavigate } from 'react-router-dom';\n\nconst _ = cockpit.gettext;\n\nconst AppOverview = (props): React$Element<React$FragmentType> => {\n    const navigate = useNavigate(); //用于页面跳转\n\n    return (\n        <Row>\n            <Col xs={12}>\n                <Card>\n                    <Card.Header>\n                        <label className=\"me-2 fs-5 d-block\">应用概览</label>\n                    </Card.Header>\n                    <Card.Body>\n                        <Table responsive className=\"mb-0\" bordered={false}>\n                            <tbody>\n                                <tr>\n                                    <td style={{ width: '10%', fontWeight: \"bold\" }}>应用名称：</td>\n                                    <td>{props.data?.app_name}</td>\n                                </tr>\n                                <tr>\n                                    <td style={{ width: '10%', fontWeight: \"bold\" }}>应用版本：</td>\n                                    <td>{props.data?.app_version}</td>\n                                </tr>\n                                <tr>\n                                    <td style={{ width: '10%', fontWeight: \"bold\" }}>应用端口：</td>\n                                    <td>{props.data?.config?.port}</td>\n                                </tr>\n                                <tr>\n                                    <td style={{ width: '10%', fontWeight: \"bold\" }}>创建时间：</td>\n                                    <td>{props.data?.create_time}</td>\n                                </tr>\n                                <tr>\n                                    <td style={{ width: '10%', fontWeight: \"bold\" }}>配置目录： </td>\n                                    <td>{props.data?.config_path}</td>\n                                </tr>\n                                <tr>\n                                    <td style={{ width: '10%', fontWeight: \"bold\" }}>数据目录：</td>\n                                    <td>{props.data?.volume_data}</td>\n                                </tr>\n                            </tbody>\n                        </Table>\n                        {/* <Table responsive className=\"mb-0\" bordered={false}>\n                            <tbody>\n                                <tr>\n                                    <td style={{ width: '10%', fontWeight: \"bold\" }}>应用名称：</td>\n                                    <td>{props.data?.app_name}</td>\n                                    <td style={{ width: '10%', fontWeight: \"bold\" }}>应用版本：</td>\n                                    <td>{props.data?.app_version}</td>\n                                </tr>\n                                <tr>\n                                    <td style={{ width: '10%', fontWeight: \"bold\" }}>应用端口：</td>\n                                    <td>{props.data?.config?.port}</td>\n                                    <td style={{ width: '10%', fontWeight: \"bold\" }}>创建时间：</td>\n                                    <td>{props.data?.create_time}</td>\n                                </tr>\n                                <tr>\n                                    <td style={{ width: '10%', fontWeight: \"bold\" }}>配置目录： </td>\n                                    <td>{props.data?.config_path}</td>\n                                    <td style={{ width: '10%', fontWeight: \"bold\" }}>数据目录：</td>\n                                    <td>{props.data?.volume_data}</td>\n                                </tr>\n                            </tbody>\n                        </Table> */}\n                    </Card.Body>\n                </Card>\n            </Col>\n        </Row>\n    );\n}\n\nexport default AppOverview;","import classNames from 'classnames';\nimport cockpit from 'cockpit';\nimport React, { forwardRef, useImperativeHandle, useState } from 'react';\nimport { Alert, Button, Col, Modal, Row } from 'react-bootstrap';\nimport { useNavigate } from 'react-router-dom';\nimport Spinner from '../../components/Spinner';\nimport { AppStart, AppStop, AppUninstall } from '../../helpers';\n\nconst _ = cockpit.gettext;\n\n//卸载应用时的确定/取消弹窗\nconst UninstallConform = (props) => {\n    const navigate = useNavigate(); //用于页面跳转\n    const [disable, setDisable] = useState(false);//用于按钮禁用\n    const [showAlert, setShowAlert] = useState(false); //用于是否显示错误提示\n    const [alertMessage, setAlertMessage] = useState(\"\");//用于显示错误提示消息\n\n    function closeAllModals() {\n        //关闭弹窗\n        props.onClose();\n        props.onCloseFatherModal();\n\n        //更新主页APP的数据\n        props.onDataChange();\n    }\n\n    return (\n        <Modal show={props.showConform} onHide={props.onClose} size=\"lg\"\n            scrollable=\"true\" backdrop=\"static\" style={{ backgroundColor: \"rgba(0,0,0,0.8)\" }}>\n            <Modal.Header onHide={props.onClose} closeButton className={classNames('modal-colored-header', 'bg-warning')}>\n                <h4>{_(\"Uninstall\")} {props.app.customer_name}</h4>\n            </Modal.Header>\n            <Modal.Body className=\"row\" >\n                <span style={{ margin: \"10px 0px\" }}>{_(\"This will immediately uninstall\")} {props.app.customer_name} {_(\"and remove all its data.\")}</span>\n                <div>\n                    {showAlert && <Alert variant=\"danger\" className=\"my-2\">\n                        {alertMessage}\n                    </Alert>}\n                </div>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"light\" onClick={props.onClose}>\n                    {_(\"Close\")}\n                </Button>{\" \"}\n                <Button disabled={disable} variant=\"warning\" onClick={async () => {\n                    try {\n                        setDisable(true);\n                        //调用卸载应用接口\n                        const response = await AppUninstall({ app_id: props.app.app_id });\n                        if (response.data.Error) {\n                            setShowAlert(true);\n                            setAlertMessage(response.data.Error.Message);\n                        }\n                        else {\n                            closeAllModals(); //关闭弹窗并更新数据\n                        }\n                    }\n                    catch (error) {\n                        navigate(\"/error-500\");\n                    }\n                }}>\n                    {disable && <Spinner className=\"spinner-border-sm me-1\" tag=\"span\" color=\"white\" />} {_(\"Uninstall\")}\n                </Button>\n            </Modal.Footer>\n        </Modal >\n    );\n}\n\n//卸载应用选项卡\nconst Uninstall = forwardRef((props, ref): React$Element<React$FragmentType> => {\n    const [showUninstallConform, setShowUninstallConform] = useState(false);//用于确认卸载弹窗的标识\n    const [disable, setDisable] = useState(false);//用于按钮禁用\n    const navigate = useNavigate(); //用于页面跳转\n\n    //用于显示确定/取消卸载应用的弹窗\n    const handleClick = () => {\n        setShowUninstallConform(true);\n    };\n    //用于关闭确定/取消卸载应用的弹窗\n    const handleClose = () => {\n        setShowUninstallConform(false);\n    };\n\n    //设置按钮禁用\n    const setButtonDisable = () => {\n        setDisable(true);\n    };\n\n    //设置按钮启用\n    const setButtonEnable = () => {\n        setDisable(false);\n    };\n\n    //提供给父组件调用的方法，用于在父组件中调用子组件的方法\n    useImperativeHandle(ref, () => ({\n        setButtonDisable,\n        setButtonEnable,\n    }));\n\n    return (\n        <>\n            <Row className=\"mb-2\">\n                <Col sm={12}>\n                    <label className=\"me-1\" style={{ fontWeight: \"bolder\", marginBottom: \"5px\" }}>{_(\"Start / Stop\")}</label>\n                    <p>\n                        {_(\"Apps can be stopped to conserve server resources instead of uninstalling.\")}\n                    </p>\n                    {props.data.status === \"running\" ?\n                        <Button variant=\"secondary\" className=\"float-end\" disabled={disable} onClick={async () => {\n                            try {\n                                props.disabledButton();\n                                setDisable(true);\n                                //调用应用停止接口\n                                const response = await AppStop({ app_id: props.data.app_id });\n                                if (response.data.Error) {\n                                    navigate(\"/error\")\n                                }\n                                else {\n                                    props.onDataChange(props.data.app_id);\n                                }\n                            }\n                            catch (error) {\n                                navigate(\"/error-500\");\n                            }\n                            finally {\n                                setDisable(false);\n                                props.enableButton();\n                            }\n                        }}>\n                            {disable && <Spinner className=\"spinner-border-sm me-1\" tag=\"span\" color=\"white\" />} {_(\"Stop\")}\n                        </Button>\n                        :\n                        <Button variant=\"primary\" className=\"float-end\" disabled={disable}\n                            onClick={async () => {\n                                props.disabledButton();\n                                setDisable(true);\n                                try {\n                                    const response = await AppStart({ app_id: props.data.app_id });\n                                    if (response.data.Error) {\n                                        navigate(\"/error\")\n                                    }\n                                    else {\n                                        props.onDataChange(props.data.app_id);\n                                    }\n                                }\n                                catch (error) {\n                                    navigate(\"/error-500\");\n                                }\n                                finally {\n                                    props.enableButton();\n                                    setDisable(false);\n                                }\n                            }}>\n                            {disable && <Spinner className=\"spinner-border-sm me-1\" tag=\"span\" color=\"white\" />} {_(\"Start\")}\n                        </Button>\n                    }\n                </Col>\n            </Row>\n            <hr></hr>\n            <Row className=\"mb-2\">\n                <Col sm={12}>\n                    <label className=\"me-1\" style={{ fontWeight: \"bolder\", marginBottom: \"5px\" }}>{_(\"Uninstall\")}</label>\n                    <p>\n                        {_(\"This will uninstall the app immediately and remove all its data.The app will be inaccessible.\")}\n                    </p>\n                    <Button variant=\"warning\" className=\"float-end\" onClick={() => { handleClick() }} >\n                        {_(\"Uninstall\")}\n                    </Button>\n                </Col>\n            </Row>\n            {showUninstallConform && <UninstallConform showConform={showUninstallConform} onClose={handleClose}\n                app={props.data} onDataChange={props.onDataChange} onCloseFatherModal={props.onCloseFatherModal} />}\n        </>\n    );\n});\n\nexport default Uninstall;","import classnames from \"classnames\";\nimport cockpit from 'cockpit';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Button, Col, Modal, Nav, OverlayTrigger, Row, Tab, Tooltip } from 'react-bootstrap';\nimport { Link, useNavigate } from 'react-router-dom';\nimport DefaultImg from '../assets/images/default.png';\nimport Spinner from '../components/Spinner';\nimport { AppRestart, AppStart, AppStop } from '../helpers';\nimport AppAccess from './appdetailtabs/appaccess';\nimport AppContainer from './appdetailtabs/appcontainer';\nimport AppOverview from './appdetailtabs/appoverview';\nimport Uninstall from './appdetailtabs/appuninstall';\n\nconst _ = cockpit.gettext;\n\nconst AppDetailModal = (props): React$Element<React$FragmentType> => {\n    const [restartDisable, setRestartDisable] = useState(false);//用于重启按钮的按钮禁用\n    const [buttonDisable, setButtonDisable] = useState(false); //用于启动/停止按钮禁用\n    const [currentApp, setCurrentApp] = useState(props.current_app);\n    const [startAppLoading, setStartAppLoading] = useState(false); //用户显示启动应用的加载状态\n    const [stopAppLoading, setStopAppLoading] = useState(false); //用户显示停止时应用的加载状态\n    const [restartAppLoading, setRestartAppLoading] = useState(false); //用户显示重启时应用的加载状态\n    const navigate = useNavigate(); //用于页面跳转\n    const childRef = useRef();\n\n    //设置卸载页面的按钮禁用\n    const setUninstallButtonDisable = () => {\n        // 通过ref调用子组件的方法\n        childRef.current.setButtonDisable();\n    };\n\n    //设置卸载页面的按钮启用\n    const setUninstallButtonEnable = () => {\n        // 通过ref调用子组件的方法\n        childRef.current.setButtonEnable();\n    };\n\n    //设置启动/停止按钮禁用,用于传递给卸载页面\n    const setAppdetailButtonDisable = () => {\n        setButtonDisable(true);\n        setRestartDisable(true);\n    };\n    //设置启动/停止按钮启用,用于传递给卸载页面\n    const setAppdetailButtonEnable = () => {\n        setButtonDisable(false);\n        setRestartDisable(false);\n    };\n\n    useEffect(() => {\n        setCurrentApp(props.current_app);\n    }, [props.current_app]);\n\n    const tabContents = [\n        {\n            id: '1',\n            title: _(\"Overview\"),\n            icon: 'mdi mdi-account-circle',\n            text: <AppOverview data={currentApp} />,\n        },\n        {\n            id: '2',\n            title: _(\"Access\"),\n            icon: 'mdi mdi-account-circle',\n            text: <AppAccess data={currentApp} />,\n        },\n        {\n            id: '3',\n            title: _(\"Container\"),\n            icon: 'mdi mdi-account-circle',\n            text: <AppContainer data={currentApp} />,\n        },\n        {\n            id: '4',\n            title: _(\"Uninstall\"),\n            icon: 'mdi mdi-cog-outline',\n            text: <Uninstall data={currentApp} ref={childRef} disabledButton={setAppdetailButtonDisable} enableButton={setAppdetailButtonEnable}\n                onDataChange={props.onDataChange} onCloseFatherModal={props.onClose} />,\n        },\n    ];\n\n    return (\n        currentApp && <Modal show={props.showFlag} backdrop=\"static\" onHide={props.onClose} size=\"lg\" scrollable=\"true\" dialogClassName=\"modal-full-width\" >\n            <Modal.Header onHide={props.onClose} closeButton>\n                <div style={{ padding: \"10px\", display: \"flex\", width: \"100%\", alignItems: \"center\" }}>\n                    <div className='appstore-item-content-icon col-same-height'>\n                        <img\n                            src={currentApp.image_url}\n                            alt=\"\"\n                            className=\"app-icon\"\n                            onError={(e) => (e.target.src = DefaultImg)}\n                        />\n                    </div>\n                    <div className='col-same-height'>\n                        <h4 className=\"appstore-item-content-title\" style={{ marginTop: \"5px\" }}>\n                            {currentApp.customer_name}\n                        </h4>\n                        <h5 className=\"appstore-item-content-title\" style={{ marginTop: \"5px\" }}>\n                            {currentApp.status}\n                        </h5>\n                    </div>\n                    <div className='col-same-height' style={{ flexGrow: 1, display: \"flex\", justifyContent: \"flex-end\", alignItems: \"center\" }}>\n                        {\n                            currentApp.status === \"exited\" &&\n                            <OverlayTrigger\n                                key=\"bottom1\"\n                                placement=\"bottom\"\n                                overlay={\n                                    <Tooltip id=\"tooltip-bottom\">\n                                        {_(\"Start App\")}\n                                    </Tooltip>\n                                }>\n                                <Button variant=\"primary\" disabled={buttonDisable}\n                                    style={{ padding: \"5px 10px\", borderRadius: \"3px\", marginRight: \"10px\" }}\n                                    onClick={async () => {\n                                        setUninstallButtonDisable();\n                                        setStartAppLoading(true);\n                                        setRestartDisable(true);\n                                        try {\n                                            const response = await AppStart({ app_id: currentApp.app_id });\n                                            if (response.data.Error) {\n                                                navigate(\"/error\")\n                                            }\n                                            else {\n                                                props.onDataChange();\n                                            }\n                                        }\n                                        catch (error) {\n                                            navigate(\"/error-500\");\n                                        }\n                                        finally {\n                                            setUninstallButtonEnable();\n                                            setStartAppLoading(false);\n                                            setRestartDisable(false);\n                                        }\n                                    }}\n                                >\n                                    {\n                                        startAppLoading ?\n                                            <Spinner className=\"spinner-border-sm noti-icon\" color=\"light\" />\n                                            :\n                                            <i className=\"dripicons-media-play noti-icon\"></i>\n                                    }\n                                </Button>\n                            </OverlayTrigger>\n                        }\n                        {\n                            currentApp.status === \"running\" &&\n                            <OverlayTrigger\n                                key=\"bottom2\"\n                                placement=\"bottom\"\n                                overlay={\n                                    <Tooltip id=\"tooltip-bottom\">\n                                        {_(\"Stop App\")}\n                                    </Tooltip>\n                                }>\n                                <Button variant=\"primary\" disabled={buttonDisable}\n                                    style={{ padding: \"5px 10px\", borderRadius: \"3px\", marginRight: \"10px\" }}\n                                    onClick={async () => {\n                                        setUninstallButtonDisable();\n                                        setStopAppLoading(true);\n                                        setRestartDisable(true);\n                                        try {\n                                            const response = await AppStop({ app_id: currentApp.app_id });\n                                            if (response.data.Error) {\n                                                navigate(\"/error\");\n                                            }\n                                            else {\n                                                props.onDataChange();\n                                            }\n                                        }\n                                        catch (error) {\n                                            navigate(\"/error-500\");\n                                        }\n                                        finally {\n                                            setUninstallButtonEnable();\n                                            setStopAppLoading(false);\n                                            setRestartDisable(false);\n                                        }\n                                    }}\n                                >\n                                    {\n                                        stopAppLoading ?\n                                            <Spinner className=\"spinner-border-sm noti-icon\" color=\"light\" />\n                                            :\n                                            <i className=\"dripicons-power noti-icon\"></i>\n                                    }\n                                </Button>\n                            </OverlayTrigger>\n                        }\n                        <OverlayTrigger\n                            key=\"bottom3\"\n                            placement=\"bottom\"\n                            overlay={\n                                <Tooltip id=\"tooltip-bottom\">\n                                    {_(\"Restart App\")}\n                                </Tooltip>\n                            }>\n                            <Button disabled={restartDisable}\n                                style={{ padding: \"5px 10px\", borderRadius: \"3px\", marginRight: \"10px\" }}\n                                onClick={async () => {\n                                    try {\n                                        setUninstallButtonDisable();\n                                        setRestartAppLoading(true);\n                                        setButtonDisable(true);\n                                        const response = await AppRestart({ app_id: currentApp.app_id });\n                                        if (response.data.Error) {\n                                            navigate(\"/error\");\n                                        }\n                                        else {\n                                            props.onDataChange();\n                                        }\n                                    }\n                                    catch (error) {\n                                        navigate(\"/error-500\");\n                                    }\n                                    finally {\n                                        setUninstallButtonEnable();\n                                        setRestartAppLoading(false);\n                                        setButtonDisable(false);\n                                    }\n                                }}\n                            >\n                                {\n                                    restartAppLoading ?\n                                        <Spinner className=\"spinner-border-sm noti-icon\" color=\"light\" />\n                                        :\n                                        <i className=\"dripicons-clockwise noti-icon\"></i>\n                                }\n                            </Button>\n                        </OverlayTrigger>\n                        {\n                            currentApp.status === \"running\" &&\n                            <OverlayTrigger\n                                key=\"bottom4\"\n                                placement=\"bottom\"\n                                overlay={\n                                    <Tooltip id=\"tooltip-bottom\">\n                                        {_(\"Terminal\")}\n                                    </Tooltip>\n                                }>\n                                <Link to={{ pathname: '/terminal', search: `?id=${currentApp.customer_name}` }}\n                                    style={{ color: \"#fff\", backgroundColor: \"#727cf5\", padding: \"5px 10px\", borderRadius: \"3px\", borderColor: \"#727cf5\", marginRight: \"10px\" }}\n                                    target=\"_blank\">\n                                    <i className=\"dripicons-code noti-icon\"></i>{' '}\n                                </Link>\n                            </OverlayTrigger>\n                        }\n                        {\n                            <OverlayTrigger\n                                key=\"bottom5\"\n                                placement=\"bottom\"\n                                overlay={\n                                    <Tooltip id=\"tooltip-bottom\">\n                                        {_(\"Documentation\")}\n                                    </Tooltip>\n                                }>\n                                <a href={'https://support.websoft9.com/docs/' + currentApp.app_name}\n                                    style={{ color: \"#fff\", backgroundColor: \"#727cf5\", padding: \"5px 10px\", borderRadius: \"3px\", borderColor: \"#727cf5\", marginRight: \"10px\" }}\n                                    target=\"_blank\">\n                                    <i className=\"dripicons-document noti-icon\"></i>{' '}\n                                </a>\n                            </OverlayTrigger>\n                        }\n                    </div>\n                </div>\n            </Modal.Header>\n            <Modal.Body className=\"row\">\n                <Tab.Container defaultActiveKey={_(\"Overview\")}>\n                    <Col sm={2} className=\"mb-2 mb-sm-0\">\n                        <Nav variant=\"pills\" className=\"flex-column\">\n                            {tabContents.map((tab, index) => {\n                                const renderElement = () => {\n                                    return (\n                                        <Nav.Item key={index}>\n                                            <Nav.Link as={Link} to=\"#\" eventKey={tab.title}>\n                                                <i\n                                                    className={classnames(\n                                                        tab.icon,\n                                                        'd-md-none',\n                                                        'd-block',\n                                                        'me-1'\n                                                    )}></i>\n                                                <span className=\"d-none d-md-block\">{tab.title}</span>\n                                            </Nav.Link>\n                                        </Nav.Item>\n                                    );\n                                }\n                                if (tab.title === \"Terminal\") {\n                                    if (currentApp.status === \"running\") {\n                                        return renderElement();\n                                    }\n                                } else {\n                                    return renderElement();\n                                }\n                            })}\n                        </Nav>\n                    </Col>\n                    <Col sm={10}>\n                        <Tab.Content style={{ height: \"100%\" }}>\n                            {tabContents.map((tab, index) => {\n                                return (\n                                    <Tab.Pane eventKey={tab.title} id={tab.id} key={index} style={{ height: \"100%\" }}>\n                                        <Row style={{ height: \"100%\" }}>\n                                            <Col sm=\"12\" style={{ height: tab.title === \"Terminal\" ? \"600px\" : \"\" }}>\n                                                {tab.text}\n                                            </Col>\n                                        </Row>\n                                    </Tab.Pane>\n                                );\n                            })}\n                        </Tab.Content>\n                    </Col>\n                </Tab.Container>\n            </Modal.Body>\n        </Modal >\n    );\n}\n\nexport default AppDetailModal;","import MuiAlert from '@mui/material/Alert';\nimport Snackbar from '@mui/material/Snackbar';\nimport classNames from 'classnames';\nimport cockpit from 'cockpit';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Alert, Button, Col, Dropdown, Modal, Row } from 'react-bootstrap';\nimport { Link, Navigate, useNavigate } from 'react-router-dom';\nimport DefaultImg from '../assets/images/default.png';\nimport FormInput from '../components/FormInput';\nimport Spinner from '../components/Spinner';\nimport { AppList, AppRestart, AppStart, AppStop, AppUninstall } from '../helpers';\nimport AppDetailModal from './appdetail';\n\nconst _ = cockpit.gettext;\n\nconst MyMuiAlert = React.forwardRef(function Alert(props, ref) {\n    return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\n});\n\n//应用状态为failed时，显示错误消息\nconst ErrorInfoModal = (props): React$Element<React$FragmentType> => {\n    return (\n        <Modal show={props.showConform} onHide={props.onClose} size=\"lg\" scrollable=\"true\" backdrop=\"static\">\n            <Modal.Header onHide={props.onClose} closeButton className={classNames('modal-colored-header', 'bg-danger')}>\n                <h4>{_(\"This is the error message for\")} {props.app.customer_name}</h4>\n            </Modal.Header>\n            <Modal.Body className=\"row\" >\n                {\n                    props.app.status_reason &&\n                    <>\n                        <span style={{ margin: \"10px 0px\" }}> <b>{_(\"Code: \")}</b>{props.app.status_reason.Code} </span>\n                        <span style={{ margin: \"10px 0px\" }}> <b>{_(\"Message: \")}</b>{props.app.status_reason.Message} </span>\n                        <span style={{ margin: \"10px 0px\" }}> <b>{_(\"Detail: \")}</b>{props.app.status_reason.Detail} </span>\n                    </>\n                }\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"light\" onClick={props.onClose}>\n                    {_(\"Close\")}\n                </Button>\n                <Button variant=\"light\" onClick={() => window.open('https://www.websoft9.com/ticket', '_blank')}>\n                    {_(\"Support\")}\n                </Button>\n            </Modal.Footer>\n        </Modal >\n    );\n}\n\n//删除应用弹窗\nconst UninstallConform = (props): React$Element<React$FragmentType> => {\n    const navigate = useNavigate(); //用于页面跳转\n    const [disable, setDisable] = useState(false);//用于按钮禁用\n    const [showAlert, setShowAlert] = useState(false); //用于是否显示错误提示\n    const [alertMessage, setAlertMessage] = useState(\"\");//用于显示错误提示消息\n\n    function closeAllModals() {\n        //关闭所有弹窗\n        props.onClose();\n        props.onDataChange();\n    }\n\n    return (\n        <Modal show={props.showConform} onHide={props.onClose} size=\"lg\"\n            scrollable=\"true\" backdrop=\"static\">\n            <Modal.Header onHide={props.onClose} className={classNames('modal-colored-header', 'bg-warning')}>\n                <h4>{_(\"Remove\")} {props.app.customer_name}</h4>\n            </Modal.Header>\n            <Modal.Body className=\"row\" >\n                <span style={{ margin: \"10px 0px\" }}>{_(\"This will immediately remove\")} {props.app.customer_name} {_(\"and remove all its data.\")}</span>\n                <div>\n                    {showAlert && <Alert variant=\"danger\" className=\"my-2\">\n                        {alertMessage}\n                    </Alert>}\n                </div>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"light\" onClick={props.onClose}>\n                    {_(\"Close\")}\n                </Button>{\" \"}\n                <Button disabled={disable} variant=\"warning\" onClick={async () => {\n                    try {\n                        setDisable(true);\n                        //调用卸载应用接口\n                        const response = await AppUninstall({ app_id: props.app.app_id });\n                        if (response.data.Error) {\n                            setShowAlert(true);\n                            setAlertMessage(response.data.Error.Message);\n                        }\n                        else {\n                            closeAllModals(); //关闭弹窗并更新数据\n                        }\n                    }\n                    catch (error) {\n                        navigate(\"/error-500\");\n                    }\n                }}>\n                    {disable && <Spinner className=\"spinner-border-sm me-1\" tag=\"span\" color=\"white\" />} {_(\"Remove\")}\n                </Button>\n            </Modal.Footer>\n        </Modal >\n    );\n}\n\nconst MyApps = (): React$Element<React$FragmentType> => {\n    const [showModal, setShowModal] = useState(false); //用于显示状态为running或exited弹窗的标识\n    const [showUninstallConform, setShowUninstallConform] = useState(false); //用于显示状态为failed时显示确定删除的弹窗\n    const [showErrorInfo, setShowErrorInfo] = useState(false); //用于显示状态为failed时显示错误消息的弹窗\n    const [showOtherAppModal, setShowOtherAppModal] = useState(false); //用于显示非websoft9应用的的弹窗的标识\n    const [isLoading, setIsLoading] = useState(false); //用于非官方应用启动 停止 重启 卸载时，显示加载中\n    const [showAlert, setShowAlert] = useState(false); //用于是否显示错误提示\n    const [alertMessage, setAlertMessage] = useState(\"\");//用于显示错误提示消息\n    const [alertType, setAlertType] = useState(\"\");//用于确定弹窗的类型：error\\success\n\n    const [selectedApp, setSelectedApp] = useState(null); //用于存储被选中的产品（点击应用详情时使用）\n    const [apps, setApps] = useState([]); //所有“我的应用”\n    const [statusApps, setStatusApps] = useState([]);//根据状态筛选的应用\n    const [searchString, setSearchString] = useState(\"\");//用户输入的筛选字符串\n    const [selectedStatus, setSelectedStatus] = useState(\"all\"); //用于存储用户筛选应用状态的标识\n    const [progressId, setProgressId] = useState([]); //用于存储当前正在安装的应用ID，用于做进度查询的参数\n\n    const selectedAppRef = useRef(selectedApp);\n    const navigate = useNavigate(); //用于页面跳转\n\n    const [code, setCode] = useState(0);\n    const [error, setError] = useState(null);\n    const [errorDetails, setErrorDetails] = useState(null)\n    const [loading, setLoading] = useState(false);\n\n    const menuItems = (appStatus) => {\n        return [\n            { label: 'Stop', icon: 'dripicons-power noti-icon', condition: appStatus === \"running\" },\n            { label: 'Start', icon: 'dripicons-media-play noti-icon', condition: appStatus === \"exited\" },\n            { label: 'Restart', icon: 'dripicons-clockwise noti-icon', condition: appStatus === \"running\" || appStatus === \"exited\" },\n            {\n                label: 'Uninstall',\n                icon: 'dripicons-trash noti-icon',\n                variant: 'text-danger',\n                hasDivider: true,\n                condition: true\n            }\n        ]\n    };\n\n    let timer;\n\n    //获取所有已安装的App(只执行一次)\n    const getAllAppsOnce = () => {\n        AppList().then((response) => {\n            if (response.data.Error) {\n                setCode(response.data.Error.Code);\n                setError(response.data.Error.Message);\n                setErrorDetails(response.data.Error.Details);\n            }\n            else {\n                const newApps = response.data.ResponseData;\n                setApps(newApps);\n                if (selectedAppRef.current) {\n                    const updatedApp = newApps.find(\n                        (app) => app.app_id === selectedAppRef.current.app_id\n                    );\n                    setSelectedApp(updatedApp);\n                }\n            }\n            setLoading(false);\n        }).catch((error) => {\n            <Navigate to=\"/error-500\" />\n        });\n    }\n\n    //获取所有已安装的App(每隔5秒执行一次)\n    const getAllApps = () => {\n        setLoading(true);\n        //调用接口获取已经安装应用\n        timer = setInterval(() => {\n            AppList().then((response) => {\n                if (response.data.Error) {\n                    setCode(response.data.Error.Code);\n                    setError(response.data.Error.Message);\n                    setErrorDetails(response.data.Error.Details);\n                }\n                else {\n                    const newApps = response.data.ResponseData;\n                    setApps(newApps);\n                    if (selectedAppRef.current) {\n                        const updatedApp = newApps.find(\n                            (app) => app.app_id === selectedAppRef.current.app_id\n                        );\n                        setSelectedApp(updatedApp);\n                    }\n                }\n                setLoading(false);\n            }).catch((error) => {\n                <Navigate to=\"/error-500\" />\n            });\n        }, 5000);\n        return () => clearInterval(timer);\n    }\n\n    useEffect(() => {\n        getAllAppsOnce();\n    }, []);\n\n    useEffect(() => {\n        getAllApps();\n    }, []);\n\n    useEffect(() => {\n        selectedAppRef.current = selectedApp;\n    }, [selectedApp]);\n\n    useEffect(() => {\n        return () => clearInterval(timer);  //用于清除定时器\n    }, []);\n\n    if (loading) return <Spinner className='dis_mid' />;\n    if (code) return <p>Code : ${code} </p>;\n    if (error) return <p>Error : ${error} </p>;\n\n    //用于根据应用“状态”过滤应用\n    const changeStatus = (selectedStatus) => {\n        setSelectedStatus(selectedStatus);\n    };\n\n    //用于根据用户输入搜索应用\n    const handleInputChange = (searchString) => {\n        setSearchString(searchString);\n    }\n\n    //用于用户点击应用详情\n    const handleClick = (app) => {\n        setSelectedApp(app);\n        setShowModal(true);\n    };\n\n    //用于应用为failed时删除应用\n    const deleteApp = (app) => {\n        setSelectedApp(app);\n        setShowUninstallConform(true);\n    };\n\n    //用于应用为failed时显示错误信息弹窗\n    const showError = (app) => {\n        setSelectedApp(app);\n        setShowErrorInfo(true);\n    };\n\n    //用于关闭显示错误消息弹窗\n    const cancelShowError = () => {\n        setShowErrorInfo(false);\n    };\n\n    //用于取消删除应用\n    const canceldeleteApp = () => {\n        setShowUninstallConform(false);\n    };\n\n    //用于关闭应用详情的弹窗\n    const handleClose = () => {\n        setShowModal(false);\n        setSelectedApp(null);\n    };\n\n    const handleAlertClose = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        setShowAlert(false);\n        setAlertMessage(\"\");\n    };\n\n    //用于立即刷新数据\n    const handleDataChange = () => {\n        getAllAppsOnce();\n    };\n\n    //非官方应用的操作\n    const appActions = {\n        \"Stop\": {\n            api: AppStop,\n        },\n        \"Start\": {\n            api: AppStart,\n        },\n        \"Restart\": {\n            api: AppRestart,\n        },\n        \"Uninstall\": {\n            api: AppUninstall,\n        }\n    }\n\n    //处理非官方应用的操作\n    const NoOfficialAppClick = async (label, app) => {\n        if (label === \"Uninstall\") {\n            setSelectedApp(app);\n            setShowUninstallConform(true);\n            return;\n        }\n\n        setIsLoading(true);\n        try {\n            const response = await appActions[label].api({ app_id: app.app_id });\n            if (response.data.Error) {\n                setShowAlert(true);\n                setAlertType(\"error\")\n                setAlertMessage(response.data.Error.Message);\n            }\n            else {\n                setShowAlert(true);\n                setAlertType(\"success\")\n                setAlertMessage(\"执行成功\");\n                handleDataChange();\n            }\n        }\n        catch (error) {\n            navigate(\"/error-500\");\n        }\n        finally {\n            setIsLoading(false);\n        }\n    }\n\n    return (\n        <>\n            <Row className=\"mb-2 align-items-center\">\n                <Col sm={2}>\n                    <span style={{ fontSize: \"36px\" }}>{_(\"My Apps\")}</span>\n                </Col>\n                <Col sm={3}>\n                    <FormInput\n                        value={selectedStatus}\n                        name=\"select\"\n                        type=\"select\"\n                        className=\"form-select\"\n                        key=\"select\"\n                        onChange={(e) => changeStatus(e.target.value)} >\n                        <option value=\"all\">{_(\"All States\")}</option>\n                        <option value=\"installing\">installing</option>\n                        <option value=\"running\">running</option>\n                        <option value=\"exited\">exited</option>\n                        <option value=\"restarting\">restarting</option>\n                        <option value=\"failed\">failed</option>\n                    </FormInput>\n                </Col>\n                <Col sm={6}>\n                    <Col xs=\"auto\">\n                        <FormInput type=\"text\" name=\"search\"\n                            placeholder=\"Search for apps like WordPress, Dropbox, Slack, Trello, …\"\n                            onChange={(e) => handleInputChange(e.target.value)}\n                        />\n                    </Col>\n                </Col>\n                <Col sm={1}>\n                    <Button variant=\"primary\" className=\"float-end\" onClick={() => {\n                        window.location.reload(false);\n                    }}>{_(\"Refresh\")}</Button>\n                </Col>\n            </Row>\n            {\n                [true, false].map((official_app) => {\n                    // 过滤出符合条件的apps\n                    const filteredApps = apps.filter((app) => selectedStatus === 'all' || app.status === selectedStatus)\n                        .filter((app) => app.official_app === official_app)\n                        .filter((app) => app.customer_name.includes(searchString));\n                    // 如果有数据，返回一个Row组件，否则返回null\n                    return filteredApps.length > 0 ? (\n                        <Row>\n                            {/* 根据official_app的值显示不同的标题 */}\n                            <h4 style={official_app ? {} : { paddingTop: \"10px\" }}>{official_app ? _(\"Websoft9's Apps\") : _(\"Other Apps\")}</h4>\n                            {filteredApps.map((app, i) => (\n                                <Col xxl={2} md={6} key={app.app_id + i} className=\"appstore-item\">\n                                    <div className='appstore-item-content highlight text-align-center'>\n                                        {\n                                            (!official_app && (app.status === \"running\" || app.status === \"exited\")) &&\n                                            <Dropdown className=\"float-end\">\n                                                <Dropdown.Toggle as={Link} to=\"#\" className=\"arrow-none card-drop\">\n                                                    {isLoading ? <Spinner className=\"spinner-border-sm noti-icon\" /> : <i className=\"dripicons-gear noti-icon\" />}\n                                                </Dropdown.Toggle>\n                                                <Dropdown.Menu align=\"end\">\n                                                    {(menuItems(app.status) || []).map((item, index) => {\n                                                        return (\n                                                            <React.Fragment key={index}>\n                                                                {item.condition && item.hasDivider && <Dropdown.Divider as=\"div\" />}\n                                                                {\n                                                                    item.condition && <Dropdown.Item className={classNames(item.variant ? item.variant : '')}\n                                                                        onClick={() => NoOfficialAppClick(item.label, app)}\n                                                                    >\n                                                                        {item.icon && <i className={classNames(item.icon, 'me-1')}></i>}\n                                                                        {/* {isLoading ? <Spinner className=\"spinner-border-sm noti-icon\" /> : item.icon && <i className={classNames(item.icon, 'me-1')}></i>} */}\n                                                                        {item.label}\n                                                                    </Dropdown.Item>\n                                                                }\n                                                            </React.Fragment>\n                                                        );\n                                                    })}\n                                                </Dropdown.Menu>\n                                            </Dropdown>\n                                        }\n                                        {\n                                            (official_app && (app.status === \"running\" || app.status === \"exited\")) &&\n                                            <>\n                                                <div className=\"float-end arrow-none card-drop p-0\" onClick={() => { handleClick(app) }}>\n                                                    <i className=\"dripicons-gear noti-icon\"></i>\n                                                </div>\n                                                <div className=\"clearfix\"></div>\n                                            </>\n                                        }\n                                        {\n                                            (official_app && app.status === \"installing\") &&\n                                            <>\n                                                <div className=\"float-end arrow-none card-drop p-0\">\n                                                    <i className=\"dripicons-empty noti-icon\"></i>\n                                                </div>\n                                                <div className=\"clearfix\"></div>\n                                            </>\n                                        }\n                                        {\n                                            app.status === 'failed' &&\n                                            <>\n                                                <div className=\"float-end arrow-none card-drop p-0\" >\n                                                    <i className=\"dripicons-information noti-icon\" style={{ paddingRight: \"10px\" }} onClick={() => { showError(app) }}></i>\n                                                    <i className=\"dripicons-trash noti-icon\" onClick={() => { deleteApp(app) }}></i>\n                                                </div>\n                                                <div className=\"clearfix\"></div>\n                                            </>\n                                        }\n                                        <div>\n                                            <img\n                                                src={app.image_url}\n                                                alt={app.app_name}\n                                                className=\"app-icon\"\n                                                style={{ margin: \"20px 10px 20px 10px\" }}\n                                                onError={(e) => (e.target.src = DefaultImg)}\n                                            />\n                                        </div>\n                                        <div>\n                                            <h3 className=\"appstore-item-content-title\" style={{ color: \"#2196f3\" }}>\n                                                {app.customer_name}\n                                            </h3>\n                                            <div style={{ color: app.status === 'failed' ? 'red' : 'inherit', display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n                                                {app.status && app.status === \"installing\" && <Spinner className=\"spinner-border-sm m-2\" />}\n                                                {\" \"}\n                                                <div className=\"m-2\">{app.status}</div>\n                                            </div>\n                                        </div>\n                                    </div >\n                                </Col>\n                            ))}\n                        </Row >\n                    ) : null;\n                })\n            }\n            {\n                showModal && <AppDetailModal current_app={selectedApp} showFlag={showModal} onClose={handleClose} onDataChange={handleDataChange} />\n            }\n            {\n                showUninstallConform &&\n                <UninstallConform showConform={showUninstallConform} onClose={canceldeleteApp} app={selectedApp} onDataChange={handleDataChange} />\n            }\n            {\n                showErrorInfo &&\n                <ErrorInfoModal showConform={showErrorInfo} onClose={cancelShowError} app={selectedApp} />\n            }\n            {\n                showAlert &&\n                <Snackbar open={showAlert} autoHideDuration={5000} onClose={handleAlertClose} anchorOrigin={{ vertical: 'top', horizontal: 'center' }}>\n                    <MyMuiAlert onClose={handleAlertClose} severity={alertType} sx={{ width: '100%' }}>\n                        {alertMessage}\n                    </MyMuiAlert>\n                </Snackbar>\n            }\n        </>\n    );\n};\n\nexport default MyApps;\n"],"names":["PasswordInput","_ref","name","placeholder","refCallback","errors","register","className","value","readOnly","_useState","useState","_useState2","_slicedToArray","showPassword","setShowPassword","_jsx","_Fragment","children","_jsxs","InputGroup","Form","_objectSpread","type","id","as","ref","r","isInvalid","autoComplete","defaultValue","classNames","onClick","_ref2","label","labelClassName","containerClass","otherProps","_objectWithoutProperties","_excluded","comp","Spinner","props","Tag","tag","color","size","role","concat","_defineProperty","defaultProps","credentials","getCredentials","_getCredentials","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee3","response","data","userName","uerPassword","wrap","_context3","prev","next","fetch","sent","json","APPMANAGE","APPMANAGE_USERNAME","APPMANAGE_PASSWORD","btoa","abrupt","stop","axios","error","message","status","Navigate","Promise","reject","APICore","_createClass","_classCallCheck","get","_callee","url","params","queryString","_context","t0","Object","keys","map","key","join","_x","_x2","create","_callee2","_context2","_x3","_x4","api","AppInstall","AppList","AppUninstall","AppStop","AppStart","AppRestart","AppDomainList","AppDomainDelete","AppDomainUpdate","AppDomainAdd","AppDomainSet","_","cockpit","MyMuiAlert","React","MuiAlert","elevation","variant","RemoveDomain","navigate","useNavigate","disable","setDisable","_useState3","_useState4","showAlert","setShowAlert","_useState5","_useState6","alertMessage","setAlertMessage","Modal","show","showConform","onHide","onClose","scrollable","backdrop","style","backgroundColor","margin","deleteRowData","domainValue","Alert","Button","disabled","app_id","domain","Error","Message","onDataChange","finish","_props$data","_props$data$config","_props$data2","_props$data2$config","_props$data3","_props$data3$config","_props$data4","_props$data4$config","_props$data5","_props$data6","_props$data6$config","_props$data7","_props$data7$config","_props$data8","_props$data8$config","_props$data9","_props$data9$config","_props$data10","_props$data10$config","_props$data11","_props$data11$config","_props$data12","_props$data12$config","_props$data13","_props$data13$config","_props$data14","_props$data14$config","_props$data15","_props$data15$config","_useState7","_useState8","domains","setDomains","_useState9","_useState10","loading","setLoading","_useState11","_useState12","_useState13","_useState14","_useState15","_useState16","alertType","setAlertType","_useState17","_useState18","showRemoveDomain","setShowRemoveDomain","_useState19","_useState20","setDeleteRowData","_useState21","_useState22","_React$useState","_React$useState2","isExpandedForDomain","setIsExpandedForDomain","_React$useState3","_React$useState4","isExpandedForNoDomain","setIsExpandedForNoDomain","_React$useState5","_React$useState6","isExpandedForAccount","setIsExpandedForAccount","getDomains","responseData","defaultdomain","resturnDomains","ResponseData","Domain_set","default_domain","newDomainValue","isEditable","isFromAPI","isDefaultDomain","useEffect","deleteRow","_ref3","row","index","newRows","_toConsumableArray","splice","setDefaultDomain","_ref4","_callee4","defaultDomain","_context4","saveRow","_ref5","_callee5","input","regex","_response","_context5","document","getElementsByName","test","domain_old","domain_new","t1","_x5","handleAlertClose","event","reason","_useState23","_useState24","Card","zIndex","Accordion","defaultExpanded","onChange","newExpanded","AccordionSummary","expandIcon","ExpandMoreIcon","Typography","display","AccordionDetails","Row","Col","xs","md","length","config","admin_domain_url","href","target","_callee6","_context6","FormInput","e","handleChange","padding","cancelEditRow","editRow","Badge","sm","app_replace_url","admin_url","admin_username","htmlFor","column","admin_password","Snackbar","open","autoHideDuration","anchorOrigin","vertical","horizontal","severity","sx","width","containersInfo","setContainersInfo","customer_name","endpointsId","setEndpointsId","getContainersData","jwt","PORTAINER_USERNAME","PORTAINER_PASSWORD","PORTAINER_AUTH_URL","authResponse","endpointsData","containersData","window","localStorage","getItem","PORTAINER","PORTAINER_HOME_PAGE","username","password","setItem","console","replace","headers","find","URL","includes","Id","all","filters","JSON","stringify","Table","textAlign","container","_container$Names","_container$Names$","_container$Ports$find","_container$Ports$find2","Names","State","title","Image","Date","Created","toLocaleString","NetworkSettings","Networks","HostConfig","NetworkMode","IPAddress","Ports","port","IP","PublicPort","PrivatePort","responsive","bordered","fontWeight","app_name","app_version","create_time","config_path","volume_data","UninstallConform","closeButton","app","onCloseFatherModal","forwardRef","showUninstallConform","setShowUninstallConform","setButtonDisable","setButtonEnable","useImperativeHandle","marginBottom","disabledButton","enableButton","restartDisable","setRestartDisable","buttonDisable","current_app","currentApp","setCurrentApp","startAppLoading","setStartAppLoading","stopAppLoading","setStopAppLoading","restartAppLoading","setRestartAppLoading","childRef","useRef","setUninstallButtonDisable","current","setUninstallButtonEnable","tabContents","icon","text","AppOverview","AppAccess","AppContainer","Uninstall","showFlag","dialogClassName","alignItems","src","image_url","alt","onError","DefaultImg","marginTop","flexGrow","justifyContent","OverlayTrigger","placement","overlay","Tooltip","borderRadius","marginRight","Link","to","pathname","search","borderColor","Tab","defaultActiveKey","Nav","tab","renderElement","eventKey","classnames","height","ErrorInfoModal","status_reason","Code","Detail","timer","showModal","setShowModal","showErrorInfo","setShowErrorInfo","isLoading","setIsLoading","selectedApp","setSelectedApp","_useState25","_useState26","apps","setApps","_useState27","_useState28","_useState29","_useState30","searchString","setSearchString","_useState31","_useState32","selectedStatus","setSelectedStatus","_useState33","_useState34","selectedAppRef","_useState35","_useState36","code","setCode","_useState37","_useState38","setError","_useState39","_useState40","setErrorDetails","_useState41","_useState42","getAllAppsOnce","then","Details","newApps","updatedApp","catch","setInterval","clearInterval","handleDataChange","appActions","NoOfficialAppClick","fontSize","changeStatus","handleInputChange","location","reload","official_app","filteredApps","filter","paddingTop","i","xxl","Dropdown","align","appStatus","condition","hasDivider","item","handleClick","paddingRight","showError","deleteApp","AppDetailModal"],"sourceRoot":""}
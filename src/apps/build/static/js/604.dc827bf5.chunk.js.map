{"version":3,"file":"static/js/604.dc827bf5.chunk.js","mappings":"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","sources":["components/FormInput.js","components/Spinner.js","helpers/api/apiCore.js","helpers/api/appManager.js","pages/appdetailtabs/appaccess.js","pages/appdetailtabs/applogs.js","pages/appdetailtabs/backups.js","pages/appdetailtabs/uninstall.js","pages/appdetail.js","pages/myapps.js"],"sourcesContent":["// @flow\nimport classNames from 'classnames';\nimport React, { useState } from 'react';\nimport { Form, InputGroup } from 'react-bootstrap';\n\n/* Password Input */\nconst PasswordInput = ({ name, placeholder, refCallback, errors, register, className, value, readOnly }) => {\n    const [showPassword, setShowPassword] = useState(false);\n\n    return (\n        <>\n            <InputGroup className=\"mb-0\">\n                <Form.Control\n                    type={showPassword ? 'text' : 'password'}\n                    placeholder={placeholder}\n                    name={name}\n                    id={name}\n                    as=\"input\"\n                    ref={(r) => {\n                        if (refCallback) refCallback(r);\n                    }}\n                    className={className}\n                    isInvalid={errors && errors[name] ? true : false}\n                    {...(register ? register(name) : {})}\n                    autoComplete={name}\n                    defaultValue={value}\n                    readOnly={readOnly}\n                />\n                <div\n                    className={classNames('input-group-text', 'input-group-password', {\n                        'show-password': showPassword,\n                    })}\n                    data-password={showPassword ? 'true' : 'false'}>\n                    <span\n                        className=\"password-eye\"\n                        onClick={() => {\n                            setShowPassword(!showPassword);\n                        }}></span>\n                </div>\n            </InputGroup>\n        </>\n    );\n};\n\ntype FormInputProps = {\n    label?: string,\n    type?: string,\n    name?: string,\n    value?: string,\n    placeholder?: string,\n    register?: any,\n    errors?: any,\n    className?: string,\n    labelClassName?: string,\n    containerClass?: string,\n    refCallback?: any,\n    children?: any,\n};\n\nconst FormInput = ({\n    label,\n    type,\n    name,\n    value,\n    readOnly,\n    placeholder,\n    register,\n    errors,\n    className,\n    labelClassName,\n    containerClass,\n    refCallback,\n    children,\n    ...otherProps\n}: FormInputProps): React$Element<React$FragmentType> => {\n    // handle input type\n    const comp = type === 'textarea' ? 'textarea' : type === 'select' ? 'select' : 'input';\n\n    return (\n        <>\n            {type === 'hidden' ? (\n                <input type={type} name={name} {...(register ? register(name) : {})} {...otherProps} />\n            ) : (\n                <>\n                    {type === 'password' ? (\n                        <>\n                            <Form.Group className={containerClass}>\n                                {label ? (\n                                    <>\n                                        {' '}\n                                        <Form.Label className={labelClassName}>{label}</Form.Label> {children}{' '}\n                                    </>\n                                ) : null}\n                                <PasswordInput\n                                    name={name}\n                                    placeholder={placeholder}\n                                    refCallback={refCallback}\n                                    errors={errors}\n                                    register={register}\n                                    className={className}\n                                    value={value}\n                                    readOnly={readOnly}\n                                />\n\n                                {errors && errors[name] ? (\n                                    <Form.Control.Feedback type=\"invalid\" className=\"d-block\">\n                                        {errors[name]['message']}\n                                    </Form.Control.Feedback>\n                                ) : null}\n                            </Form.Group>\n                        </>\n                    ) : (\n                        <>\n                            {type === 'select' ? (\n                                <>\n                                    <Form.Group className={containerClass}>\n                                        {label ? <Form.Label className={labelClassName}>{label}</Form.Label> : null}\n\n                                        <Form.Select\n                                            type={type}\n                                            label={label}\n                                            name={name}\n                                            id={name}\n                                            ref={(r) => {\n                                                if (refCallback) refCallback(r);\n                                            }}\n                                            comp={comp}\n                                            className={className}\n                                            isInvalid={errors && errors[name] ? true : false}\n                                            {...(register ? register(name) : {})}\n                                            {...otherProps}>\n                                            {children}\n                                        </Form.Select>\n\n                                        {errors && errors[name] ? (\n                                            <Form.Control.Feedback type=\"invalid\">\n                                                {errors[name]['message']}\n                                            </Form.Control.Feedback>\n                                        ) : null}\n                                    </Form.Group>\n                                </>\n                            ) : (\n                                <>\n                                    {type === 'checkbox' || type === 'radio' ? (\n                                        <>\n                                            <Form.Group className={containerClass}>\n                                                <Form.Check\n                                                    type={type}\n                                                    label={label}\n                                                    name={name}\n                                                    id={name}\n                                                    ref={(r) => {\n                                                        if (refCallback) refCallback(r);\n                                                    }}\n                                                    className={className}\n                                                    isInvalid={errors && errors[name] ? true : false}\n                                                    {...(register ? register(name) : {})}\n                                                    {...otherProps}\n                                                />\n\n                                                {errors && errors[name] ? (\n                                                    <Form.Control.Feedback type=\"invalid\">\n                                                        {errors[name]['message']}\n                                                    </Form.Control.Feedback>\n                                                ) : null}\n                                            </Form.Group>\n                                        </>\n                                    ) : (\n                                        <Form.Group className={containerClass}>\n                                            {label ? <Form.Label className={labelClassName}>{label}</Form.Label> : null}\n\n                                            <Form.Control\n                                                type={type}\n                                                placeholder={placeholder}\n                                                value={value}\n                                                name={name}\n                                                id={name}\n                                                as={comp}\n                                                ref={(r) => {\n                                                    if (refCallback) refCallback(r);\n                                                }}\n                                                className={className}\n                                                isInvalid={errors && errors[name] ? true : false}\n                                                {...(register ? register(name) : {})}\n                                                {...otherProps}\n                                                autoComplete={name}>\n                                                {children ? children : null}\n                                            </Form.Control>\n\n                                            {errors && errors[name] ? (\n                                                <Form.Control.Feedback type=\"invalid\">\n                                                    {errors[name]['message']}\n                                                </Form.Control.Feedback>\n                                            ) : null}\n                                        </Form.Group>\n                                    )}\n                                </>\n                            )}\n                        </>\n                    )}\n                </>\n            )}\n        </>\n    );\n};\n\nexport default FormInput;\n","// @flow\nimport React from 'react';\nimport classNames from 'classnames';\n\ntype SpinnerProps = {\n    tag?: string,\n    className?: string,\n    size?: 'lg' | 'md' | 'sm',\n    type?: 'bordered' | 'grow',\n    color?: string,\n    children?: any,\n};\n\n/**\n * Spinner\n */\nconst Spinner = (props: SpinnerProps): React$Element<any> => {\n    const children = props.children || null;\n    const Tag = props.tag || 'div';\n    const color = props.color || 'secondary';\n    const size = props.size || '';\n\n    return (\n        <Tag\n            role=\"status\"\n            className={classNames(\n                {\n                    'spinner-border': props.type === 'bordered',\n                    'spinner-grow': props.type === 'grow',\n                },\n                [`text-${color}`],\n                { [`avatar-${size}`]: size },\n                props.className\n            )}>\n            {children}\n        </Tag>\n    );\n};\n\nSpinner.defaultProps = {\n    tag: 'div',\n    type: 'bordered',\n};\n\nexport default Spinner;\n","import axios from 'axios';\nimport { Navigate } from \"react-router-dom\";\n//import config from '../../config';\n\n// content type\naxios.defaults.headers.post['Content-Type'] = 'application/json';\naxios.defaults.headers.get['Content-Type'] = 'application/json';\naxios.defaults.headers = {\n    'Cache-Control': 'no-cache',\n    'Pragma': 'no-cache',\n    'Expires': '0',\n};\n//axios.defaults.baseURL = config.API_URL;\n\n// intercepting to capture errors\naxios.interceptors.response.use(\n    (response) => {\n        return response;\n    },\n    (error) => {\n        // Any status codes that falls outside the range of 2xx cause this function to trigger\n        let message;\n\n        if (error && error.response && error.response.status === 404) {\n            <Navigate to=\"/error-404\" />\n        } else if (error && error.response && error.response.status === 500) {\n            <Navigate to=\"/error-500\" />\n        } else {\n            message = error.response && error.response.data ? error.response.data['message'] : error.message || error;\n            return Promise.reject(message);\n        }\n    }\n);\n\nclass APICore {\n    /**\n     * Fetches data from given url\n     */\n    get = (url, params) => {\n        let response;\n        if (params) {\n            var queryString = params\n                ? Object.keys(params)\n                    .map((key) => key + '=' + params[key])\n                    .join('&')\n                : '';\n            response = axios.get(`${url}?${queryString}`, params);\n        } else {\n            response = axios.get(`${url}`, params);\n        }\n        return response;\n    };\n\n    /**\n     * post given data to url\n     */\n    create = (url, data) => {\n        return axios.post(url, data);\n    };\n}\n\nexport { APICore };\n","import { APICore } from './apiCore';\n\nconst api = new APICore();\n\n//App 安装\nfunction AppInstall(params: any): Promise<any> {\n    const baseUrl = '/AppManage/AppInstall';\n    return api.get(`${baseUrl}`, params);\n}\n\n//App 列表查询\nfunction AppList(params: any): Promise<any> {\n    const baseUrl = '/AppManage/AppList';\n    return api.get(`${baseUrl}`, params);\n}\n\n//App 卸载\nfunction AppUninstall(params: any): Promise<any> {\n    const baseUrl = '/AppManage/AppUninstall';\n    return api.get(`${baseUrl}`, params);\n}\n\n//App 停止\nfunction AppStop(params: any): Promise<any> {\n    const baseUrl = '/AppManage/AppStop';\n    return api.get(`${baseUrl}`, params);\n}\n\n//App 启动\nfunction AppStart(params: any): Promise<any> {\n    const baseUrl = '/AppManage/AppStart';\n    return api.get(`${baseUrl}`, params);\n}\n\n//App 重启\nfunction AppRestart(params: any): Promise<any> {\n    const baseUrl = '/AppManage/AppRestart';\n    return api.get(`${baseUrl}`, params);\n}\n\n//App 状态查询\nfunction AppStatus(params: any): Promise<any> {\n    const baseUrl = '/AppManage/AppStatus';\n    return api.get(`${baseUrl}`, params);\n}\n\nexport { AppInstall, AppList, AppUninstall, AppStop, AppStart, AppRestart, AppStatus };\n\n","import React from 'react';\nimport { Card, Col, Form, Row } from 'react-bootstrap';\nimport { useNavigate } from 'react-router-dom';\nimport AdminImg from '../../assets/images/admin-settings.png';\nimport FormInput from '../../components/FormInput';\n\nconst AppAccess = (props): React$Element<React$FragmentType> => {\n    const navigate = useNavigate(); //用于页面跳转\n    return (\n        <>\n            <Card style={{ marginTop: \"10px\" }}>\n                <Card.Body className=\"profile-user-box\">\n                    <Row>\n                        <Col sm={8}>\n                            <Row className=\"align-items-center\">\n                                <Col className=\"col-auto\">\n                                    <div className=\"avatar-lg\">\n                                        <img\n                                            src={AdminImg}\n                                            style={{ height: '100px' }}\n                                            alt=\"\"\n                                            className=\"rounded-circle img-thumbnail\"\n                                        />\n                                    </div>\n                                </Col>\n                                <Col className=\"avatar-lg\">\n                                    <div>\n                                        <Form.Group as={Row} className=\"mb-3\">\n                                            <Form.Label htmlFor=\"username\" column md={3}>\n                                                Username\n                                            </Form.Label>\n                                            <Col md={9}>\n                                                <Form.Control\n                                                    type=\"text\"\n                                                    name=\"username\"\n                                                    id=\"username\"\n                                                    defaultValue={props.data?.config?.user_name}\n                                                    readOnly\n                                                />\n                                            </Col>\n                                        </Form.Group>\n\n                                        <Form.Group as={Row} className=\"mb-3\">\n                                            <Form.Label htmlFor=\"password\" column md={3}>\n                                                Password\n                                            </Form.Label>\n                                            <Col md={9}>\n                                                <FormInput\n                                                    type=\"password\"\n                                                    name=\"password\"\n                                                    containerClass={'mb-3'}\n                                                    value={props.data?.config?.password}\n                                                    readOnly\n                                                />\n                                            </Col>\n                                        </Form.Group>\n                                    </div>\n                                </Col>\n                            </Row>\n                        </Col>\n                        <Col sm={4} style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"flex-end\" }}>\n                            <div className=\"text-center mt-sm-0 mt-3 text-sm-end\">\n                                <button type=\"button\" className=\"btn btn-light\" onClick={() => window.open(props.data.admin_url, '_blank')}>\n                                    <i className=\"mdi mdi-account-edit me-1\"></i> Go to login\n                                </button>\n                            </div>\n                        </Col>\n                    </Row>\n\n                </Card.Body>\n\n            </Card >\n        </>\n    );\n}\n\nexport default AppAccess;","import cockpit from \"cockpit\";\nimport { default as React, useEffect, useRef, useState } from 'react';\nimport ScrollToBottom from 'react-scroll-to-bottom';\n\nconst AppLogs = (props): React$Element<React$FragmentType> => {\n    const [appLogs, setAppLog] = useState(\"\");\n\n    const messagesEndRef = useRef(null);\n\n    useEffect(() => {\n        messagesEndRef.current.scrollIntoView({ behavior: \"auto\" });\n    }, []);\n\n    const getAppLog = () => {\n        cockpit.spawn([\"docker\", \"compose\", \"--project-name\", props.projectName.customer_name, \"logs\", \"--tail\", \"200\"]).then(content => {\n            setAppLog(content);\n        }).catch(exception => {\n\n        });\n    };\n\n    useEffect(() => {\n        const timer = setInterval(getAppLog, 1000);\n        return () => clearInterval(timer);\n    }, [getAppLog]);\n\n\n    return (\n        <ScrollToBottom>\n            <div style={{ \"height\": \"600px\", \"width\": \"100%\" }}>\n                <pre style={{ \"white-space\": \"pre-wrap\", \"word-wrap\": \"break-word\" }}>\n                    {appLogs}\n                </pre>\n                <div ref={messagesEndRef} />\n            </div>\n        </ScrollToBottom>\n    );\n}\n\nexport default AppLogs;","import React from 'react';\nimport { Button, Card, Col, Row, Table } from 'react-bootstrap';\n\nconst Backups = (props): React$Element<React$FragmentType> => {\n    const records = [\n        { id: 1, firstName: 'Mark', lastName: 'Otto', username: '@mdo' },\n        { id: 2, firstName: 'Jacob', lastName: 'Thornton', username: '@fat' },\n        { id: 3, firstName: 'Dave', lastName: 'G', username: '@dave' },\n        { id: 4, firstName: 'Nik', lastName: 'N', username: '@nikn' },\n        { id: 5, firstName: 'Shreyu', lastName: 'Navadiya', username: '@sn' },\n    ];\n\n    return (\n        <>\n            <Row className=\"mb-2\">\n                <Col sm={12}>\n                    <label className=\"me-1\" style={{ fontWeight: \"bolder\", marginBottom: \"5px\" }}>Backups</label>\n                    <p>\n                        Backups are complete snapshots of the app. You can use app backups to restore or clone this app.\n                    </p>\n                    <Row>\n                        <Col xs={12}>\n                            <Card>\n                                <Card.Body>\n                                    <Table className=\"mb-0\">\n                                        <thead>\n                                            <tr>\n                                                <th>#</th>\n                                                <th>First Name</th>\n                                                <th>Last Name</th>\n                                                <th>Username</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {records.map((record, index) => {\n                                                return (\n                                                    <tr key={index}>\n                                                        <th scope=\"row\">{record.id}</th>\n                                                        <td>{record.firstName}</td>\n                                                        <td>{record.lastName}</td>\n                                                        <td>{record.username}</td>\n                                                    </tr>\n                                                );\n                                            })}\n                                        </tbody>\n                                    </Table>\n                                </Card.Body>\n                            </Card>\n                        </Col>\n                    </Row>\n\n                    <Button variant=\"primary\" style={{ float: 'right' }} >\n                        Create Backup\n                    </Button>\n                </Col>\n            </Row>\n            <hr></hr>\n            <Row className=\"mb-2\">\n                <Col sm={12}>\n                    <label className=\"me-1\" style={{ fontWeight: \"bolder\", marginBottom: \"5px\" }}>Automatic Backups</label>\n                    <p>\n                        Cloudron periodically creates a backup based on the backup settings.\n                    </p>\n                    <p>\n                        Automatic Backups is currently enabled.\n                    </p>\n                    <Button variant=\"primary\" style={{ float: \"right\" }} >\n                        Enable Automatic Backups\n                    </Button>\n                </Col>\n            </Row>\n        </>\n    );\n}\n\nexport default Backups;","import classNames from 'classnames';\nimport React, { useState } from 'react';\nimport { Alert, Button, Col, Modal, Row } from 'react-bootstrap';\nimport { useNavigate } from 'react-router-dom';\nimport Spinner from '../../components/Spinner';\nimport { AppStart, AppStop, AppUninstall } from '../../helpers';\n\n//卸载应用时的确定/取消弹窗\nconst UninstallConform = (props) => {\n    const navigate = useNavigate(); //用于页面跳转\n    const [disable, setDisable] = useState(false);//用于按钮禁用\n    const [showAlert, setShowAlert] = useState(false); //用于是否显示错误提示\n    const [alertMessage, setAlertMessage] = useState(\"\");//用于显示错误提示消息\n\n    function closeAllModals() {\n        //关闭弹窗\n        props.onClose();\n        props.onCloseFatherModal();\n\n        //更新主页APP的数据\n        props.onDataChange();\n    }\n\n    return (\n        <Modal show={props.showConform} onHide={props.onClose} size=\"lg\"\n            scrollable=\"true\" backdrop=\"static\" style={{ backgroundColor: \"rgba(0,0,0,0.8)\" }}>\n            <Modal.Header onHide={props.onClose} closeButton className={classNames('modal-colored-header', 'bg-warning')}>\n                <h4>Uninstall {props.app.customer_name}</h4>\n            </Modal.Header>\n            <Modal.Body className=\"row\" >\n                <span style={{ margin: \"10px 0px\" }}>This will immediately uninstall {props.app.customer_name} and remove all its data.</span>\n                <div>\n                    {showAlert && <Alert variant=\"danger\" className=\"my-2\">\n                        {alertMessage}\n                    </Alert>}\n                </div>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"light\" onClick={props.onClose}>\n                    Close\n                </Button>{\" \"}\n                <Button disabled={disable} variant=\"warning\" onClick={async () => {\n                    try {\n                        setDisable(true);\n                        //调用卸载应用接口\n                        const response = await AppUninstall({ app_id: props.app.app_id });\n                        if (response.data.Error) {\n                            setShowAlert(true);\n                            setAlertMessage(response.data.Error.Message);\n                        }\n                        else {\n                            closeAllModals(); //关闭弹窗并更新数据\n                        }\n                    }\n                    catch (error) {\n                        navigate(\"/error-500\");\n                    }\n                }}>\n                    {disable && <Spinner className=\"spinner-border-sm me-1\" tag=\"span\" color=\"white\" />} Uninstall\n                </Button>\n            </Modal.Footer>\n        </Modal >\n    );\n}\n\n//卸载应用选项卡\nconst Uninstall = (props): React$Element<React$FragmentType> => {\n    const [showUninstallConform, setShowUninstallConform] = useState(false);//用于确认卸载弹窗的标识\n    const [disable, setDisable] = useState(false);//用于按钮禁用\n    const navigate = useNavigate(); //用于页面跳转\n\n    //用于显示确定/取消卸载应用的弹窗\n    const handleClick = () => {\n        setShowUninstallConform(true);\n    };\n    //用于关闭确定/取消卸载应用的弹窗\n    const handleClose = () => {\n        setShowUninstallConform(false);\n    };\n\n    return (\n        <>\n            <Row className=\"mb-2\">\n                <Col sm={12}>\n                    <label className=\"me-1\" style={{ fontWeight: \"bolder\", marginBottom: \"5px\" }}>Start / Stop</label>\n                    <p>\n                        Apps can be stopped to conserve server resources instead of uninstalling.\n                        Future app backups will not include any app changes between now and the most recent app backup.\n                        For this reason, it is recommended to trigger a backup before stopping the app.\n                    </p>\n                    {props.data.status === \"running\" ?\n                        <Button variant=\"secondary\" style={{ float: 'right' }} disabled={disable} onClick={async () => {\n                            try {\n                                setDisable(true);\n                                //调用应用停止接口\n                                const response = await AppStop({ app_id: props.data.app_id });\n                                if (response.data.Error) {\n                                    navigate(\"/error\")\n                                }\n                                else {\n                                    setDisable(false);\n                                    props.onDataChange(props.data.app_id);\n                                }\n                            }\n                            catch (error) {\n                                navigate(\"/error-500\");\n                            }\n                        }}>\n                            {disable && <Spinner className=\"spinner-border-sm me-1\" tag=\"span\" color=\"white\" />} Stop App\n                        </Button>\n                        :\n                        <Button variant=\"primary\" style={{ float: 'right' }} disabled={disable} onClick={async () => {\n                            setDisable(true);\n                            try {\n                                const response = await AppStart({ app_id: props.data.app_id });\n                                if (response.data.Error) {\n                                    navigate(\"/error\")\n                                }\n                                else {\n                                    setDisable(false);\n                                    props.onDataChange(props.data.app_id);\n                                }\n                            }\n                            catch (error) {\n                                navigate(\"/error-500\");\n                            }\n                        }}>\n                            {disable && <Spinner className=\"spinner-border-sm me-1\" tag=\"span\" color=\"white\" />} Start App\n                        </Button>\n                    }\n                </Col>\n            </Row>\n            <hr></hr>\n            <Row className=\"mb-2\">\n                <Col sm={12}>\n                    <label className=\"me-1\" style={{ fontWeight: \"bolder\", marginBottom: \"5px\" }}>Uninstall</label>\n                    <p>\n                        This will uninstall the app immediately and remove all its data. The app will be inaccessible.\n                        App backups are not removed and will be cleaned up based on the backup policy.\n                        You can resurrect this app from an existing app backup using the following instructions.\n                    </p>\n                    <Button variant=\"warning\" style={{ float: \"right\" }} onClick={() => { handleClick() }} >\n                        Uninstall\n                    </Button>\n                </Col>\n            </Row>\n            {showUninstallConform && <UninstallConform showConform={showUninstallConform} onClose={handleClose}\n                app={props.data} onDataChange={props.onDataChange} onCloseFatherModal={props.onCloseFatherModal} />}\n        </>\n    );\n}\n\nexport default Uninstall;","import classnames from \"classnames\";\nimport cockpit from 'cockpit';\nimport React, { useEffect, useState } from 'react';\nimport { Col, Modal, Nav, OverlayTrigger, Row, Tab, Tooltip } from 'react-bootstrap';\nimport { Link, useNavigate } from 'react-router-dom';\nimport DefaultImg from '../assets/images/default.png';\nimport Spinner from '../components/Spinner';\nimport { AppRestart, AppStart, AppStop } from '../helpers';\nimport AppAccess from './appdetailtabs/appaccess';\nimport AppLogs from './appdetailtabs/applogs';\nimport Backups from './appdetailtabs/backups';\nimport Uninstall from './appdetailtabs/uninstall';\n\nconst _ = cockpit.gettext;\n\nconst AppDetailModal = (props): React$Element<React$FragmentType> => {\n    // const [disable, setDisable] = useState(false);//用于按钮禁用\n    const [currentApp, setCurrentApp] = useState(props.current_app);\n    const [startAppLoading, setStartAppLoading] = useState(false); //用户显示启动应用的加载状态\n    const [stopAppLoading, setStopAppLoading] = useState(false); //用户显示停止时应用的加载状态\n    const [restartAppLoading, setRestartAppLoading] = useState(false); //用户显示重启时应用的加载状态\n    const navigate = useNavigate(); //用于页面跳转\n\n    useEffect(() => {\n        setCurrentApp(props.current_app);\n    }, [props.current_app]);\n\n    const tabContents = [\n        {\n            id: '1',\n            title: _(\"Access\"),\n            icon: 'mdi mdi-account-circle',\n            text: <AppAccess data={currentApp} />,\n        },\n        {\n            id: '2',\n            title: _(\"Backups\"),\n            icon: 'mdi mdi-account-circle',\n            text: <Backups data={currentApp} />,\n        },\n        {\n            id: '3',\n            title: _(\"Updates\"),\n            icon: 'mdi mdi-account-circle',\n            text: 'Profile - Food truck quinoa dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Donec quam felis, ultricies nec, pellentesque eu, pretium quis, sem. Nulla consequat massa quis enim.',\n        },\n        {\n            id: '4',\n            title: _(\"Logs\"),\n            icon: 'mdi mdi-account-circle',\n            text: <AppLogs projectName={currentApp} />,\n        },\n        {\n            id: '5',\n            title: _(\"Uninstall\"),\n            icon: 'mdi mdi-cog-outline',\n            text: <Uninstall data={currentApp}\n                onDataChange={props.onDataChange} onCloseFatherModal={props.onClose} />,\n        },\n    ];\n\n    return (\n        currentApp && <Modal show={props.showFlag} onHide={props.onClose} size=\"lg\" scrollable=\"true\" dialogClassName=\"modal-full-width\" >\n            <Modal.Header onHide={props.onClose} closeButton>\n                <div style={{ padding: \"10px\", display: \"flex\", width: \"100%\", alignItems: \"center\" }}>\n                    <div className='appstore-item-content-icon col-same-height'>\n                        <img\n                            src={currentApp.image_url}\n                            alt=\"\"\n                            className=\"app-icon\"\n                            onError={(e) => (e.target.src = DefaultImg)}\n                        />\n                    </div>\n                    <div className='col-same-height'>\n                        <h4 className=\"appstore-item-content-title\" style={{ marginTop: \"5px\" }}>\n                            {currentApp.customer_name}\n                        </h4>\n                        <h5 className=\"appstore-item-content-title\" style={{ marginTop: \"5px\" }}>\n                            {currentApp.status}\n                        </h5>\n                    </div>\n                    <div className='col-same-height' style={{ flexGrow: 1, display: \"flex\", justifyContent: \"flex-end\", alignItems: \"center\" }}>\n                        {\n                            currentApp.status === \"exited\" &&\n                            <OverlayTrigger\n                                key=\"bottom1\"\n                                placement=\"bottom\"\n                                overlay={\n                                    <Tooltip id=\"tooltip-bottom\">\n                                        Start App\n                                    </Tooltip>\n                                }>\n                                <button\n                                    className=\"nav-link dropdown-toggle end-bar-toggle arrow-none btn btn-link shadow-none\"\n                                    style={{ color: \"#fff\", backgroundColor: \"#2196f3\", padding: \"5px 10px\", borderRadius: \"3px\", borderColor: \"#2196f3\", marginRight: \"10px\" }}\n                                    onClick={async () => {\n                                        setStartAppLoading(true);\n                                        try {\n                                            const response = await AppStart({ app_id: currentApp.app_id });\n                                            if (response.data.Error) {\n                                                navigate(\"/error\")\n                                            }\n                                            else {\n                                                props.onDataChange();\n                                            }\n                                        }\n                                        catch (error) {\n                                            navigate(\"/error-500\");\n                                        }\n                                        finally {\n                                            setStartAppLoading(false);\n                                        }\n                                    }}\n                                >\n                                    {\n                                        startAppLoading ?\n                                            <Spinner className=\"spinner-border-sm noti-icon\" />\n                                            :\n                                            <i className=\"dripicons-media-play noti-icon\"></i>\n                                    }\n                                </button>\n                            </OverlayTrigger>\n                        }\n                        {\n                            currentApp.status === \"running\" &&\n                            <OverlayTrigger\n                                key=\"bottom2\"\n                                placement=\"bottom\"\n                                overlay={\n                                    <Tooltip id=\"tooltip-bottom\">\n                                        Stop App\n                                    </Tooltip>\n                                }>\n                                <button\n                                    className=\"nav-link dropdown-toggle end-bar-toggle arrow-none btn btn-link shadow-none\"\n                                    style={{ color: \"#fff\", backgroundColor: \"#2196f3\", padding: \"5px 10px\", borderRadius: \"3px\", borderColor: \"#2196f3\", marginRight: \"10px\" }}\n                                    onClick={async () => {\n                                        setStopAppLoading(true);\n                                        try {\n                                            const response = await AppStop({ app_id: currentApp.app_id });\n                                            if (response.data.Error) {\n                                                navigate(\"/error\");\n                                            }\n                                            else {\n                                                props.onDataChange();\n                                            }\n                                        }\n                                        catch (error) {\n                                            navigate(\"/error-500\");\n                                        }\n                                        finally {\n                                            setStopAppLoading(false);\n                                        }\n                                    }}\n                                >\n                                    {\n                                        stopAppLoading ?\n                                            <Spinner className=\"spinner-border-sm noti-icon\" />\n                                            :\n                                            <i className=\"dripicons-power noti-icon\"></i>\n                                    }\n                                </button>\n                            </OverlayTrigger>\n                        }\n                        <OverlayTrigger\n                            key=\"bottom3\"\n                            placement=\"bottom\"\n                            overlay={\n                                <Tooltip id=\"tooltip-bottom\">\n                                    Restart App\n                                </Tooltip>\n                            }>\n                            <button\n                                className=\"nav-link dropdown-toggle end-bar-toggle arrow-none btn btn-link shadow-none\"\n                                style={{ color: \"#fff\", backgroundColor: \"#2196f3\", padding: \"5px 10px\", borderRadius: \"3px\", borderColor: \"#2196f3\", marginRight: \"10px\" }}\n                                onClick={async () => {\n                                    try {\n                                        setRestartAppLoading(true);\n                                        const response = await AppRestart({ app_id: currentApp.app_id });\n                                        if (response.data.Error) {\n                                            navigate(\"/error\");\n                                        }\n                                        else {\n                                            props.onDataChange();\n                                        }\n                                    }\n                                    catch (error) {\n                                        navigate(\"/error-500\");\n                                    }\n                                    finally {\n                                        setRestartAppLoading(false);\n                                    }\n                                }}\n                            >\n                                {\n                                    restartAppLoading ?\n                                        <Spinner className=\"spinner-border-sm noti-icon\" />\n                                        :\n                                        <i className=\"dripicons-clockwise noti-icon\"></i>\n                                }\n                            </button>\n                        </OverlayTrigger>\n                        {\n                            currentApp.status === \"running\" &&\n                            <OverlayTrigger\n                                key=\"bottom4\"\n                                placement=\"bottom\"\n                                overlay={\n                                    <Tooltip id=\"tooltip-bottom\">\n                                        Terminal\n                                    </Tooltip>\n                                }>\n                                <Link to={{ pathname: '/terminal', search: `?id=${currentApp.customer_name}` }}\n                                    style={{ color: \"#fff\", backgroundColor: \"#2196f3\", padding: \"5px 10px\", borderRadius: \"3px\", borderColor: \"#2196f3\", marginRight: \"10px\" }}\n                                    target=\"_blank\">\n                                    <i className=\"dripicons-code noti-icon\"></i>{' '}\n                                </Link>\n                            </OverlayTrigger>\n                        }\n                        {\n                            <OverlayTrigger\n                                key=\"bottom5\"\n                                placement=\"bottom\"\n                                overlay={\n                                    <Tooltip id=\"tooltip-bottom\">\n                                        Documentation\n                                    </Tooltip>\n                                }>\n                                <a href={'https://support.websoft9.com/docs/' + currentApp.app_name}\n                                    style={{ color: \"#fff\", backgroundColor: \"#2196f3\", padding: \"5px 10px\", borderRadius: \"3px\", borderColor: \"#2196f3\", marginRight: \"10px\" }}\n                                    target=\"_blank\">\n                                    <i className=\"dripicons-document noti-icon\"></i>{' '}\n                                </a>\n                            </OverlayTrigger>\n                        }\n                    </div>\n                </div>\n            </Modal.Header>\n            <Modal.Body className=\"row\">\n                <Tab.Container defaultActiveKey=\"Domain\">\n                    <Col sm={2} className=\"mb-2 mb-sm-0\">\n                        <Nav variant=\"pills\" className=\"flex-column\">\n                            {tabContents.map((tab, index) => {\n                                const renderElement = () => {\n                                    return (\n                                        <Nav.Item key={index}>\n                                            <Nav.Link as={Link} to=\"#\" eventKey={tab.title}>\n                                                <i\n                                                    className={classnames(\n                                                        tab.icon,\n                                                        'd-md-none',\n                                                        'd-block',\n                                                        'me-1'\n                                                    )}></i>\n                                                <span className=\"d-none d-md-block\">{tab.title}</span>\n                                            </Nav.Link>\n                                        </Nav.Item>\n                                    );\n                                }\n                                if (tab.title === \"Terminal\") {\n                                    if (currentApp.status === \"running\") {\n                                        return renderElement();\n                                    }\n                                } else {\n                                    return renderElement();\n                                }\n                            })}\n                        </Nav>\n                    </Col>\n                    <Col sm={10}>\n                        <Tab.Content style={{ height: \"100%\" }}>\n                            {tabContents.map((tab, index) => {\n                                return (\n                                    <Tab.Pane eventKey={tab.title} id={tab.id} key={index} style={{ height: \"100%\" }}>\n                                        <Row style={{ height: \"100%\" }}>\n                                            <Col sm=\"12\" style={{ height: tab.title === \"Terminal\" ? \"600px\" : \"\" }}>\n                                                {tab.text}\n                                            </Col>\n                                        </Row>\n                                    </Tab.Pane>\n                                );\n                            })}\n                        </Tab.Content>\n                    </Col>\n                </Tab.Container>\n            </Modal.Body>\n        </Modal >\n    );\n}\n\nexport default AppDetailModal;","import MuiAlert from '@mui/material/Alert';\nimport Snackbar from '@mui/material/Snackbar';\nimport classNames from 'classnames';\nimport cockpit from 'cockpit';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Alert, Button, Col, Dropdown, Modal, Row } from 'react-bootstrap';\nimport { Link, Navigate, useNavigate } from 'react-router-dom';\nimport DefaultImg from '../assets/images/default.png';\nimport FormInput from '../components/FormInput';\nimport Spinner from '../components/Spinner';\nimport { AppList, AppRestart, AppStart, AppStop, AppUninstall } from '../helpers';\nimport AppDetailModal from './appdetail';\n\nconst _ = cockpit.gettext;\n\nconst MyMuiAlert = React.forwardRef(function Alert(props, ref) {\n    return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\n});\n\n//应用状态为failed时，显示错误消息\nconst ErrorInfoModal = (props): React$Element<React$FragmentType> => {\n    return (\n        <Modal show={props.showConform} onHide={props.onClose} size=\"lg\" scrollable=\"true\" backdrop=\"static\">\n            <Modal.Header onHide={props.onClose} closeButton className={classNames('modal-colored-header', 'bg-danger')}>\n                <h4>This is the error message for {props.app.customer_name}</h4>\n            </Modal.Header>\n            <Modal.Body className=\"row\" >\n                {\n                    props.app.status_reason &&\n                    <>\n                        <span style={{ margin: \"10px 0px\" }}> <b>{\"Code: \"}</b>{props.app.status_reason.Code} </span>\n                        <span style={{ margin: \"10px 0px\" }}> <b>{\"Message: \"}</b>{props.app.status_reason.Message} </span>\n                        <span style={{ margin: \"10px 0px\" }}> <b>{\"Detail: \"}</b>{props.app.status_reason.Detail} </span>\n                    </>\n                }\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"light\" onClick={props.onClose}>\n                    Close\n                </Button>\n                <Button variant=\"light\" onClick={() => window.open('https://www.websoft9.com/ticket', '_blank')}>\n                    Support\n                </Button>\n            </Modal.Footer>\n        </Modal >\n    );\n}\n\n//删除应用弹窗\nconst UninstallConform = (props): React$Element<React$FragmentType> => {\n    const navigate = useNavigate(); //用于页面跳转\n    const [disable, setDisable] = useState(false);//用于按钮禁用\n    const [showAlert, setShowAlert] = useState(false); //用于是否显示错误提示\n    const [alertMessage, setAlertMessage] = useState(\"\");//用于显示错误提示消息\n\n    function closeAllModals() {\n        //关闭所有弹窗\n        props.onClose();\n        props.onDataChange();\n    }\n\n    return (\n        <Modal show={props.showConform} onHide={props.onClose} size=\"lg\"\n            scrollable=\"true\" backdrop=\"static\">\n            <Modal.Header onHide={props.onClose} className={classNames('modal-colored-header', 'bg-warning')}>\n                <h4>Remove {props.app.customer_name}</h4>\n            </Modal.Header>\n            <Modal.Body className=\"row\" >\n                <span style={{ margin: \"10px 0px\" }}>This will immediately remove {props.app.customer_name} and remove all its data.</span>\n                <div>\n                    {showAlert && <Alert variant=\"danger\" className=\"my-2\">\n                        {alertMessage}\n                    </Alert>}\n                </div>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"light\" onClick={props.onClose}>\n                    Close\n                </Button>{\" \"}\n                <Button disabled={disable} variant=\"warning\" onClick={async () => {\n                    try {\n                        setDisable(true);\n                        //调用卸载应用接口\n                        const response = await AppUninstall({ app_id: props.app.app_id });\n                        if (response.data.Error) {\n                            setShowAlert(true);\n                            setAlertMessage(response.data.Error.Message);\n                        }\n                        else {\n                            closeAllModals(); //关闭弹窗并更新数据\n                        }\n                    }\n                    catch (error) {\n                        navigate(\"/error-500\");\n                    }\n                }}>\n                    {disable && <Spinner className=\"spinner-border-sm me-1\" tag=\"span\" color=\"white\" />} Uninstall\n                </Button>\n            </Modal.Footer>\n        </Modal >\n    );\n}\n\nconst MyApps = (): React$Element<React$FragmentType> => {\n    const [showModal, setShowModal] = useState(false); //用于显示状态为running或exited弹窗的标识\n    const [showUninstallConform, setShowUninstallConform] = useState(false); //用于显示状态为failed时显示确定删除的弹窗\n    const [showErrorInfo, setShowErrorInfo] = useState(false); //用于显示状态为failed时显示错误消息的弹窗\n    const [showOtherAppModal, setShowOtherAppModal] = useState(false); //用于显示非websoft9应用的的弹窗的标识\n    const [isLoading, setIsLoading] = useState(false); //用于非官方应用启动 停止 重启 卸载时，显示加载中\n    const [showAlert, setShowAlert] = useState(false); //用于是否显示错误提示\n    const [alertMessage, setAlertMessage] = useState(\"\");//用于显示错误提示消息\n    const [alertType, setAlertType] = useState(\"\");//用于确定弹窗的类型：error\\success\n\n    const [selectedApp, setSelectedApp] = useState(null); //用于存储被选中的产品（点击应用详情时使用）\n    const [apps, setApps] = useState([]); //所有“我的应用”\n    const [statusApps, setStatusApps] = useState([]);//根据状态筛选的应用\n    const [searchString, setSearchString] = useState(\"\");//用户输入的筛选字符串\n    const [selectedStatus, setSelectedStatus] = useState(\"all\"); //用于存储用户筛选应用状态的标识\n    const [progressId, setProgressId] = useState([]); //用于存储当前正在安装的应用ID，用于做进度查询的参数\n\n    const selectedAppRef = useRef(selectedApp);\n    const navigate = useNavigate(); //用于页面跳转\n\n    const [code, setCode] = useState(0);\n    const [error, setError] = useState(null);\n    const [errorDetails, setErrorDetails] = useState(null)\n    const [loading, setLoading] = useState(false);\n\n    const menuItems = (appStatus) => {\n        return [\n            { label: 'Stop', icon: 'dripicons-power noti-icon', condition: appStatus === \"running\" },\n            { label: 'Start', icon: 'dripicons-media-play noti-icon', condition: appStatus === \"exited\" },\n            { label: 'Restart', icon: 'dripicons-clockwise noti-icon', condition: appStatus === \"running\" || appStatus === \"exited\" },\n            {\n                label: 'Uninstall',\n                icon: 'dripicons-trash noti-icon',\n                variant: 'text-danger',\n                hasDivider: true,\n                condition: true\n            }\n        ]\n    };\n\n    let timer;\n\n    //获取所有已安装的App(只执行一次)\n    const getAllAppsOnce = () => {\n        AppList().then((response) => {\n            if (response.data.Error) {\n                setCode(response.data.Error.Code);\n                setError(response.data.Error.Message);\n                setErrorDetails(response.data.Error.Details);\n            }\n            else {\n                const newApps = response.data.ResponseData;\n                setApps(newApps);\n                if (selectedAppRef.current) {\n                    const updatedApp = newApps.find(\n                        (app) => app.app_id === selectedAppRef.current.app_id\n                    );\n                    setSelectedApp(updatedApp);\n                }\n            }\n            setLoading(false);\n        }).catch((error) => {\n            <Navigate to=\"/error-500\" />\n        });\n    }\n\n    //获取所有已安装的App(每隔5秒执行一次)\n    const getAllApps = () => {\n        setLoading(true);\n        //调用接口获取已经安装应用\n        timer = setInterval(() => {\n            AppList().then((response) => {\n                if (response.data.Error) {\n                    setCode(response.data.Error.Code);\n                    setError(response.data.Error.Message);\n                    setErrorDetails(response.data.Error.Details);\n                }\n                else {\n                    const newApps = response.data.ResponseData;\n                    setApps(newApps);\n                    if (selectedAppRef.current) {\n                        const updatedApp = newApps.find(\n                            (app) => app.app_id === selectedAppRef.current.app_id\n                        );\n                        setSelectedApp(updatedApp);\n                    }\n                }\n                setLoading(false);\n            }).catch((error) => {\n                <Navigate to=\"/error-500\" />\n            });\n        }, 5000);\n        return () => clearInterval(timer);\n    }\n\n    useEffect(() => {\n        getAllAppsOnce();\n    }, []);\n\n    useEffect(() => {\n        //getAllApps();\n    }, []);\n\n    useEffect(() => {\n        selectedAppRef.current = selectedApp;\n    }, [selectedApp]);\n\n    useEffect(() => {\n        return () => clearInterval(timer);  //用于清除定时器\n    }, []);\n\n    if (loading) return <Spinner className='dis_mid' />;\n    if (code) return <p>Code : ${code} </p>;\n    if (error) return <p>Error : ${error} </p>;\n\n    //用于根据应用“状态”过滤应用\n    const changeStatus = (selectedStatus) => {\n        setSelectedStatus(selectedStatus);\n    };\n\n    //用于根据用户输入搜索应用\n    const handleInputChange = (searchString) => {\n        setSearchString(searchString);\n    }\n\n    //用于用户点击应用详情\n    const handleClick = (app) => {\n        setSelectedApp(app);\n        setShowModal(true);\n    };\n\n    //用于应用为failed时删除应用\n    const deleteApp = (app) => {\n        setSelectedApp(app);\n        setShowUninstallConform(true);\n    };\n\n    //用于应用为failed时显示错误信息弹窗\n    const showError = (app) => {\n        setSelectedApp(app);\n        setShowErrorInfo(true);\n    };\n\n    //用于关闭显示错误消息弹窗\n    const cancelShowError = () => {\n        setShowErrorInfo(false);\n    };\n\n    //用于取消删除应用\n    const canceldeleteApp = () => {\n        setShowUninstallConform(false);\n    };\n\n    //用于关闭应用详情的弹窗\n    const handleClose = () => {\n        setShowModal(false);\n        setSelectedApp(null);\n    };\n\n    const handleAlertClose = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        setShowAlert(false);\n        setAlertMessage(\"\");\n    };\n\n    //用于立即刷新数据\n    const handleDataChange = () => {\n        getAllAppsOnce();\n    };\n\n    //非官方应用的操作\n    const appActions = {\n        \"Stop\": {\n            api: AppStop,\n        },\n        \"Start\": {\n            api: AppStart,\n        },\n        \"Restart\": {\n            api: AppRestart,\n        },\n        \"Uninstall\": {\n            api: AppUninstall,\n        }\n    }\n\n    //处理非官方应用的操作\n    const NoOfficialAppClick = async (label, app) => {\n        if (label === \"Uninstall\") {\n            setSelectedApp(app);\n            setShowUninstallConform(true);\n            return;\n        }\n\n        setIsLoading(true);\n        try {\n            const response = await appActions[label].api({ app_id: app.app_id });\n            if (response.data.Error) {\n                setShowAlert(true);\n                setAlertType(\"error\")\n                setAlertMessage(response.data.Error.Message);\n            }\n            else {\n                setShowAlert(true);\n                setAlertType(\"success\")\n                setAlertMessage(\"执行成功\");\n                handleDataChange();\n            }\n        }\n        catch (error) {\n            navigate(\"/error-500\");\n        }\n        finally {\n            setIsLoading(false);\n        }\n    }\n\n    return (\n        <>\n            <Row className=\"mb-2\" style={{ display: \"flex\", alignItems: \"center\" }}>\n                <Col sm={2}>\n                    <span style={{ fontSize: \"36px\" }}>{_(\"My Apps\")}</span>\n                </Col>\n                <Col sm={3}>\n                    <FormInput\n                        value={selectedStatus}\n                        name=\"select\"\n                        type=\"select\"\n                        className=\"form-select\"\n                        key=\"select\"\n                        onChange={(e) => changeStatus(e.target.value)} >\n                        <option value=\"all\">{_(\"All States\")}</option>\n                        <option value=\"installing\">installing</option>\n                        <option value=\"running\">running</option>\n                        <option value=\"exited\">exited</option>\n                        <option value=\"restarting\">restarting</option>\n                        <option value=\"failed\">failed</option>\n                    </FormInput>\n                </Col>\n                <Col sm={6}>\n                    <Col xs=\"auto\">\n                        <FormInput type=\"text\" name=\"search\"\n                            placeholder=\"Search for apps like WordPress, Dropbox, Slack, Trello, …\"\n                            onChange={(e) => handleInputChange(e.target.value)}\n                        />\n                    </Col>\n                </Col>\n                <Col sm={1}>\n                    <Button variant=\"primary\" style={{ float: \"right\" }} onClick={() => {\n                        window.location.reload(false);\n                    }}>{_(\"Refresh\")}</Button>\n                </Col>\n            </Row>\n            {\n                [true, false].map((official_app) => {\n                    // 过滤出符合条件的apps\n                    const filteredApps = apps.filter((app) => selectedStatus === 'all' || app.status === selectedStatus)\n                        .filter((app) => app.official_app === official_app)\n                        .filter((app) => app.customer_name.includes(searchString));\n                    // 如果有数据，返回一个Row组件，否则返回null\n                    return filteredApps.length > 0 ? (\n                        <Row>\n                            {/* 根据official_app的值显示不同的标题 */}\n                            <h4 style={official_app ? {} : { paddingTop: \"10px\" }}>{official_app ? _(\"Websoft9's Apps\") : _(\"Other Apps\")}</h4>\n                            {filteredApps.map((app, i) => (\n                                <Col xxl={2} md={6} key={app.app_id + i} className=\"appstore-item\">\n                                    <div className='appstore-item-content highlight' style={{ textAlign: \"center\" }}>\n                                        {\n                                            (!official_app && (app.status === \"running\" || app.status === \"exited\")) &&\n                                            <Dropdown style={{ float: \"right\" }}>\n                                                <Dropdown.Toggle as={Link} to=\"#\" className=\"arrow-none card-drop\">\n                                                    {isLoading ? <Spinner className=\"spinner-border-sm noti-icon\" /> : <i className=\"dripicons-gear noti-icon\" />}\n                                                </Dropdown.Toggle>\n                                                <Dropdown.Menu align=\"end\">\n                                                    {(menuItems(app.status) || []).map((item, index) => {\n                                                        return (\n                                                            <React.Fragment key={index}>\n                                                                {item.condition && item.hasDivider && <Dropdown.Divider as=\"div\" />}\n                                                                {\n                                                                    item.condition && <Dropdown.Item className={classNames(item.variant ? item.variant : '')}\n                                                                        onClick={() => NoOfficialAppClick(item.label, app)}\n                                                                    >\n                                                                        {item.icon && <i className={classNames(item.icon, 'me-1')}></i>}\n                                                                        {/* {isLoading ? <Spinner className=\"spinner-border-sm noti-icon\" /> : item.icon && <i className={classNames(item.icon, 'me-1')}></i>} */}\n                                                                        {item.label}\n                                                                    </Dropdown.Item>\n                                                                }\n                                                            </React.Fragment>\n                                                        );\n                                                    })}\n                                                </Dropdown.Menu>\n                                            </Dropdown>\n                                        }\n                                        {\n                                            (official_app && (app.status === \"running\" || app.status === \"exited\")) &&\n                                            <>\n                                                <div className=\"float-end arrow-none card-drop p-0\" onClick={() => { handleClick(app) }}>\n                                                    <i className=\"dripicons-gear noti-icon\"></i>\n                                                </div>\n                                                <div style={{ clear: \"both\" }}></div>\n                                            </>\n                                        }\n                                        {\n                                            (official_app && app.status === \"installing\") &&\n                                            <>\n                                                <div className=\"float-end arrow-none card-drop p-0\">\n                                                    <i className=\"dripicons-empty noti-icon\"></i>\n                                                </div>\n                                                <div style={{ clear: \"both\" }}></div>\n                                            </>\n                                        }\n                                        {\n                                            app.status === 'failed' &&\n                                            <>\n                                                <div className=\"float-end arrow-none card-drop p-0\" >\n                                                    <i className=\"dripicons-information noti-icon\" style={{ paddingRight: \"10px\" }} onClick={() => { showError(app) }}></i>\n                                                    <i className=\"dripicons-trash noti-icon\" onClick={() => { deleteApp(app) }}></i>\n                                                </div>\n                                                <div style={{ clear: \"both\" }}></div>\n                                            </>\n                                        }\n                                        <div>\n                                            <img\n                                                src={app.image_url}\n                                                alt={app.app_name}\n                                                className=\"app-icon\"\n                                                style={{ margin: \"20px 10px 20px 10px\" }}\n                                                onError={(e) => (e.target.src = DefaultImg)}\n                                            />\n                                        </div>\n                                        <div>\n                                            <h3 className=\"appstore-item-content-title\" style={{ color: \"#2196f3\" }}>\n                                                {app.customer_name}\n                                            </h3>\n                                            <div style={{ color: app.status === 'failed' ? 'red' : 'inherit', display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n                                                {app.status && app.status === \"installing\" && <Spinner className=\"spinner-border-sm m-2\" />}\n                                                {\" \"}\n                                                <div className=\"m-2\">{app.status}</div>\n                                            </div>\n                                        </div>\n                                    </div >\n                                </Col>\n                            ))}\n                        </Row >\n                    ) : null;\n                })\n            }\n            {\n                showModal && <AppDetailModal current_app={selectedApp} showFlag={showModal} onClose={handleClose} onDataChange={handleDataChange} />\n            }\n            {\n                showUninstallConform &&\n                <UninstallConform showConform={showUninstallConform} onClose={canceldeleteApp} app={selectedApp} onDataChange={handleDataChange} />\n            }\n            {\n                showErrorInfo &&\n                <ErrorInfoModal showConform={showErrorInfo} onClose={cancelShowError} app={selectedApp} />\n            }\n            {\n                showAlert &&\n                <Snackbar open={showAlert} autoHideDuration={5000} onClose={handleAlertClose} anchorOrigin={{ vertical: 'top', horizontal: 'center' }}>\n                    <MyMuiAlert onClose={handleAlertClose} severity={alertType} sx={{ width: '100%' }}>\n                        {alertMessage}\n                    </MyMuiAlert>\n                </Snackbar>\n            }\n        </>\n    );\n};\n\nexport default MyApps;\n"],"names":["PasswordInput","_ref","name","placeholder","refCallback","errors","register","className","value","readOnly","_useState","useState","_useState2","_slicedToArray","showPassword","setShowPassword","_jsx","_Fragment","children","_jsxs","InputGroup","Form","_objectSpread","type","id","as","ref","r","isInvalid","autoComplete","defaultValue","classNames","onClick","_ref2","label","labelClassName","containerClass","otherProps","_objectWithoutProperties","_excluded","comp","Spinner","props","Tag","tag","color","size","role","concat","_defineProperty","defaultProps","axios","response","error","message","status","Navigate","data","Promise","reject","api","_createClass","APICore","_classCallCheck","get","url","params","queryString","Object","keys","map","key","join","create","AppInstall","AppList","AppUninstall","AppStop","AppStart","AppRestart","_props$data","_props$data$config","_props$data2","_props$data2$config","useNavigate","Card","style","marginTop","Row","Col","sm","src","AdminImg","height","alt","htmlFor","column","md","config","user_name","FormInput","password","display","alignItems","justifyContent","window","open","admin_url","appLogs","setAppLog","messagesEndRef","useRef","useEffect","current","scrollIntoView","behavior","getAppLog","cockpit","projectName","customer_name","then","content","catch","exception","timer","setInterval","clearInterval","ScrollToBottom","fontWeight","marginBottom","xs","Table","firstName","lastName","username","record","index","scope","Button","variant","float","UninstallConform","navigate","disable","setDisable","_useState3","_useState4","showAlert","setShowAlert","_useState5","_useState6","alertMessage","setAlertMessage","Modal","show","showConform","onHide","onClose","scrollable","backdrop","backgroundColor","closeButton","app","margin","Alert","disabled","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","app_id","sent","Error","Message","onCloseFatherModal","onDataChange","t0","stop","_useState7","_useState8","showUninstallConform","setShowUninstallConform","_useState9","_useState10","_callee2","_context2","_callee3","_context3","_","current_app","currentApp","setCurrentApp","startAppLoading","setStartAppLoading","stopAppLoading","setStopAppLoading","restartAppLoading","setRestartAppLoading","tabContents","title","icon","text","AppAccess","Backups","AppLogs","Uninstall","showFlag","dialogClassName","padding","width","image_url","onError","e","target","DefaultImg","flexGrow","OverlayTrigger","placement","overlay","Tooltip","borderRadius","borderColor","marginRight","finish","Link","to","pathname","search","href","app_name","Tab","defaultActiveKey","Nav","tab","renderElement","eventKey","classnames","MyMuiAlert","React","MuiAlert","elevation","ErrorInfoModal","status_reason","Code","Detail","showModal","setShowModal","_useState11","_useState12","showErrorInfo","setShowErrorInfo","_useState13","_useState14","_useState15","_useState16","isLoading","setIsLoading","_useState17","_useState18","_useState19","_useState20","_useState21","_useState22","alertType","setAlertType","_useState23","_useState24","selectedApp","setSelectedApp","_useState25","_useState26","apps","setApps","_useState27","_useState28","_useState29","_useState30","searchString","setSearchString","_useState31","_useState32","selectedStatus","setSelectedStatus","_useState33","_useState34","selectedAppRef","_useState35","_useState36","code","setCode","_useState37","_useState38","setError","_useState39","_useState40","setErrorDetails","_useState41","_useState42","loading","setLoading","getAllAppsOnce","Details","newApps","ResponseData","updatedApp","find","handleAlertClose","event","reason","handleDataChange","appActions","NoOfficialAppClick","abrupt","_x","_x2","apply","arguments","fontSize","onChange","changeStatus","handleInputChange","location","reload","official_app","filteredApps","filter","includes","length","paddingTop","i","xxl","textAlign","Dropdown","align","appStatus","condition","hasDivider","item","handleClick","clear","paddingRight","showError","deleteApp","AppDetailModal","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","severity","sx"],"sourceRoot":""}
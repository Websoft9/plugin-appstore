{"version":3,"file":"static/js/391.bc73db89.chunk.js","mappings":"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","sources":["lib/cockpit-components-context-menu.jsx","lib/cockpit-components-terminal.jsx","pages/terminal.jsx","pages/myterminal.js"],"sourcesContent":["import cockpit from \"cockpit\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport \"./css/context-menu.css\";\n\nconst _ = cockpit.gettext;\n\nexport const ContextMenu = ({ parentId, getText, setText }) => {\n    const [visible, setVisible] = React.useState(false);\n    const [event, setEvent] = React.useState(null);\n    const root = React.useRef(null);\n\n    React.useEffect(() => {\n        const _handleContextMenu = (event) => {\n            event.preventDefault();\n\n            setVisible(true);\n            setEvent(event);\n        };\n\n        const _handleClick = (event) => {\n            if (event && event.button === 0) {\n                const wasOutside = !(event.target.contains === root.current);\n\n                if (wasOutside)\n                    setVisible(false);\n            }\n        };\n\n        const parent = document.getElementById(parentId);\n        parent.addEventListener('contextmenu', _handleContextMenu);\n        document.addEventListener('click', _handleClick);\n\n        return () => {\n            parent.removeEventListener('contextmenu', _handleContextMenu);\n            document.removeEventListener('click', _handleClick);\n        };\n    }, [parentId]);\n\n    React.useEffect(() => {\n        if (!event)\n            return;\n\n        const clickX = event.clientX;\n        const clickY = event.clientY;\n        const screenW = window.innerWidth;\n        const screenH = window.innerHeight;\n        const rootW = root.current.offsetWidth;\n        const rootH = root.current.offsetHeight;\n\n        const right = (screenW - clickX) > rootW;\n        const left = !right;\n        const top = (screenH - clickY) > rootH;\n        const bottom = !top;\n\n        if (right) {\n            root.current.style.left = `${clickX + 5}px`;\n        }\n\n        if (left) {\n            root.current.style.left = `${clickX - rootW - 5}px`;\n        }\n\n        if (top) {\n            root.current.style.top = `${clickY + 5}px`;\n        }\n\n        if (bottom) {\n            root.current.style.top = `${clickY - rootH - 5}px`;\n        }\n    }, [event]);\n\n    return visible &&\n        <div ref={root} className=\"contextMenu\">\n            <button className=\"contextMenuOption\" onClick={getText}>\n                <div className=\"contextMenuName\"> {_(\"Copy\")} </div>\n                <div className=\"contextMenuShortcut\">{_(\"Ctrl+Insert\")}</div>\n            </button>\n            <button className=\"contextMenuOption\" onClick={setText}>\n                <div className=\"contextMenuName\"> {_(\"Paste\")} </div>\n                <div className=\"contextMenuShortcut\">{_(\"Shift+Insert\")}</div>\n            </button>\n        </div>;\n};\n\nContextMenu.propTypes = {\n    getText: PropTypes.func.isRequired,\n    setText: PropTypes.func.isRequired,\n    parentId: PropTypes.string.isRequired\n};","import { Button, Modal } from \"@patternfly/react-core\";\nimport cockpit from \"cockpit\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { Terminal as Term } from \"xterm\";\nimport { CanvasAddon } from 'xterm-addon-canvas';\nimport { ContextMenu } from \"./cockpit-components-context-menu\";\nimport \"./css/console.css\";\n\nconst _ = cockpit.gettext;\n\nconst theme_core = {\n    yellow: \"#b58900\",\n    brightRed: \"#cb4b16\",\n    red: \"#dc322f\",\n    magenta: \"#d33682\",\n    brightMagenta: \"#6c71c4\",\n    blue: \"#268bd2\",\n    cyan: \"#2aa198\",\n    green: \"#859900\"\n};\n\nconst themes = {\n    \"black-theme\": {\n        background: \"#000000\",\n        foreground: \"#ffffff\"\n    },\n    \"dark-theme\": Object.assign({}, theme_core, {\n        background: \"#002b36\",\n        foreground: \"#fdf6e3\",\n        cursor: \"#eee8d5\",\n        selection: \"#ffffff77\",\n        brightBlack: \"#002b36\",\n        black: \"#073642\",\n        brightGreen: \"#586e75\",\n        brightYellow: \"#657b83\",\n        brightBlue: \"#839496\",\n        brightCyan: \"#93a1a1\",\n        white: \"#eee8d5\",\n        brightWhite: \"#fdf6e3\"\n    }),\n    \"light-theme\": Object.assign({}, theme_core, {\n        background: \"#fdf6e3\",\n        foreground: \"#002b36\",\n        cursor: \"#073642\",\n        selection: \"#00000044\",\n        brightWhite: \"#002b36\",\n        white: \"#073642\",\n        brightCyan: \"#586e75\",\n        brightBlue: \"#657b83\",\n        brightYellow: \"#839496\",\n        brightGreen: \"#93a1a1\",\n        black: \"#eee8d5\",\n        brightBlack: \"#fdf6e3\"\n    }),\n    \"white-theme\": {\n        background: \"#ffffff\",\n        foreground: \"#000000\",\n        selection: \"#00000044\",\n        cursor: \"#000000\",\n    },\n};\n\nexport class Terminal extends React.Component {\n    constructor(props) {\n        super(props);\n        this.onChannelMessage = this.onChannelMessage.bind(this);\n        this.onChannelClose = this.onChannelClose.bind(this);\n        this.connectChannel = this.connectChannel.bind(this);\n        this.disconnectChannel = this.disconnectChannel.bind(this);\n        this.reset = this.reset.bind(this);\n        this.focus = this.focus.bind(this);\n        this.onWindowResize = this.onWindowResize.bind(this);\n        this.resizeTerminal = this.resizeTerminal.bind(this);\n        this.onFocusIn = this.onFocusIn.bind(this);\n        this.onFocusOut = this.onFocusOut.bind(this);\n        this.setText = this.setText.bind(this);\n        this.getText = this.getText.bind(this);\n        this.setTerminalTheme = this.setTerminalTheme.bind(this);\n\n        const term = new Term({\n            cols: props.cols || 80,\n            rows: props.rows || 25,\n            screenKeys: true,\n            cursorBlink: true,\n            fontSize: props.fontSize || 16,\n            fontFamily: 'Menlo, Monaco, Consolas, monospace',\n            screenReaderMode: true,\n            showPastingModal: false,\n        });\n\n        this.terminalRef = React.createRef();\n\n        term.onData(function (data) {\n            if (this.props.channel.valid) {\n                this.props.channel.send(data);\n            }\n        }.bind(this));\n\n        if (props.onTitleChanged)\n            term.onTitleChange(props.onTitleChanged);\n\n        this.terminal = term;\n        this.state = {\n            showPastingModal: false,\n            cols: props.cols || 80,\n            rows: props.rows || 25\n        };\n    }\n\n    componentDidMount() {\n        this.terminal.open(this.terminalRef.current);\n        this.terminal.loadAddon(new CanvasAddon());\n\n        this.connectChannel();\n\n        if (!this.props.rows) {\n            window.addEventListener('resize', this.onWindowResize);\n            this.onWindowResize();\n        }\n        this.setTerminalTheme(this.props.theme || 'black-theme');\n        this.terminal.focus();\n    }\n\n    resizeTerminal(cols, rows) {\n        this.terminal.resize(cols, rows);\n        this.props.channel.control({\n            window: {\n                rows,\n                cols\n            }\n        });\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevProps.fontSize !== this.props.fontSize) {\n            this.terminal.options.fontSize = this.props.fontSize;\n\n            // After font size is changed, resize needs to be triggered\n            const dimensions = this.calculateDimensions();\n            if (dimensions.cols !== this.state.cols || dimensions.rows !== this.state.rows) {\n                this.onWindowResize();\n            } else {\n                // When font size changes but dimensions are the same, we need to force `resize`\n                this.resizeTerminal(dimensions.cols - 1, dimensions.rows);\n            }\n        }\n\n        if (prevState.cols !== this.state.cols || prevState.rows !== this.state.rows)\n            this.resizeTerminal(this.state.cols, this.state.rows);\n\n        if (prevProps.theme !== this.props.theme)\n            this.setTerminalTheme(this.props.theme);\n\n        if (prevProps.channel !== this.props.channel) {\n            this.terminal.reset();\n            this.disconnectChannel(prevProps.channel);\n            this.connectChannel();\n            this.props.channel.control({\n                window: {\n                    rows: this.state.rows,\n                    cols: this.state.cols\n                }\n            });\n        }\n        this.terminal.focus();\n    }\n\n    render() {\n        return (\n            <>\n                <Modal title={_(\"Paste error\")}\n                    position=\"top\"\n                    variant=\"small\"\n                    isOpen={this.state.showPastingModal}\n                    onClose={() => this.setState({ showPastingModal: false })}\n                    actions={[\n                        <Button key=\"cancel\" variant=\"secondary\" onClick={() => this.setState({ showPastingModal: false })}>\n                            {_(\"Close\")}\n                        </Button>\n                    ]}>\n                    {_(\"Your browser does not allow paste from the context menu. You can use Shift+Insert.\")}\n                </Modal>\n                <div ref={this.terminalRef}\n                    key={this.terminal}\n                    className=\"console-ct\"\n                    onFocus={this.onFocusIn}\n                    onContextMenu={this.contextMenu}\n                    onBlur={this.onFocusOut} />\n                <ContextMenu parentId={this.props.parentId} setText={this.setText} getText={this.getText} />\n            </>\n        );\n    }\n\n    componentWillUnmount() {\n        this.disconnectChannel();\n        this.terminal.dispose();\n        window.removeEventListener('resize', this.onWindowResize);\n        this.onFocusOut();\n    }\n\n    setText() {\n        try {\n            navigator.clipboard.readText()\n                .then(text => this.props.channel.send(text))\n                .catch(e => this.setState({ showPastingModal: true }))\n                .finally(() => this.terminal.focus());\n        } catch (error) {\n            this.setState({ showPastingModal: true });\n        }\n    }\n\n    getText() {\n        try {\n            navigator.clipboard.writeText(this.terminal.getSelection())\n                .catch(e => console.error('Text could not be copied, use Ctrl+Insert ', e ? e.toString() : \"\"))\n                .finally(() => this.terminal.focus());\n        } catch (error) {\n            console.error('Text could not be copied, use Ctrl+Insert:', error.toString());\n        }\n    }\n\n    onChannelMessage(event, data) {\n        this.terminal.write(data);\n    }\n\n    onChannelClose(event, options) {\n        const term = this.terminal;\n        term.write('\\x1b[31m' + (options.problem || 'disconnected') + '\\x1b[m\\r\\n');\n        term.cursorHidden = true;\n        term.refresh(term.rows, term.rows);\n    }\n\n    connectChannel() {\n        const channel = this.props.channel;\n        if (channel?.valid) {\n            channel.send(\"docker exec -it mysql55 bash||sh\\n\");\n\n            channel.addEventListener('message', this.onChannelMessage.bind(this));\n            channel.addEventListener('close', this.onChannelClose.bind(this));\n        }\n    }\n\n    disconnectChannel(channel) {\n        if (channel === undefined)\n            channel = this.props.channel;\n        if (channel) {\n            channel.removeEventListener('message', this.onChannelMessage);\n            channel.removeEventListener('close', this.onChannelClose);\n        }\n        channel.close();\n    }\n\n    reset() {\n        this.terminal.reset();\n        this.props.channel.send(String.fromCharCode(12)); // Send SIGWINCH to show prompt on attaching\n    }\n\n    focus() {\n        if (this.terminal)\n            this.terminal.focus();\n    }\n\n    calculateDimensions() {\n        const padding = 10; // Leave a bit of space around terminal\n        const realHeight = this.terminal._core._renderService.dimensions.css.cell.height;\n        const realWidth = this.terminal._core._renderService.dimensions.css.cell.width;\n        if (realHeight && realWidth && realWidth !== 0 && realHeight !== 0)\n            return {\n                rows: Math.floor((this.terminalRef.current.parentElement.clientHeight - padding) / realHeight),\n                cols: Math.floor((this.terminalRef.current.parentElement.clientWidth - padding - 12) / realWidth) // Remove 12px for scrollbar\n            };\n\n        return { rows: this.state.rows, cols: this.state.cols };\n    }\n\n    onWindowResize() {\n        this.setState(this.calculateDimensions());\n    }\n\n    setTerminalTheme(theme) {\n        this.terminal.options.theme = themes[theme];\n    }\n\n    onBeforeUnload(event) {\n        // Firefox requires this when the page is in an iframe\n        event.preventDefault();\n\n        // see \"an almost cross-browser solution\" at\n        // https://developer.mozilla.org/en-US/docs/Web/API/Window/beforeunload_event\n        event.returnValue = '';\n        return '';\n    }\n\n    onFocusIn() {\n        window.addEventListener('beforeunload', this.onBeforeUnload);\n    }\n\n    onFocusOut() {\n        window.removeEventListener('beforeunload', this.onBeforeUnload);\n    }\n}\n\nTerminal.propTypes = {\n    cols: PropTypes.number,\n    rows: PropTypes.number,\n    channel: PropTypes.object.isRequired,\n    onTitleChanged: PropTypes.func,\n    theme: PropTypes.string,\n    parentId: PropTypes.string.isRequired\n};","import { FormSelect, FormSelectOption, NumberInput, Toolbar, ToolbarContent, ToolbarGroup, ToolbarItem } from \"@patternfly/react-core\";\nimport cockpit from \"cockpit\";\nimport React from \"react\";\nimport { Terminal } from \"../lib/cockpit-components-terminal\";\n// import \"../lib/css/ter.css\";\n// import '../lib/patternfly/patternfly-4-cockpit.scss';\n{/* <link href=\"/css/terminal.css\" type=\"text/css\" rel=\"stylesheet\"></link> */ }\n\nconst _ = cockpit.gettext;\n\ncockpit.translate();\n\n/*\n * A terminal component for the cockpit user.\n *\n * Uses the Terminal component from base1 internally, but adds a header\n * with title and Reset button.\n *\n * Spawns the user's shell in the user's home directory.\n */\nclass UserTerminal extends React.Component {\n    createChannel(user) {\n        return cockpit.channel({\n            payload: \"stream\",\n            spawn: [user.shell || \"/bin/bash\"],\n            environ: [\n                \"TERM=xterm-256color\",\n            ],\n            directory: user.home || \"/\",\n            pty: true\n        });\n    }\n\n    constructor(props) {\n        super(props);\n\n        let theme = localStorage.getItem('terminal:theme');\n        let size = localStorage.getItem('terminal:font-size');\n        // HACK: Try to read the configuration from localStorage, if it does not exists fall back\n        // to the old configuration stored in a browser's cookie. After enough time has been\n        // passed this can be dropped.\n        if (theme === null || theme === \"\") {\n            theme = document.cookie.replace(/(?:(?:^|.*;\\s*)theme_cookie\\s*=\\s*([^;]*).*$)|^.*$/, \"$1\");\n            if (theme !== \"\") {\n                localStorage.setItem('terminal:theme', theme);\n                this.invalidateCookie(\"theme_cookie\");\n            }\n        }\n        if (size === null || size === \"\") {\n            size = document.cookie.replace(/(?:(?:^|.*;\\s*)size_cookie\\s*=\\s*([^;]*).*$)|^.*$/, \"$1\");\n            if (size !== \"\") {\n                localStorage.setItem('terminal:font-size', size);\n                this.invalidateCookie(\"size_cookie\");\n            }\n        }\n\n        this.state = {\n            title: 'Terminal',\n            theme: theme || \"black-theme\",\n            size: parseInt(size) || 16,\n        };\n        this.onTitleChanged = this.onTitleChanged.bind(this);\n        this.onResetClick = this.onResetClick.bind(this);\n        this.onThemeChanged = this.onThemeChanged.bind(this);\n        this.onPlus = this.onPlus.bind(this);\n        this.onMinus = this.onMinus.bind(this);\n\n        this.terminalRef = React.createRef();\n        this.resetButtonRef = React.createRef();\n\n        this.minSize = 6;\n        this.maxSize = 40;\n    }\n\n    componentDidMount() {\n        cockpit.user().done(function (user) {\n            this.setState({ user, channel: this.createChannel(user) });\n        }.bind(this));\n    }\n\n    onTitleChanged(title) {\n        this.setState({ title });\n    }\n\n    invalidateCookie(key) {\n        const cookie = key + \"=''\" +\n            \"; path=/; Max-Age=0;\";\n        document.cookie = cookie;\n    }\n\n    onPlus() {\n        this.setState((state, _) => {\n            localStorage.setItem('terminal:font-size', state.size + 1);\n            return { size: state.size + 1 };\n        });\n    }\n\n    onMinus() {\n        this.setState((state, _) => {\n            localStorage.setItem('terminal:font-size', state.size - 1);\n            return { size: state.size - 1 };\n        });\n    }\n\n    onThemeChanged(value) {\n        this.setState({ theme: value });\n        localStorage.setItem('terminal:theme', value);\n    }\n\n    onResetClick(event) {\n        if (event.button !== 0)\n            return;\n\n        if (!this.state.channel.valid && this.state.user)\n            this.setState(prevState => ({ channel: this.createChannel(prevState.user) }));\n        else\n            this.terminalRef.current.reset();\n\n        // don't focus the button, but keep it on the terminal\n        this.resetButtonRef.current.blur();\n        this.terminalRef.current.focus();\n    }\n\n    render() {\n        const terminal = this.state.channel\n            ? <Terminal ref={this.terminalRef}\n                channel={this.state.channel}\n                theme={this.state.theme}\n                fontSize={this.state.size}\n                parentId=\"the-terminal\"\n                onTitleChanged={this.onTitleChanged} />\n            : <span>Loading...</span>;\n\n        return (\n            <div className=\"console-ct-container\">\n                <div className=\"terminal-group\">\n                    <tt className=\"terminal-title\">{this.state.title}</tt>\n                    <Toolbar id=\"toolbar\">\n                        <ToolbarContent>\n                            <ToolbarGroup>\n                                <ToolbarItem variant=\"label\" id=\"size-select\">\n                                    {_(\"Font size\")}\n                                </ToolbarItem>\n                                <ToolbarItem>\n                                    <NumberInput\n                                        className=\"font-size\"\n                                        value={this.state.size}\n                                        min={this.minSize}\n                                        max={this.maxSize}\n                                        onMinus={this.onMinus}\n                                        onPlus={this.onPlus}\n                                        inputAriaLabel={_(\"Font size\")}\n                                        minusBtnAriaLabel={_(\"Decrease by one\")}\n                                        plusBtnAriaLabel={_(\"Increase by one\")}\n                                        widthChars={2}\n                                    />\n                                </ToolbarItem>\n                            </ToolbarGroup>\n                            <ToolbarGroup>\n                                <ToolbarItem variant=\"label\" id=\"theme-select\">\n                                    {_(\"Appearance\")}\n                                </ToolbarItem>\n                                <ToolbarItem>\n                                    <FormSelect onChange={this.onThemeChanged}\n                                        aria-labelledby=\"theme-select\"\n                                        value={this.state.theme}>\n                                        <FormSelectOption value='black-theme' label={_(\"Black\")} />\n                                        <FormSelectOption value='dark-theme' label={_(\"Dark\")} />\n                                        <FormSelectOption value='light-theme' label={_(\"Light\")} />\n                                        <FormSelectOption value='white-theme' label={_(\"White\")} />\n                                    </FormSelect>\n                                </ToolbarItem>\n                            </ToolbarGroup>\n                            <ToolbarItem>\n                                <button ref={this.resetButtonRef}\n                                    className=\"pf-c-button pf-m-secondary terminal-reset\"\n                                    onClick={this.onResetClick}>{_(\"Reset\")}</button>\n                            </ToolbarItem>\n                        </ToolbarContent>\n                    </Toolbar>\n                </div>\n                <div className={\"terminal-body \" + this.state.theme} id=\"the-terminal\">\n                    {terminal}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default UserTerminal;","import React from 'react';\nimport UserTerminal from \"./terminal.jsx\";\n{/* <link href=\"/css/terminal.css\" type=\"text/css\" rel=\"stylesheet\"></link> */ }\n\nconst MyTerminal = (props): React$Element<React$FragmentType> => {\n    return (\n        <div className='ct-page-fill' id=\"terminal\">\n            <UserTerminal />\n        </div>\n\n    );\n}\nexport default MyTerminal;"],"names":["_","cockpit","ContextMenu","_ref","parentId","getText","setText","_React$useState","React","_React$useState2","_slicedToArray","visible","setVisible","_React$useState3","_React$useState4","event","setEvent","root","_handleContextMenu","preventDefault","_handleClick","button","target","contains","current","parent","document","getElementById","addEventListener","removeEventListener","clickX","clientX","clickY","clientY","screenW","window","innerWidth","screenH","innerHeight","rootW","offsetWidth","rootH","offsetHeight","right","left","top","bottom","style","concat","_jsxs","ref","className","children","onClick","_jsx","theme_core","yellow","brightRed","red","magenta","brightMagenta","blue","cyan","green","themes","background","foreground","Object","assign","cursor","selection","brightBlack","black","brightGreen","brightYellow","brightBlue","brightCyan","white","brightWhite","Terminal","_React$Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","onChannelMessage","bind","_assertThisInitialized","onChannelClose","connectChannel","disconnectChannel","reset","focus","onWindowResize","resizeTerminal","onFocusIn","onFocusOut","setTerminalTheme","term","Term","cols","rows","screenKeys","cursorBlink","fontSize","fontFamily","screenReaderMode","showPastingModal","terminalRef","onData","data","this","channel","valid","send","onTitleChanged","onTitleChange","terminal","state","_createClass","key","value","open","loadAddon","CanvasAddon","theme","resize","control","prevProps","prevState","options","dimensions","calculateDimensions","_this2","_Fragment","Modal","title","position","variant","isOpen","onClose","setState","actions","Button","onFocus","onContextMenu","contextMenu","onBlur","dispose","_this3","navigator","clipboard","readText","then","text","catch","e","finally","error","_this4","writeText","getSelection","console","toString","write","problem","cursorHidden","refresh","undefined","close","String","fromCharCode","realHeight","_core","_renderService","css","cell","height","realWidth","width","Math","floor","parentElement","clientHeight","clientWidth","returnValue","onBeforeUnload","UserTerminal","localStorage","getItem","size","cookie","replace","setItem","invalidateCookie","parseInt","onResetClick","onThemeChanged","onPlus","onMinus","resetButtonRef","minSize","maxSize","user","payload","spawn","shell","environ","directory","home","pty","done","createChannel","blur","Toolbar","id","ToolbarContent","ToolbarGroup","ToolbarItem","NumberInput","min","max","inputAriaLabel","minusBtnAriaLabel","plusBtnAriaLabel","widthChars","FormSelect","onChange","FormSelectOption","label"],"sourceRoot":""}
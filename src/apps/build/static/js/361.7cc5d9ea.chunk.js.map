{"version":3,"file":"static/js/361.7cc5d9ea.chunk.js","mappings":"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","sources":["components/FormInput.js","components/Spinner.js","helpers/api/apiCore.js","helpers/api/appManager.js","pages/uninstalltab.js","pages/appdetail.js","pages/myapps.js"],"sourcesContent":["// @flow\nimport React, { useState } from 'react';\nimport { Form, InputGroup } from 'react-bootstrap';\nimport classNames from 'classnames';\n\n/* Password Input */\nconst PasswordInput = ({ name, placeholder, refCallback, errors, register, className }) => {\n    const [showPassword, setShowPassword] = useState(false);\n\n    return (\n        <>\n            <InputGroup className=\"mb-0\">\n                <Form.Control\n                    type={showPassword ? 'text' : 'password'}\n                    placeholder={placeholder}\n                    name={name}\n                    id={name}\n                    as=\"input\"\n                    ref={(r) => {\n                        if (refCallback) refCallback(r);\n                    }}\n                    className={className}\n                    isInvalid={errors && errors[name] ? true : false}\n                    {...(register ? register(name) : {})}\n                    autoComplete={name}\n                />\n                <div\n                    className={classNames('input-group-text', 'input-group-password', {\n                        'show-password': showPassword,\n                    })}\n                    data-password={showPassword ? 'true' : 'false'}>\n                    <span\n                        className=\"password-eye\"\n                        onClick={() => {\n                            setShowPassword(!showPassword);\n                        }}></span>\n                </div>\n            </InputGroup>\n        </>\n    );\n};\n\ntype FormInputProps = {\n    label?: string,\n    type?: string,\n    name?: string,\n    placeholder?: string,\n    register?: any,\n    errors?: any,\n    className?: string,\n    labelClassName?: string,\n    containerClass?: string,\n    refCallback?: any,\n    children?: any,\n};\n\nconst FormInput = ({\n    label,\n    type,\n    name,\n    placeholder,\n    register,\n    errors,\n    className,\n    labelClassName,\n    containerClass,\n    refCallback,\n    children,\n    ...otherProps\n}: FormInputProps): React$Element<React$FragmentType> => {\n    // handle input type\n    const comp = type === 'textarea' ? 'textarea' : type === 'select' ? 'select' : 'input';\n\n    return (\n        <>\n            {type === 'hidden' ? (\n                <input type={type} name={name} {...(register ? register(name) : {})} {...otherProps} />\n            ) : (\n                <>\n                    {type === 'password' ? (\n                        <>\n                            <Form.Group className={containerClass}>\n                                {label ? (\n                                    <>\n                                        {' '}\n                                        <Form.Label className={labelClassName}>{label}</Form.Label> {children}{' '}\n                                    </>\n                                ) : null}\n                                <PasswordInput\n                                    name={name}\n                                    placeholder={placeholder}\n                                    refCallback={refCallback}\n                                    errors={errors}\n                                    register={register}\n                                    className={className}\n                                />\n\n                                {errors && errors[name] ? (\n                                    <Form.Control.Feedback type=\"invalid\" className=\"d-block\">\n                                        {errors[name]['message']}\n                                    </Form.Control.Feedback>\n                                ) : null}\n                            </Form.Group>\n                        </>\n                    ) : (\n                        <>\n                            {type === 'select' ? (\n                                <>\n                                    <Form.Group className={containerClass}>\n                                        {label ? <Form.Label className={labelClassName}>{label}</Form.Label> : null}\n\n                                        <Form.Select\n                                            type={type}\n                                            label={label}\n                                            name={name}\n                                            id={name}\n                                            ref={(r) => {\n                                                if (refCallback) refCallback(r);\n                                            }}\n                                            comp={comp}\n                                            className={className}\n                                            isInvalid={errors && errors[name] ? true : false}\n                                            {...(register ? register(name) : {})}\n                                            {...otherProps}>\n                                            {children}\n                                        </Form.Select>\n\n                                        {errors && errors[name] ? (\n                                            <Form.Control.Feedback type=\"invalid\">\n                                                {errors[name]['message']}\n                                            </Form.Control.Feedback>\n                                        ) : null}\n                                    </Form.Group>\n                                </>\n                            ) : (\n                                <>\n                                    {type === 'checkbox' || type === 'radio' ? (\n                                        <>\n                                            <Form.Group className={containerClass}>\n                                                <Form.Check\n                                                    type={type}\n                                                    label={label}\n                                                    name={name}\n                                                    id={name}\n                                                    ref={(r) => {\n                                                        if (refCallback) refCallback(r);\n                                                    }}\n                                                    className={className}\n                                                    isInvalid={errors && errors[name] ? true : false}\n                                                    {...(register ? register(name) : {})}\n                                                    {...otherProps}\n                                                />\n\n                                                {errors && errors[name] ? (\n                                                    <Form.Control.Feedback type=\"invalid\">\n                                                        {errors[name]['message']}\n                                                    </Form.Control.Feedback>\n                                                ) : null}\n                                            </Form.Group>\n                                        </>\n                                    ) : (\n                                        <Form.Group className={containerClass}>\n                                            {label ? <Form.Label className={labelClassName}>{label}</Form.Label> : null}\n\n                                            <Form.Control\n                                                type={type}\n                                                placeholder={placeholder}\n                                                name={name}\n                                                id={name}\n                                                as={comp}\n                                                ref={(r) => {\n                                                    if (refCallback) refCallback(r);\n                                                }}\n                                                className={className}\n                                                isInvalid={errors && errors[name] ? true : false}\n                                                {...(register ? register(name) : {})}\n                                                {...otherProps}\n                                                autoComplete={name}>\n                                                {children ? children : null}\n                                            </Form.Control>\n\n                                            {errors && errors[name] ? (\n                                                <Form.Control.Feedback type=\"invalid\">\n                                                    {errors[name]['message']}\n                                                </Form.Control.Feedback>\n                                            ) : null}\n                                        </Form.Group>\n                                    )}\n                                </>\n                            )}\n                        </>\n                    )}\n                </>\n            )}\n        </>\n    );\n};\n\nexport default FormInput;\n","// @flow\nimport React from 'react';\nimport classNames from 'classnames';\n\ntype SpinnerProps = {\n    tag?: string,\n    className?: string,\n    size?: 'lg' | 'md' | 'sm',\n    type?: 'bordered' | 'grow',\n    color?: string,\n    children?: any,\n};\n\n/**\n * Spinner\n */\nconst Spinner = (props: SpinnerProps): React$Element<any> => {\n    const children = props.children || null;\n    const Tag = props.tag || 'div';\n    const color = props.color || 'secondary';\n    const size = props.size || '';\n\n    return (\n        <Tag\n            role=\"status\"\n            className={classNames(\n                {\n                    'spinner-border': props.type === 'bordered',\n                    'spinner-grow': props.type === 'grow',\n                },\n                [`text-${color}`],\n                { [`avatar-${size}`]: size },\n                props.className\n            )}>\n            {children}\n        </Tag>\n    );\n};\n\nSpinner.defaultProps = {\n    tag: 'div',\n    type: 'bordered',\n};\n\nexport default Spinner;\n","import axios from 'axios';\nimport { Navigate } from \"react-router-dom\";\nimport config from '../../config';\n\n// content type\naxios.defaults.headers.post['Content-Type'] = 'application/json';\naxios.defaults.headers.get['Content-Type'] = 'application/json';\naxios.defaults.headers = {\n    'Cache-Control': 'no-cache',\n    'Pragma': 'no-cache',\n    'Expires': '0',\n};\naxios.defaults.baseURL = config.API_URL;\n// axios.defaults.httpsAgent = new https.Agent({\n//     rejectUnauthorized: false,\n// });\n\n// intercepting to capture errors\naxios.interceptors.response.use(\n    (response) => {\n        return response;\n    },\n    (error) => {\n        // Any status codes that falls outside the range of 2xx cause this function to trigger\n        let message;\n\n        if (error && error.response && error.response.status === 404) {\n            <Navigate to=\"/error-404\" />\n        } else if (error && error.response && error.response.status === 500) {\n            <Navigate to=\"/error-500\" />\n        } else {\n            message = error.response && error.response.data ? error.response.data['message'] : error.message || error;\n            return Promise.reject(message);\n        }\n    }\n);\n\nclass APICore {\n    /**\n     * Fetches data from given url\n     */\n    get = (url, params) => {\n        let response;\n        if (params) {\n            var queryString = params\n                ? Object.keys(params)\n                    .map((key) => key + '=' + params[key])\n                    .join('&')\n                : '';\n            response = axios.get(`${url}?${queryString}`, params);\n        } else {\n            response = axios.get(`${url}`, params);\n        }\n        return response;\n    };\n\n    /**\n     * post given data to url\n     */\n    create = (url, data) => {\n        return axios.post(url, data);\n    };\n}\n\nexport { APICore };\n","import { APICore } from './apiCore';\n\nconst api = new APICore();\n\n//安装应用\nfunction installApp(params: any): Promise<any> {\n    const baseUrl = '/api/v1/apps/install';\n    return api.get(`${baseUrl}`, params);\n}\n\n//获取已经安装的应用\nfunction getInstalledApps(params: any): Promise<any> {\n    const baseUrl = '/api/v1/apps';\n    return api.get(`${baseUrl}`, params);\n}\n\n//卸载应用\nfunction unInstallApp(params: any): Promise<any> {\n    const baseUrl = '/api/v1/apps/uninstall';\n    return api.get(`${baseUrl}`, params);\n}\n\n//获取应用安装进度\nfunction getInstallProgress(params: any): Promise<any> {\n    const baseUrl = '/api/v1/apps/process';\n    return api.get(`${baseUrl}`, params);\n}\n\n//停止应用\nfunction stopApp(params: any): Promise<any> {\n    const baseUrl = '/api/v1/apps/stop';\n    return api.get(`${baseUrl}`, params);\n}\n\n//启动应用\nfunction startApp(params: any): Promise<any> {\n    const baseUrl = '/api/v1/apps/start';\n    return api.get(`${baseUrl}`, params);\n}\n\n//查询应用详情\nfunction getAppDetails(params: any): Promise<any> {\n    const baseUrl = '/api/v1/apps/details';\n    return api.get(`${baseUrl}`, params);\n}\n\nexport { installApp, getInstalledApps, unInstallApp, getInstallProgress, stopApp, startApp, getAppDetails };\n\n","\nimport React, { useState } from 'react';\nimport { Button, Col, Modal, Row } from 'react-bootstrap';\nimport { useNavigate } from 'react-router-dom';\nimport Spinner from '../components/Spinner';\nimport { getInstalledApps, startApp, stopApp, unInstallApp } from '../helpers';\n\n//卸载应用时的确定/取消弹窗\nconst UninstallConform = (props/*{ app, showConform, onClose }*/) => {\n    const navigate = useNavigate(); //用于页面跳转\n    const [disable, setDisable] = useState(false);//用于按钮禁用\n\n    function closeAllModals() {\n        //关闭弹窗\n        props.onClose();\n        props.onCloseFatherModal();\n\n        //更新主页APP的数据，从里面删除已经卸载的数据（这种方式的目的是使得主页页面不刷新）\n        props.onAllDataChange(props.app.app_id);\n    }\n\n    return (\n        <Modal show={props.showConform} onHide={props.onClose} size=\"lg\"\n            scrollable=\"true\" backdrop=\"static\" style={{ backgroundColor: \"rgba(0,0,0,0.8)\" }}>\n            <Modal.Header onHide={props.onClose} closeButton style={{ border: \"none\" }}>\n                <h4>Uninstall {props.app.customer_name}</h4>\n            </Modal.Header>\n            <Modal.Body className=\"row\" >\n                <span style={{ margin: \"10px 0px\" }}>This will immediately uninstall {props.app.customer_name} and remove all its data.</span>\n            </Modal.Body>\n            <Modal.Footer style={{ border: \"none\" }}>\n                <Button variant=\"light\" onClick={props.onClose}>\n                    Close\n                </Button>{\" \"}\n                <Button disabled={disable} variant=\"warning\" onClick={async () => {\n                    try {\n                        setDisable(true);\n                        //调用卸载应用接口\n                        const response = await unInstallApp({ app_id: props.app.app_id });\n                        if (response.data.code === 0) {\n                            //window.location.reload(true); //刷新当前页面\n                            getInstalledApps().then((response) => {\n                                if (response.data.code === 0) {\n                                    closeAllModals(); //关闭弹窗并更新数据\n                                }\n                                else if (response.data.code === -1) {\n                                    navigate(\"/error\")\n                                }\n                            })\n                        }\n                        else if (response.data.code === -1) {\n                            navigate(\"/error\")\n                        }\n                    }\n                    catch (error) {\n                        navigate(\"/error-500\");\n                    }\n                }}>\n                    {disable && <Spinner className=\"spinner-border-sm me-1\" tag=\"span\" color=\"white\" />} Uninstall\n                </Button>\n            </Modal.Footer>\n        </Modal >\n    );\n}\n\n//卸载应用选项卡\nconst UninstallTab = (props): React$Element<React$FragmentType> => {\n    const [showUninstallConform, setShowUninstallConform] = useState(false);//用于确认卸载弹窗的标识\n    const [disable, setDisable] = useState(false);//用于按钮禁用\n    const navigate = useNavigate(); //用于页面跳转\n\n    //用于显示确定/取消卸载应用的弹窗\n    const handleClick = () => {\n        setShowUninstallConform(true);\n    };\n    //用于关闭确定/取消卸载应用的弹窗\n    const handleClose = () => {\n        setShowUninstallConform(false);\n    };\n\n    return (\n        <>\n            <Row className=\"mb-2\">\n                <Col sm={12}>\n                    <label className=\"me-1\" style={{ fontWeight: \"bolder\", marginBottom: \"5px\" }}>Start / Stop</label>\n                    <p>\n                        Apps can be stopped to conserve server resources instead of uninstalling.\n                        Future app backups will not include any app changes between now and the most recent app backup.\n                        For this reason, it is recommended to trigger a backup before stopping the app.\n                    </p>\n                    {props.data.status === \"running\" ?\n                        <Button variant=\"secondary\" style={{ float: 'right' }} disabled={disable} onClick={async () => {\n                            try {\n                                setDisable(true);\n                                //调用应用停止接口\n                                const response = await stopApp({ app_id: props.data.app_id });\n                                if (response.data.code === 0) {\n                                    setDisable(false);\n                                    props.onDataChange(\"stop\");\n                                    props.onFatherDataChange(props.data.app_id, \"stop\");\n                                }\n                                else if (response.data.code === -1) {\n                                    navigate(\"/error\")\n                                }\n                            }\n                            catch (error) {\n                                navigate(\"/error-500\");\n                            }\n                        }}>\n                            {disable && <Spinner className=\"spinner-border-sm me-1\" tag=\"span\" color=\"white\" />} Stop App\n                        </Button>\n                        :\n                        <Button variant=\"primary\" style={{ float: 'right' }} disabled={disable} onClick={async () => {\n                            setDisable(true);\n                            try {\n                                const response = await startApp({ app_id: props.data.app_id });\n                                if (response.data.code === 0) {\n                                    setDisable(false);\n                                    props.onDataChange(\"running\");\n                                    props.onFatherDataChange();\n                                    props.onFatherDataChange(props.data.app_id, \"running\");\n                                }\n                                else if (response.data.code === -1) {\n                                    navigate(\"/error\")\n                                }\n                            }\n                            catch (error) {\n                                navigate(\"/error\");\n                            }\n                        }}>\n                            {disable && <Spinner className=\"spinner-border-sm me-1\" tag=\"span\" color=\"white\" />} Start App\n                        </Button>\n                    }\n                </Col>\n            </Row>\n            <hr></hr>\n            <Row className=\"mb-2\">\n                <Col sm={12}>\n                    <label className=\"me-1\" style={{ fontWeight: \"bolder\", marginBottom: \"5px\" }}>Uninstall</label>\n                    <p>\n                        This will uninstall the app immediately and remove all its data. The app will be inaccessible.\n                        App backups are not removed and will be cleaned up based on the backup policy.\n                        You can resurrect this app from an existing app backup using the following instructions.\n                    </p>\n                    <Button variant=\"warning\" style={{ float: \"right\" }} onClick={() => { handleClick() }} >\n                        Uninstall\n                    </Button>\n                </Col>\n            </Row>\n            {showUninstallConform && <UninstallConform showConform={showUninstallConform} onClose={handleClose}\n                app={props.data} onDataChange={props.onFatherDataChange} onAllDataChange={props.onAllDataChange}\n                onCloseFatherModal={props.onCloseFatherModal} />}\n        </>\n    );\n}\n\nexport default UninstallTab;","import classnames from \"classnames\";\nimport { default as React, useEffect, useState } from 'react';\nimport { Col, Modal, Nav, OverlayTrigger, Row, Tab, Tooltip } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport DefaultImg from '../assets/images/default.png';\nimport { getAppDetails } from '../helpers';\nimport UninstallTab from './uninstalltab';\n\nconst AppDetailModal = (props): React$Element<React$FragmentType> => {\n    const [currentApp, setCurrentApp] = useState(null); // 用于存储当前App的详情\n    // const [disable, setDisable] = useState(false);//用于按钮禁用\n    // const navigate = useNavigate(); //用于页面跳转\n\n    useEffect(() => {\n        try {\n            //获取应用详情\n            getAppDetails({ app_id: props.app_id }).then((response) => {\n                if (response.data.code === 0) {\n                    setCurrentApp(response.data.data);\n                } else if (response.data.code === -1) {\n\n                }\n            });\n        } catch (error) {\n\n        }\n    }, []);\n\n    //用于更新当前Modal的APP数据的运行状态\n    const handleDataChange = (newStatus) => {\n        setCurrentApp({\n            ...currentApp,\n            status: newStatus\n        });\n    };\n\n    const tabContents = [\n        {\n            id: '1',\n            title: 'Domain',\n            icon: 'mdi mdi-home-variant',\n            text: 'Home - Food truck quinoa dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Donec quam felis, ultricies nec, pellentesque eu, pretium quis, sem. Nulla consequat massa quis enim.',\n        },\n        {\n            id: '2',\n            title: 'Login',\n            icon: 'mdi mdi-account-circle',\n            text: 'Profile - Food truck quinoa dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Donec quam felis, ultricies nec, pellentesque eu, pretium quis, sem. Nulla consequat massa quis enim.',\n        },\n        {\n            id: '3',\n            title: 'Container',\n            icon: 'mdi mdi-account-circle',\n            text: 'Profile - Food truck quinoa dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Donec quam felis, ultricies nec, pellentesque eu, pretium quis, sem. Nulla consequat massa quis enim.',\n        },\n        {\n            id: '4',\n            title: 'Backups',\n            icon: 'mdi mdi-account-circle',\n            text: 'Profile - Food truck quinoa dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Donec quam felis, ultricies nec, pellentesque eu, pretium quis, sem. Nulla consequat massa quis enim.',\n        },\n        {\n            id: '5',\n            title: 'Updates',\n            icon: 'mdi mdi-account-circle',\n            text: 'Profile - Food truck quinoa dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Donec quam felis, ultricies nec, pellentesque eu, pretium quis, sem. Nulla consequat massa quis enim.',\n        },\n        {\n            id: '6',\n            title: 'Graphs',\n            icon: 'mdi mdi-account-circle',\n            text: 'Profile - Food truck quinoa dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Donec quam felis, ultricies nec, pellentesque eu, pretium quis, sem. Nulla consequat massa quis enim.',\n        },\n        {\n            id: '7',\n            title: 'Event Log',\n            icon: 'mdi mdi-account-circle',\n            text: 'Profile - Food truck quinoa dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Donec quam felis, ultricies nec, pellentesque eu, pretium quis, sem. Nulla consequat massa quis enim.',\n        },\n        {\n            id: '8',\n            title: 'Uninstall',\n            icon: 'mdi mdi-cog-outline',\n            text: <UninstallTab data={currentApp} onDataChange={handleDataChange}\n                onFatherDataChange={props.onDataChange} onAllDataChange={props.onAllDataChange} onCloseFatherModal={props.onClose} />,\n        },\n    ];\n\n    return (\n        currentApp && <Modal show={props.showFlag} onHide={props.onClose} size=\"lg\" scrollable=\"true\" >\n            <Modal.Header onHide={props.onClose} closeButton>\n                <div style={{ padding: \"10px\", display: \"flex\", width: \"100%\", alignItems: \"center\" }}>\n                    <div className='appstore-item-content-icon col-same-height'>\n                        <img\n                            src={currentApp.image_url}\n                            alt=\"\"\n                            className=\"app-icon\"\n                            onError={(e) => (e.target.src = DefaultImg)}\n                        />\n                    </div>\n                    <div className='col-same-height'>\n                        <h4 className=\"appstore-item-content-title\" style={{ marginTop: \"5px\" }}>\n                            {currentApp.customer_name}\n                        </h4>\n                        <h5 className=\"appstore-item-content-title\" style={{ marginTop: \"5px\" }}>\n                            {currentApp.status}\n                        </h5>\n                    </div>\n                    <div className='col-same-height' style={{ flexGrow: 1, display: \"flex\", justifyContent: \"flex-end\" }}>\n                        <OverlayTrigger\n                            key=\"bottom1\"\n                            placement=\"bottom\"\n                            overlay={\n                                <Tooltip id=\"tooltip-bottom\">\n                                    Start App\n                                </Tooltip>\n                            }>\n                            <button\n                                className=\"nav-link dropdown-toggle end-bar-toggle arrow-none btn btn-link shadow-none\" style={{ color: \"#428bca\" }}>\n                                <i className=\"dripicons-media-play noti-icon\"></i>{' '}\n                            </button>\n                        </OverlayTrigger>\n                        <OverlayTrigger\n                            key=\"bottom2\"\n                            placement=\"bottom\"\n                            overlay={\n                                <Tooltip id=\"tooltip-bottom\">\n                                    Stop App\n                                </Tooltip>\n                            }>\n                            <button\n                                className=\"nav-link dropdown-toggle end-bar-toggle arrow-none btn btn-link shadow-none\" style={{ color: \"#428bca\" }}>\n                                <i className=\"dripicons-media-stop noti-icon\"></i>{' '}\n                            </button>\n                        </OverlayTrigger>\n                        <OverlayTrigger\n                            key=\"bottom3\"\n                            placement=\"bottom\"\n                            overlay={\n                                <Tooltip id=\"tooltip-bottom\">\n                                    Logs\n                                </Tooltip>\n                            }>\n                            <button\n                                className=\"nav-link dropdown-toggle end-bar-toggle arrow-none btn btn-link shadow-none\" style={{ color: \"#428bca\" }}>\n                                <i className=\"dripicons-align-left noti-icon\"></i>{' '}\n                            </button>\n                        </OverlayTrigger>\n                        <OverlayTrigger\n                            key=\"bottom4\"\n                            placement=\"bottom\"\n                            overlay={\n                                <Tooltip id=\"tooltip-bottom\">\n                                    Terminal\n                                </Tooltip>\n                            }>\n                            <button\n                                onClick={() => {\n                                    // if (cockpit.user()) {\n                                    window.open(\"/cockpit/@localhost/system/terminal.html\", \"_blank\");\n                                    // }\n                                }}\n                                className=\"nav-link dropdown-toggle end-bar-toggle arrow-none btn btn-link shadow-none\" style={{ color: \"#428bca\" }}>\n                                <i className=\"dripicons-code noti-icon\"></i>{' '}\n                            </button>\n                        </OverlayTrigger>\n                    </div>\n                </div>\n            </Modal.Header>\n            <Modal.Body className=\"row\">\n                <Tab.Container defaultActiveKey=\"Domain\">\n                    <Col sm={3} className=\"mb-2 mb-sm-0\">\n                        <Nav variant=\"pills\" className=\"flex-column\">\n                            {tabContents.map((tab, index) => {\n                                return (\n                                    <Nav.Item key={index}>\n                                        <Nav.Link as={Link} to=\"#\" eventKey={tab.title}>\n                                            <i\n                                                className={classnames(\n                                                    tab.icon,\n                                                    'd-md-none',\n                                                    'd-block',\n                                                    'me-1'\n                                                )}></i>\n                                            <span className=\"d-none d-md-block\">{tab.title}</span>\n                                        </Nav.Link>\n                                    </Nav.Item>\n                                );\n                            })}\n                        </Nav>\n                    </Col>\n                    <Col sm={9}>\n                        <Tab.Content>\n                            {tabContents.map((tab, index) => {\n                                return (\n                                    <Tab.Pane eventKey={tab.title} id={tab.id} key={index}>\n                                        <Row>\n                                            <Col sm=\"12\">\n                                                {tab.text}\n                                            </Col>\n                                        </Row>\n                                    </Tab.Pane>\n                                );\n                            })}\n                        </Tab.Content>\n                    </Col>\n                </Tab.Container>\n            </Modal.Body>\n        </Modal>\n    );\n}\n\nexport default AppDetailModal;","// @flow\n//import axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { Button, Col, ProgressBar, Row } from 'react-bootstrap';\nimport { Navigate } from 'react-router-dom';\nimport DefaultImg from '../assets/images/default.png';\nimport FormInput from '../components/FormInput';\nimport Spinner from '../components/Spinner';\nimport { getInstalledApps, getInstallProgress } from '../helpers';\nimport AppDetailModal from './appdetail';\n\nconst MyApps = (): React$Element<React$FragmentType> => {\n    const [showModal, setShowModal] = useState(false); //用于显示弹窗的标识\n    const [selectedApp, setSelectedApp] = useState(\"\"); //用于存储被选中的产品（点击应用详情时使用）\n    const [apps, setApps] = useState([]); //所有“我的应用”\n    const [statusApps, setStatusApps] = useState([]);//根据状态筛选的应用\n    const [selectedStatus, setSelectedStatus] = useState(\"all\"); //用于存储用户筛选应用状态的标识\n    const [progress, setProgress] = useState(0); //用于存储应用安装的进度状态\n    const [progressId, setProgressId] = useState(\"\"); //用于存储当前正在安装的应用ID，用于做进度查询的参数\n\n    const [code, setCode] = useState(0);\n    const [error, setError] = useState(null);\n    const [loading, setLoading] = useState(false);\n\n    //获取所有已经安装的应用\n    const getAllApps = () => {\n        getInstalledApps().then((response) => {\n            if (response.data.code === 0) {\n                setCode(response.data.code);\n                setApps(response.data.data);\n                setStatusApps(response.data.data);\n                setLoading(false);\n                response.data.data.forEach(app => {\n                    if (app.status === \"installing\") {\n                        setProgressId(app.app_id);\n                        getInstallProgress({ app_id: app.app_id }).then((response) => {\n                            if (response.data.code === 0) {\n                                switch (response.data.message) {\n                                    case \"step1\":\n                                        setProgress(1);\n                                        break;\n                                    case \"step2\":\n                                        setProgress(70);\n                                        break;\n                                    case \"step3\":\n                                        setProgress(95);\n                                        break;\n                                    default:\n                                        setProgress(0);\n                                }\n                            }\n                            else if (response.data.code === -1) {\n                                <Navigate to=\"/error\" />\n                            }\n                        }).catch(() => {\n                            <Navigate to=\"/error\" />\n                        })\n                    }\n                });\n            }\n            else if (response.data.code === -1) {\n                setError(response.data.message);\n                setLoading(false);\n            }\n        }).catch((error) => {\n            <Navigate to=\"/error\" />\n        });\n        setLoading(true);\n    }\n\n    useEffect(() => {\n        getAllApps();\n    }, []);\n\n    useEffect(() => {\n        //查询应用安装的进度\n        let timer;\n        if (progress && progress > 0) {\n            timer = setInterval(() => {\n                getInstallProgress({ app_id: progressId }).then((response) => {\n                    if (response.data.code === 0) {\n                        switch (response.data.message) {\n                            case \"step1\":\n                                setProgress(70);\n                                break;\n                            case \"step2\":\n                                setProgress(95);\n                                break;\n                            case \"step3\":\n                                setProgress(100);\n                                clearInterval(timer);\n                                // setStatusApps(\n                                //     statusApps.map((item, i) =>\n                                //         item.app_id === progressId ? { ...item, status: item.status = \"running\" } : item\n                                //     )\n                                // );\n                                setStatusApps(\n                                    statusApps.map((item) => {\n                                        if (item.app_id === progressId) { return { ...item, status: \"running\" } };\n                                        return item;\n                                    })\n                                );\n                                break;\n                            default:\n                                setProgress(0);\n                        }\n\n                    }\n                    else if (response.data.code === -1) {\n                        <Navigate to=\"/error\" />\n                    }\n                }).catch((error) => {\n                    <Navigate to=\"/error\" />\n                })\n            }, 1000);\n        }\n        return () => {\n            clearInterval(timer);\n        };\n    }, [progress]);\n\n    if (loading) return <Spinner className='dis_mid' />;\n    if (code) return <p>Code : ${code} </p>;\n    if (error) return <p>Error : ${error} </p>;\n\n    //用于根据应用“状态”过滤应用\n    const changeStatus = (selectedStatus) => {\n        let updatedData = null;\n        updatedData =\n            selectedStatus === \"all\"\n                ? apps\n                : apps.filter(app => app.status === selectedStatus);\n        setStatusApps(updatedData);\n        setSelectedStatus(selectedStatus);\n    };\n\n    //用于根据用户输入搜索应用\n    const handleInputChange = (searchString) => {\n        let updatedData = null;\n        updatedData =\n            searchString === \"\"\n                ? apps\n                : apps.filter(app => { return app.name.toLowerCase().includes(searchString) });\n        setStatusApps(updatedData);\n        setSelectedStatus(\"all\");\n    }\n\n    //用于用户点击应用详情\n    const handleClick = async (app_id) => {\n        setSelectedApp(app_id);\n        setShowModal(true);\n    };\n\n    //用于关闭应用详情的弹窗\n    const handleClose = () => {\n        setShowModal(false);\n        setSelectedApp(\"\");\n    };\n\n    //用于用户启动、停止应用时，同步更新主页APP的状态\n    const handleDataChange = (id, newStatus) => {\n        const newItems = statusApps.map(item => {\n            if (item.app_id === id) {\n                return { ...item, status: newStatus };\n            }\n            return item;\n        });\n        setStatusApps(newItems);\n    };\n\n    //更新所有数据\n    const handleAllDataChange = (id) => {\n        //getAllApps(); //通过刷新重新获取数据\n        //通过过滤本地数据后重新绑定数据来刷新数据\n        const newItems = statusApps.filter(item => item.app_id !== id);\n        setStatusApps(newItems);\n    }\n\n    return (\n        <>\n            <Row className=\"mb-2\" style={{ display: \"flex\", alignItems: \"center\" }}>\n                <Col sm={2}>\n                    <span style={{ fontSize: \"36px\" }}>My Apps</span>\n                </Col>\n                <Col sm={3}>\n                    <FormInput\n                        value={selectedStatus}\n                        name=\"select\"\n                        type=\"select\"\n                        className=\"form-select\"\n                        key=\"select\"\n                        onChange={(e) => changeStatus(e.target.value)} >\n                        <option value=\"all\">All States</option>\n                        <option value=\"running\">Running</option>\n                        <option value=\"stop\">Stopped</option>\n                        <option value=\"error\">Not Responding</option>\n                    </FormInput>\n                </Col>\n                <Col sm={6}>\n                    <Col xs=\"auto\">\n                        <FormInput type=\"text\" name=\"search\"\n                            placeholder=\"Search for apps like WordPress, Dropbox, Slack, Trello, …\"\n                            onChange={(e) => handleInputChange(e.target.value)}\n                        />\n                    </Col>\n                </Col>\n                <Col sm={1}>\n                    <Button variant=\"primary\" onClick={() => {\n                        getAllApps()\n                    }}>Refresh</Button>\n                </Col>\n            </Row>\n            <Row>\n                {(statusApps || []).map((app, i) => {\n                    return (\n                        <Col xxl={2} md={6} key={app.app_id + i} className=\"appstore-item\">\n                            <div className='appstore-item-content highlight' style={{ textAlign: \"center\", width: \"90%\" }}>\n                                {\n                                    app.status !== \"installing\" &&\n                                    <div className=\"float-end arrow-none card-drop p-0\" onClick={() => { handleClick(app.app_id) }}>\n                                        <i className=\"dripicons-gear noti-icon\"></i>\n                                    </div>\n                                }\n\n                                {/* <Link target=\"_blank\" to={app.url}> */}\n                                <div>\n                                    <img\n                                        src={app.image_url}\n                                        alt={app.name}\n                                        className=\"app-icon\"\n                                        style={{ margin: \"30px 10px 30px 10px\" }}\n                                        onError={(e) => (e.target.src = DefaultImg)}\n                                    />\n                                </div>\n                                <div>\n                                    <h3 className=\"appstore-item-content-title\" style={{ color: \"#2196f3\" }}>\n                                        {app.customer_name}\n                                    </h3>\n                                    <div className='appstore-item-content-tagline text-muted'>\n                                        {/* {(progress && progress === 100) ? \"running\" : app.status} */}\n                                        {app.status}\n                                    </div>\n                                    {\n                                        app.status && app.status === \"installing\" &&\n                                        <div>\n                                            <ProgressBar now={progress} hidden={progress === 100} label={`${progress}%`}></ProgressBar>\n                                        </div>\n                                    }\n                                </div>\n                                {/* </Link> */}\n                            </div>\n                        </Col>\n                    );\n                })}\n            </Row >\n            {\n                showModal && <AppDetailModal app_id={selectedApp} showFlag={showModal} onClose={handleClose}\n                    onDataChange={handleDataChange} onAllDataChange={handleAllDataChange} />\n            }\n        </>\n    );\n};\n\nexport default MyApps;\n"],"names":["PasswordInput","_ref","name","placeholder","refCallback","errors","register","className","_useState","useState","_useState2","_slicedToArray","showPassword","setShowPassword","_jsx","_Fragment","children","_jsxs","InputGroup","Form","_objectSpread","type","id","as","ref","r","isInvalid","autoComplete","classNames","onClick","_ref2","label","labelClassName","containerClass","otherProps","_objectWithoutProperties","_excluded","comp","Spinner","props","Tag","tag","color","size","role","concat","_defineProperty","defaultProps","axios","config","response","error","message","status","Navigate","data","Promise","reject","api","_createClass","APICore","_classCallCheck","get","url","params","queryString","Object","keys","map","key","join","create","installApp","getInstalledApps","unInstallApp","getInstallProgress","stopApp","startApp","getAppDetails","UninstallConform","navigate","useNavigate","disable","setDisable","Modal","show","showConform","onHide","onClose","scrollable","backdrop","style","backgroundColor","closeButton","border","app","customer_name","margin","Button","variant","disabled","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","app_id","sent","code","then","onCloseFatherModal","onAllDataChange","t0","stop","_useState3","_useState4","showUninstallConform","setShowUninstallConform","_useState5","_useState6","Row","Col","sm","fontWeight","marginBottom","float","_callee2","_context2","onDataChange","onFatherDataChange","_callee3","_context3","currentApp","setCurrentApp","useEffect","tabContents","title","icon","text","UninstallTab","newStatus","showFlag","padding","display","width","alignItems","src","image_url","alt","onError","e","target","DefaultImg","marginTop","flexGrow","justifyContent","OverlayTrigger","placement","overlay","Tooltip","window","open","Tab","defaultActiveKey","Nav","tab","index","Link","to","eventKey","classnames","showModal","setShowModal","selectedApp","setSelectedApp","apps","setApps","_useState7","_useState8","statusApps","setStatusApps","_useState9","_useState10","selectedStatus","setSelectedStatus","_useState11","_useState12","progress","setProgress","_useState13","_useState14","progressId","setProgressId","_useState15","_useState16","setCode","_useState17","_useState18","setError","_useState19","_useState20","loading","setLoading","getAllApps","forEach","catch","timer","setInterval","clearInterval","item","handleClick","_x","apply","arguments","fontSize","FormInput","value","onChange","updatedData","filter","changeStatus","xs","searchString","toLowerCase","includes","handleInputChange","i","xxl","md","textAlign","ProgressBar","now","hidden","AppDetailModal","newItems"],"sourceRoot":""}
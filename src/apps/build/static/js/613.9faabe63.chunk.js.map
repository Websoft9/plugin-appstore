{"version":3,"file":"static/js/613.9faabe63.chunk.js","mappings":"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AAI,IACpCC,KAAK,KACR,GACNpB,EAAWD,EAAAA,EAAAA,IAAU,GAADH,OAAIiB,EAAG,KAAAjB,OAAImB,GAAeD,EAClD,MACId,EAAWD,EAAAA,EAAAA,IAAU,GAADH,OAAIiB,GAAOC,GAEnC,OAAOd,CACX,EAEA,KAGAqB,OAAS,SAACR,EAAKR,GACX,OAAON,EAAAA,EAAAA,KAAWc,EAAKR,EAC3B,CAAE,KCrDN,SAASiB,EAAWR,GAEhB,OAAON,EAAII,IAAI,GAADhB,OADE,yBACakB,EACjC,CAGA,SAASS,EAAQT,GAEb,OAAON,EAAII,IAAI,GAADhB,OADE,sBACakB,EACjC,CAGA,SAASU,EAAaV,GAElB,OAAON,EAAII,IAAI,GAADhB,OADE,2BACakB,EACjC,CAGA,SAASW,EAAQX,GAEb,OAAON,EAAII,IAAI,GAADhB,OADE,sBACakB,EACjC,CAGA,SAASY,EAASZ,GAEd,OAAON,EAAII,IAAI,GAADhB,OADE,uBACakB,EACjC,CAGA,SAASa,EAAWb,GAEhB,OAAON,EAAII,IAAI,GAADhB,OADE,yBACakB,EACjC,CASA,SAASc,EAAcd,GAEnB,OAAON,EAAII,IAAI,GAADhB,OADE,4BACakB,EACjC,CAGA,SAASe,EAAgBf,GAErB,OAAON,EAAII,IAAI,GAADhB,OADE,8BACakB,EACjC,CAGA,SAASgB,EAAgBhB,GAErB,OAAON,EAAII,IAAI,GAADhB,OADE,8BACakB,EACjC,CAGA,SAASiB,EAAajB,GAElB,OAAON,EAAII,IAAI,GAADhB,OADE,2BACakB,EACjC,CAGA,SAASkB,EAAalB,GAElB,OAAON,EAAII,IAAI,GAADhB,OADE,2BACakB,EACjC,C,ieC1DMmB,EAAIC,IAAAA,QAEJC,EAAaC,EAAAA,YAAiB,SAAe9C,EAAOhB,GACtD,OAAOV,EAAAA,EAAAA,KAACyE,EAAAA,GAAQnE,EAAAA,EAAAA,GAAA,CAACoE,UAAW,EAAGhE,IAAKA,EAAKiE,QAAQ,UAAajD,GAClE,IAGMkD,EAAe,SAAClD,GAClB,IAAMmD,GAAWC,EAAAA,EAAAA,MACjBpF,GA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","sources":["components/FormInput.js","components/Spinner.js","helpers/api/apiCore.js","helpers/api/appManager.js","pages/appdetailtabs/appaccess.js","pages/appdetailtabs/appcontainer.js","pages/appdetailtabs/appoverview.js","pages/appdetailtabs/appuninstall.js","pages/appdetail.js","pages/myapps.js"],"sourcesContent":["// @flow\nimport classNames from 'classnames';\nimport React, { useState } from 'react';\nimport { Form, InputGroup } from 'react-bootstrap';\n\n/* Password Input */\nconst PasswordInput = ({ name, placeholder, refCallback, errors, register, className, value, readOnly }) => {\n    const [showPassword, setShowPassword] = useState(false);\n\n    return (\n        <>\n            <InputGroup className=\"mb-0\">\n                <Form.Control\n                    type={showPassword ? 'text' : 'password'}\n                    placeholder={placeholder}\n                    name={name}\n                    id={name}\n                    as=\"input\"\n                    ref={(r) => {\n                        if (refCallback) refCallback(r);\n                    }}\n                    className={className}\n                    isInvalid={errors && errors[name] ? true : false}\n                    {...(register ? register(name) : {})}\n                    autoComplete={name}\n                    defaultValue={value}\n                    readOnly={readOnly}\n                />\n                <div\n                    className={classNames('input-group-text', 'input-group-password', {\n                        'show-password': showPassword,\n                    })}\n                    data-password={showPassword ? 'true' : 'false'}>\n                    <span\n                        className=\"password-eye\"\n                        onClick={() => {\n                            setShowPassword(!showPassword);\n                        }}></span>\n                </div>\n            </InputGroup>\n        </>\n    );\n};\n\ntype FormInputProps = {\n    label?: string,\n    type?: string,\n    name?: string,\n    value?: string,\n    placeholder?: string,\n    register?: any,\n    errors?: any,\n    className?: string,\n    labelClassName?: string,\n    containerClass?: string,\n    refCallback?: any,\n    children?: any,\n};\n\nconst FormInput = ({\n    label,\n    type,\n    name,\n    value,\n    readOnly,\n    placeholder,\n    register,\n    errors,\n    className,\n    labelClassName,\n    containerClass,\n    refCallback,\n    children,\n    ...otherProps\n}: FormInputProps): React$Element<React$FragmentType> => {\n    // handle input type\n    const comp = type === 'textarea' ? 'textarea' : type === 'select' ? 'select' : 'input';\n\n    return (\n        <>\n            {type === 'hidden' ? (\n                <input type={type} name={name} {...(register ? register(name) : {})} {...otherProps} />\n            ) : (\n                <>\n                    {type === 'password' ? (\n                        <>\n                            <Form.Group className={containerClass}>\n                                {label ? (\n                                    <>\n                                        {' '}\n                                        <Form.Label className={labelClassName}>{label}</Form.Label> {children}{' '}\n                                    </>\n                                ) : null}\n                                <PasswordInput\n                                    name={name}\n                                    placeholder={placeholder}\n                                    refCallback={refCallback}\n                                    errors={errors}\n                                    register={register}\n                                    className={className}\n                                    value={value}\n                                    readOnly={readOnly}\n                                />\n\n                                {errors && errors[name] ? (\n                                    <Form.Control.Feedback type=\"invalid\" className=\"d-block\">\n                                        {errors[name]['message']}\n                                    </Form.Control.Feedback>\n                                ) : null}\n                            </Form.Group>\n                        </>\n                    ) : (\n                        <>\n                            {type === 'select' ? (\n                                <>\n                                    <Form.Group className={containerClass}>\n                                        {label ? <Form.Label className={labelClassName}>{label}</Form.Label> : null}\n\n                                        <Form.Select\n                                            type={type}\n                                            label={label}\n                                            name={name}\n                                            id={name}\n                                            ref={(r) => {\n                                                if (refCallback) refCallback(r);\n                                            }}\n                                            comp={comp}\n                                            className={className}\n                                            isInvalid={errors && errors[name] ? true : false}\n                                            {...(register ? register(name) : {})}\n                                            {...otherProps}>\n                                            {children}\n                                        </Form.Select>\n\n                                        {errors && errors[name] ? (\n                                            <Form.Control.Feedback type=\"invalid\">\n                                                {errors[name]['message']}\n                                            </Form.Control.Feedback>\n                                        ) : null}\n                                    </Form.Group>\n                                </>\n                            ) : (\n                                <>\n                                    {type === 'checkbox' || type === 'radio' ? (\n                                        <>\n                                            <Form.Group className={containerClass}>\n                                                <Form.Check\n                                                    type={type}\n                                                    label={label}\n                                                    name={name}\n                                                    id={name}\n                                                    ref={(r) => {\n                                                        if (refCallback) refCallback(r);\n                                                    }}\n                                                    className={className}\n                                                    isInvalid={errors && errors[name] ? true : false}\n                                                    {...(register ? register(name) : {})}\n                                                    {...otherProps}\n                                                />\n\n                                                {errors && errors[name] ? (\n                                                    <Form.Control.Feedback type=\"invalid\">\n                                                        {errors[name]['message']}\n                                                    </Form.Control.Feedback>\n                                                ) : null}\n                                            </Form.Group>\n                                        </>\n                                    ) : (\n                                        <Form.Group className={containerClass}>\n                                            {label ? <Form.Label className={labelClassName}>{label}</Form.Label> : null}\n\n                                            <Form.Control\n                                                type={type}\n                                                placeholder={placeholder}\n                                                value={value}\n                                                name={name}\n                                                id={name}\n                                                as={comp}\n                                                ref={(r) => {\n                                                    if (refCallback) refCallback(r);\n                                                }}\n                                                className={className}\n                                                isInvalid={errors && errors[name] ? true : false}\n                                                {...(register ? register(name) : {})}\n                                                {...otherProps}\n                                                autoComplete={name}>\n                                                {children ? children : null}\n                                            </Form.Control>\n\n                                            {errors && errors[name] ? (\n                                                <Form.Control.Feedback type=\"invalid\">\n                                                    {errors[name]['message']}\n                                                </Form.Control.Feedback>\n                                            ) : null}\n                                        </Form.Group>\n                                    )}\n                                </>\n                            )}\n                        </>\n                    )}\n                </>\n            )}\n        </>\n    );\n};\n\nexport default FormInput;\n","// @flow\nimport React from 'react';\nimport classNames from 'classnames';\n\ntype SpinnerProps = {\n    tag?: string,\n    className?: string,\n    size?: 'lg' | 'md' | 'sm',\n    type?: 'bordered' | 'grow',\n    color?: string,\n    children?: any,\n};\n\n/**\n * Spinner\n */\nconst Spinner = (props: SpinnerProps): React$Element<any> => {\n    const children = props.children || null;\n    const Tag = props.tag || 'div';\n    const color = props.color || 'secondary';\n    const size = props.size || '';\n\n    return (\n        <Tag\n            role=\"status\"\n            className={classNames(\n                {\n                    'spinner-border': props.type === 'bordered',\n                    'spinner-grow': props.type === 'grow',\n                },\n                [`text-${color}`],\n                { [`avatar-${size}`]: size },\n                props.className\n            )}>\n            {children}\n        </Tag>\n    );\n};\n\nSpinner.defaultProps = {\n    tag: 'div',\n    type: 'bordered',\n};\n\nexport default Spinner;\n","import axios from 'axios';\nimport { Navigate } from \"react-router-dom\";\n//import config from '../../config';\n\n// content type\naxios.defaults.headers.post['Content-Type'] = 'application/json';\naxios.defaults.headers.get['Content-Type'] = 'application/json';\naxios.defaults.headers = {\n    'Cache-Control': 'no-cache',\n    'Pragma': 'no-cache',\n    'Expires': '0',\n};\n//axios.defaults.baseURL = config.API_URL;\n\n// intercepting to capture errors\naxios.interceptors.response.use(\n    (response) => {\n        return response;\n    },\n    (error) => {\n        // Any status codes that falls outside the range of 2xx cause this function to trigger\n        let message;\n\n        if (error && error.response && error.response.status === 404) {\n            <Navigate to=\"/error-404\" />\n        } else if (error && error.response && error.response.status === 500) {\n            <Navigate to=\"/error-500\" />\n        } else {\n            message = error.response && error.response.data ? error.response.data['message'] : error.message || error;\n            return Promise.reject(message);\n        }\n    }\n);\n\nclass APICore {\n    /**\n     * Fetches data from given url\n     */\n    get = (url, params) => {\n        let response;\n        if (params) {\n            var queryString = params\n                ? Object.keys(params)\n                    .map((key) => key + '=' + params[key])\n                    .join('&')\n                : '';\n            response = axios.get(`${url}?${queryString}`, params);\n        } else {\n            response = axios.get(`${url}`, params);\n        }\n        return response;\n    };\n\n    /**\n     * post given data to url\n     */\n    create = (url, data) => {\n        return axios.post(url, data);\n    };\n}\n\nexport { APICore };\n","import { APICore } from './apiCore';\n\nconst api = new APICore();\n\n//App 安装\nfunction AppInstall(params: any): Promise<any> {\n    const baseUrl = '/AppManage/AppInstall';\n    return api.get(`${baseUrl}`, params);\n}\n\n//App 列表查询\nfunction AppList(params: any): Promise<any> {\n    const baseUrl = '/AppManage/AppList';\n    return api.get(`${baseUrl}`, params);\n}\n\n//App 卸载\nfunction AppUninstall(params: any): Promise<any> {\n    const baseUrl = '/AppManage/AppUninstall';\n    return api.get(`${baseUrl}`, params);\n}\n\n//App 停止\nfunction AppStop(params: any): Promise<any> {\n    const baseUrl = '/AppManage/AppStop';\n    return api.get(`${baseUrl}`, params);\n}\n\n//App 启动\nfunction AppStart(params: any): Promise<any> {\n    const baseUrl = '/AppManage/AppStart';\n    return api.get(`${baseUrl}`, params);\n}\n\n//App 重启\nfunction AppRestart(params: any): Promise<any> {\n    const baseUrl = '/AppManage/AppRestart';\n    return api.get(`${baseUrl}`, params);\n}\n\n//App 状态查询\nfunction AppStatus(params: any): Promise<any> {\n    const baseUrl = '/AppManage/AppStatus';\n    return api.get(`${baseUrl}`, params);\n}\n\n//查询APP对应的域名\nfunction AppDomainList(params: any): Promise<any> {\n    const baseUrl = '/AppManage/AppDomainList';\n    return api.get(`${baseUrl}`, params);\n}\n\n//删除APP绑定的域名\nfunction AppDomainDelete(params: any): Promise<any> {\n    const baseUrl = '/AppManage/AppDomainDelete';\n    return api.get(`${baseUrl}`, params);\n}\n\n//修改APP绑定的域名\nfunction AppDomainUpdate(params: any): Promise<any> {\n    const baseUrl = '/AppManage/AppDomainUpdate';\n    return api.get(`${baseUrl}`, params);\n}\n\n//APP绑定域名\nfunction AppDomainAdd(params: any): Promise<any> {\n    const baseUrl = '/AppManage/AppDomainAdd';\n    return api.get(`${baseUrl}`, params);\n}\n\n//设定默认域名\nfunction AppDomainSet(params: any): Promise<any> {\n    const baseUrl = '/AppManage/AppDomainSet';\n    return api.get(`${baseUrl}`, params);\n}\n\nexport { AppInstall, AppList, AppUninstall, AppStop, AppStart, AppRestart, AppStatus, AppDomainList, AppDomainDelete, AppDomainUpdate, AppDomainAdd, AppDomainSet };\n\n","import ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport Accordion from '@mui/material/Accordion';\nimport AccordionDetails from '@mui/material/AccordionDetails';\nimport AccordionSummary from '@mui/material/AccordionSummary';\nimport MuiAlert from '@mui/material/Alert';\nimport Snackbar from '@mui/material/Snackbar';\nimport Typography from '@mui/material/Typography';\nimport classNames from 'classnames';\nimport cockpit from 'cockpit';\nimport { default as React, useEffect, useState } from 'react';\nimport { Alert, Badge, Button, Card, Col, Form, Modal, Row } from 'react-bootstrap';\nimport { useNavigate } from 'react-router-dom';\nimport FormInput from '../../components/FormInput';\nimport Spinner from '../../components/Spinner';\nimport { AppDomainAdd, AppDomainDelete, AppDomainList, AppDomainSet, AppDomainUpdate } from '../../helpers';\n\nconst _ = cockpit.gettext;\n\nconst MyMuiAlert = React.forwardRef(function Alert(props, ref) {\n    return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\n});\n\n//删除绑定的域名\nconst RemoveDomain = (props): React$Element<React$FragmentType> => {\n    const navigate = useNavigate(); //用于页面跳转\n    const [disable, setDisable] = useState(false);//用于按钮禁用\n    const [showAlert, setShowAlert] = useState(false); //用于是否显示错误提示\n    const [alertMessage, setAlertMessage] = useState(\"\");//用于显示错误提示消息\n\n    function closeAllModals() {\n        //关闭所有弹窗\n        props.onClose();\n        props.onDataChange();\n    }\n\n    return (\n        <Modal show={props.showConform} onHide={props.onClose} size=\"lg\"\n            scrollable=\"true\" backdrop=\"static\" style={{ backgroundColor: \"rgba(0,0,0,0.8)\" }}>\n            <Modal.Header onHide={props.onClose} className={classNames('modal-colored-header', 'bg-warning')}>\n                <h4>{_(\"Delete domain binding\")}</h4>\n            </Modal.Header>\n            <Modal.Body className=\"row\" >\n                <span style={{ margin: \"10px 0px\" }}>{_(\"Are you sure you want to delete the domain for:\")} {props.deleteRowData.domainValue} ? </span>\n                <div>\n                    {showAlert && <Alert variant=\"danger\" className=\"my-2\">\n                        {alertMessage}\n                    </Alert>}\n                </div>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"light\" onClick={props.onClose}>\n                    {_(\"Close\")}\n                </Button>{\" \"}\n                <Button disabled={disable} variant=\"warning\" onClick={async () => {\n                    try {\n                        setDisable(true);\n                        const response = await AppDomainDelete({ app_id: props.deleteRowData.app_id, domain: props.deleteRowData.domainValue });\n                        if (response.data.Error) {\n                            setShowAlert(true);\n                            setAlertMessage(response.data.Error.Message);\n                        }\n                        else { //删除成功\n                            setDisable(false);\n                            closeAllModals();\n                        }\n                    }\n                    catch (error) {\n                        navigate(\"/error-500\");\n                    }\n                    finally {\n                        setDisable(false);\n                    }\n                }}>\n                    {disable && <Spinner className=\"spinner-border-sm me-1\" tag=\"span\" color=\"white\" />} {_(\"Delete\")}\n                </Button>\n            </Modal.Footer>\n        </Modal >\n    );\n}\n\nconst AppAccess = (props): React$Element<React$FragmentType> => {\n    const navigate = useNavigate(); //用于页面跳转\n    const [domains, setDomains] = useState([]); // 定义域名数组\n    const [refreshDisable, setRefreshDisable] = useState(false);//用于刷新按钮禁用\n    const [loading, setLoading] = useState(false); // 定义执行操作时的加载转态\n\n    const [showAlert, setShowAlert] = useState(false); //用于是否显示错误提示\n    const [alertMessage, setAlertMessage] = useState(\"\");  //用于显示错误提示消息\n    const [alertType, setAlertType] = useState(\"\");  //用于确定弹窗的类型：error\\success\n    const [showRemoveDomain, setShowRemoveDomain] = useState(false); //用于显示状态为failed时显示确定删除的弹窗\n    const [deleteRowData, setDeleteRowData] = useState(null); //用于保存将要删除的行数据\n    const [inputDomainValue, setInputDomainValue] = useState(\"\");//用户保存用户输入的域名\n\n    const [isExpandedForDomain, setIsExpandedForDomain] = React.useState(true); //用于保存“域名绑定”的折叠状态\n    const [isExpandedForNoDomain, setIsExpandedForNoDomain] = React.useState(true);//用于保存“无域名访问”的折叠状态\n    const [isExpandedForAccount, setIsExpandedForAccount] = React.useState(false);//用于保存“无域名访问”的折叠状态\n\n    const getDomains = async () => {\n        try {\n            const response = await AppDomainList({ app_id: props.data.app_id });\n            if (response.data.Error) {\n                setShowAlert(true);\n                setAlertType(\"error\")\n                setAlertMessage(response.data.Error.Message);\n            }\n            else {\n                let responseData = response.data.ResponseData.Domain_set;\n                let defaultdomain = responseData.default_domain; //获取返回的默认域名数据\n\n                let resturnDomains = responseData.domains.map(domain => {\n                    return {\n                        app_id: props.data.app_id,\n                        domainValue: domain,\n                        newDomainValue: domain,\n                        isEditable: false,\n                        isFromAPI: true,\n                        isDefaultDomain: domain === defaultdomain ? true : false\n                    };\n                });\n                //排序：将默认域名放前面\n                // resturnDomains.sort((a, b) => {\n                //     return b.isDefaultDomain - a.isDefaultDomain;\n                // });\n                setDomains(resturnDomains);\n            }\n        }\n        catch (error) {\n            navigate(\"/error-500\");\n        }\n    }\n\n    useEffect(() => {\n        getDomains();\n    }, []);\n\n    //添加域名\n    const addRow = () => {\n        if (domains.length < 10) {\n            // 限制最多只能有10个domain\n            setDomains([\n                ...domains,\n                {\n                    app_id: props.data.app_id,\n                    domainValue: \"\",\n                    newDomainValue: \"\",\n                    isEditable: true,\n                    isFromAPI: false,\n                    isDefaultDomain: false\n                },\n            ]);\n        }\n    }\n\n    //删除域名\n    const deleteRow = async (row, index) => {\n        if (!row.isFromAPI) { //如果是点“添加”产生的记录行，则直接删除，不需要调用接口\n            const newRows = [...domains]; // 复制状态数组\n            newRows.splice(index, 1); // 删除指定索引的对象\n            setDomains(newRows); // 更新状态数组\n        }\n        else { //表示记录是从接口获取的，删除时需要调用接口删除\n            setShowRemoveDomain(true);\n            setDeleteRowData(row);\n        }\n    }\n\n    //编辑\n    const editRow = (index) => {\n        const newRows = [...domains]; // 复制状态数组\n        newRows[index].isEditable = !newRows[index].isEditable; // 切换isEditable属性\n        setDomains(newRows); // 更新状态数组\n    }\n\n    //取消编辑\n    const cancelEditRow = (index) => {\n        const newRows = [...domains]; // 复制状态数组\n        newRows[index].newDomainValue = newRows[index].domainValue; // 用户有修改但是取消编辑，需要将数据还原\n        newRows[index].isEditable = !newRows[index].isEditable; // 切换isEditable属性\n        setDomains(newRows); // 更新状态数组\n    }\n\n    //设为默认域名\n    const setDefaultDomain = async (index) => {\n        const defaultDomain = domains[index].newDomainValue; //获取域名\n\n        try {  //调用设定默认域名接口\n            const response = await AppDomainSet({ app_id: props.data.app_id, domain: defaultDomain });\n            if (response.data.Error) {\n                setShowAlert(true);\n                setAlertType(\"error\")\n                setAlertMessage(response.data.Error.Message);\n            }\n            else {\n                setShowAlert(true);\n                setAlertType(\"success\")\n                setAlertMessage(\"设置成功!\");\n                getDomains();\n            }\n        }\n        catch (error) {\n            navigate(\"/error-500\");\n        }\n    }\n\n    //保存\n    const saveRow = async (row, index) => {\n        const input = document.getElementsByName(`domain-${index}`)[0]; // 获取搜索框元素\n        const value = input.value; // 获取搜索框的值\n        const regex = /^(?!https?:\\/\\/)([\\da-z\\.-]+\\.)*([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([\\/\\w \\.-]*)*\\/?$/; // 定义一个正则表达式，用来验证域名的格式\n        if (value) {\n            if (regex.test(value)) {\n                if (row.isFromAPI) { //如果取到isFromAPI为true,表示要修改数据\n                    if (row.domainValue != row.newDomainValue) { //如果修改前的数据不等于修改后的数据，则调用修改接口\n                        setLoading(true);\n                        try {\n                            const response = await AppDomainUpdate({ app_id: props.data.app_id, domain_old: row.domainValue, domain_new: value });\n                            if (response.data.Error) {\n                                setShowAlert(true);\n                                setAlertType(\"error\")\n                                setAlertMessage(response.data.Error.Message);\n                            }\n                            else {\n                                setShowAlert(true);\n                                setAlertType(\"success\")\n                                setAlertMessage(\"Success\");\n                                getDomains();\n                            }\n                        }\n                        catch (error) {\n                            navigate(\"/error-500\");\n                        }\n                        finally {\n                            setLoading(false);\n                        }\n                    }\n                    else {\n                        const newRows = [...domains]; // 复制状态数组\n                        newRows[index].isEditable = !newRows[index].isEditable; // 切换isEditable属性\n                        setDomains(newRows); // 更新状态数组\n                    }\n                }\n                else { //如果取到isFromAPI为false,表示是绑定数据 \n                    try {\n                        setLoading(true);\n                        const response = await AppDomainAdd({ app_id: props.data.app_id, domains: value });\n                        if (response.data.Error) {\n                            setShowAlert(true);\n                            setAlertType(\"error\")\n                            setAlertMessage(response.data.Error.Message);\n                        }\n                        else {\n                            setShowAlert(true);\n                            setAlertType(\"success\")\n                            setAlertMessage(\"Success\");\n                            getDomains();\n                        }\n                    }\n                    catch (error) {\n                        navigate(\"/error-500\");\n                    }\n                    finally {\n                        setLoading(false);\n                    }\n                }\n            } else {\n                setShowAlert(true);\n                setAlertType(\"error\")\n                setAlertMessage(_(\"Please enter the correct domain name and cannot start with http or https!\"));\n            }\n        }\n        else {\n            // 如果搜索框的值为空\n            setShowAlert(true);\n            setAlertType(\"error\")\n            setAlertMessage(_(\"Domain name cannot be empty\"));\n        }\n    }\n\n    //处理输入\n    function handleChange(index, e) {\n        const newRows = [...domains]; // 复制状态数组\n        newRows[index].newDomainValue = e.target.value; // 修改inputValue属性\n        setDomains(newRows); // 更新状态数组\n    }\n\n    const handleAlertClose = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        setShowAlert(false);\n        setAlertMessage(\"\");\n    };\n\n    //用于取消删除域名弹窗\n    const cancelRemoveDomain = () => {\n        setShowRemoveDomain(false);\n    };\n\n    const [isOpen, setIsOpen] = useState(false);\n    const toggle = () => setIsOpen(!isOpen);\n\n    const handleChangefordomin = (event, newExpanded) => {\n        setIsExpandedForDomain(newExpanded);\n    };\n\n    const handleChangefornodomin = (event, newExpanded) => {\n        setIsExpandedForNoDomain(newExpanded);\n    };\n\n    const handleChangeforaccount = (event, newExpanded) => {\n        setIsExpandedForAccount(newExpanded);\n    };\n\n    return (\n        <>\n            <Card>\n                <Card.Body>\n                    <Accordion defaultExpanded={true} onChange={handleChangefordomin} className='mb-2'>\n                        <AccordionSummary\n                            expandIcon={<ExpandMoreIcon />}\n                            aria-controls=\"panel1a-content\"\n                            id=\"panel1a-header\"\n                        >\n                            <Typography>\n                                <label className=\"me-2 fs-5 d-block\">{_(\"Domain Binding\")}</label>\n                                <span className=\"me-2 fs-6\" style={{ display: isExpandedForDomain ? 'inline' : 'none' }}>建议绑定域名访问应用，以免无域名造成应用异常</span>\n                            </Typography>\n                        </AccordionSummary>\n                        <AccordionDetails>\n                            <Typography>\n                                <Card>\n                                    <Card.Header>\n                                        <Row className=\"mb-2 align-items-center\">\n                                            <Col xs={12} md={9}></Col>\n                                            <Col xs={12} md={3}>\n                                                <Button variant=\"primary\" size=\"sm\" className=\"me-2\" onClick={() => addRow()}>{_(\"Add\")}</Button>\n                                                <a href=\"/nginx\" target=\"_parent\" className=\"me-2\">\n                                                    <Button variant=\"primary\" size=\"sm\">{_(\"More\")}</Button>\n                                                </a>\n                                                <Button disabled={refreshDisable} size=\"sm\" className=\"me-2\" variant=\"primary\"\n                                                    onClick={async () => { setRefreshDisable(true); await getDomains(); setRefreshDisable(false) }} >\n                                                    {refreshDisable && <Spinner className=\"spinner-border-sm me-2\" tag=\"span\" color=\"white\" />} {_(\"Refresh\")}\n                                                </Button>\n                                            </Col>\n                                        </Row>\n                                    </Card.Header>\n                                    <Card.Body>\n                                        {domains.map((row, index) => (\n                                            <Row className=\"mb-2\" key={index}>\n                                                <Col xs={12} md={9}>\n                                                    <Col xs=\"auto\">\n                                                        <FormInput className=\"mb-2 mb-md-0\" type=\"text\"\n                                                            name={`domain-${index}`}\n                                                            value={row.newDomainValue}\n                                                            disabled={!row.isEditable}\n                                                            onChange={(e) => handleChange(index, e)} />\n                                                    </Col>\n                                                </Col>\n                                                <Col xs={12} md={3}>\n                                                    <Button variant=\"link text-danger\" style={{ padding: \"5px\" }} onClick={() => deleteRow(row, index)}>\n                                                        {_(\"delete\")}\n                                                    </Button>\n                                                    {row.isEditable && row.isFromAPI && (\n                                                        <>\n                                                            <Button variant=\"link text-success\" style={{ padding: \"5px\" }} onClick={() => saveRow(row, index)}>\n                                                                {_(\"save\")}\n                                                            </Button>\n                                                            <Button variant=\"link text-success\" style={{ padding: \"5px\" }} onClick={() => cancelEditRow(index)}>\n                                                                {_(\"cancel\")}\n                                                            </Button>\n                                                        </>\n                                                    )}\n                                                    {row.isEditable && !row.isFromAPI && (\n\n                                                        <Button variant=\"link text-success\" style={{ padding: \"5px\" }} onClick={() => saveRow(row, index)}>\n                                                            {_(\"save\")}\n                                                        </Button>\n                                                    )}\n                                                    {!row.isEditable && (\n                                                        <>\n                                                            <Button variant=\"link text-primary\" style={{ padding: \"5px\" }} onClick={() => editRow(index)}>\n                                                                {_(\"edit\")}\n                                                            </Button>\n                                                            <a href={'http://' + row.domainValue} target=\"_blank\">\n                                                                <Button variant=\"link text-primary\" style={{ padding: \"5px\" }}>{_(\"access\")}</Button>\n                                                            </a>\n                                                            {\n                                                                row.isDefaultDomain ? (\n                                                                    <Badge className=\"ms-2 bg-success\"> {_(\"default\")} </Badge>\n                                                                ) : (\n                                                                    <Button variant=\"link text-primary\" onClick={() => setDefaultDomain(index)}>\n                                                                        {_(\"set as default\")}\n                                                                    </Button>\n                                                                )\n                                                            }\n                                                        </>\n                                                    )}\n                                                </Col>\n                                            </Row>\n                                        ))}\n                                    </Card.Body>\n                                </Card >\n                            </Typography>\n                        </AccordionDetails>\n                    </Accordion>\n                    {\n                        (props.data?.config?.url && ((props.data?.config?.default_domain && !props.data?.app_replace_url) || (!props.data?.config?.default_domain))) &&\n                        <Accordion defaultExpanded={true} onChange={handleChangefornodomin} className='mb-2'>\n                            <AccordionSummary\n                                expandIcon={<ExpandMoreIcon />}\n                                aria-controls=\"panel2a-content\"\n                                id=\"panel2a-header\"\n                            >\n                                <Typography>\n                                    <label className=\"me-2 fs-5 d-block\">无域名访问</label>\n                                    <span className=\"me-2 fs-6\" style={{ display: isExpandedForNoDomain ? 'inline' : 'none' }}>没有域名可以通过IP+端口的方式临时访问应用</span>\n                                </Typography>\n                            </AccordionSummary>\n                            <AccordionDetails>\n                                <Typography>\n                                    <Card>\n                                        <Card.Body>\n                                            {\n                                                props.data?.config?.url &&\n                                                (\n                                                    <div>\n                                                        <label className=\"me-2 fs-5\">前台:</label>\n                                                        <a href={props.data?.config?.url} target=\"_blank\" className=\"me-2\">\n                                                            {props.data?.config?.url}\n                                                        </a>\n                                                    </div>\n                                                )\n                                            }\n                                            {\n                                                props.data?.config?.admin_url &&\n                                                (\n                                                    <div>\n                                                        <label className=\"me-2 fs-5\">后台:</label>\n                                                        <a href={props.data?.config?.admin_url} target=\"_blank\" className=\"me-2\">\n                                                            {props.data?.config?.admin_url}\n                                                        </a>\n                                                    </div>\n                                                )\n                                            }\n                                        </Card.Body>\n                                    </Card>\n                                </Typography>\n                            </AccordionDetails>\n                        </Accordion>\n                    }\n                    {\n                        props.data?.config?.admin_username &&\n                        <Accordion className='mb-2' onChange={handleChangeforaccount}>\n                            <AccordionSummary\n                                expandIcon={<ExpandMoreIcon />}\n                                aria-controls=\"panel3a-content\"\n                                id=\"panel3a-header\"\n                            >\n                                <Typography>\n                                    <label className=\"me-2 fs-5 d-block\">初始账号</label>\n                                    <span className=\"me-2 fs-6\" style={{ display: isExpandedForAccount ? 'inline' : 'none' }}>\n                                        此应用程序是使用管理员帐户预先设置的，请立即更改管理员密码。初始凭据为：\n                                    </span>\n                                </Typography>\n                            </AccordionSummary>\n                            <AccordionDetails>\n                                <Typography>\n                                    <Card>\n                                        <Card.Body>\n                                            {/* <p>\n                                                This app is pre-setup with an admin account,Please change the admin password immediately. The initial credentials are:\n                                            </p> */}\n                                            <Form.Group as={Row} className=\"mb-3\">\n                                                <Form.Label htmlFor=\"username\" column md={2} className='fs-5'>\n                                                    UserName\n                                                </Form.Label>\n                                                <Col md={4}>\n                                                    <Form.Control\n                                                        type=\"text\"\n                                                        name=\"username\"\n                                                        id=\"username\"\n                                                        defaultValue={props.data?.config?.admin_username}\n                                                        readOnly\n                                                    />\n                                                </Col>\n                                            </Form.Group>\n\n                                            <Form.Group as={Row} className=\"mb-3\">\n                                                <Form.Label htmlFor=\"password\" column md={2} className='fs-5'>\n                                                    Password\n                                                </Form.Label>\n                                                <Col md={4}>\n                                                    <FormInput\n                                                        type=\"password\"\n                                                        name=\"password\"\n                                                        containerClass={'mb-3'}\n                                                        value={props.data?.config?.admin_password}\n                                                        readOnly\n                                                    />\n                                                </Col>\n                                            </Form.Group>\n                                        </Card.Body>\n                                    </Card>\n                                </Typography>\n                            </AccordionDetails>\n                        </Accordion>\n                    }\n                </Card.Body>\n            </Card >\n            {\n                showRemoveDomain &&\n                <RemoveDomain showConform={showRemoveDomain} onClose={cancelRemoveDomain} deleteRowData={deleteRowData} onDataChange={getDomains} />\n            }\n            {\n                showAlert &&\n                <Snackbar open={showAlert} autoHideDuration={5000} onClose={handleAlertClose} anchorOrigin={{ vertical: 'top', horizontal: 'center' }}>\n                    <MyMuiAlert onClose={handleAlertClose} severity={alertType} sx={{ width: '100%' }}>\n                        {alertMessage}\n                    </MyMuiAlert>\n                </Snackbar>\n            }\n        </>\n    );\n}\n\nexport default AppAccess;","import axios from 'axios';\nimport cockpit from \"cockpit\";\nimport React, { useEffect, useState } from 'react';\nimport { Badge, Button, Card, Col, Row, Table } from 'react-bootstrap';\nimport { useNavigate } from 'react-router-dom';\n\nconst _ = cockpit.gettext;\n\nconst AppContainer = (props): React$Element<React$FragmentType> => {\n    const navigate = useNavigate(); //用于页面跳转\n    const [containersInfo, setContainersInfo] = useState([]);\n    const customer_name = props.data.customer_name;\n    const [endpointsId, setEndpointsId] = useState(null);\n\n    //通过Portainer的接口获取容器数据\n    const getContainersData = async () => {\n        try {\n            let jwt = window.localStorage.getItem(\"portainer.JWT2\"); //获取存储在本地的JWT数据 \n\n            //如果获取不到jwt，则模拟登录并写入新的jwt\n            if (jwt === null) {\n                const response = await axios.get('../container/config.json'); //从项目下读取配置文件\n                if (response.status === 200) {\n                    let config = response.data;\n                    const { PORTAINER_USERNAME, PORTAINER_PASSWORD, PORTAINER_AUTH_URL, PORTAINER_HOME_PAGE } = config;\n\n                    //调用portainer的登录API，模拟登录\n                    const authResponse = await axios.post(PORTAINER_AUTH_URL, {\n                        username: PORTAINER_USERNAME,\n                        password: PORTAINER_PASSWORD\n                    });\n                    if (authResponse.status === 200) {\n                        //jwt = \"\\\"\" + authResponse.data.jwt + \"\\\"\";\n                        jwt = authResponse.data.jwt\n                        //let jwt_localStorage = \"\\\"\" + authResponse.data.jwt + \"\\\"\";\n                        window.localStorage.setItem('portainer\\.JWT2', jwt); //关键是将通过API登录后获取的jwt，存储到本地localStorage\n                    } else {\n                        console.error('Error:', authResponse);\n                    }\n                }\n                else {\n                    console.error('Error:', response);\n                }\n            }\n            else {\n                jwt = jwt.replace(/\"/g, '')\n            }\n\n            //从portainer接口获取endpoints\n            const endpointsData = await axios.get('/portainer/api/endpoints', {\n                headers: {\n                    'Authorization': 'Bearer ' + jwt\n                }\n            });\n            if (endpointsData.status === 200) {\n                //应该可能会返回“远程”的endpoint，这里只获取“本地”endpoint,条件为URL包含'/var/run/docker.sock'\n                const id = endpointsData.data.find(({ URL }) => URL.includes('/var/run/docker.sock')).Id;\n                setEndpointsId(id)\n                //调用接口获取\n                const containersData = await axios.get(`/portainer/api/endpoints/${id}/docker/containers/json`, {\n                    headers: {\n                        'Authorization': 'Bearer ' + jwt\n                    },\n                    params: {\n                        all: true,\n                        filters: JSON.stringify({ \"label\": [`com.docker.compose.project=${customer_name}`] })\n                    }\n                })\n                if (containersData.status === 200) {\n                    setContainersInfo(containersData.data);\n                }\n                else {\n                    console.error('Error:', containersData);\n                }\n            }\n            else {\n                console.error('Error:', endpointsData);\n            }\n        }\n        catch (error) {\n            console.error('Error:', error);\n            //navigate(\"/error-500\");\n        }\n    }\n\n    useEffect(() => {\n        getContainersData();\n    }, []);\n\n    return (\n        <Row>\n            <Col xs={12}>\n                <Card>\n                    <Card.Header>\n                        <Row className=\"align-items-center\">\n                            <Col xs={12} md={10}>\n                                <label className=\"me-2 fs-5 d-block\">{_(\"Container\")}</label>\n                                <span className=\"me-2 fs-6\">本应用由如下容器组成，名称为 {customer_name} 的为主容器  </span>\n                            </Col>\n                            <Col xs={12} md={2}>\n                                <a href={`/portainer/#!/${endpointsId}/docker/stacks/${customer_name}?type=2&regular=false&external=true&orphaned=false`}\n                                    target=\"_blank\" className=\"me-2\">\n                                    <Button variant=\"primary\" size=\"sm\" className=\"float-end\">{_(\"More\")}</Button>\n                                </a>\n                            </Col>\n                        </Row>\n                    </Card.Header>\n                    <Card.Body>\n                        <Table className=\"mb-0\">\n                            <thead>\n                                <tr>\n                                    <th>Name</th>\n                                    <th>State</th>\n                                    <th style={{ textAlign: 'center' }}>Actions</th>\n                                    <th>Image</th>\n                                    <th>Created</th>\n                                    <th>Ip Address</th>\n                                    <th>Published Ports</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {containersInfo.map((container, index) => {\n                                    return (\n                                        <tr key={index}>\n                                            <td>{container.Names?.[0]?.replace(/^\\/|\\/$/g, '')}</td>\n                                            <td>\n                                                <Badge className={`${container.State === 'running' ? 'bg-success' : container.State === 'exited' ? 'bg-danger' : 'info'}`}>\n                                                    {container.State}\n                                                </Badge>\n                                            </td>\n                                            <td style={{ textAlign: 'center' }}>\n                                                <a href={`/portainer/#!/${endpointsId}/docker/containers/${container.Id}/logs`}\n                                                    target=\"_blank\" title='Logs'>\n                                                    <i className=\"dripicons-document-remove noti-icon\"></i>{' '}\n                                                </a>\n                                                {\n                                                    container.State === \"running\" && (\n                                                        <a href={`/portainer/#!/${endpointsId}/docker/containers/${container.Id}/stats`}\n                                                            target=\"_blank\" title='Stats'>\n                                                            <i className=\"dripicons-pulse noti-icon\"></i>{' '}\n                                                        </a>\n                                                    )\n                                                }\n\n                                            </td>\n                                            <td>{container.Image}</td>\n                                            <td>{new Date(container.Created * 1000).toLocaleString()}</td>\n                                            <td>{container.NetworkSettings.Networks[container.HostConfig.NetworkMode].IPAddress}</td>\n                                            <td>{container.Ports?.[0]?.PublicPort}:{container.Ports?.[0]?.PrivatePort}</td>\n                                        </tr>\n                                    );\n                                })}\n                            </tbody>\n                        </Table>\n                    </Card.Body>\n                </Card>\n            </Col>\n        </Row >\n    );\n}\n\nexport default AppContainer;","import cockpit from \"cockpit\";\nimport React from 'react';\nimport { Card, Col, Row, Table } from 'react-bootstrap';\nimport { useNavigate } from 'react-router-dom';\n\nconst _ = cockpit.gettext;\n\nconst AppOverview = (props): React$Element<React$FragmentType> => {\n    const navigate = useNavigate(); //用于页面跳转\n\n    return (\n        <Row>\n            <Col xs={12}>\n                <Card>\n                    <Card.Header>\n                        <label className=\"me-2 fs-5 d-block\">应用概览</label>\n                    </Card.Header>\n                    <Card.Body>\n                        {/* <Row className=\"mb-2\">\n                            <Col xs={12} md={12}>\n                                <label className=\"me-2 fs-6 d-block\">应用名称：{props.data?.app_name}</label>\n                            </Col>\n                        </Row>\n                        <Row className=\"mb-2\">\n                            <Col xs={12} md={12}>\n                                <label className=\"me-2 fs-6 d-block\">应用版本：{props.data?.app_version}</label>\n                            </Col>\n                        </Row>\n                        <Row className=\"mb-2\">\n                            <Col xs={12} md={12}>\n                                <label className=\"me-2 fs-6 d-block\">创建时间：{props.data?.create_time}</label>\n                            </Col>\n                        </Row >\n                        <Row className=\"mb-2\">\n                            <Col xs={12} md={12}>\n                                <label className=\"me-2 fs-6 d-block\">配置目录：/data/apps/{props.data?.customer_name}</label>\n                            </Col>\n                        </Row>\n                        <Row className=\"mb-2\">\n                            <Col xs={12} md={12}>\n                                <label className=\"me-2 fs-6 d-block\">数据目录：{props.data?.volume_data}</label>\n                            </Col>\n                        </Row> */}\n                        <Table responsive className=\"mb-0\" bordered={false}>\n                            <tbody>\n                                <tr>\n                                    <td style={{ width: '10%', fontWeight: \"bold\" }}>应用名称：</td>\n                                    <td>{props.data?.app_name}</td>\n                                </tr>\n                                <tr>\n                                    <td style={{ width: '10%', fontWeight: \"bold\" }}>应用版本：</td>\n                                    <td>{props.data?.app_version}</td>\n                                </tr>\n                                <tr>\n                                    <td style={{ width: '10%', fontWeight: \"bold\" }}>创建时间：</td>\n                                    <td>{props.data?.create_time}</td>\n                                </tr>\n                                <tr>\n                                    <td style={{ width: '10%', fontWeight: \"bold\" }}>配置目录： </td>\n                                    <td>{props.data?.config_path}</td>\n                                </tr>\n                                <tr>\n                                    <td style={{ width: '10%', fontWeight: \"bold\" }}>数据目录：</td>\n                                    <td>{props.data?.volume_data}</td>\n                                </tr>\n                            </tbody>\n                        </Table>\n                    </Card.Body>\n                </Card>\n            </Col>\n        </Row>\n    );\n}\n\nexport default AppOverview;","import classNames from 'classnames';\nimport cockpit from 'cockpit';\nimport React, { forwardRef, useImperativeHandle, useState } from 'react';\nimport { Alert, Button, Col, Modal, Row } from 'react-bootstrap';\nimport { useNavigate } from 'react-router-dom';\nimport Spinner from '../../components/Spinner';\nimport { AppStart, AppStop, AppUninstall } from '../../helpers';\n\nconst _ = cockpit.gettext;\n\n//卸载应用时的确定/取消弹窗\nconst UninstallConform = (props) => {\n    const navigate = useNavigate(); //用于页面跳转\n    const [disable, setDisable] = useState(false);//用于按钮禁用\n    const [showAlert, setShowAlert] = useState(false); //用于是否显示错误提示\n    const [alertMessage, setAlertMessage] = useState(\"\");//用于显示错误提示消息\n\n    function closeAllModals() {\n        //关闭弹窗\n        props.onClose();\n        props.onCloseFatherModal();\n\n        //更新主页APP的数据\n        props.onDataChange();\n    }\n\n    return (\n        <Modal show={props.showConform} onHide={props.onClose} size=\"lg\"\n            scrollable=\"true\" backdrop=\"static\" style={{ backgroundColor: \"rgba(0,0,0,0.8)\" }}>\n            <Modal.Header onHide={props.onClose} closeButton className={classNames('modal-colored-header', 'bg-warning')}>\n                <h4>{_(\"Uninstall\")} {props.app.customer_name}</h4>\n            </Modal.Header>\n            <Modal.Body className=\"row\" >\n                <span style={{ margin: \"10px 0px\" }}>{_(\"This will immediately uninstall\")} {props.app.customer_name} {_(\"and remove all its data.\")}</span>\n                <div>\n                    {showAlert && <Alert variant=\"danger\" className=\"my-2\">\n                        {alertMessage}\n                    </Alert>}\n                </div>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"light\" onClick={props.onClose}>\n                    {_(\"Close\")}\n                </Button>{\" \"}\n                <Button disabled={disable} variant=\"warning\" onClick={async () => {\n                    try {\n                        setDisable(true);\n                        //调用卸载应用接口\n                        const response = await AppUninstall({ app_id: props.app.app_id });\n                        if (response.data.Error) {\n                            setShowAlert(true);\n                            setAlertMessage(response.data.Error.Message);\n                        }\n                        else {\n                            closeAllModals(); //关闭弹窗并更新数据\n                        }\n                    }\n                    catch (error) {\n                        navigate(\"/error-500\");\n                    }\n                }}>\n                    {disable && <Spinner className=\"spinner-border-sm me-1\" tag=\"span\" color=\"white\" />} {_(\"Uninstall\")}\n                </Button>\n            </Modal.Footer>\n        </Modal >\n    );\n}\n\n//卸载应用选项卡\nconst Uninstall = forwardRef((props, ref): React$Element<React$FragmentType> => {\n    const [showUninstallConform, setShowUninstallConform] = useState(false);//用于确认卸载弹窗的标识\n    const [disable, setDisable] = useState(false);//用于按钮禁用\n    const navigate = useNavigate(); //用于页面跳转\n\n    //用于显示确定/取消卸载应用的弹窗\n    const handleClick = () => {\n        setShowUninstallConform(true);\n    };\n    //用于关闭确定/取消卸载应用的弹窗\n    const handleClose = () => {\n        setShowUninstallConform(false);\n    };\n\n    //设置按钮禁用\n    const setButtonDisable = () => {\n        setDisable(true);\n    };\n\n    //设置按钮启用\n    const setButtonEnable = () => {\n        setDisable(false);\n    };\n\n    //提供给父组件调用的方法，用于在父组件中调用子组件的方法\n    useImperativeHandle(ref, () => ({\n        setButtonDisable,\n        setButtonEnable,\n    }));\n\n    return (\n        <>\n            <Row className=\"mb-2\">\n                <Col sm={12}>\n                    <label className=\"me-1\" style={{ fontWeight: \"bolder\", marginBottom: \"5px\" }}>{_(\"Start / Stop\")}</label>\n                    <p>\n                        {_(\"Apps can be stopped to conserve server resources instead of uninstalling.\")}\n                    </p>\n                    {props.data.status === \"running\" ?\n                        <Button variant=\"secondary\" className=\"float-end\" disabled={disable} onClick={async () => {\n                            try {\n                                props.disabledButton();\n                                setDisable(true);\n                                //调用应用停止接口\n                                const response = await AppStop({ app_id: props.data.app_id });\n                                if (response.data.Error) {\n                                    navigate(\"/error\")\n                                }\n                                else {\n                                    props.onDataChange(props.data.app_id);\n                                }\n                            }\n                            catch (error) {\n                                navigate(\"/error-500\");\n                            }\n                            finally {\n                                setDisable(false);\n                                props.enableButton();\n                            }\n                        }}>\n                            {disable && <Spinner className=\"spinner-border-sm me-1\" tag=\"span\" color=\"white\" />} {_(\"Stop\")}\n                        </Button>\n                        :\n                        <Button variant=\"primary\" className=\"float-end\" disabled={disable}\n                            onClick={async () => {\n                                props.disabledButton();\n                                setDisable(true);\n                                try {\n                                    const response = await AppStart({ app_id: props.data.app_id });\n                                    if (response.data.Error) {\n                                        navigate(\"/error\")\n                                    }\n                                    else {\n                                        props.onDataChange(props.data.app_id);\n                                    }\n                                }\n                                catch (error) {\n                                    navigate(\"/error-500\");\n                                }\n                                finally {\n                                    props.enableButton();\n                                    setDisable(false);\n                                }\n                            }}>\n                            {disable && <Spinner className=\"spinner-border-sm me-1\" tag=\"span\" color=\"white\" />} {_(\"Start\")}\n                        </Button>\n                    }\n                </Col>\n            </Row>\n            <hr></hr>\n            <Row className=\"mb-2\">\n                <Col sm={12}>\n                    <label className=\"me-1\" style={{ fontWeight: \"bolder\", marginBottom: \"5px\" }}>{_(\"Uninstall\")}</label>\n                    <p>\n                        {_(\"This will uninstall the app immediately and remove all its data.The app will be inaccessible.\")}\n                    </p>\n                    <Button variant=\"warning\" className=\"float-end\" onClick={() => { handleClick() }} >\n                        {_(\"Uninstall\")}\n                    </Button>\n                </Col>\n            </Row>\n            {showUninstallConform && <UninstallConform showConform={showUninstallConform} onClose={handleClose}\n                app={props.data} onDataChange={props.onDataChange} onCloseFatherModal={props.onCloseFatherModal} />}\n        </>\n    );\n});\n\nexport default Uninstall;","import classnames from \"classnames\";\nimport cockpit from 'cockpit';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Button, Col, Modal, Nav, OverlayTrigger, Row, Tab, Tooltip } from 'react-bootstrap';\nimport { Link, useNavigate } from 'react-router-dom';\nimport DefaultImg from '../assets/images/default.png';\nimport Spinner from '../components/Spinner';\nimport { AppRestart, AppStart, AppStop } from '../helpers';\nimport AppAccess from './appdetailtabs/appaccess';\nimport AppContainer from './appdetailtabs/appcontainer';\nimport AppOverview from './appdetailtabs/appoverview';\nimport Uninstall from './appdetailtabs/appuninstall';\n\nconst _ = cockpit.gettext;\n\nconst AppDetailModal = (props): React$Element<React$FragmentType> => {\n    const [restartDisable, setRestartDisable] = useState(false);//用于重启按钮的按钮禁用\n    const [buttonDisable, setButtonDisable] = useState(false); //用于启动/停止按钮禁用\n    const [currentApp, setCurrentApp] = useState(props.current_app);\n    const [startAppLoading, setStartAppLoading] = useState(false); //用户显示启动应用的加载状态\n    const [stopAppLoading, setStopAppLoading] = useState(false); //用户显示停止时应用的加载状态\n    const [restartAppLoading, setRestartAppLoading] = useState(false); //用户显示重启时应用的加载状态\n    const navigate = useNavigate(); //用于页面跳转\n    const childRef = useRef();\n\n    //设置卸载页面的按钮禁用\n    const setUninstallButtonDisable = () => {\n        // 通过ref调用子组件的方法\n        childRef.current.setButtonDisable();\n    };\n\n    //设置卸载页面的按钮启用\n    const setUninstallButtonEnable = () => {\n        // 通过ref调用子组件的方法\n        childRef.current.setButtonEnable();\n    };\n\n    //设置启动/停止按钮禁用,用于传递给卸载页面\n    const setAppdetailButtonDisable = () => {\n        setButtonDisable(true);\n        setRestartDisable(true);\n    };\n    //设置启动/停止按钮启用,用于传递给卸载页面\n    const setAppdetailButtonEnable = () => {\n        setButtonDisable(false);\n        setRestartDisable(false);\n    };\n\n    useEffect(() => {\n        setCurrentApp(props.current_app);\n    }, [props.current_app]);\n\n    const tabContents = [\n        {\n            id: '1',\n            title: _(\"Overview\"),\n            icon: 'mdi mdi-account-circle',\n            text: <AppOverview data={currentApp} />,\n        },\n        {\n            id: '2',\n            title: _(\"Access\"),\n            icon: 'mdi mdi-account-circle',\n            text: <AppAccess data={currentApp} />,\n        },\n        {\n            id: '3',\n            title: _(\"Container\"),\n            icon: 'mdi mdi-account-circle',\n            text: <AppContainer data={currentApp} />,\n        },\n        {\n            id: '4',\n            title: _(\"Uninstall\"),\n            icon: 'mdi mdi-cog-outline',\n            text: <Uninstall data={currentApp} ref={childRef} disabledButton={setAppdetailButtonDisable} enableButton={setAppdetailButtonEnable}\n                onDataChange={props.onDataChange} onCloseFatherModal={props.onClose} />,\n        },\n    ];\n\n    return (\n        currentApp && <Modal show={props.showFlag} backdrop=\"static\" onHide={props.onClose} size=\"lg\" scrollable=\"true\" dialogClassName=\"modal-full-width\" >\n            <Modal.Header onHide={props.onClose} closeButton>\n                <div style={{ padding: \"10px\", display: \"flex\", width: \"100%\", alignItems: \"center\" }}>\n                    <div className='appstore-item-content-icon col-same-height'>\n                        <img\n                            src={currentApp.image_url}\n                            alt=\"\"\n                            className=\"app-icon\"\n                            onError={(e) => (e.target.src = DefaultImg)}\n                        />\n                    </div>\n                    <div className='col-same-height'>\n                        <h4 className=\"appstore-item-content-title\" style={{ marginTop: \"5px\" }}>\n                            {currentApp.customer_name}\n                        </h4>\n                        <h5 className=\"appstore-item-content-title\" style={{ marginTop: \"5px\" }}>\n                            {currentApp.status}\n                        </h5>\n                    </div>\n                    <div className='col-same-height' style={{ flexGrow: 1, display: \"flex\", justifyContent: \"flex-end\", alignItems: \"center\" }}>\n                        {\n                            currentApp.status === \"exited\" &&\n                            <OverlayTrigger\n                                key=\"bottom1\"\n                                placement=\"bottom\"\n                                overlay={\n                                    <Tooltip id=\"tooltip-bottom\">\n                                        {_(\"Start App\")}\n                                    </Tooltip>\n                                }>\n                                <Button variant=\"primary\" disabled={buttonDisable}\n                                    style={{ padding: \"5px 10px\", borderRadius: \"3px\", marginRight: \"10px\" }}\n                                    onClick={async () => {\n                                        setUninstallButtonDisable();\n                                        setStartAppLoading(true);\n                                        setRestartDisable(true);\n                                        try {\n                                            const response = await AppStart({ app_id: currentApp.app_id });\n                                            if (response.data.Error) {\n                                                navigate(\"/error\")\n                                            }\n                                            else {\n                                                props.onDataChange();\n                                            }\n                                        }\n                                        catch (error) {\n                                            navigate(\"/error-500\");\n                                        }\n                                        finally {\n                                            setUninstallButtonEnable();\n                                            setStartAppLoading(false);\n                                            setRestartDisable(false);\n                                        }\n                                    }}\n                                >\n                                    {\n                                        startAppLoading ?\n                                            <Spinner className=\"spinner-border-sm noti-icon\" color=\"light\" />\n                                            :\n                                            <i className=\"dripicons-media-play noti-icon\"></i>\n                                    }\n                                </Button>\n                            </OverlayTrigger>\n                        }\n                        {\n                            currentApp.status === \"running\" &&\n                            <OverlayTrigger\n                                key=\"bottom2\"\n                                placement=\"bottom\"\n                                overlay={\n                                    <Tooltip id=\"tooltip-bottom\">\n                                        {_(\"Stop App\")}\n                                    </Tooltip>\n                                }>\n                                <Button variant=\"primary\" disabled={buttonDisable}\n                                    style={{ padding: \"5px 10px\", borderRadius: \"3px\", marginRight: \"10px\" }}\n                                    onClick={async () => {\n                                        setUninstallButtonDisable();\n                                        setStopAppLoading(true);\n                                        setRestartDisable(true);\n                                        try {\n                                            const response = await AppStop({ app_id: currentApp.app_id });\n                                            if (response.data.Error) {\n                                                navigate(\"/error\");\n                                            }\n                                            else {\n                                                props.onDataChange();\n                                            }\n                                        }\n                                        catch (error) {\n                                            navigate(\"/error-500\");\n                                        }\n                                        finally {\n                                            setUninstallButtonEnable();\n                                            setStopAppLoading(false);\n                                            setRestartDisable(false);\n                                        }\n                                    }}\n                                >\n                                    {\n                                        stopAppLoading ?\n                                            <Spinner className=\"spinner-border-sm noti-icon\" color=\"light\" />\n                                            :\n                                            <i className=\"dripicons-power noti-icon\"></i>\n                                    }\n                                </Button>\n                            </OverlayTrigger>\n                        }\n                        <OverlayTrigger\n                            key=\"bottom3\"\n                            placement=\"bottom\"\n                            overlay={\n                                <Tooltip id=\"tooltip-bottom\">\n                                    {_(\"Restart App\")}\n                                </Tooltip>\n                            }>\n                            <Button disabled={restartDisable}\n                                style={{ padding: \"5px 10px\", borderRadius: \"3px\", marginRight: \"10px\" }}\n                                onClick={async () => {\n                                    try {\n                                        setUninstallButtonDisable();\n                                        setRestartAppLoading(true);\n                                        setButtonDisable(true);\n                                        const response = await AppRestart({ app_id: currentApp.app_id });\n                                        if (response.data.Error) {\n                                            navigate(\"/error\");\n                                        }\n                                        else {\n                                            props.onDataChange();\n                                        }\n                                    }\n                                    catch (error) {\n                                        navigate(\"/error-500\");\n                                    }\n                                    finally {\n                                        setUninstallButtonEnable();\n                                        setRestartAppLoading(false);\n                                        setButtonDisable(false);\n                                    }\n                                }}\n                            >\n                                {\n                                    restartAppLoading ?\n                                        <Spinner className=\"spinner-border-sm noti-icon\" color=\"light\" />\n                                        :\n                                        <i className=\"dripicons-clockwise noti-icon\"></i>\n                                }\n                            </Button>\n                        </OverlayTrigger>\n                        {\n                            currentApp.status === \"running\" &&\n                            <OverlayTrigger\n                                key=\"bottom4\"\n                                placement=\"bottom\"\n                                overlay={\n                                    <Tooltip id=\"tooltip-bottom\">\n                                        {_(\"Terminal\")}\n                                    </Tooltip>\n                                }>\n                                <Link to={{ pathname: '/terminal', search: `?id=${currentApp.customer_name}` }}\n                                    style={{ color: \"#fff\", backgroundColor: \"#727cf5\", padding: \"5px 10px\", borderRadius: \"3px\", borderColor: \"#727cf5\", marginRight: \"10px\" }}\n                                    target=\"_blank\">\n                                    <i className=\"dripicons-code noti-icon\"></i>{' '}\n                                </Link>\n                            </OverlayTrigger>\n                        }\n                        {\n                            <OverlayTrigger\n                                key=\"bottom5\"\n                                placement=\"bottom\"\n                                overlay={\n                                    <Tooltip id=\"tooltip-bottom\">\n                                        {_(\"Documentation\")}\n                                    </Tooltip>\n                                }>\n                                <a href={'https://support.websoft9.com/docs/' + currentApp.app_name}\n                                    style={{ color: \"#fff\", backgroundColor: \"#727cf5\", padding: \"5px 10px\", borderRadius: \"3px\", borderColor: \"#727cf5\", marginRight: \"10px\" }}\n                                    target=\"_blank\">\n                                    <i className=\"dripicons-document noti-icon\"></i>{' '}\n                                </a>\n                            </OverlayTrigger>\n                        }\n                    </div>\n                </div>\n            </Modal.Header>\n            <Modal.Body className=\"row\">\n                <Tab.Container defaultActiveKey={_(\"Overview\")}>\n                    <Col sm={2} className=\"mb-2 mb-sm-0\">\n                        <Nav variant=\"pills\" className=\"flex-column\">\n                            {tabContents.map((tab, index) => {\n                                const renderElement = () => {\n                                    return (\n                                        <Nav.Item key={index}>\n                                            <Nav.Link as={Link} to=\"#\" eventKey={tab.title}>\n                                                <i\n                                                    className={classnames(\n                                                        tab.icon,\n                                                        'd-md-none',\n                                                        'd-block',\n                                                        'me-1'\n                                                    )}></i>\n                                                <span className=\"d-none d-md-block\">{tab.title}</span>\n                                            </Nav.Link>\n                                        </Nav.Item>\n                                    );\n                                }\n                                if (tab.title === \"Terminal\") {\n                                    if (currentApp.status === \"running\") {\n                                        return renderElement();\n                                    }\n                                } else {\n                                    return renderElement();\n                                }\n                            })}\n                        </Nav>\n                    </Col>\n                    <Col sm={10}>\n                        <Tab.Content style={{ height: \"100%\" }}>\n                            {tabContents.map((tab, index) => {\n                                return (\n                                    <Tab.Pane eventKey={tab.title} id={tab.id} key={index} style={{ height: \"100%\" }}>\n                                        <Row style={{ height: \"100%\" }}>\n                                            <Col sm=\"12\" style={{ height: tab.title === \"Terminal\" ? \"600px\" : \"\" }}>\n                                                {tab.text}\n                                            </Col>\n                                        </Row>\n                                    </Tab.Pane>\n                                );\n                            })}\n                        </Tab.Content>\n                    </Col>\n                </Tab.Container>\n            </Modal.Body>\n        </Modal >\n    );\n}\n\nexport default AppDetailModal;","import MuiAlert from '@mui/material/Alert';\nimport Snackbar from '@mui/material/Snackbar';\nimport classNames from 'classnames';\nimport cockpit from 'cockpit';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Alert, Button, Col, Dropdown, Modal, Row } from 'react-bootstrap';\nimport { Link, Navigate, useNavigate } from 'react-router-dom';\nimport DefaultImg from '../assets/images/default.png';\nimport FormInput from '../components/FormInput';\nimport Spinner from '../components/Spinner';\nimport { AppList, AppRestart, AppStart, AppStop, AppUninstall } from '../helpers';\nimport AppDetailModal from './appdetail';\n\nconst _ = cockpit.gettext;\n\nconst MyMuiAlert = React.forwardRef(function Alert(props, ref) {\n    return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\n});\n\n//应用状态为failed时，显示错误消息\nconst ErrorInfoModal = (props): React$Element<React$FragmentType> => {\n    return (\n        <Modal show={props.showConform} onHide={props.onClose} size=\"lg\" scrollable=\"true\" backdrop=\"static\">\n            <Modal.Header onHide={props.onClose} closeButton className={classNames('modal-colored-header', 'bg-danger')}>\n                <h4>{_(\"This is the error message for\")} {props.app.customer_name}</h4>\n            </Modal.Header>\n            <Modal.Body className=\"row\" >\n                {\n                    props.app.status_reason &&\n                    <>\n                        <span style={{ margin: \"10px 0px\" }}> <b>{_(\"Code: \")}</b>{props.app.status_reason.Code} </span>\n                        <span style={{ margin: \"10px 0px\" }}> <b>{_(\"Message: \")}</b>{props.app.status_reason.Message} </span>\n                        <span style={{ margin: \"10px 0px\" }}> <b>{_(\"Detail: \")}</b>{props.app.status_reason.Detail} </span>\n                    </>\n                }\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"light\" onClick={props.onClose}>\n                    {_(\"Close\")}\n                </Button>\n                <Button variant=\"light\" onClick={() => window.open('https://www.websoft9.com/ticket', '_blank')}>\n                    {_(\"Support\")}\n                </Button>\n            </Modal.Footer>\n        </Modal >\n    );\n}\n\n//删除应用弹窗\nconst UninstallConform = (props): React$Element<React$FragmentType> => {\n    const navigate = useNavigate(); //用于页面跳转\n    const [disable, setDisable] = useState(false);//用于按钮禁用\n    const [showAlert, setShowAlert] = useState(false); //用于是否显示错误提示\n    const [alertMessage, setAlertMessage] = useState(\"\");//用于显示错误提示消息\n\n    function closeAllModals() {\n        //关闭所有弹窗\n        props.onClose();\n        props.onDataChange();\n    }\n\n    return (\n        <Modal show={props.showConform} onHide={props.onClose} size=\"lg\"\n            scrollable=\"true\" backdrop=\"static\">\n            <Modal.Header onHide={props.onClose} className={classNames('modal-colored-header', 'bg-warning')}>\n                <h4>{_(\"Remove\")} {props.app.customer_name}</h4>\n            </Modal.Header>\n            <Modal.Body className=\"row\" >\n                <span style={{ margin: \"10px 0px\" }}>{_(\"This will immediately remove\")} {props.app.customer_name} {_(\"and remove all its data.\")}</span>\n                <div>\n                    {showAlert && <Alert variant=\"danger\" className=\"my-2\">\n                        {alertMessage}\n                    </Alert>}\n                </div>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"light\" onClick={props.onClose}>\n                    {_(\"Close\")}\n                </Button>{\" \"}\n                <Button disabled={disable} variant=\"warning\" onClick={async () => {\n                    try {\n                        setDisable(true);\n                        //调用卸载应用接口\n                        const response = await AppUninstall({ app_id: props.app.app_id });\n                        if (response.data.Error) {\n                            setShowAlert(true);\n                            setAlertMessage(response.data.Error.Message);\n                        }\n                        else {\n                            closeAllModals(); //关闭弹窗并更新数据\n                        }\n                    }\n                    catch (error) {\n                        navigate(\"/error-500\");\n                    }\n                }}>\n                    {disable && <Spinner className=\"spinner-border-sm me-1\" tag=\"span\" color=\"white\" />} {_(\"Remove\")}\n                </Button>\n            </Modal.Footer>\n        </Modal >\n    );\n}\n\nconst MyApps = (): React$Element<React$FragmentType> => {\n    const [showModal, setShowModal] = useState(false); //用于显示状态为running或exited弹窗的标识\n    const [showUninstallConform, setShowUninstallConform] = useState(false); //用于显示状态为failed时显示确定删除的弹窗\n    const [showErrorInfo, setShowErrorInfo] = useState(false); //用于显示状态为failed时显示错误消息的弹窗\n    const [showOtherAppModal, setShowOtherAppModal] = useState(false); //用于显示非websoft9应用的的弹窗的标识\n    const [isLoading, setIsLoading] = useState(false); //用于非官方应用启动 停止 重启 卸载时，显示加载中\n    const [showAlert, setShowAlert] = useState(false); //用于是否显示错误提示\n    const [alertMessage, setAlertMessage] = useState(\"\");//用于显示错误提示消息\n    const [alertType, setAlertType] = useState(\"\");//用于确定弹窗的类型：error\\success\n\n    const [selectedApp, setSelectedApp] = useState(null); //用于存储被选中的产品（点击应用详情时使用）\n    const [apps, setApps] = useState([]); //所有“我的应用”\n    const [statusApps, setStatusApps] = useState([]);//根据状态筛选的应用\n    const [searchString, setSearchString] = useState(\"\");//用户输入的筛选字符串\n    const [selectedStatus, setSelectedStatus] = useState(\"all\"); //用于存储用户筛选应用状态的标识\n    const [progressId, setProgressId] = useState([]); //用于存储当前正在安装的应用ID，用于做进度查询的参数\n\n    const selectedAppRef = useRef(selectedApp);\n    const navigate = useNavigate(); //用于页面跳转\n\n    const [code, setCode] = useState(0);\n    const [error, setError] = useState(null);\n    const [errorDetails, setErrorDetails] = useState(null)\n    const [loading, setLoading] = useState(false);\n\n    const menuItems = (appStatus) => {\n        return [\n            { label: 'Stop', icon: 'dripicons-power noti-icon', condition: appStatus === \"running\" },\n            { label: 'Start', icon: 'dripicons-media-play noti-icon', condition: appStatus === \"exited\" },\n            { label: 'Restart', icon: 'dripicons-clockwise noti-icon', condition: appStatus === \"running\" || appStatus === \"exited\" },\n            {\n                label: 'Uninstall',\n                icon: 'dripicons-trash noti-icon',\n                variant: 'text-danger',\n                hasDivider: true,\n                condition: true\n            }\n        ]\n    };\n\n    let timer;\n\n    //获取所有已安装的App(只执行一次)\n    const getAllAppsOnce = () => {\n        AppList().then((response) => {\n            if (response.data.Error) {\n                setCode(response.data.Error.Code);\n                setError(response.data.Error.Message);\n                setErrorDetails(response.data.Error.Details);\n            }\n            else {\n                const newApps = response.data.ResponseData;\n                setApps(newApps);\n                if (selectedAppRef.current) {\n                    const updatedApp = newApps.find(\n                        (app) => app.app_id === selectedAppRef.current.app_id\n                    );\n                    setSelectedApp(updatedApp);\n                }\n            }\n            setLoading(false);\n        }).catch((error) => {\n            <Navigate to=\"/error-500\" />\n        });\n    }\n\n    //获取所有已安装的App(每隔5秒执行一次)\n    const getAllApps = () => {\n        setLoading(true);\n        //调用接口获取已经安装应用\n        timer = setInterval(() => {\n            AppList().then((response) => {\n                if (response.data.Error) {\n                    setCode(response.data.Error.Code);\n                    setError(response.data.Error.Message);\n                    setErrorDetails(response.data.Error.Details);\n                }\n                else {\n                    const newApps = response.data.ResponseData;\n                    setApps(newApps);\n                    if (selectedAppRef.current) {\n                        const updatedApp = newApps.find(\n                            (app) => app.app_id === selectedAppRef.current.app_id\n                        );\n                        setSelectedApp(updatedApp);\n                    }\n                }\n                setLoading(false);\n            }).catch((error) => {\n                <Navigate to=\"/error-500\" />\n            });\n        }, 5000);\n        return () => clearInterval(timer);\n    }\n\n    useEffect(() => {\n        getAllAppsOnce();\n    }, []);\n\n    useEffect(() => {\n        getAllApps();\n    }, []);\n\n    useEffect(() => {\n        selectedAppRef.current = selectedApp;\n    }, [selectedApp]);\n\n    useEffect(() => {\n        return () => clearInterval(timer);  //用于清除定时器\n    }, []);\n\n    if (loading) return <Spinner className='dis_mid' />;\n    if (code) return <p>Code : ${code} </p>;\n    if (error) return <p>Error : ${error} </p>;\n\n    //用于根据应用“状态”过滤应用\n    const changeStatus = (selectedStatus) => {\n        setSelectedStatus(selectedStatus);\n    };\n\n    //用于根据用户输入搜索应用\n    const handleInputChange = (searchString) => {\n        setSearchString(searchString);\n    }\n\n    //用于用户点击应用详情\n    const handleClick = (app) => {\n        setSelectedApp(app);\n        setShowModal(true);\n    };\n\n    //用于应用为failed时删除应用\n    const deleteApp = (app) => {\n        setSelectedApp(app);\n        setShowUninstallConform(true);\n    };\n\n    //用于应用为failed时显示错误信息弹窗\n    const showError = (app) => {\n        setSelectedApp(app);\n        setShowErrorInfo(true);\n    };\n\n    //用于关闭显示错误消息弹窗\n    const cancelShowError = () => {\n        setShowErrorInfo(false);\n    };\n\n    //用于取消删除应用\n    const canceldeleteApp = () => {\n        setShowUninstallConform(false);\n    };\n\n    //用于关闭应用详情的弹窗\n    const handleClose = () => {\n        setShowModal(false);\n        setSelectedApp(null);\n    };\n\n    const handleAlertClose = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        setShowAlert(false);\n        setAlertMessage(\"\");\n    };\n\n    //用于立即刷新数据\n    const handleDataChange = () => {\n        getAllAppsOnce();\n    };\n\n    //非官方应用的操作\n    const appActions = {\n        \"Stop\": {\n            api: AppStop,\n        },\n        \"Start\": {\n            api: AppStart,\n        },\n        \"Restart\": {\n            api: AppRestart,\n        },\n        \"Uninstall\": {\n            api: AppUninstall,\n        }\n    }\n\n    //处理非官方应用的操作\n    const NoOfficialAppClick = async (label, app) => {\n        if (label === \"Uninstall\") {\n            setSelectedApp(app);\n            setShowUninstallConform(true);\n            return;\n        }\n\n        setIsLoading(true);\n        try {\n            const response = await appActions[label].api({ app_id: app.app_id });\n            if (response.data.Error) {\n                setShowAlert(true);\n                setAlertType(\"error\")\n                setAlertMessage(response.data.Error.Message);\n            }\n            else {\n                setShowAlert(true);\n                setAlertType(\"success\")\n                setAlertMessage(\"执行成功\");\n                handleDataChange();\n            }\n        }\n        catch (error) {\n            navigate(\"/error-500\");\n        }\n        finally {\n            setIsLoading(false);\n        }\n    }\n\n    return (\n        <>\n            <Row className=\"mb-2 align-items-center\">\n                <Col sm={2}>\n                    <span style={{ fontSize: \"36px\" }}>{_(\"My Apps\")}</span>\n                </Col>\n                <Col sm={3}>\n                    <FormInput\n                        value={selectedStatus}\n                        name=\"select\"\n                        type=\"select\"\n                        className=\"form-select\"\n                        key=\"select\"\n                        onChange={(e) => changeStatus(e.target.value)} >\n                        <option value=\"all\">{_(\"All States\")}</option>\n                        <option value=\"installing\">installing</option>\n                        <option value=\"running\">running</option>\n                        <option value=\"exited\">exited</option>\n                        <option value=\"restarting\">restarting</option>\n                        <option value=\"failed\">failed</option>\n                    </FormInput>\n                </Col>\n                <Col sm={6}>\n                    <Col xs=\"auto\">\n                        <FormInput type=\"text\" name=\"search\"\n                            placeholder=\"Search for apps like WordPress, Dropbox, Slack, Trello, …\"\n                            onChange={(e) => handleInputChange(e.target.value)}\n                        />\n                    </Col>\n                </Col>\n                <Col sm={1}>\n                    <Button variant=\"primary\" className=\"float-end\" onClick={() => {\n                        window.location.reload(false);\n                    }}>{_(\"Refresh\")}</Button>\n                </Col>\n            </Row>\n            {\n                [true, false].map((official_app) => {\n                    // 过滤出符合条件的apps\n                    const filteredApps = apps.filter((app) => selectedStatus === 'all' || app.status === selectedStatus)\n                        .filter((app) => app.official_app === official_app)\n                        .filter((app) => app.customer_name.includes(searchString));\n                    // 如果有数据，返回一个Row组件，否则返回null\n                    return filteredApps.length > 0 ? (\n                        <Row>\n                            {/* 根据official_app的值显示不同的标题 */}\n                            <h4 style={official_app ? {} : { paddingTop: \"10px\" }}>{official_app ? _(\"Websoft9's Apps\") : _(\"Other Apps\")}</h4>\n                            {filteredApps.map((app, i) => (\n                                <Col xxl={2} md={6} key={app.app_id + i} className=\"appstore-item\">\n                                    <div className='appstore-item-content highlight text-align-center'>\n                                        {\n                                            (!official_app && (app.status === \"running\" || app.status === \"exited\")) &&\n                                            <Dropdown className=\"float-end\">\n                                                <Dropdown.Toggle as={Link} to=\"#\" className=\"arrow-none card-drop\">\n                                                    {isLoading ? <Spinner className=\"spinner-border-sm noti-icon\" /> : <i className=\"dripicons-gear noti-icon\" />}\n                                                </Dropdown.Toggle>\n                                                <Dropdown.Menu align=\"end\">\n                                                    {(menuItems(app.status) || []).map((item, index) => {\n                                                        return (\n                                                            <React.Fragment key={index}>\n                                                                {item.condition && item.hasDivider && <Dropdown.Divider as=\"div\" />}\n                                                                {\n                                                                    item.condition && <Dropdown.Item className={classNames(item.variant ? item.variant : '')}\n                                                                        onClick={() => NoOfficialAppClick(item.label, app)}\n                                                                    >\n                                                                        {item.icon && <i className={classNames(item.icon, 'me-1')}></i>}\n                                                                        {/* {isLoading ? <Spinner className=\"spinner-border-sm noti-icon\" /> : item.icon && <i className={classNames(item.icon, 'me-1')}></i>} */}\n                                                                        {item.label}\n                                                                    </Dropdown.Item>\n                                                                }\n                                                            </React.Fragment>\n                                                        );\n                                                    })}\n                                                </Dropdown.Menu>\n                                            </Dropdown>\n                                        }\n                                        {\n                                            (official_app && (app.status === \"running\" || app.status === \"exited\")) &&\n                                            <>\n                                                <div className=\"float-end arrow-none card-drop p-0\" onClick={() => { handleClick(app) }}>\n                                                    <i className=\"dripicons-gear noti-icon\"></i>\n                                                </div>\n                                                <div className=\"clearfix\"></div>\n                                            </>\n                                        }\n                                        {\n                                            (official_app && app.status === \"installing\") &&\n                                            <>\n                                                <div className=\"float-end arrow-none card-drop p-0\">\n                                                    <i className=\"dripicons-empty noti-icon\"></i>\n                                                </div>\n                                                <div className=\"clearfix\"></div>\n                                            </>\n                                        }\n                                        {\n                                            app.status === 'failed' &&\n                                            <>\n                                                <div className=\"float-end arrow-none card-drop p-0\" >\n                                                    <i className=\"dripicons-information noti-icon\" style={{ paddingRight: \"10px\" }} onClick={() => { showError(app) }}></i>\n                                                    <i className=\"dripicons-trash noti-icon\" onClick={() => { deleteApp(app) }}></i>\n                                                </div>\n                                                <div className=\"clearfix\"></div>\n                                            </>\n                                        }\n                                        <div>\n                                            <img\n                                                src={app.image_url}\n                                                alt={app.app_name}\n                                                className=\"app-icon\"\n                                                style={{ margin: \"20px 10px 20px 10px\" }}\n                                                onError={(e) => (e.target.src = DefaultImg)}\n                                            />\n                                        </div>\n                                        <div>\n                                            <h3 className=\"appstore-item-content-title\" style={{ color: \"#2196f3\" }}>\n                                                {app.customer_name}\n                                            </h3>\n                                            <div style={{ color: app.status === 'failed' ? 'red' : 'inherit', display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n                                                {app.status && app.status === \"installing\" && <Spinner className=\"spinner-border-sm m-2\" />}\n                                                {\" \"}\n                                                <div className=\"m-2\">{app.status}</div>\n                                            </div>\n                                        </div>\n                                    </div >\n                                </Col>\n                            ))}\n                        </Row >\n                    ) : null;\n                })\n            }\n            {\n                showModal && <AppDetailModal current_app={selectedApp} showFlag={showModal} onClose={handleClose} onDataChange={handleDataChange} />\n            }\n            {\n                showUninstallConform &&\n                <UninstallConform showConform={showUninstallConform} onClose={canceldeleteApp} app={selectedApp} onDataChange={handleDataChange} />\n            }\n            {\n                showErrorInfo &&\n                <ErrorInfoModal showConform={showErrorInfo} onClose={cancelShowError} app={selectedApp} />\n            }\n            {\n                showAlert &&\n                <Snackbar open={showAlert} autoHideDuration={5000} onClose={handleAlertClose} anchorOrigin={{ vertical: 'top', horizontal: 'center' }}>\n                    <MyMuiAlert onClose={handleAlertClose} severity={alertType} sx={{ width: '100%' }}>\n                        {alertMessage}\n                    </MyMuiAlert>\n                </Snackbar>\n            }\n        </>\n    );\n};\n\nexport default MyApps;\n"],"names":["PasswordInput","_ref","name","placeholder","refCallback","errors","register","className","value","readOnly","_useState","useState","_useState2","_slicedToArray","showPassword","setShowPassword","_jsx","_Fragment","children","_jsxs","InputGroup","Form","_objectSpread","type","id","as","ref","r","isInvalid","autoComplete","defaultValue","classNames","onClick","_ref2","label","labelClassName","containerClass","otherProps","_objectWithoutProperties","_excluded","comp","Spinner","props","Tag","tag","color","size","role","concat","_defineProperty","defaultProps","axios","response","error","message","status","Navigate","data","Promise","reject","api","_createClass","APICore","_classCallCheck","get","url","params","queryString","Object","keys","map","key","join","create","AppInstall","AppList","AppUninstall","AppStop","AppStart","AppRestart","AppDomainList","AppDomainDelete","AppDomainUpdate","AppDomainAdd","AppDomainSet","_","cockpit","MyMuiAlert","React","MuiAlert","elevation","variant","RemoveDomain","navigate","useNavigate","disable","setDisable","_useState3","_useState4","showAlert","setShowAlert","_useState5","_useState6","alertMessage","setAlertMessage","Modal","show","showConform","onHide","onClose","scrollable","backdrop","style","backgroundColor","margin","deleteRowData","domainValue","Alert","Button","disabled","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","app_id","domain","sent","Error","Message","onDataChange","t0","finish","stop","_props$data","_props$data$config","_props$data2","_props$data2$config","_props$data3","_props$data4","_props$data4$config","_props$data5","_props$data5$config","_props$data6","_props$data6$config","_props$data7","_props$data7$config","_props$data8","_props$data8$config","_props$data9","_props$data9$config","_props$data10","_props$data10$config","_props$data11","_props$data11$config","_props$data12","_props$data12$config","_props$data13","_props$data13$config","_useState7","_useState8","domains","setDomains","_useState9","_useState10","refreshDisable","setRefreshDisable","_useState11","_useState12","setLoading","_useState13","_useState14","_useState15","_useState16","_useState17","_useState18","alertType","setAlertType","_useState19","_useState20","showRemoveDomain","setShowRemoveDomain","_useState21","_useState22","setDeleteRowData","_useState23","_useState24","_React$useState","_React$useState2","isExpandedForDomain","setIsExpandedForDomain","_React$useState3","_React$useState4","isExpandedForNoDomain","setIsExpandedForNoDomain","_React$useState5","_React$useState6","isExpandedForAccount","setIsExpandedForAccount","getDomains","_callee2","responseData","defaultdomain","resturnDomains","_context2","ResponseData","Domain_set","default_domain","newDomainValue","isEditable","isFromAPI","isDefaultDomain","apply","arguments","useEffect","deleteRow","_ref3","_callee3","row","index","newRows","_context3","_toConsumableArray","splice","_x","_x2","setDefaultDomain","_ref4","_callee4","defaultDomain","_context4","_x3","saveRow","_ref5","_callee5","input","regex","_response","_context5","document","getElementsByName","test","domain_old","domain_new","t1","_x4","_x5","handleAlertClose","event","reason","_useState25","_useState26","Card","Accordion","defaultExpanded","onChange","newExpanded","AccordionSummary","expandIcon","ExpandMoreIcon","Typography","display","AccordionDetails","Row","Col","xs","md","length","href","target","_callee6","_context6","FormInput","e","handleChange","padding","cancelEditRow","editRow","Badge","config","app_replace_url","admin_url","admin_username","htmlFor","column","admin_password","Snackbar","open","autoHideDuration","anchorOrigin","vertical","horizontal","severity","sx","width","containersInfo","setContainersInfo","customer_name","endpointsId","setEndpointsId","getContainersData","jwt","PORTAINER_USERNAME","PORTAINER_PASSWORD","PORTAINER_AUTH_URL","authResponse","endpointsData","containersData","window","localStorage","getItem","PORTAINER_HOME_PAGE","username","password","setItem","console","replace","headers","find","URL","includes","Id","all","filters","JSON","stringify","Table","textAlign","container","_container$Names","_container$Names$","_container$Ports","_container$Ports$","_container$Ports2","_container$Ports2$","Names","State","title","Image","Date","Created","toLocaleString","NetworkSettings","Networks","HostConfig","NetworkMode","IPAddress","Ports","PublicPort","PrivatePort","responsive","bordered","fontWeight","app_name","app_version","create_time","config_path","volume_data","UninstallConform","closeButton","app","onCloseFatherModal","forwardRef","showUninstallConform","setShowUninstallConform","setButtonDisable","setButtonEnable","useImperativeHandle","sm","marginBottom","disabledButton","enableButton","restartDisable","setRestartDisable","buttonDisable","current_app","currentApp","setCurrentApp","startAppLoading","setStartAppLoading","stopAppLoading","setStopAppLoading","restartAppLoading","setRestartAppLoading","childRef","useRef","setUninstallButtonDisable","current","setUninstallButtonEnable","tabContents","icon","text","AppOverview","AppAccess","AppContainer","Uninstall","showFlag","dialogClassName","alignItems","src","image_url","alt","onError","DefaultImg","marginTop","flexGrow","justifyContent","OverlayTrigger","placement","overlay","Tooltip","borderRadius","marginRight","Link","to","pathname","search","borderColor","Tab","defaultActiveKey","Nav","tab","renderElement","eventKey","classnames","height","ErrorInfoModal","status_reason","Code","Detail","timer","showModal","setShowModal","showErrorInfo","setShowErrorInfo","isLoading","setIsLoading","selectedApp","setSelectedApp","apps","setApps","_useState27","_useState28","_useState29","_useState30","searchString","setSearchString","_useState31","_useState32","selectedStatus","setSelectedStatus","_useState33","_useState34","selectedAppRef","_useState35","_useState36","code","setCode","_useState37","_useState38","setError","_useState39","_useState40","setErrorDetails","_useState41","_useState42","loading","getAllAppsOnce","then","Details","newApps","updatedApp","catch","setInterval","clearInterval","handleDataChange","appActions","NoOfficialAppClick","abrupt","fontSize","changeStatus","handleInputChange","location","reload","official_app","filteredApps","filter","paddingTop","i","xxl","Dropdown","align","appStatus","condition","hasDivider","item","handleClick","paddingRight","showError","deleteApp","AppDetailModal"],"sourceRoot":""}
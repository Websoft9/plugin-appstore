{"version":3,"file":"static/js/25.b9ba2212.chunk.js","mappings":"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","sources":["components/FormInput.js","components/Spinner.js","helpers/api/apiCore.js","helpers/api/appManager.js","pages/eventlogs.js","pages/uninstalltab.js","pages/appdetail.js","pages/myapps.js"],"sourcesContent":["// @flow\nimport React, { useState } from 'react';\nimport { Form, InputGroup } from 'react-bootstrap';\nimport classNames from 'classnames';\n\n/* Password Input */\nconst PasswordInput = ({ name, placeholder, refCallback, errors, register, className }) => {\n    const [showPassword, setShowPassword] = useState(false);\n\n    return (\n        <>\n            <InputGroup className=\"mb-0\">\n                <Form.Control\n                    type={showPassword ? 'text' : 'password'}\n                    placeholder={placeholder}\n                    name={name}\n                    id={name}\n                    as=\"input\"\n                    ref={(r) => {\n                        if (refCallback) refCallback(r);\n                    }}\n                    className={className}\n                    isInvalid={errors && errors[name] ? true : false}\n                    {...(register ? register(name) : {})}\n                    autoComplete={name}\n                />\n                <div\n                    className={classNames('input-group-text', 'input-group-password', {\n                        'show-password': showPassword,\n                    })}\n                    data-password={showPassword ? 'true' : 'false'}>\n                    <span\n                        className=\"password-eye\"\n                        onClick={() => {\n                            setShowPassword(!showPassword);\n                        }}></span>\n                </div>\n            </InputGroup>\n        </>\n    );\n};\n\ntype FormInputProps = {\n    label?: string,\n    type?: string,\n    name?: string,\n    placeholder?: string,\n    register?: any,\n    errors?: any,\n    className?: string,\n    labelClassName?: string,\n    containerClass?: string,\n    refCallback?: any,\n    children?: any,\n};\n\nconst FormInput = ({\n    label,\n    type,\n    name,\n    placeholder,\n    register,\n    errors,\n    className,\n    labelClassName,\n    containerClass,\n    refCallback,\n    children,\n    ...otherProps\n}: FormInputProps): React$Element<React$FragmentType> => {\n    // handle input type\n    const comp = type === 'textarea' ? 'textarea' : type === 'select' ? 'select' : 'input';\n\n    return (\n        <>\n            {type === 'hidden' ? (\n                <input type={type} name={name} {...(register ? register(name) : {})} {...otherProps} />\n            ) : (\n                <>\n                    {type === 'password' ? (\n                        <>\n                            <Form.Group className={containerClass}>\n                                {label ? (\n                                    <>\n                                        {' '}\n                                        <Form.Label className={labelClassName}>{label}</Form.Label> {children}{' '}\n                                    </>\n                                ) : null}\n                                <PasswordInput\n                                    name={name}\n                                    placeholder={placeholder}\n                                    refCallback={refCallback}\n                                    errors={errors}\n                                    register={register}\n                                    className={className}\n                                />\n\n                                {errors && errors[name] ? (\n                                    <Form.Control.Feedback type=\"invalid\" className=\"d-block\">\n                                        {errors[name]['message']}\n                                    </Form.Control.Feedback>\n                                ) : null}\n                            </Form.Group>\n                        </>\n                    ) : (\n                        <>\n                            {type === 'select' ? (\n                                <>\n                                    <Form.Group className={containerClass}>\n                                        {label ? <Form.Label className={labelClassName}>{label}</Form.Label> : null}\n\n                                        <Form.Select\n                                            type={type}\n                                            label={label}\n                                            name={name}\n                                            id={name}\n                                            ref={(r) => {\n                                                if (refCallback) refCallback(r);\n                                            }}\n                                            comp={comp}\n                                            className={className}\n                                            isInvalid={errors && errors[name] ? true : false}\n                                            {...(register ? register(name) : {})}\n                                            {...otherProps}>\n                                            {children}\n                                        </Form.Select>\n\n                                        {errors && errors[name] ? (\n                                            <Form.Control.Feedback type=\"invalid\">\n                                                {errors[name]['message']}\n                                            </Form.Control.Feedback>\n                                        ) : null}\n                                    </Form.Group>\n                                </>\n                            ) : (\n                                <>\n                                    {type === 'checkbox' || type === 'radio' ? (\n                                        <>\n                                            <Form.Group className={containerClass}>\n                                                <Form.Check\n                                                    type={type}\n                                                    label={label}\n                                                    name={name}\n                                                    id={name}\n                                                    ref={(r) => {\n                                                        if (refCallback) refCallback(r);\n                                                    }}\n                                                    className={className}\n                                                    isInvalid={errors && errors[name] ? true : false}\n                                                    {...(register ? register(name) : {})}\n                                                    {...otherProps}\n                                                />\n\n                                                {errors && errors[name] ? (\n                                                    <Form.Control.Feedback type=\"invalid\">\n                                                        {errors[name]['message']}\n                                                    </Form.Control.Feedback>\n                                                ) : null}\n                                            </Form.Group>\n                                        </>\n                                    ) : (\n                                        <Form.Group className={containerClass}>\n                                            {label ? <Form.Label className={labelClassName}>{label}</Form.Label> : null}\n\n                                            <Form.Control\n                                                type={type}\n                                                placeholder={placeholder}\n                                                name={name}\n                                                id={name}\n                                                as={comp}\n                                                ref={(r) => {\n                                                    if (refCallback) refCallback(r);\n                                                }}\n                                                className={className}\n                                                isInvalid={errors && errors[name] ? true : false}\n                                                {...(register ? register(name) : {})}\n                                                {...otherProps}\n                                                autoComplete={name}>\n                                                {children ? children : null}\n                                            </Form.Control>\n\n                                            {errors && errors[name] ? (\n                                                <Form.Control.Feedback type=\"invalid\">\n                                                    {errors[name]['message']}\n                                                </Form.Control.Feedback>\n                                            ) : null}\n                                        </Form.Group>\n                                    )}\n                                </>\n                            )}\n                        </>\n                    )}\n                </>\n            )}\n        </>\n    );\n};\n\nexport default FormInput;\n","// @flow\nimport React from 'react';\nimport classNames from 'classnames';\n\ntype SpinnerProps = {\n    tag?: string,\n    className?: string,\n    size?: 'lg' | 'md' | 'sm',\n    type?: 'bordered' | 'grow',\n    color?: string,\n    children?: any,\n};\n\n/**\n * Spinner\n */\nconst Spinner = (props: SpinnerProps): React$Element<any> => {\n    const children = props.children || null;\n    const Tag = props.tag || 'div';\n    const color = props.color || 'secondary';\n    const size = props.size || '';\n\n    return (\n        <Tag\n            role=\"status\"\n            className={classNames(\n                {\n                    'spinner-border': props.type === 'bordered',\n                    'spinner-grow': props.type === 'grow',\n                },\n                [`text-${color}`],\n                { [`avatar-${size}`]: size },\n                props.className\n            )}>\n            {children}\n        </Tag>\n    );\n};\n\nSpinner.defaultProps = {\n    tag: 'div',\n    type: 'bordered',\n};\n\nexport default Spinner;\n","import axios from 'axios';\nimport { Navigate } from \"react-router-dom\";\n//import config from '../../config';\n\n// content type\naxios.defaults.headers.post['Content-Type'] = 'application/json';\naxios.defaults.headers.get['Content-Type'] = 'application/json';\naxios.defaults.headers = {\n    'Cache-Control': 'no-cache',\n    'Pragma': 'no-cache',\n    'Expires': '0',\n};\n//axios.defaults.baseURL = config.API_URL;\n// axios.defaults.httpsAgent = new https.Agent({\n//     rejectUnauthorized: false,\n// });\n\n// intercepting to capture errors\naxios.interceptors.response.use(\n    (response) => {\n        return response;\n    },\n    (error) => {\n        // Any status codes that falls outside the range of 2xx cause this function to trigger\n        let message;\n\n        if (error && error.response && error.response.status === 404) {\n            <Navigate to=\"/error-404\" />\n        } else if (error && error.response && error.response.status === 500) {\n            <Navigate to=\"/error-500\" />\n        } else {\n            message = error.response && error.response.data ? error.response.data['message'] : error.message || error;\n            return Promise.reject(message);\n        }\n    }\n);\n\nclass APICore {\n    /**\n     * Fetches data from given url\n     */\n    get = (url, params) => {\n        let response;\n        if (params) {\n            var queryString = params\n                ? Object.keys(params)\n                    .map((key) => key + '=' + params[key])\n                    .join('&')\n                : '';\n            response = axios.get(`${url}?${queryString}`, params);\n        } else {\n            response = axios.get(`${url}`, params);\n        }\n        return response;\n    };\n\n    /**\n     * post given data to url\n     */\n    create = (url, data) => {\n        return axios.post(url, data);\n    };\n}\n\nexport { APICore };\n","import { APICore } from './apiCore';\n\nconst api = new APICore();\n\n//安装应用\nfunction installApp(params: any): Promise<any> {\n    const baseUrl = '/api/v1/apps/install';\n    return api.get(`${baseUrl}`, params);\n}\n\n//获取已经安装的应用\nfunction getInstalledApps(params: any): Promise<any> {\n    const baseUrl = '/api/v1/apps';\n    return api.get(`${baseUrl}`, params);\n}\n\n//卸载应用\nfunction unInstallApp(params: any): Promise<any> {\n    const baseUrl = '/api/v1/apps/uninstall';\n    return api.get(`${baseUrl}`, params);\n}\n\n//获取应用安装进度\nfunction getInstallProgress(params: any): Promise<any> {\n    const baseUrl = '/api/v1/apps/process';\n    return api.get(`${baseUrl}`, params);\n}\n\n//停止应用\nfunction stopApp(params: any): Promise<any> {\n    const baseUrl = '/api/v1/apps/stop';\n    return api.get(`${baseUrl}`, params);\n}\n\n//启动应用\nfunction startApp(params: any): Promise<any> {\n    const baseUrl = '/api/v1/apps/start';\n    return api.get(`${baseUrl}`, params);\n}\n\nfunction reStartApp(params: any): Promise<any> {\n    const baseUrl = '/api/v1/apps/restart';\n    return api.get(`${baseUrl}`, params);\n}\n\n//查询应用详情\nfunction getAppDetails(params: any): Promise<any> {\n    const baseUrl = '/api/v1/apps/details';\n    return api.get(`${baseUrl}`, params);\n}\n\nexport { installApp, getInstalledApps, unInstallApp, getInstallProgress, stopApp, startApp, getAppDetails };\n\n","import cockpit from \"cockpit\";\nimport { default as React, useEffect, useRef, useState } from 'react';\nimport ScrollToBottom from 'react-scroll-to-bottom';\n\nconst EventLogs = (props): React$Element<React$FragmentType> => {\n    const [appLogs, setAppLog] = useState(\"\");\n\n    const messagesEndRef = useRef(null);\n\n    useEffect(() => {\n        messagesEndRef.current.scrollIntoView({ behavior: \"auto\" });\n    }, []);\n\n    const getAppLog = () => {\n        cockpit.spawn([\"docker\", \"compose\", \"--project-name\", props.projectName.customer_name, \"logs\", \"--tail\", \"200\"]).then(content => {\n            setAppLog(content);\n        }).catch(exception => {\n\n        });\n    };\n\n    useEffect(() => {\n        const timer = setInterval(getAppLog, 1000);\n        return () => clearInterval(timer);\n    }, [getAppLog]);\n\n\n    return (\n        <ScrollToBottom>\n            <div style={{ \"height\": \"600px\", \"width\": \"100%\" }}>\n                <pre style={{ \"white-space\": \"pre-wrap\", \"word-wrap\": \"break-word\" }}>\n                    {appLogs}\n                </pre>\n                <div ref={messagesEndRef} />\n            </div>\n        </ScrollToBottom>\n    );\n}\n\nexport default EventLogs;","\nimport React, { useState } from 'react';\nimport { Button, Col, Modal, Row } from 'react-bootstrap';\nimport { useNavigate } from 'react-router-dom';\nimport Spinner from '../components/Spinner';\nimport { getInstalledApps, startApp, stopApp, unInstallApp } from '../helpers';\n\n//卸载应用时的确定/取消弹窗\nconst UninstallConform = (props/*{ app, showConform, onClose }*/) => {\n    const navigate = useNavigate(); //用于页面跳转\n    const [disable, setDisable] = useState(false);//用于按钮禁用\n\n    function closeAllModals() {\n        //关闭弹窗\n        props.onClose();\n        props.onCloseFatherModal();\n\n        //更新主页APP的数据，从里面删除已经卸载的数据（这种方式的目的是使得主页页面不刷新）\n        props.onAllDataChange(props.app.app_id);\n    }\n\n    return (\n        <Modal show={props.showConform} onHide={props.onClose} size=\"lg\"\n            scrollable=\"true\" backdrop=\"static\" style={{ backgroundColor: \"rgba(0,0,0,0.8)\" }}>\n            <Modal.Header onHide={props.onClose} closeButton style={{ border: \"none\" }}>\n                <h4>Uninstall {props.app.customer_name}</h4>\n            </Modal.Header>\n            <Modal.Body className=\"row\" >\n                <span style={{ margin: \"10px 0px\" }}>This will immediately uninstall {props.app.customer_name} and remove all its data.</span>\n            </Modal.Body>\n            <Modal.Footer style={{ border: \"none\" }}>\n                <Button variant=\"light\" onClick={props.onClose}>\n                    Close\n                </Button>{\" \"}\n                <Button disabled={disable} variant=\"warning\" onClick={async () => {\n                    try {\n                        setDisable(true);\n                        //调用卸载应用接口\n                        const response = await unInstallApp({ app_id: props.app.app_id });\n                        if (response.data.code === 0) {\n                            //window.location.reload(true); //刷新当前页面\n                            getInstalledApps().then((response) => {\n                                if (response.data.code === 0) {\n                                    closeAllModals(); //关闭弹窗并更新数据\n                                }\n                                else if (response.data.code === -1) {\n                                    navigate(\"/error\")\n                                }\n                            })\n                        }\n                        else if (response.data.code === -1) {\n                            navigate(\"/error\")\n                        }\n                    }\n                    catch (error) {\n                        navigate(\"/error-500\");\n                    }\n                }}>\n                    {disable && <Spinner className=\"spinner-border-sm me-1\" tag=\"span\" color=\"white\" />} Uninstall\n                </Button>\n            </Modal.Footer>\n        </Modal >\n    );\n}\n\n//卸载应用选项卡\nconst UninstallTab = (props): React$Element<React$FragmentType> => {\n    const [showUninstallConform, setShowUninstallConform] = useState(false);//用于确认卸载弹窗的标识\n    const [disable, setDisable] = useState(false);//用于按钮禁用\n    const navigate = useNavigate(); //用于页面跳转\n\n    //用于显示确定/取消卸载应用的弹窗\n    const handleClick = () => {\n        setShowUninstallConform(true);\n    };\n    //用于关闭确定/取消卸载应用的弹窗\n    const handleClose = () => {\n        setShowUninstallConform(false);\n    };\n\n    return (\n        <>\n            <Row className=\"mb-2\">\n                <Col sm={12}>\n                    <label className=\"me-1\" style={{ fontWeight: \"bolder\", marginBottom: \"5px\" }}>Start / Stop</label>\n                    <p>\n                        Apps can be stopped to conserve server resources instead of uninstalling.\n                        Future app backups will not include any app changes between now and the most recent app backup.\n                        For this reason, it is recommended to trigger a backup before stopping the app.\n                    </p>\n                    {props.data.status === \"running\" ?\n                        <Button variant=\"secondary\" style={{ float: 'right' }} disabled={disable} onClick={async () => {\n                            try {\n                                setDisable(true);\n                                //调用应用停止接口\n                                const response = await stopApp({ app_id: props.data.app_id });\n                                if (response.data.code === 0) {\n                                    setDisable(false);\n                                    props.onDataChange(\"stop\");\n                                    props.onFatherDataChange(props.data.app_id, \"stop\");\n                                }\n                                else if (response.data.code === -1) {\n                                    navigate(\"/error\")\n                                }\n                            }\n                            catch (error) {\n                                navigate(\"/error-500\");\n                            }\n                        }}>\n                            {disable && <Spinner className=\"spinner-border-sm me-1\" tag=\"span\" color=\"white\" />} Stop App\n                        </Button>\n                        :\n                        <Button variant=\"primary\" style={{ float: 'right' }} disabled={disable} onClick={async () => {\n                            setDisable(true);\n                            try {\n                                const response = await startApp({ app_id: props.data.app_id });\n                                if (response.data.code === 0) {\n                                    setDisable(false);\n                                    props.onDataChange(\"running\");\n                                    props.onFatherDataChange();\n                                    props.onFatherDataChange(props.data.app_id, \"running\");\n                                }\n                                else if (response.data.code === -1) {\n                                    navigate(\"/error\")\n                                }\n                            }\n                            catch (error) {\n                                navigate(\"/error\");\n                            }\n                        }}>\n                            {disable && <Spinner className=\"spinner-border-sm me-1\" tag=\"span\" color=\"white\" />} Start App\n                        </Button>\n                    }\n                </Col>\n            </Row>\n            <hr></hr>\n            <Row className=\"mb-2\">\n                <Col sm={12}>\n                    <label className=\"me-1\" style={{ fontWeight: \"bolder\", marginBottom: \"5px\" }}>Uninstall</label>\n                    <p>\n                        This will uninstall the app immediately and remove all its data. The app will be inaccessible.\n                        App backups are not removed and will be cleaned up based on the backup policy.\n                        You can resurrect this app from an existing app backup using the following instructions.\n                    </p>\n                    <Button variant=\"warning\" style={{ float: \"right\" }} onClick={() => { handleClick() }} >\n                        Uninstall\n                    </Button>\n                </Col>\n            </Row>\n            {showUninstallConform && <UninstallConform showConform={showUninstallConform} onClose={handleClose}\n                app={props.data} onDataChange={props.onFatherDataChange} onAllDataChange={props.onAllDataChange}\n                onCloseFatherModal={props.onCloseFatherModal} />}\n        </>\n    );\n}\n\nexport default UninstallTab;","import classnames from \"classnames\";\nimport { default as React, useEffect, useState } from 'react';\nimport { Col, Modal, Nav, OverlayTrigger, Row, Tab, Tooltip } from 'react-bootstrap';\nimport { Link, useNavigate } from 'react-router-dom';\nimport DefaultImg from '../assets/images/default.png';\nimport { getAppDetails } from '../helpers';\nimport EventLogs from './eventlogs';\nimport Terminal from './myterminal';\nimport UninstallTab from './uninstalltab';\n\nconst AppDetailModal = (props): React$Element<React$FragmentType> => {\n    const [currentApp, setCurrentApp] = useState(null); // 用于存储当前App的详情\n    // const [disable, setDisable] = useState(false);//用于按钮禁用\n    const navigate = useNavigate(); //用于页面跳转\n\n    useEffect(() => {\n        try {\n            //获取应用详情\n            getAppDetails({ app_id: props.app_id }).then((response) => {\n                if (response.data.code === 0) {\n                    setCurrentApp(response.data.data);\n                } else if (response.data.code === -1) {\n\n                }\n            });\n        } catch (error) {\n\n        }\n    }, []);\n\n    //用于更新当前Modal的APP数据的运行状态\n    const handleDataChange = (newStatus) => {\n        setCurrentApp({\n            ...currentApp,\n            status: newStatus\n        });\n    };\n\n    const tabContents = [\n        {\n            id: '1',\n            title: 'Domain',\n            icon: 'mdi mdi-home-variant',\n            text: 'Home - Food truck quinoa dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Donec quam felis, ultricies nec, pellentesque eu, pretium quis, sem. Nulla consequat massa quis enim.',\n        },\n        {\n            id: '2',\n            title: 'Login',\n            icon: 'mdi mdi-account-circle',\n            text: 'Profile - Food truck quinoa dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Donec quam felis, ultricies nec, pellentesque eu, pretium quis, sem. Nulla consequat massa quis enim.',\n        },\n        {\n            id: '3',\n            title: 'Container',\n            icon: 'mdi mdi-account-circle',\n            text: 'Profile - Food truck quinoa dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Donec quam felis, ultricies nec, pellentesque eu, pretium quis, sem. Nulla consequat massa quis enim.',\n        },\n        {\n            id: '4',\n            title: 'Backups',\n            icon: 'mdi mdi-account-circle',\n            text: 'Profile - Food truck quinoa dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Donec quam felis, ultricies nec, pellentesque eu, pretium quis, sem. Nulla consequat massa quis enim.',\n        },\n        {\n            id: '5',\n            title: 'Updates',\n            icon: 'mdi mdi-account-circle',\n            text: 'Profile - Food truck quinoa dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Donec quam felis, ultricies nec, pellentesque eu, pretium quis, sem. Nulla consequat massa quis enim.',\n        },\n        {\n            id: '6',\n            title: 'Terminal',\n            icon: 'mdi mdi-account-circle',\n            text: <Terminal data={currentApp} />,\n        },\n        {\n            id: '7',\n            title: 'Logs',\n            icon: 'mdi mdi-account-circle',\n            text: <EventLogs projectName={currentApp} />,\n        },\n        {\n            id: '8',\n            title: 'Uninstall',\n            icon: 'mdi mdi-cog-outline',\n            text: <UninstallTab data={currentApp} onDataChange={handleDataChange}\n                onFatherDataChange={props.onDataChange} onAllDataChange={props.onAllDataChange} onCloseFatherModal={props.onClose} />,\n        },\n    ];\n\n    return (\n        currentApp && <Modal show={props.showFlag} onHide={props.onClose} size=\"lg\" scrollable=\"true\" dialogClassName=\"modal-full-width\" >\n            <Modal.Header onHide={props.onClose} closeButton>\n                <div style={{ padding: \"10px\", display: \"flex\", width: \"100%\", alignItems: \"center\" }}>\n                    <div className='appstore-item-content-icon col-same-height'>\n                        <img\n                            src={currentApp.image_url}\n                            alt=\"\"\n                            className=\"app-icon\"\n                            onError={(e) => (e.target.src = DefaultImg)}\n                        />\n                    </div>\n                    <div className='col-same-height'>\n                        <h4 className=\"appstore-item-content-title\" style={{ marginTop: \"5px\" }}>\n                            {currentApp.customer_name}\n                        </h4>\n                        <h5 className=\"appstore-item-content-title\" style={{ marginTop: \"5px\" }}>\n                            {currentApp.status}\n                        </h5>\n                    </div>\n                    <div className='col-same-height' style={{ flexGrow: 1, display: \"flex\", justifyContent: \"flex-end\", alignItems: \"center\" }}>\n                        {\n                            currentApp.status === \"stop\" ?\n                                <OverlayTrigger\n                                    key=\"bottom1\"\n                                    placement=\"bottom\"\n                                    overlay={\n                                        <Tooltip id=\"tooltip-bottom\">\n                                            Start App\n                                        </Tooltip>\n                                    }>\n                                    <button\n                                        className=\"nav-link dropdown-toggle end-bar-toggle arrow-none btn btn-link shadow-none\"\n                                        style={{ color: \"#fff\", backgroundColor: \"#2196f3\", padding: \"5px 10px\", borderRadius: \"3px\", borderColor: \"#2196f3\", marginRight: \"10px\" }}>\n                                        <i className=\"dripicons-media-play noti-icon\"></i>{' '}\n                                    </button>\n                                </OverlayTrigger>\n                                :\n                                <OverlayTrigger\n                                    key=\"bottom2\"\n                                    placement=\"bottom\"\n                                    overlay={\n                                        <Tooltip id=\"tooltip-bottom\">\n                                            Stop App\n                                        </Tooltip>\n                                    }>\n                                    <button\n                                        className=\"nav-link dropdown-toggle end-bar-toggle arrow-none btn btn-link shadow-none\"\n                                        style={{ color: \"#fff\", backgroundColor: \"#2196f3\", padding: \"5px 10px\", borderRadius: \"3px\", borderColor: \"#2196f3\", marginRight: \"10px\" }}>\n                                        <i className=\"dripicons-media-stop noti-icon\"></i>{' '}\n                                    </button>\n                                </OverlayTrigger>\n                        }\n                        <OverlayTrigger\n                            key=\"bottom2\"\n                            placement=\"bottom\"\n                            overlay={\n                                <Tooltip id=\"tooltip-bottom\">\n                                    Restart App\n                                </Tooltip>\n                            }>\n                            <button\n                                className=\"nav-link dropdown-toggle end-bar-toggle arrow-none btn btn-link shadow-none\"\n                                style={{ color: \"#fff\", backgroundColor: \"#2196f3\", padding: \"5px 10px\", borderRadius: \"3px\", borderColor: \"#2196f3\", marginRight: \"10px\" }}>\n                                <i className=\"dripicons-clockwise noti-icon\"></i>{' '}\n                            </button>\n                        </OverlayTrigger>\n                        {/* <OverlayTrigger\n                            key=\"bottom4\"\n                            placement=\"bottom\"\n                            overlay={\n                                <Tooltip id=\"tooltip-bottom\">\n                                    Terminal\n                                </Tooltip>\n                            }>\n                            <Link to={{ pathname: '/terminal', search: `?id=${currentApp.customer_name}` }}\n                                style={{ color: \"#fff\", backgroundColor: \"#2196f3\", padding: \"5px 10px\", borderRadius: \"3px\", borderColor: \"#2196f3\", marginRight: \"10px\" }}\n                                target=\"_blank\">\n                                <i className=\"dripicons-code noti-icon\"></i>{' '}\n                            </Link>\n                        </OverlayTrigger> */}\n                    </div>\n                </div>\n            </Modal.Header>\n            <Modal.Body className=\"row\">\n                <Tab.Container defaultActiveKey=\"Domain\">\n                    <Col sm={2} className=\"mb-2 mb-sm-0\">\n                        <Nav variant=\"pills\" className=\"flex-column\">\n                            {tabContents.map((tab, index) => {\n                                const renderElement = () => {\n                                    return (\n                                        <Nav.Item key={index}>\n                                            <Nav.Link as={Link} to=\"#\" eventKey={tab.title}>\n                                                <i\n                                                    className={classnames(\n                                                        tab.icon,\n                                                        'd-md-none',\n                                                        'd-block',\n                                                        'me-1'\n                                                    )}></i>\n                                                <span className=\"d-none d-md-block\">{tab.title}</span>\n                                            </Nav.Link>\n                                        </Nav.Item>\n                                    );\n                                }\n                                if (tab.title === \"Terminal\") {\n                                    if (currentApp.status === \"running\") {\n                                        return renderElement();\n                                    }\n                                } else {\n                                    return renderElement();\n                                }\n                            })}\n                        </Nav>\n                    </Col>\n                    <Col sm={10}>\n                        <Tab.Content style={{ height: \"100%\" }}>\n                            {tabContents.map((tab, index) => {\n                                return (\n                                    <Tab.Pane eventKey={tab.title} id={tab.id} key={index} style={{ height: \"100%\" }}>\n                                        <Row style={{ height: \"100%\" }}>\n                                            <Col sm=\"12\" style={{ height: tab.title === \"Terminal\" ? \"600px\" : \"\" }}>\n                                                {tab.text}\n                                            </Col>\n                                        </Row>\n                                    </Tab.Pane>\n                                );\n                            })}\n                        </Tab.Content>\n                    </Col>\n                </Tab.Container>\n            </Modal.Body>\n        </Modal >\n    );\n}\n\nexport default AppDetailModal;","// @flow\n//import axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { Button, Col, ProgressBar, Row } from 'react-bootstrap';\nimport { Navigate } from 'react-router-dom';\nimport DefaultImg from '../assets/images/default.png';\nimport FormInput from '../components/FormInput';\nimport Spinner from '../components/Spinner';\nimport { getInstalledApps, getInstallProgress } from '../helpers';\nimport AppDetailModal from './appdetail';\n\nconst MyApps = (): React$Element<React$FragmentType> => {\n    const [showModal, setShowModal] = useState(false); //用于显示弹窗的标识\n    const [selectedApp, setSelectedApp] = useState(\"\"); //用于存储被选中的产品（点击应用详情时使用）\n    const [apps, setApps] = useState([]); //所有“我的应用”\n    const [statusApps, setStatusApps] = useState([]);//根据状态筛选的应用\n    const [selectedStatus, setSelectedStatus] = useState(\"all\"); //用于存储用户筛选应用状态的标识\n    const [progress, setProgress] = useState(0); //用于存储应用安装的进度状态\n    const [progressId, setProgressId] = useState(\"\"); //用于存储当前正在安装的应用ID，用于做进度查询的参数\n\n    const [code, setCode] = useState(0);\n    const [error, setError] = useState(null);\n    const [loading, setLoading] = useState(false);\n\n    //获取所有已经安装的应用\n    const getAllApps = () => {\n        getInstalledApps().then((response) => {\n            if (response.data.code === 0) {\n                setCode(response.data.code);\n                setApps(response.data.data);\n                setStatusApps(response.data.data);\n                setLoading(false);\n                response.data.data.forEach(app => {\n                    if (app.status === \"installing\") {\n                        setProgressId(app.app_id);\n                        getInstallProgress({ app_id: app.app_id }).then((response) => {\n                            if (response.data.code === 0) {\n                                switch (response.data.message) {\n                                    case \"step1\":\n                                        setProgress(1);\n                                        break;\n                                    case \"step2\":\n                                        setProgress(70);\n                                        break;\n                                    case \"step3\":\n                                        setProgress(95);\n                                        break;\n                                    default:\n                                        setProgress(0);\n                                }\n                            }\n                            else if (response.data.code === -1) {\n                                <Navigate to=\"/error\" />\n                            }\n                        }).catch(() => {\n                            <Navigate to=\"/error\" />\n                        })\n                    }\n                });\n            }\n            else if (response.data.code === -1) {\n                setError(response.data.message);\n                setLoading(false);\n            }\n        }).catch((error) => {\n            <Navigate to=\"/error\" />\n        });\n        setLoading(true);\n    }\n\n    useEffect(() => {\n        getAllApps();\n    }, []);\n\n    useEffect(() => {\n        //查询应用安装的进度\n        let timer;\n        if (progress && progress > 0) {\n            timer = setInterval(() => {\n                getInstallProgress({ app_id: progressId }).then((response) => {\n                    if (response.data.code === 0) {\n                        switch (response.data.message) {\n                            case \"step1\":\n                                setProgress(70);\n                                break;\n                            case \"step2\":\n                                setProgress(95);\n                                break;\n                            case \"step3\":\n                                setProgress(100);\n                                clearInterval(timer);\n                                // setStatusApps(\n                                //     statusApps.map((item, i) =>\n                                //         item.app_id === progressId ? { ...item, status: item.status = \"running\" } : item\n                                //     )\n                                // );\n                                setStatusApps(\n                                    statusApps.map((item) => {\n                                        if (item.app_id === progressId) { return { ...item, status: \"running\" } };\n                                        return item;\n                                    })\n                                );\n                                break;\n                            default:\n                                setProgress(0);\n                        }\n\n                    }\n                    else if (response.data.code === -1) {\n                        <Navigate to=\"/error\" />\n                    }\n                }).catch((error) => {\n                    <Navigate to=\"/error\" />\n                })\n            }, 1000);\n        }\n        return () => {\n            clearInterval(timer);\n        };\n    }, [progress]);\n\n    if (loading) return <Spinner className='dis_mid' />;\n    if (code) return <p>Code : ${code} </p>;\n    if (error) return <p>Error : ${error} </p>;\n\n    //用于根据应用“状态”过滤应用\n    const changeStatus = (selectedStatus) => {\n        let updatedData = null;\n        updatedData =\n            selectedStatus === \"all\"\n                ? apps\n                : apps.filter(app => app.status === selectedStatus);\n        setStatusApps(updatedData);\n        setSelectedStatus(selectedStatus);\n    };\n\n    //用于根据用户输入搜索应用\n    const handleInputChange = (searchString) => {\n        let updatedData = null;\n        updatedData =\n            searchString === \"\"\n                ? apps\n                : apps.filter(app => { return app.name.toLowerCase().includes(searchString) });\n        setStatusApps(updatedData);\n        setSelectedStatus(\"all\");\n    }\n\n    //用于用户点击应用详情\n    const handleClick = async (app_id) => {\n        setSelectedApp(app_id);\n        setShowModal(true);\n    };\n\n    //用于关闭应用详情的弹窗\n    const handleClose = () => {\n        setShowModal(false);\n        setSelectedApp(\"\");\n    };\n\n    //用于用户启动、停止应用时，同步更新主页APP的状态\n    const handleDataChange = (id, newStatus) => {\n        const newItems = statusApps.map(item => {\n            if (item.app_id === id) {\n                return { ...item, status: newStatus };\n            }\n            return item;\n        });\n        setStatusApps(newItems);\n    };\n\n    //更新所有数据\n    const handleAllDataChange = (id) => {\n        //getAllApps(); //通过刷新重新获取数据\n        //通过过滤本地数据后重新绑定数据来刷新数据\n        const newItems = statusApps.filter(item => item.app_id !== id);\n        setStatusApps(newItems);\n    }\n\n    return (\n        <>\n            <Row className=\"mb-2\" style={{ display: \"flex\", alignItems: \"center\" }}>\n                <Col sm={2}>\n                    <span style={{ fontSize: \"36px\" }}>My Apps</span>\n                </Col>\n                <Col sm={3}>\n                    <FormInput\n                        value={selectedStatus}\n                        name=\"select\"\n                        type=\"select\"\n                        className=\"form-select\"\n                        key=\"select\"\n                        onChange={(e) => changeStatus(e.target.value)} >\n                        <option value=\"all\">All States</option>\n                        <option value=\"running\">Running</option>\n                        <option value=\"stop\">Stopped</option>\n                        <option value=\"error\">Not Responding</option>\n                    </FormInput>\n                </Col>\n                <Col sm={6}>\n                    <Col xs=\"auto\">\n                        <FormInput type=\"text\" name=\"search\"\n                            placeholder=\"Search for apps like WordPress, Dropbox, Slack, Trello, …\"\n                            onChange={(e) => handleInputChange(e.target.value)}\n                        />\n                    </Col>\n                </Col>\n                <Col sm={1}>\n                    <Button variant=\"primary\" onClick={() => {\n                        getAllApps()\n                    }}>Refresh</Button>\n                </Col>\n            </Row>\n            <Row>\n                {(statusApps || []).map((app, i) => {\n                    return (\n                        <Col xxl={2} md={6} key={app.app_id + i} className=\"appstore-item\">\n                            <div className='appstore-item-content highlight' style={{ textAlign: \"center\", width: \"90%\" }}\n                                /*onClick={(app.status === \"running\" || app.status === \"stop\") ? () => { handleClick(app.app_id) } : undefined}*/>\n                                {\n                                    (app.status === \"running\" || app.status === \"stop\") &&\n                                    <div className=\"float-end arrow-none card-drop p-0\" onClick={() => { handleClick(app.app_id) }}>\n                                        <i className=\"dripicons-gear noti-icon\"></i>\n                                    </div>\n                                }\n                                <div>\n                                    <img\n                                        src={app.image_url}\n                                        alt={app.name}\n                                        className=\"app-icon\"\n                                        style={{ margin: \"30px 10px 30px 10px\" }}\n                                        onError={(e) => (e.target.src = DefaultImg)}\n                                    />\n                                </div>\n                                <div>\n                                    <h3 className=\"appstore-item-content-title\" style={{ color: \"#2196f3\" }}>\n                                        {app.customer_name}\n                                    </h3>\n                                    <div className='appstore-item-content-tagline text-muted'>\n                                        {/* {(progress && progress === 100) ? \"running\" : app.status} */}\n                                        {app.status}\n                                    </div>\n                                    {\n                                        app.status && app.status === \"installing\" &&\n                                        <div>\n                                            <ProgressBar now={progress} hidden={progress === 100} label={`${progress}%`}></ProgressBar>\n                                        </div>\n                                    }\n                                </div>\n                            </div>\n                        </Col>\n                    );\n                })}\n            </Row >\n            {\n                showModal && <AppDetailModal app_id={selectedApp} showFlag={showModal} onClose={handleClose}\n                    onDataChange={handleDataChange} onAllDataChange={handleAllDataChange} />\n            }\n        </>\n    );\n};\n\nexport default MyApps;\n"],"names":["PasswordInput","_ref","name","placeholder","refCallback","errors","register","className","_useState","useState","_useState2","_slicedToArray","showPassword","setShowPassword","_jsx","_Fragment","children","_jsxs","InputGroup","Form","_objectSpread","type","id","as","ref","r","isInvalid","autoComplete","classNames","onClick","_ref2","label","labelClassName","containerClass","otherProps","_objectWithoutProperties","_excluded","comp","Spinner","props","Tag","tag","color","size","role","concat","_defineProperty","defaultProps","axios","response","error","message","status","Navigate","data","Promise","reject","api","_createClass","APICore","_classCallCheck","get","url","params","queryString","Object","keys","map","key","join","create","installApp","getInstalledApps","unInstallApp","getInstallProgress","stopApp","startApp","getAppDetails","appLogs","setAppLog","messagesEndRef","useRef","useEffect","current","scrollIntoView","behavior","getAppLog","cockpit","projectName","customer_name","then","content","catch","exception","timer","setInterval","clearInterval","ScrollToBottom","style","UninstallConform","navigate","useNavigate","disable","setDisable","Modal","show","showConform","onHide","onClose","scrollable","backdrop","backgroundColor","closeButton","border","app","margin","Button","variant","disabled","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","app_id","sent","code","onCloseFatherModal","onAllDataChange","t0","stop","_useState3","_useState4","showUninstallConform","setShowUninstallConform","_useState5","_useState6","Row","Col","sm","fontWeight","marginBottom","float","_callee2","_context2","onDataChange","onFatherDataChange","_callee3","_context3","currentApp","setCurrentApp","tabContents","title","icon","text","Terminal","EventLogs","UninstallTab","newStatus","showFlag","dialogClassName","padding","display","width","alignItems","src","image_url","alt","onError","e","target","DefaultImg","marginTop","flexGrow","justifyContent","OverlayTrigger","placement","overlay","Tooltip","borderRadius","borderColor","marginRight","Tab","defaultActiveKey","Nav","tab","index","renderElement","Link","to","eventKey","classnames","height","showModal","setShowModal","selectedApp","setSelectedApp","apps","setApps","_useState7","_useState8","statusApps","setStatusApps","_useState9","_useState10","selectedStatus","setSelectedStatus","_useState11","_useState12","progress","setProgress","_useState13","_useState14","progressId","setProgressId","_useState15","_useState16","setCode","_useState17","_useState18","setError","_useState19","_useState20","loading","setLoading","getAllApps","forEach","item","handleClick","_x","apply","arguments","fontSize","FormInput","value","onChange","updatedData","filter","changeStatus","xs","searchString","toLowerCase","includes","handleInputChange","i","xxl","md","textAlign","ProgressBar","now","hidden","AppDetailModal","newItems"],"sourceRoot":""}
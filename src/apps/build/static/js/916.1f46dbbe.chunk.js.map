{"version":3,"file":"static/js/916.1f46dbbe.chunk.js","mappings":"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","sources":["components/FormInput.js","components/Spinner.js","helpers/api/apiCore.js","helpers/api/appManager.js","pages/appdetailtabs/appaccess.js","pages/appdetailtabs/applogs.js","pages/appdetailtabs/appoverview.js","pages/appdetailtabs/uninstall.js","pages/appdetail.js","pages/myapps.js"],"sourcesContent":["// @flow\nimport classNames from 'classnames';\nimport React, { useState } from 'react';\nimport { Form, InputGroup } from 'react-bootstrap';\n\n/* Password Input */\nconst PasswordInput = ({ name, placeholder, refCallback, errors, register, className, value, readOnly }) => {\n    const [showPassword, setShowPassword] = useState(false);\n\n    return (\n        <>\n            <InputGroup className=\"mb-0\">\n                <Form.Control\n                    type={showPassword ? 'text' : 'password'}\n                    placeholder={placeholder}\n                    name={name}\n                    id={name}\n                    as=\"input\"\n                    ref={(r) => {\n                        if (refCallback) refCallback(r);\n                    }}\n                    className={className}\n                    isInvalid={errors && errors[name] ? true : false}\n                    {...(register ? register(name) : {})}\n                    autoComplete={name}\n                    defaultValue={value}\n                    readOnly={readOnly}\n                />\n                <div\n                    className={classNames('input-group-text', 'input-group-password', {\n                        'show-password': showPassword,\n                    })}\n                    data-password={showPassword ? 'true' : 'false'}>\n                    <span\n                        className=\"password-eye\"\n                        onClick={() => {\n                            setShowPassword(!showPassword);\n                        }}></span>\n                </div>\n            </InputGroup>\n        </>\n    );\n};\n\ntype FormInputProps = {\n    label?: string,\n    type?: string,\n    name?: string,\n    value?: string,\n    placeholder?: string,\n    register?: any,\n    errors?: any,\n    className?: string,\n    labelClassName?: string,\n    containerClass?: string,\n    refCallback?: any,\n    children?: any,\n};\n\nconst FormInput = ({\n    label,\n    type,\n    name,\n    value,\n    readOnly,\n    placeholder,\n    register,\n    errors,\n    className,\n    labelClassName,\n    containerClass,\n    refCallback,\n    children,\n    ...otherProps\n}: FormInputProps): React$Element<React$FragmentType> => {\n    // handle input type\n    const comp = type === 'textarea' ? 'textarea' : type === 'select' ? 'select' : 'input';\n\n    return (\n        <>\n            {type === 'hidden' ? (\n                <input type={type} name={name} {...(register ? register(name) : {})} {...otherProps} />\n            ) : (\n                <>\n                    {type === 'password' ? (\n                        <>\n                            <Form.Group className={containerClass}>\n                                {label ? (\n                                    <>\n                                        {' '}\n                                        <Form.Label className={labelClassName}>{label}</Form.Label> {children}{' '}\n                                    </>\n                                ) : null}\n                                <PasswordInput\n                                    name={name}\n                                    placeholder={placeholder}\n                                    refCallback={refCallback}\n                                    errors={errors}\n                                    register={register}\n                                    className={className}\n                                    value={value}\n                                    readOnly={readOnly}\n                                />\n\n                                {errors && errors[name] ? (\n                                    <Form.Control.Feedback type=\"invalid\" className=\"d-block\">\n                                        {errors[name]['message']}\n                                    </Form.Control.Feedback>\n                                ) : null}\n                            </Form.Group>\n                        </>\n                    ) : (\n                        <>\n                            {type === 'select' ? (\n                                <>\n                                    <Form.Group className={containerClass}>\n                                        {label ? <Form.Label className={labelClassName}>{label}</Form.Label> : null}\n\n                                        <Form.Select\n                                            type={type}\n                                            label={label}\n                                            name={name}\n                                            id={name}\n                                            ref={(r) => {\n                                                if (refCallback) refCallback(r);\n                                            }}\n                                            comp={comp}\n                                            className={className}\n                                            isInvalid={errors && errors[name] ? true : false}\n                                            {...(register ? register(name) : {})}\n                                            {...otherProps}>\n                                            {children}\n                                        </Form.Select>\n\n                                        {errors && errors[name] ? (\n                                            <Form.Control.Feedback type=\"invalid\">\n                                                {errors[name]['message']}\n                                            </Form.Control.Feedback>\n                                        ) : null}\n                                    </Form.Group>\n                                </>\n                            ) : (\n                                <>\n                                    {type === 'checkbox' || type === 'radio' ? (\n                                        <>\n                                            <Form.Group className={containerClass}>\n                                                <Form.Check\n                                                    type={type}\n                                                    label={label}\n                                                    name={name}\n                                                    id={name}\n                                                    ref={(r) => {\n                                                        if (refCallback) refCallback(r);\n                                                    }}\n                                                    className={className}\n                                                    isInvalid={errors && errors[name] ? true : false}\n                                                    {...(register ? register(name) : {})}\n                                                    {...otherProps}\n                                                />\n\n                                                {errors && errors[name] ? (\n                                                    <Form.Control.Feedback type=\"invalid\">\n                                                        {errors[name]['message']}\n                                                    </Form.Control.Feedback>\n                                                ) : null}\n                                            </Form.Group>\n                                        </>\n                                    ) : (\n                                        <Form.Group className={containerClass}>\n                                            {label ? <Form.Label className={labelClassName}>{label}</Form.Label> : null}\n\n                                            <Form.Control\n                                                type={type}\n                                                placeholder={placeholder}\n                                                value={value}\n                                                name={name}\n                                                id={name}\n                                                as={comp}\n                                                ref={(r) => {\n                                                    if (refCallback) refCallback(r);\n                                                }}\n                                                className={className}\n                                                isInvalid={errors && errors[name] ? true : false}\n                                                {...(register ? register(name) : {})}\n                                                {...otherProps}\n                                                autoComplete={name}>\n                                                {children ? children : null}\n                                            </Form.Control>\n\n                                            {errors && errors[name] ? (\n                                                <Form.Control.Feedback type=\"invalid\">\n                                                    {errors[name]['message']}\n                                                </Form.Control.Feedback>\n                                            ) : null}\n                                        </Form.Group>\n                                    )}\n                                </>\n                            )}\n                        </>\n                    )}\n                </>\n            )}\n        </>\n    );\n};\n\nexport default FormInput;\n","// @flow\nimport React from 'react';\nimport classNames from 'classnames';\n\ntype SpinnerProps = {\n    tag?: string,\n    className?: string,\n    size?: 'lg' | 'md' | 'sm',\n    type?: 'bordered' | 'grow',\n    color?: string,\n    children?: any,\n};\n\n/**\n * Spinner\n */\nconst Spinner = (props: SpinnerProps): React$Element<any> => {\n    const children = props.children || null;\n    const Tag = props.tag || 'div';\n    const color = props.color || 'secondary';\n    const size = props.size || '';\n\n    return (\n        <Tag\n            role=\"status\"\n            className={classNames(\n                {\n                    'spinner-border': props.type === 'bordered',\n                    'spinner-grow': props.type === 'grow',\n                },\n                [`text-${color}`],\n                { [`avatar-${size}`]: size },\n                props.className\n            )}>\n            {children}\n        </Tag>\n    );\n};\n\nSpinner.defaultProps = {\n    tag: 'div',\n    type: 'bordered',\n};\n\nexport default Spinner;\n","import axios from 'axios';\nimport { Navigate } from \"react-router-dom\";\n//import config from '../../config';\n\n// content type\naxios.defaults.headers.post['Content-Type'] = 'application/json';\naxios.defaults.headers.get['Content-Type'] = 'application/json';\naxios.defaults.headers = {\n    'Cache-Control': 'no-cache',\n    'Pragma': 'no-cache',\n    'Expires': '0',\n};\n//axios.defaults.baseURL = config.API_URL;\n\n// intercepting to capture errors\naxios.interceptors.response.use(\n    (response) => {\n        return response;\n    },\n    (error) => {\n        // Any status codes that falls outside the range of 2xx cause this function to trigger\n        let message;\n\n        if (error && error.response && error.response.status === 404) {\n            <Navigate to=\"/error-404\" />\n        } else if (error && error.response && error.response.status === 500) {\n            <Navigate to=\"/error-500\" />\n        } else {\n            message = error.response && error.response.data ? error.response.data['message'] : error.message || error;\n            return Promise.reject(message);\n        }\n    }\n);\n\nclass APICore {\n    /**\n     * Fetches data from given url\n     */\n    get = (url, params) => {\n        let response;\n        if (params) {\n            var queryString = params\n                ? Object.keys(params)\n                    .map((key) => key + '=' + params[key])\n                    .join('&')\n                : '';\n            response = axios.get(`${url}?${queryString}`, params);\n        } else {\n            response = axios.get(`${url}`, params);\n        }\n        return response;\n    };\n\n    /**\n     * post given data to url\n     */\n    create = (url, data) => {\n        return axios.post(url, data);\n    };\n}\n\nexport { APICore };\n","import { APICore } from './apiCore';\n\nconst api = new APICore();\n\n//App 安装\nfunction AppInstall(params: any): Promise<any> {\n    const baseUrl = '/AppManage/AppInstall';\n    return api.get(`${baseUrl}`, params);\n}\n\n//App 列表查询\nfunction AppList(params: any): Promise<any> {\n    const baseUrl = '/AppManage/AppList';\n    return api.get(`${baseUrl}`, params);\n}\n\n//App 卸载\nfunction AppUninstall(params: any): Promise<any> {\n    const baseUrl = '/AppManage/AppUninstall';\n    return api.get(`${baseUrl}`, params);\n}\n\n//App 停止\nfunction AppStop(params: any): Promise<any> {\n    const baseUrl = '/AppManage/AppStop';\n    return api.get(`${baseUrl}`, params);\n}\n\n//App 启动\nfunction AppStart(params: any): Promise<any> {\n    const baseUrl = '/AppManage/AppStart';\n    return api.get(`${baseUrl}`, params);\n}\n\n//App 重启\nfunction AppRestart(params: any): Promise<any> {\n    const baseUrl = '/AppManage/AppRestart';\n    return api.get(`${baseUrl}`, params);\n}\n\n//App 状态查询\nfunction AppStatus(params: any): Promise<any> {\n    const baseUrl = '/AppManage/AppStatus';\n    return api.get(`${baseUrl}`, params);\n}\n\n//查询APP对应的域名\nfunction AppDomainList(params: any): Promise<any> {\n    const baseUrl = '/AppManage/AppDomainList';\n    return api.get(`${baseUrl}`, params);\n}\n\nexport { AppInstall, AppList, AppUninstall, AppStop, AppStart, AppRestart, AppStatus, AppDomainList };\n\n","import MuiAlert from '@mui/material/Alert';\nimport Snackbar from '@mui/material/Snackbar';\nimport React, { useEffect, useState } from 'react';\nimport { Button, Card, Col, Row } from 'react-bootstrap';\nimport { useNavigate } from 'react-router-dom';\nimport FormInput from '../../components/FormInput';\nimport Spinner from '../../components/Spinner';\nimport { AppDomainList } from '../../helpers';\n\nconst MyMuiAlert = React.forwardRef(function Alert(props, ref) {\n    return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\n});\n\nconst AppAccess = (props): React$Element<React$FragmentType> => {\n    const navigate = useNavigate(); //用于页面跳转\n    const [domains, setDomains] = useState([]); // 定义域名数组\n    const [refreshDisable, setRefreshDisable] = useState(false);//用于刷新按钮禁用\n\n    const [showAlert, setShowAlert] = useState(false); //用于是否显示错误提示\n    const [alertMessage, setAlertMessage] = useState(\"\");  //用于显示错误提示消息\n    const [alertType, setAlertType] = useState(\"\");  //用于确定弹窗的类型：error\\success\n\n    const getDomains = async () => {\n        try {\n            const response = await AppDomainList({ app_id: props.data.app_id });\n            if (response.data.Error) {\n                setShowAlert(true);\n                setAlertType(\"error\")\n                setAlertMessage(response.data.Error.Message);\n            }\n            else {\n                let responseData = response.data.ResponseData;\n                let resturnDomains = responseData.map(domain => {\n                    return {\n                        domainValue: domain,\n                        isEditable: false\n                    };\n                });\n                setDomains(resturnDomains);\n            }\n        }\n        catch (error) {\n            navigate(\"/error-500\");\n        }\n    }\n\n    useEffect(() => {\n        getDomains();\n    }, []);\n\n    function addRow() {\n        if (domains.length < 10) {\n            // 限制最多只能有10个domain\n            setDomains([\n                ...domains,\n                {\n                    domainValue: \"\", // 搜索框的值，默认为空\n                    isEditable: true, // 搜索框是否可编辑，默认为否\n                },\n            ]);\n        }\n    }\n\n    function deleteRow(index) {\n        const newRows = [...domains]; // 复制状态数组\n        newRows.splice(index, 1); // 删除指定索引的对象\n        setDomains(newRows); // 更新状态数组\n    }\n\n    function editRow(index) {\n        const newRows = [...domains]; // 复制状态数组\n        newRows[index].isEditable = !newRows[index].isEditable; // 切换isEditable属性\n        setDomains(newRows); // 更新状态数组\n    }\n\n    function saveRow(index) {\n        const input = document.getElementsByName(`domain-${index}`)[0]; // 获取搜索框元素\n        const value = input.value; // 获取搜索框的值\n        const regex = /^(?!https?:\\/\\/)([\\da-z\\.-]+\\.)*([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([\\/\\w \\.-]*)*\\/?$/; // 定义一个正则表达式，用来验证域名的格式\n        if (value) {\n            // 如果搜索框的值不为空\n            if (regex.test(value)) {\n                // 如果搜索框的值符合域名的格式\n                const newRows = [...domains]; // 复制状态数组\n                newRows[index].domainValue = value; // 修改inputValue属性\n                newRows[index].isEditable = !newRows[index].isEditable;\n                setDomains(newRows); // 更新状态数组\n            } else {\n                setShowAlert(true);\n                setAlertType(\"error\")\n                setAlertMessage(\"请输入正确的域名,并且不能以http或者https开始！\");\n            }\n        }\n        else {\n            // 如果搜索框的值为空\n            setShowAlert(true);\n            setAlertType(\"error\")\n            setAlertMessage(\"域名不能为空\");\n        }\n    }\n\n    function handleChange(index, e) {\n        const newRows = [...domains]; // 复制状态数组\n        newRows[index].domainValue = e.target.value; // 修改inputValue属性\n        setDomains(newRows); // 更新状态数组\n    }\n\n    const handleAlertClose = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        setShowAlert(false);\n        setAlertMessage(\"\");\n    };\n\n    return (\n        <>\n            <Card>\n                <Card.Header>\n                    <Row className=\"mb-2 align-items-center\">\n                        <Col xs={12} md={9}>\n                            <label className=\"me-2 fs-5\">域名绑定</label>\n                        </Col>\n                        <Col xs={12} md={3}>\n                            <Button variant=\"primary\" size=\"sm\" className=\"me-2\" onClick={() => addRow()}>添加</Button>\n                            {/* <Button variant=\"primary\" size=\"sm\" className=\"me-2\" onClick={() => getDomains()}>刷新</Button> */}\n                            <Button disabled={refreshDisable} size=\"sm\" className=\"me-2\" variant=\"primary\"\n                                onClick={async () => { setRefreshDisable(true); await getDomains(); setRefreshDisable(false) }} >\n                                {refreshDisable && <Spinner className=\"spinner-border-sm me-1\" tag=\"span\" color=\"white\" />} 刷新\n                            </Button>\n                            <a href=\"/nginx/proxy\" target=\"_parent\">\n                                <Button variant=\"primary\" size=\"sm\">更多</Button>\n                            </a>\n                        </Col>\n                    </Row>\n                </Card.Header>\n                <Card.Body>\n                    {domains.map((row, index) => (\n                        <Row className=\"mb-2\" key={index}>\n                            <Col xs={12} md={9}>\n                                <Col xs=\"auto\">\n                                    <FormInput className=\"mb-2 mb-md-0\" type=\"text\"\n                                        name={`domain-${index}`}\n                                        value={row.domainValue}\n                                        disabled={!row.isEditable}\n                                        onChange={(e) => handleChange(index, e)} />\n                                </Col>\n                            </Col>\n                            <Col xs={12} md={3}>\n                                <Button variant=\"link text-danger\" onClick={() => deleteRow(index)}>删除</Button>\n                                {row.isEditable ? (\n                                    // 如果isEditable为true，就渲染保存按钮\n                                    <Button variant=\"link text-success\" onClick={() => saveRow(index)}>\n                                        保存\n                                    </Button>\n                                ) : (\n                                    // 否则就渲染编辑按钮\n                                    <>\n                                        <Button variant=\"link text-primary\" onClick={() => editRow(index)}>\n                                            编辑\n                                        </Button>\n                                        <a href={'http://' + row.domainValue} target=\"_blank\">\n                                            <Button variant=\"link text-info\">访问</Button>\n                                        </a>\n                                    </>\n                                )}\n                            </Col>\n                        </Row>\n                    ))}\n                </Card.Body>\n            </Card >\n            {\n                showAlert &&\n                <Snackbar open={showAlert} autoHideDuration={5000} onClose={handleAlertClose} anchorOrigin={{ vertical: 'top', horizontal: 'center' }}>\n                    <MyMuiAlert onClose={handleAlertClose} severity={alertType} sx={{ width: '100%' }}>\n                        {alertMessage}\n                    </MyMuiAlert>\n                </Snackbar>\n            }\n        </>\n    );\n}\n\nexport default AppAccess;","import cockpit from \"cockpit\";\nimport { default as React, useEffect, useRef, useState } from 'react';\nimport ScrollToBottom from 'react-scroll-to-bottom';\n\nconst AppLogs = (props): React$Element<React$FragmentType> => {\n    const [appLogs, setAppLog] = useState(\"\");\n\n    const messagesEndRef = useRef(null);\n\n    useEffect(() => {\n        messagesEndRef.current.scrollIntoView({ behavior: \"auto\" });\n    }, []);\n\n    const getAppLog = () => {\n        cockpit.spawn([\"docker\", \"compose\", \"--project-name\", props.projectName.customer_name, \"logs\", \"--tail\", \"200\"]).then(content => {\n            setAppLog(content);\n        }).catch(exception => {\n\n        });\n    };\n\n    useEffect(() => {\n        const timer = setInterval(getAppLog, 1000);\n        return () => clearInterval(timer);\n    }, [getAppLog]);\n\n\n    return (\n        <ScrollToBottom>\n            <div style={{ \"height\": \"600px\", \"width\": \"100%\" }}>\n                <pre style={{ \"white-space\": \"pre-wrap\", \"word-wrap\": \"break-word\" }}>\n                    {appLogs}\n                </pre>\n                <div ref={messagesEndRef} />\n            </div>\n        </ScrollToBottom>\n    );\n}\n\nexport default AppLogs;","import cockpit from \"cockpit\";\nimport React, { useState } from 'react';\nimport { Col, Collapse, Form, Row } from 'react-bootstrap';\nimport { Link, useNavigate } from 'react-router-dom';\nimport FormInput from '../../components/FormInput';\n\nconst _ = cockpit.gettext;\n\nconst AppOverview = (props): React$Element<React$FragmentType> => {\n    const navigate = useNavigate(); //用于页面跳转\n    const [isOpen, setIsOpen] = useState(false);\n    const toggle = () => setIsOpen(!isOpen);\n\n    return (\n        <>\n            <Row className=\"mb-2\">\n                <p>\n                    <Link to=\"#\" className=\"btn btn-primary\" onClick={toggle}>\n                        First Time Usage\n                    </Link>\n                </p>\n                <Collapse in={isOpen}>\n                    <div>\n                        <p>\n                            This app is pre-setup with an admin account,Please change the admin password immediately. The initial credentials are:\n                        </p>\n                        <Form.Group as={Row} className=\"mb-3\">\n                            <Form.Label htmlFor=\"username\" column md={1}>\n                                Username\n                            </Form.Label>\n                            <Col md={3}>\n                                <Form.Control\n                                    type=\"text\"\n                                    name=\"username\"\n                                    id=\"username\"\n                                    defaultValue={props.data?.config?.user_name}\n                                    readOnly\n                                />\n                            </Col>\n                        </Form.Group>\n\n                        <Form.Group as={Row} className=\"mb-3\">\n                            <Form.Label htmlFor=\"password\" column md={1}>\n                                Password\n                            </Form.Label>\n                            <Col md={3}>\n                                <FormInput\n                                    type=\"password\"\n                                    name=\"password\"\n                                    containerClass={'mb-3'}\n                                    value={props.data?.config?.password}\n                                    readOnly\n                                />\n                            </Col>\n                        </Form.Group>\n                    </div>\n                </Collapse>\n            </Row>\n\n        </>\n    );\n}\n\nexport default AppOverview;","import classNames from 'classnames';\nimport React, { useState } from 'react';\nimport { Alert, Button, Col, Modal, Row } from 'react-bootstrap';\nimport { useNavigate } from 'react-router-dom';\nimport Spinner from '../../components/Spinner';\nimport { AppStart, AppStop, AppUninstall } from '../../helpers';\n\n//卸载应用时的确定/取消弹窗\nconst UninstallConform = (props) => {\n    const navigate = useNavigate(); //用于页面跳转\n    const [disable, setDisable] = useState(false);//用于按钮禁用\n    const [showAlert, setShowAlert] = useState(false); //用于是否显示错误提示\n    const [alertMessage, setAlertMessage] = useState(\"\");//用于显示错误提示消息\n\n    function closeAllModals() {\n        //关闭弹窗\n        props.onClose();\n        props.onCloseFatherModal();\n\n        //更新主页APP的数据\n        props.onDataChange();\n    }\n\n    return (\n        <Modal show={props.showConform} onHide={props.onClose} size=\"lg\"\n            scrollable=\"true\" backdrop=\"static\" style={{ backgroundColor: \"rgba(0,0,0,0.8)\" }}>\n            <Modal.Header onHide={props.onClose} closeButton className={classNames('modal-colored-header', 'bg-warning')}>\n                <h4>Uninstall {props.app.customer_name}</h4>\n            </Modal.Header>\n            <Modal.Body className=\"row\" >\n                <span style={{ margin: \"10px 0px\" }}>This will immediately uninstall {props.app.customer_name} and remove all its data.</span>\n                <div>\n                    {showAlert && <Alert variant=\"danger\" className=\"my-2\">\n                        {alertMessage}\n                    </Alert>}\n                </div>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"light\" onClick={props.onClose}>\n                    Close\n                </Button>{\" \"}\n                <Button disabled={disable} variant=\"warning\" onClick={async () => {\n                    try {\n                        setDisable(true);\n                        //调用卸载应用接口\n                        const response = await AppUninstall({ app_id: props.app.app_id });\n                        if (response.data.Error) {\n                            setShowAlert(true);\n                            setAlertMessage(response.data.Error.Message);\n                        }\n                        else {\n                            closeAllModals(); //关闭弹窗并更新数据\n                        }\n                    }\n                    catch (error) {\n                        navigate(\"/error-500\");\n                    }\n                }}>\n                    {disable && <Spinner className=\"spinner-border-sm me-1\" tag=\"span\" color=\"white\" />} Uninstall\n                </Button>\n            </Modal.Footer>\n        </Modal >\n    );\n}\n\n//卸载应用选项卡\nconst Uninstall = (props): React$Element<React$FragmentType> => {\n    const [showUninstallConform, setShowUninstallConform] = useState(false);//用于确认卸载弹窗的标识\n    const [disable, setDisable] = useState(false);//用于按钮禁用\n    const navigate = useNavigate(); //用于页面跳转\n\n    //用于显示确定/取消卸载应用的弹窗\n    const handleClick = () => {\n        setShowUninstallConform(true);\n    };\n    //用于关闭确定/取消卸载应用的弹窗\n    const handleClose = () => {\n        setShowUninstallConform(false);\n    };\n\n    return (\n        <>\n            <Row className=\"mb-2\">\n                <Col sm={12}>\n                    <label className=\"me-1\" style={{ fontWeight: \"bolder\", marginBottom: \"5px\" }}>Start / Stop</label>\n                    <p>\n                        Apps can be stopped to conserve server resources instead of uninstalling.\n                        Future app backups will not include any app changes between now and the most recent app backup.\n                        For this reason, it is recommended to trigger a backup before stopping the app.\n                    </p>\n                    {props.data.status === \"running\" ?\n                        <Button variant=\"secondary\" style={{ float: 'right' }} disabled={disable} onClick={async () => {\n                            try {\n                                setDisable(true);\n                                //调用应用停止接口\n                                const response = await AppStop({ app_id: props.data.app_id });\n                                if (response.data.Error) {\n                                    navigate(\"/error\")\n                                }\n                                else {\n                                    setDisable(false);\n                                    props.onDataChange(props.data.app_id);\n                                }\n                            }\n                            catch (error) {\n                                navigate(\"/error-500\");\n                            }\n                        }}>\n                            {disable && <Spinner className=\"spinner-border-sm me-1\" tag=\"span\" color=\"white\" />} Stop App\n                        </Button>\n                        :\n                        <Button variant=\"primary\" style={{ float: 'right' }} disabled={disable} onClick={async () => {\n                            setDisable(true);\n                            try {\n                                const response = await AppStart({ app_id: props.data.app_id });\n                                if (response.data.Error) {\n                                    navigate(\"/error\")\n                                }\n                                else {\n                                    setDisable(false);\n                                    props.onDataChange(props.data.app_id);\n                                }\n                            }\n                            catch (error) {\n                                navigate(\"/error-500\");\n                            }\n                        }}>\n                            {disable && <Spinner className=\"spinner-border-sm me-1\" tag=\"span\" color=\"white\" />} Start App\n                        </Button>\n                    }\n                </Col>\n            </Row>\n            <hr></hr>\n            <Row className=\"mb-2\">\n                <Col sm={12}>\n                    <label className=\"me-1\" style={{ fontWeight: \"bolder\", marginBottom: \"5px\" }}>Uninstall</label>\n                    <p>\n                        This will uninstall the app immediately and remove all its data. The app will be inaccessible.\n                        App backups are not removed and will be cleaned up based on the backup policy.\n                        You can resurrect this app from an existing app backup using the following instructions.\n                    </p>\n                    <Button variant=\"warning\" style={{ float: \"right\" }} onClick={() => { handleClick() }} >\n                        Uninstall\n                    </Button>\n                </Col>\n            </Row>\n            {showUninstallConform && <UninstallConform showConform={showUninstallConform} onClose={handleClose}\n                app={props.data} onDataChange={props.onDataChange} onCloseFatherModal={props.onCloseFatherModal} />}\n        </>\n    );\n}\n\nexport default Uninstall;","import classnames from \"classnames\";\nimport cockpit from 'cockpit';\nimport React, { useEffect, useState } from 'react';\nimport { Col, Modal, Nav, OverlayTrigger, Row, Tab, Tooltip } from 'react-bootstrap';\nimport { Link, useNavigate } from 'react-router-dom';\nimport DefaultImg from '../assets/images/default.png';\nimport Spinner from '../components/Spinner';\nimport { AppRestart, AppStart, AppStop } from '../helpers';\nimport AppAccess from './appdetailtabs/appaccess';\nimport AppLogs from './appdetailtabs/applogs';\nimport AppOverview from './appdetailtabs/appoverview';\nimport Uninstall from './appdetailtabs/uninstall';\n\nconst _ = cockpit.gettext;\n\nconst AppDetailModal = (props): React$Element<React$FragmentType> => {\n    // const [disable, setDisable] = useState(false);//用于按钮禁用\n    const [currentApp, setCurrentApp] = useState(props.current_app);\n    const [startAppLoading, setStartAppLoading] = useState(false); //用户显示启动应用的加载状态\n    const [stopAppLoading, setStopAppLoading] = useState(false); //用户显示停止时应用的加载状态\n    const [restartAppLoading, setRestartAppLoading] = useState(false); //用户显示重启时应用的加载状态\n    const navigate = useNavigate(); //用于页面跳转\n\n    useEffect(() => {\n        setCurrentApp(props.current_app);\n    }, [props.current_app]);\n\n    const tabContents = [\n        {\n            id: '1',\n            title: _(\"Overview\"),\n            icon: 'mdi mdi-account-circle',\n            text: <AppOverview data={currentApp} />,\n        },\n        {\n            id: '2',\n            title: _(\"Access\"),\n            icon: 'mdi mdi-account-circle',\n            text: <AppAccess data={currentApp} />,\n        },\n        // {\n        //     id: '3',\n        //     title: _(\"Backups\"),\n        //     icon: 'mdi mdi-account-circle',\n        //     text: <Backups data={currentApp} />,\n        // },\n        {\n            id: '3',\n            title: _(\"Logs\"),\n            icon: 'mdi mdi-account-circle',\n            text: <AppLogs projectName={currentApp} />,\n        },\n        {\n            id: '4',\n            title: _(\"Uninstall\"),\n            icon: 'mdi mdi-cog-outline',\n            text: <Uninstall data={currentApp}\n                onDataChange={props.onDataChange} onCloseFatherModal={props.onClose} />,\n        },\n    ];\n\n    return (\n        currentApp && <Modal show={props.showFlag} onHide={props.onClose} size=\"lg\" scrollable=\"true\" dialogClassName=\"modal-full-width\" >\n            <Modal.Header onHide={props.onClose} closeButton>\n                <div style={{ padding: \"10px\", display: \"flex\", width: \"100%\", alignItems: \"center\" }}>\n                    <div className='appstore-item-content-icon col-same-height'>\n                        <img\n                            src={currentApp.image_url}\n                            alt=\"\"\n                            className=\"app-icon\"\n                            onError={(e) => (e.target.src = DefaultImg)}\n                        />\n                    </div>\n                    <div className='col-same-height'>\n                        <h4 className=\"appstore-item-content-title\" style={{ marginTop: \"5px\" }}>\n                            {currentApp.customer_name}\n                        </h4>\n                        <h5 className=\"appstore-item-content-title\" style={{ marginTop: \"5px\" }}>\n                            {currentApp.status}\n                        </h5>\n                    </div>\n                    <div className='col-same-height' style={{ flexGrow: 1, display: \"flex\", justifyContent: \"flex-end\", alignItems: \"center\" }}>\n                        {\n                            currentApp.status === \"exited\" &&\n                            <OverlayTrigger\n                                key=\"bottom1\"\n                                placement=\"bottom\"\n                                overlay={\n                                    <Tooltip id=\"tooltip-bottom\">\n                                        Start App\n                                    </Tooltip>\n                                }>\n                                <button\n                                    className=\"nav-link dropdown-toggle end-bar-toggle arrow-none btn btn-link shadow-none\"\n                                    style={{ color: \"#fff\", backgroundColor: \"#2196f3\", padding: \"5px 10px\", borderRadius: \"3px\", borderColor: \"#2196f3\", marginRight: \"10px\" }}\n                                    onClick={async () => {\n                                        setStartAppLoading(true);\n                                        try {\n                                            const response = await AppStart({ app_id: currentApp.app_id });\n                                            if (response.data.Error) {\n                                                navigate(\"/error\")\n                                            }\n                                            else {\n                                                props.onDataChange();\n                                            }\n                                        }\n                                        catch (error) {\n                                            navigate(\"/error-500\");\n                                        }\n                                        finally {\n                                            setStartAppLoading(false);\n                                        }\n                                    }}\n                                >\n                                    {\n                                        startAppLoading ?\n                                            <Spinner className=\"spinner-border-sm noti-icon\" />\n                                            :\n                                            <i className=\"dripicons-media-play noti-icon\"></i>\n                                    }\n                                </button>\n                            </OverlayTrigger>\n                        }\n                        {\n                            currentApp.status === \"running\" &&\n                            <OverlayTrigger\n                                key=\"bottom2\"\n                                placement=\"bottom\"\n                                overlay={\n                                    <Tooltip id=\"tooltip-bottom\">\n                                        Stop App\n                                    </Tooltip>\n                                }>\n                                <button\n                                    className=\"nav-link dropdown-toggle end-bar-toggle arrow-none btn btn-link shadow-none\"\n                                    style={{ color: \"#fff\", backgroundColor: \"#2196f3\", padding: \"5px 10px\", borderRadius: \"3px\", borderColor: \"#2196f3\", marginRight: \"10px\" }}\n                                    onClick={async () => {\n                                        setStopAppLoading(true);\n                                        try {\n                                            const response = await AppStop({ app_id: currentApp.app_id });\n                                            if (response.data.Error) {\n                                                navigate(\"/error\");\n                                            }\n                                            else {\n                                                props.onDataChange();\n                                            }\n                                        }\n                                        catch (error) {\n                                            navigate(\"/error-500\");\n                                        }\n                                        finally {\n                                            setStopAppLoading(false);\n                                        }\n                                    }}\n                                >\n                                    {\n                                        stopAppLoading ?\n                                            <Spinner className=\"spinner-border-sm noti-icon\" />\n                                            :\n                                            <i className=\"dripicons-power noti-icon\"></i>\n                                    }\n                                </button>\n                            </OverlayTrigger>\n                        }\n                        <OverlayTrigger\n                            key=\"bottom3\"\n                            placement=\"bottom\"\n                            overlay={\n                                <Tooltip id=\"tooltip-bottom\">\n                                    Restart App\n                                </Tooltip>\n                            }>\n                            <button\n                                className=\"nav-link dropdown-toggle end-bar-toggle arrow-none btn btn-link shadow-none\"\n                                style={{ color: \"#fff\", backgroundColor: \"#2196f3\", padding: \"5px 10px\", borderRadius: \"3px\", borderColor: \"#2196f3\", marginRight: \"10px\" }}\n                                onClick={async () => {\n                                    try {\n                                        setRestartAppLoading(true);\n                                        const response = await AppRestart({ app_id: currentApp.app_id });\n                                        if (response.data.Error) {\n                                            navigate(\"/error\");\n                                        }\n                                        else {\n                                            props.onDataChange();\n                                        }\n                                    }\n                                    catch (error) {\n                                        navigate(\"/error-500\");\n                                    }\n                                    finally {\n                                        setRestartAppLoading(false);\n                                    }\n                                }}\n                            >\n                                {\n                                    restartAppLoading ?\n                                        <Spinner className=\"spinner-border-sm noti-icon\" />\n                                        :\n                                        <i className=\"dripicons-clockwise noti-icon\"></i>\n                                }\n                            </button>\n                        </OverlayTrigger>\n                        {\n                            currentApp.status === \"running\" &&\n                            <OverlayTrigger\n                                key=\"bottom4\"\n                                placement=\"bottom\"\n                                overlay={\n                                    <Tooltip id=\"tooltip-bottom\">\n                                        Terminal\n                                    </Tooltip>\n                                }>\n                                <Link to={{ pathname: '/terminal', search: `?id=${currentApp.customer_name}` }}\n                                    style={{ color: \"#fff\", backgroundColor: \"#2196f3\", padding: \"5px 10px\", borderRadius: \"3px\", borderColor: \"#2196f3\", marginRight: \"10px\" }}\n                                    target=\"_blank\">\n                                    <i className=\"dripicons-code noti-icon\"></i>{' '}\n                                </Link>\n                            </OverlayTrigger>\n                        }\n                        {\n                            <OverlayTrigger\n                                key=\"bottom5\"\n                                placement=\"bottom\"\n                                overlay={\n                                    <Tooltip id=\"tooltip-bottom\">\n                                        Documentation\n                                    </Tooltip>\n                                }>\n                                <a href={'https://support.websoft9.com/docs/' + currentApp.app_name}\n                                    style={{ color: \"#fff\", backgroundColor: \"#2196f3\", padding: \"5px 10px\", borderRadius: \"3px\", borderColor: \"#2196f3\", marginRight: \"10px\" }}\n                                    target=\"_blank\">\n                                    <i className=\"dripicons-document noti-icon\"></i>{' '}\n                                </a>\n                            </OverlayTrigger>\n                        }\n                    </div>\n                </div>\n            </Modal.Header>\n            <Modal.Body className=\"row\">\n                <Tab.Container defaultActiveKey={_(\"Overview\")}>\n                    <Col sm={2} className=\"mb-2 mb-sm-0\">\n                        <Nav variant=\"pills\" className=\"flex-column\">\n                            {tabContents.map((tab, index) => {\n                                const renderElement = () => {\n                                    return (\n                                        <Nav.Item key={index}>\n                                            <Nav.Link as={Link} to=\"#\" eventKey={tab.title}>\n                                                <i\n                                                    className={classnames(\n                                                        tab.icon,\n                                                        'd-md-none',\n                                                        'd-block',\n                                                        'me-1'\n                                                    )}></i>\n                                                <span className=\"d-none d-md-block\">{tab.title}</span>\n                                            </Nav.Link>\n                                        </Nav.Item>\n                                    );\n                                }\n                                if (tab.title === \"Terminal\") {\n                                    if (currentApp.status === \"running\") {\n                                        return renderElement();\n                                    }\n                                } else {\n                                    return renderElement();\n                                }\n                            })}\n                        </Nav>\n                    </Col>\n                    <Col sm={10}>\n                        <Tab.Content style={{ height: \"100%\" }}>\n                            {tabContents.map((tab, index) => {\n                                return (\n                                    <Tab.Pane eventKey={tab.title} id={tab.id} key={index} style={{ height: \"100%\" }}>\n                                        <Row style={{ height: \"100%\" }}>\n                                            <Col sm=\"12\" style={{ height: tab.title === \"Terminal\" ? \"600px\" : \"\" }}>\n                                                {tab.text}\n                                            </Col>\n                                        </Row>\n                                    </Tab.Pane>\n                                );\n                            })}\n                        </Tab.Content>\n                    </Col>\n                </Tab.Container>\n            </Modal.Body>\n        </Modal >\n    );\n}\n\nexport default AppDetailModal;","import MuiAlert from '@mui/material/Alert';\nimport Snackbar from '@mui/material/Snackbar';\nimport classNames from 'classnames';\nimport cockpit from 'cockpit';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Alert, Button, Col, Dropdown, Modal, Row } from 'react-bootstrap';\nimport { Link, Navigate, useNavigate } from 'react-router-dom';\nimport DefaultImg from '../assets/images/default.png';\nimport FormInput from '../components/FormInput';\nimport Spinner from '../components/Spinner';\nimport { AppList, AppRestart, AppStart, AppStop, AppUninstall } from '../helpers';\nimport AppDetailModal from './appdetail';\n\nconst _ = cockpit.gettext;\n\nconst MyMuiAlert = React.forwardRef(function Alert(props, ref) {\n    return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\n});\n\n//应用状态为failed时，显示错误消息\nconst ErrorInfoModal = (props): React$Element<React$FragmentType> => {\n    return (\n        <Modal show={props.showConform} onHide={props.onClose} size=\"lg\" scrollable=\"true\" backdrop=\"static\">\n            <Modal.Header onHide={props.onClose} closeButton className={classNames('modal-colored-header', 'bg-danger')}>\n                <h4>This is the error message for {props.app.customer_name}</h4>\n            </Modal.Header>\n            <Modal.Body className=\"row\" >\n                {\n                    props.app.status_reason &&\n                    <>\n                        <span style={{ margin: \"10px 0px\" }}> <b>{\"Code: \"}</b>{props.app.status_reason.Code} </span>\n                        <span style={{ margin: \"10px 0px\" }}> <b>{\"Message: \"}</b>{props.app.status_reason.Message} </span>\n                        <span style={{ margin: \"10px 0px\" }}> <b>{\"Detail: \"}</b>{props.app.status_reason.Detail} </span>\n                    </>\n                }\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"light\" onClick={props.onClose}>\n                    Close\n                </Button>\n                <Button variant=\"light\" onClick={() => window.open('https://www.websoft9.com/ticket', '_blank')}>\n                    Support\n                </Button>\n            </Modal.Footer>\n        </Modal >\n    );\n}\n\n//删除应用弹窗\nconst UninstallConform = (props): React$Element<React$FragmentType> => {\n    const navigate = useNavigate(); //用于页面跳转\n    const [disable, setDisable] = useState(false);//用于按钮禁用\n    const [showAlert, setShowAlert] = useState(false); //用于是否显示错误提示\n    const [alertMessage, setAlertMessage] = useState(\"\");//用于显示错误提示消息\n\n    function closeAllModals() {\n        //关闭所有弹窗\n        props.onClose();\n        props.onDataChange();\n    }\n\n    return (\n        <Modal show={props.showConform} onHide={props.onClose} size=\"lg\"\n            scrollable=\"true\" backdrop=\"static\">\n            <Modal.Header onHide={props.onClose} className={classNames('modal-colored-header', 'bg-warning')}>\n                <h4>Remove {props.app.customer_name}</h4>\n            </Modal.Header>\n            <Modal.Body className=\"row\" >\n                <span style={{ margin: \"10px 0px\" }}>This will immediately remove {props.app.customer_name} and remove all its data.</span>\n                <div>\n                    {showAlert && <Alert variant=\"danger\" className=\"my-2\">\n                        {alertMessage}\n                    </Alert>}\n                </div>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"light\" onClick={props.onClose}>\n                    Close\n                </Button>{\" \"}\n                <Button disabled={disable} variant=\"warning\" onClick={async () => {\n                    try {\n                        setDisable(true);\n                        //调用卸载应用接口\n                        const response = await AppUninstall({ app_id: props.app.app_id });\n                        if (response.data.Error) {\n                            setShowAlert(true);\n                            setAlertMessage(response.data.Error.Message);\n                        }\n                        else {\n                            closeAllModals(); //关闭弹窗并更新数据\n                        }\n                    }\n                    catch (error) {\n                        navigate(\"/error-500\");\n                    }\n                }}>\n                    {disable && <Spinner className=\"spinner-border-sm me-1\" tag=\"span\" color=\"white\" />} Uninstall\n                </Button>\n            </Modal.Footer>\n        </Modal >\n    );\n}\n\nconst MyApps = (): React$Element<React$FragmentType> => {\n    const [showModal, setShowModal] = useState(false); //用于显示状态为running或exited弹窗的标识\n    const [showUninstallConform, setShowUninstallConform] = useState(false); //用于显示状态为failed时显示确定删除的弹窗\n    const [showErrorInfo, setShowErrorInfo] = useState(false); //用于显示状态为failed时显示错误消息的弹窗\n    const [showOtherAppModal, setShowOtherAppModal] = useState(false); //用于显示非websoft9应用的的弹窗的标识\n    const [isLoading, setIsLoading] = useState(false); //用于非官方应用启动 停止 重启 卸载时，显示加载中\n    const [showAlert, setShowAlert] = useState(false); //用于是否显示错误提示\n    const [alertMessage, setAlertMessage] = useState(\"\");//用于显示错误提示消息\n    const [alertType, setAlertType] = useState(\"\");//用于确定弹窗的类型：error\\success\n\n    const [selectedApp, setSelectedApp] = useState(null); //用于存储被选中的产品（点击应用详情时使用）\n    const [apps, setApps] = useState([]); //所有“我的应用”\n    const [statusApps, setStatusApps] = useState([]);//根据状态筛选的应用\n    const [searchString, setSearchString] = useState(\"\");//用户输入的筛选字符串\n    const [selectedStatus, setSelectedStatus] = useState(\"all\"); //用于存储用户筛选应用状态的标识\n    const [progressId, setProgressId] = useState([]); //用于存储当前正在安装的应用ID，用于做进度查询的参数\n\n    const selectedAppRef = useRef(selectedApp);\n    const navigate = useNavigate(); //用于页面跳转\n\n    const [code, setCode] = useState(0);\n    const [error, setError] = useState(null);\n    const [errorDetails, setErrorDetails] = useState(null)\n    const [loading, setLoading] = useState(false);\n\n    const menuItems = (appStatus) => {\n        return [\n            { label: 'Stop', icon: 'dripicons-power noti-icon', condition: appStatus === \"running\" },\n            { label: 'Start', icon: 'dripicons-media-play noti-icon', condition: appStatus === \"exited\" },\n            { label: 'Restart', icon: 'dripicons-clockwise noti-icon', condition: appStatus === \"running\" || appStatus === \"exited\" },\n            {\n                label: 'Uninstall',\n                icon: 'dripicons-trash noti-icon',\n                variant: 'text-danger',\n                hasDivider: true,\n                condition: true\n            }\n        ]\n    };\n\n    let timer;\n\n    //获取所有已安装的App(只执行一次)\n    const getAllAppsOnce = () => {\n        AppList().then((response) => {\n            if (response.data.Error) {\n                setCode(response.data.Error.Code);\n                setError(response.data.Error.Message);\n                setErrorDetails(response.data.Error.Details);\n            }\n            else {\n                const newApps = response.data.ResponseData;\n                setApps(newApps);\n                if (selectedAppRef.current) {\n                    const updatedApp = newApps.find(\n                        (app) => app.app_id === selectedAppRef.current.app_id\n                    );\n                    setSelectedApp(updatedApp);\n                }\n            }\n            setLoading(false);\n        }).catch((error) => {\n            <Navigate to=\"/error-500\" />\n        });\n    }\n\n    //获取所有已安装的App(每隔5秒执行一次)\n    const getAllApps = () => {\n        setLoading(true);\n        //调用接口获取已经安装应用\n        timer = setInterval(() => {\n            AppList().then((response) => {\n                if (response.data.Error) {\n                    setCode(response.data.Error.Code);\n                    setError(response.data.Error.Message);\n                    setErrorDetails(response.data.Error.Details);\n                }\n                else {\n                    const newApps = response.data.ResponseData;\n                    setApps(newApps);\n                    if (selectedAppRef.current) {\n                        const updatedApp = newApps.find(\n                            (app) => app.app_id === selectedAppRef.current.app_id\n                        );\n                        setSelectedApp(updatedApp);\n                    }\n                }\n                setLoading(false);\n            }).catch((error) => {\n                <Navigate to=\"/error-500\" />\n            });\n        }, 5000);\n        return () => clearInterval(timer);\n    }\n\n    useEffect(() => {\n        getAllAppsOnce();\n    }, []);\n\n    useEffect(() => {\n        getAllApps();\n    }, []);\n\n    useEffect(() => {\n        selectedAppRef.current = selectedApp;\n    }, [selectedApp]);\n\n    useEffect(() => {\n        return () => clearInterval(timer);  //用于清除定时器\n    }, []);\n\n    if (loading) return <Spinner className='dis_mid' />;\n    if (code) return <p>Code : ${code} </p>;\n    if (error) return <p>Error : ${error} </p>;\n\n    //用于根据应用“状态”过滤应用\n    const changeStatus = (selectedStatus) => {\n        setSelectedStatus(selectedStatus);\n    };\n\n    //用于根据用户输入搜索应用\n    const handleInputChange = (searchString) => {\n        setSearchString(searchString);\n    }\n\n    //用于用户点击应用详情\n    const handleClick = (app) => {\n        setSelectedApp(app);\n        setShowModal(true);\n    };\n\n    //用于应用为failed时删除应用\n    const deleteApp = (app) => {\n        setSelectedApp(app);\n        setShowUninstallConform(true);\n    };\n\n    //用于应用为failed时显示错误信息弹窗\n    const showError = (app) => {\n        setSelectedApp(app);\n        setShowErrorInfo(true);\n    };\n\n    //用于关闭显示错误消息弹窗\n    const cancelShowError = () => {\n        setShowErrorInfo(false);\n    };\n\n    //用于取消删除应用\n    const canceldeleteApp = () => {\n        setShowUninstallConform(false);\n    };\n\n    //用于关闭应用详情的弹窗\n    const handleClose = () => {\n        setShowModal(false);\n        setSelectedApp(null);\n    };\n\n    const handleAlertClose = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        setShowAlert(false);\n        setAlertMessage(\"\");\n    };\n\n    //用于立即刷新数据\n    const handleDataChange = () => {\n        getAllAppsOnce();\n    };\n\n    //非官方应用的操作\n    const appActions = {\n        \"Stop\": {\n            api: AppStop,\n        },\n        \"Start\": {\n            api: AppStart,\n        },\n        \"Restart\": {\n            api: AppRestart,\n        },\n        \"Uninstall\": {\n            api: AppUninstall,\n        }\n    }\n\n    //处理非官方应用的操作\n    const NoOfficialAppClick = async (label, app) => {\n        if (label === \"Uninstall\") {\n            setSelectedApp(app);\n            setShowUninstallConform(true);\n            return;\n        }\n\n        setIsLoading(true);\n        try {\n            const response = await appActions[label].api({ app_id: app.app_id });\n            if (response.data.Error) {\n                setShowAlert(true);\n                setAlertType(\"error\")\n                setAlertMessage(response.data.Error.Message);\n            }\n            else {\n                setShowAlert(true);\n                setAlertType(\"success\")\n                setAlertMessage(\"执行成功\");\n                handleDataChange();\n            }\n        }\n        catch (error) {\n            navigate(\"/error-500\");\n        }\n        finally {\n            setIsLoading(false);\n        }\n    }\n\n    return (\n        <>\n            <Row className=\"mb-2\" style={{ display: \"flex\", alignItems: \"center\" }}>\n                <Col sm={2}>\n                    <span style={{ fontSize: \"36px\" }}>{_(\"My Apps\")}</span>\n                </Col>\n                <Col sm={3}>\n                    <FormInput\n                        value={selectedStatus}\n                        name=\"select\"\n                        type=\"select\"\n                        className=\"form-select\"\n                        key=\"select\"\n                        onChange={(e) => changeStatus(e.target.value)} >\n                        <option value=\"all\">{_(\"All States\")}</option>\n                        <option value=\"installing\">installing</option>\n                        <option value=\"running\">running</option>\n                        <option value=\"exited\">exited</option>\n                        <option value=\"restarting\">restarting</option>\n                        <option value=\"failed\">failed</option>\n                    </FormInput>\n                </Col>\n                <Col sm={6}>\n                    <Col xs=\"auto\">\n                        <FormInput type=\"text\" name=\"search\"\n                            placeholder=\"Search for apps like WordPress, Dropbox, Slack, Trello, …\"\n                            onChange={(e) => handleInputChange(e.target.value)}\n                        />\n                    </Col>\n                </Col>\n                <Col sm={1}>\n                    <Button variant=\"primary\" style={{ float: \"right\" }} onClick={() => {\n                        window.location.reload(false);\n                    }}>{_(\"Refresh\")}</Button>\n                </Col>\n            </Row>\n            {\n                [true, false].map((official_app) => {\n                    // 过滤出符合条件的apps\n                    const filteredApps = apps.filter((app) => selectedStatus === 'all' || app.status === selectedStatus)\n                        .filter((app) => app.official_app === official_app)\n                        .filter((app) => app.customer_name.includes(searchString));\n                    // 如果有数据，返回一个Row组件，否则返回null\n                    return filteredApps.length > 0 ? (\n                        <Row>\n                            {/* 根据official_app的值显示不同的标题 */}\n                            <h4 style={official_app ? {} : { paddingTop: \"10px\" }}>{official_app ? _(\"Websoft9's Apps\") : _(\"Other Apps\")}</h4>\n                            {filteredApps.map((app, i) => (\n                                <Col xxl={2} md={6} key={app.app_id + i} className=\"appstore-item\">\n                                    <div className='appstore-item-content highlight' style={{ textAlign: \"center\" }}>\n                                        {\n                                            (!official_app && (app.status === \"running\" || app.status === \"exited\")) &&\n                                            <Dropdown style={{ float: \"right\" }}>\n                                                <Dropdown.Toggle as={Link} to=\"#\" className=\"arrow-none card-drop\">\n                                                    {isLoading ? <Spinner className=\"spinner-border-sm noti-icon\" /> : <i className=\"dripicons-gear noti-icon\" />}\n                                                </Dropdown.Toggle>\n                                                <Dropdown.Menu align=\"end\">\n                                                    {(menuItems(app.status) || []).map((item, index) => {\n                                                        return (\n                                                            <React.Fragment key={index}>\n                                                                {item.condition && item.hasDivider && <Dropdown.Divider as=\"div\" />}\n                                                                {\n                                                                    item.condition && <Dropdown.Item className={classNames(item.variant ? item.variant : '')}\n                                                                        onClick={() => NoOfficialAppClick(item.label, app)}\n                                                                    >\n                                                                        {item.icon && <i className={classNames(item.icon, 'me-1')}></i>}\n                                                                        {/* {isLoading ? <Spinner className=\"spinner-border-sm noti-icon\" /> : item.icon && <i className={classNames(item.icon, 'me-1')}></i>} */}\n                                                                        {item.label}\n                                                                    </Dropdown.Item>\n                                                                }\n                                                            </React.Fragment>\n                                                        );\n                                                    })}\n                                                </Dropdown.Menu>\n                                            </Dropdown>\n                                        }\n                                        {\n                                            (official_app && (app.status === \"running\" || app.status === \"exited\")) &&\n                                            <>\n                                                <div className=\"float-end arrow-none card-drop p-0\" onClick={() => { handleClick(app) }}>\n                                                    <i className=\"dripicons-gear noti-icon\"></i>\n                                                </div>\n                                                <div style={{ clear: \"both\" }}></div>\n                                            </>\n                                        }\n                                        {\n                                            (official_app && app.status === \"installing\") &&\n                                            <>\n                                                <div className=\"float-end arrow-none card-drop p-0\">\n                                                    <i className=\"dripicons-empty noti-icon\"></i>\n                                                </div>\n                                                <div style={{ clear: \"both\" }}></div>\n                                            </>\n                                        }\n                                        {\n                                            app.status === 'failed' &&\n                                            <>\n                                                <div className=\"float-end arrow-none card-drop p-0\" >\n                                                    <i className=\"dripicons-information noti-icon\" style={{ paddingRight: \"10px\" }} onClick={() => { showError(app) }}></i>\n                                                    <i className=\"dripicons-trash noti-icon\" onClick={() => { deleteApp(app) }}></i>\n                                                </div>\n                                                <div style={{ clear: \"both\" }}></div>\n                                            </>\n                                        }\n                                        <div>\n                                            <img\n                                                src={app.image_url}\n                                                alt={app.app_name}\n                                                className=\"app-icon\"\n                                                style={{ margin: \"20px 10px 20px 10px\" }}\n                                                onError={(e) => (e.target.src = DefaultImg)}\n                                            />\n                                        </div>\n                                        <div>\n                                            <h3 className=\"appstore-item-content-title\" style={{ color: \"#2196f3\" }}>\n                                                {app.customer_name}\n                                            </h3>\n                                            <div style={{ color: app.status === 'failed' ? 'red' : 'inherit', display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n                                                {app.status && app.status === \"installing\" && <Spinner className=\"spinner-border-sm m-2\" />}\n                                                {\" \"}\n                                                <div className=\"m-2\">{app.status}</div>\n                                            </div>\n                                        </div>\n                                    </div >\n                                </Col>\n                            ))}\n                        </Row >\n                    ) : null;\n                })\n            }\n            {\n                showModal && <AppDetailModal current_app={selectedApp} showFlag={showModal} onClose={handleClose} onDataChange={handleDataChange} />\n            }\n            {\n                showUninstallConform &&\n                <UninstallConform showConform={showUninstallConform} onClose={canceldeleteApp} app={selectedApp} onDataChange={handleDataChange} />\n            }\n            {\n                showErrorInfo &&\n                <ErrorInfoModal showConform={showErrorInfo} onClose={cancelShowError} app={selectedApp} />\n            }\n            {\n                showAlert &&\n                <Snackbar open={showAlert} autoHideDuration={5000} onClose={handleAlertClose} anchorOrigin={{ vertical: 'top', horizontal: 'center' }}>\n                    <MyMuiAlert onClose={handleAlertClose} severity={alertType} sx={{ width: '100%' }}>\n                        {alertMessage}\n                    </MyMuiAlert>\n                </Snackbar>\n            }\n        </>\n    );\n};\n\nexport default MyApps;\n"],"names":["PasswordInput","_ref","name","placeholder","refCallback","errors","register","className","value","readOnly","_useState","useState","_useState2","_slicedToArray","showPassword","setShowPassword","_jsx","_Fragment","children","_jsxs","InputGroup","Form","_objectSpread","type","id","as","ref","r","isInvalid","autoComplete","defaultValue","classNames","onClick","_ref2","label","labelClassName","containerClass","otherProps","_objectWithoutProperties","_excluded","comp","Spinner","props","Tag","tag","color","size","role","concat","_defineProperty","defaultProps","axios","response","error","message","status","Navigate","data","Promise","reject","api","_createClass","APICore","_classCallCheck","get","url","params","queryString","Object","keys","map","key","join","create","AppInstall","AppList","AppUninstall","AppStop","AppStart","AppRestart","AppDomainList","MyMuiAlert","React","MuiAlert","elevation","variant","navigate","useNavigate","domains","setDomains","_useState3","_useState4","refreshDisable","setRefreshDisable","_useState5","_useState6","showAlert","setShowAlert","_useState7","_useState8","alertMessage","setAlertMessage","_useState9","_useState10","alertType","setAlertType","getDomains","_asyncToGenerator","_regeneratorRuntime","mark","_callee","responseData","resturnDomains","wrap","_context","prev","next","app_id","sent","Error","Message","ResponseData","domain","domainValue","isEditable","t0","stop","apply","arguments","useEffect","handleAlertClose","event","reason","Card","Row","Col","xs","md","Button","length","_toConsumableArray","disabled","_callee2","_context2","href","target","row","index","FormInput","onChange","e","newRows","handleChange","splice","deleteRow","document","getElementsByName","test","saveRow","editRow","Snackbar","open","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","severity","sx","width","appLogs","setAppLog","messagesEndRef","useRef","current","scrollIntoView","behavior","getAppLog","cockpit","projectName","customer_name","then","content","catch","exception","timer","setInterval","clearInterval","ScrollToBottom","style","_props$data","_props$data$config","_props$data2","_props$data2$config","isOpen","setIsOpen","Link","to","Collapse","in","htmlFor","column","config","user_name","password","UninstallConform","disable","setDisable","Modal","show","showConform","onHide","scrollable","backdrop","backgroundColor","closeButton","app","margin","Alert","onCloseFatherModal","onDataChange","showUninstallConform","setShowUninstallConform","sm","fontWeight","marginBottom","float","_callee3","_context3","_","current_app","currentApp","setCurrentApp","startAppLoading","setStartAppLoading","stopAppLoading","setStopAppLoading","restartAppLoading","setRestartAppLoading","tabContents","title","icon","text","AppOverview","AppAccess","AppLogs","Uninstall","showFlag","dialogClassName","padding","display","alignItems","src","image_url","alt","onError","DefaultImg","marginTop","flexGrow","justifyContent","OverlayTrigger","placement","overlay","Tooltip","borderRadius","borderColor","marginRight","finish","pathname","search","app_name","Tab","defaultActiveKey","Nav","tab","renderElement","eventKey","classnames","height","ErrorInfoModal","status_reason","Code","Detail","window","showModal","setShowModal","_useState11","_useState12","showErrorInfo","setShowErrorInfo","_useState13","_useState14","_useState15","_useState16","isLoading","setIsLoading","_useState17","_useState18","_useState19","_useState20","_useState21","_useState22","_useState23","_useState24","selectedApp","setSelectedApp","_useState25","_useState26","apps","setApps","_useState27","_useState28","_useState29","_useState30","searchString","setSearchString","_useState31","_useState32","selectedStatus","setSelectedStatus","_useState33","_useState34","selectedAppRef","_useState35","_useState36","code","setCode","_useState37","_useState38","setError","_useState39","_useState40","setErrorDetails","_useState41","_useState42","loading","setLoading","getAllAppsOnce","Details","newApps","updatedApp","find","handleDataChange","appActions","NoOfficialAppClick","abrupt","_x","_x2","fontSize","changeStatus","handleInputChange","location","reload","official_app","filteredApps","filter","includes","paddingTop","i","xxl","textAlign","Dropdown","align","appStatus","condition","hasDivider","item","handleClick","clear","paddingRight","showError","deleteApp","AppDetailModal"],"sourceRoot":""}
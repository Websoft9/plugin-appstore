{"version":3,"file":"static/js/745.a450e151.chunk.js","mappings":"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","sources":["components/FormInput.js","components/Spinner.js","helpers/api/apiCore.js","helpers/api/appManager.js","pages/appdetailtabs/applogin.js","pages/appdetailtabs/applogs.js","pages/appdetailtabs/backups.js","pages/appdetailtabs/uninstall.js","pages/appdetail.js","pages/myapps.js"],"sourcesContent":["// @flow\nimport classNames from 'classnames';\nimport React, { useState } from 'react';\nimport { Form, InputGroup } from 'react-bootstrap';\n\n/* Password Input */\nconst PasswordInput = ({ name, placeholder, refCallback, errors, register, className, value, readOnly }) => {\n    const [showPassword, setShowPassword] = useState(false);\n\n    return (\n        <>\n            <InputGroup className=\"mb-0\">\n                <Form.Control\n                    type={showPassword ? 'text' : 'password'}\n                    placeholder={placeholder}\n                    name={name}\n                    id={name}\n                    as=\"input\"\n                    ref={(r) => {\n                        if (refCallback) refCallback(r);\n                    }}\n                    className={className}\n                    isInvalid={errors && errors[name] ? true : false}\n                    {...(register ? register(name) : {})}\n                    autoComplete={name}\n                    defaultValue={value}\n                    readOnly={readOnly}\n                />\n                <div\n                    className={classNames('input-group-text', 'input-group-password', {\n                        'show-password': showPassword,\n                    })}\n                    data-password={showPassword ? 'true' : 'false'}>\n                    <span\n                        className=\"password-eye\"\n                        onClick={() => {\n                            setShowPassword(!showPassword);\n                        }}></span>\n                </div>\n            </InputGroup>\n        </>\n    );\n};\n\ntype FormInputProps = {\n    label?: string,\n    type?: string,\n    name?: string,\n    placeholder?: string,\n    register?: any,\n    errors?: any,\n    className?: string,\n    labelClassName?: string,\n    containerClass?: string,\n    refCallback?: any,\n    children?: any,\n};\n\nconst FormInput = ({\n    label,\n    type,\n    name,\n    value,\n    readOnly,\n    placeholder,\n    register,\n    errors,\n    className,\n    labelClassName,\n    containerClass,\n    refCallback,\n    children,\n    ...otherProps\n}: FormInputProps): React$Element<React$FragmentType> => {\n    // handle input type\n    const comp = type === 'textarea' ? 'textarea' : type === 'select' ? 'select' : 'input';\n\n    return (\n        <>\n            {type === 'hidden' ? (\n                <input type={type} name={name} {...(register ? register(name) : {})} {...otherProps} />\n            ) : (\n                <>\n                    {type === 'password' ? (\n                        <>\n                            <Form.Group className={containerClass}>\n                                {label ? (\n                                    <>\n                                        {' '}\n                                        <Form.Label className={labelClassName}>{label}</Form.Label> {children}{' '}\n                                    </>\n                                ) : null}\n                                <PasswordInput\n                                    name={name}\n                                    placeholder={placeholder}\n                                    refCallback={refCallback}\n                                    errors={errors}\n                                    register={register}\n                                    className={className}\n                                    value={value}\n                                    readOnly={readOnly}\n                                />\n\n                                {errors && errors[name] ? (\n                                    <Form.Control.Feedback type=\"invalid\" className=\"d-block\">\n                                        {errors[name]['message']}\n                                    </Form.Control.Feedback>\n                                ) : null}\n                            </Form.Group>\n                        </>\n                    ) : (\n                        <>\n                            {type === 'select' ? (\n                                <>\n                                    <Form.Group className={containerClass}>\n                                        {label ? <Form.Label className={labelClassName}>{label}</Form.Label> : null}\n\n                                        <Form.Select\n                                            type={type}\n                                            label={label}\n                                            name={name}\n                                            id={name}\n                                            ref={(r) => {\n                                                if (refCallback) refCallback(r);\n                                            }}\n                                            comp={comp}\n                                            className={className}\n                                            isInvalid={errors && errors[name] ? true : false}\n                                            {...(register ? register(name) : {})}\n                                            {...otherProps}>\n                                            {children}\n                                        </Form.Select>\n\n                                        {errors && errors[name] ? (\n                                            <Form.Control.Feedback type=\"invalid\">\n                                                {errors[name]['message']}\n                                            </Form.Control.Feedback>\n                                        ) : null}\n                                    </Form.Group>\n                                </>\n                            ) : (\n                                <>\n                                    {type === 'checkbox' || type === 'radio' ? (\n                                        <>\n                                            <Form.Group className={containerClass}>\n                                                <Form.Check\n                                                    type={type}\n                                                    label={label}\n                                                    name={name}\n                                                    id={name}\n                                                    ref={(r) => {\n                                                        if (refCallback) refCallback(r);\n                                                    }}\n                                                    className={className}\n                                                    isInvalid={errors && errors[name] ? true : false}\n                                                    {...(register ? register(name) : {})}\n                                                    {...otherProps}\n                                                />\n\n                                                {errors && errors[name] ? (\n                                                    <Form.Control.Feedback type=\"invalid\">\n                                                        {errors[name]['message']}\n                                                    </Form.Control.Feedback>\n                                                ) : null}\n                                            </Form.Group>\n                                        </>\n                                    ) : (\n                                        <Form.Group className={containerClass}>\n                                            {label ? <Form.Label className={labelClassName}>{label}</Form.Label> : null}\n\n                                            <Form.Control\n                                                type={type}\n                                                placeholder={placeholder}\n                                                name={name}\n                                                id={name}\n                                                as={comp}\n                                                ref={(r) => {\n                                                    if (refCallback) refCallback(r);\n                                                }}\n                                                className={className}\n                                                isInvalid={errors && errors[name] ? true : false}\n                                                {...(register ? register(name) : {})}\n                                                {...otherProps}\n                                                autoComplete={name}>\n                                                {children ? children : null}\n                                            </Form.Control>\n\n                                            {errors && errors[name] ? (\n                                                <Form.Control.Feedback type=\"invalid\">\n                                                    {errors[name]['message']}\n                                                </Form.Control.Feedback>\n                                            ) : null}\n                                        </Form.Group>\n                                    )}\n                                </>\n                            )}\n                        </>\n                    )}\n                </>\n            )}\n        </>\n    );\n};\n\nexport default FormInput;\n","// @flow\nimport React from 'react';\nimport classNames from 'classnames';\n\ntype SpinnerProps = {\n    tag?: string,\n    className?: string,\n    size?: 'lg' | 'md' | 'sm',\n    type?: 'bordered' | 'grow',\n    color?: string,\n    children?: any,\n};\n\n/**\n * Spinner\n */\nconst Spinner = (props: SpinnerProps): React$Element<any> => {\n    const children = props.children || null;\n    const Tag = props.tag || 'div';\n    const color = props.color || 'secondary';\n    const size = props.size || '';\n\n    return (\n        <Tag\n            role=\"status\"\n            className={classNames(\n                {\n                    'spinner-border': props.type === 'bordered',\n                    'spinner-grow': props.type === 'grow',\n                },\n                [`text-${color}`],\n                { [`avatar-${size}`]: size },\n                props.className\n            )}>\n            {children}\n        </Tag>\n    );\n};\n\nSpinner.defaultProps = {\n    tag: 'div',\n    type: 'bordered',\n};\n\nexport default Spinner;\n","import axios from 'axios';\nimport { Navigate } from \"react-router-dom\";\n//import config from '../../config';\n\n// content type\naxios.defaults.headers.post['Content-Type'] = 'application/json';\naxios.defaults.headers.get['Content-Type'] = 'application/json';\naxios.defaults.headers = {\n    'Cache-Control': 'no-cache',\n    'Pragma': 'no-cache',\n    'Expires': '0',\n};\n//axios.defaults.baseURL = config.API_URL;\n\n// intercepting to capture errors\naxios.interceptors.response.use(\n    (response) => {\n        return response;\n    },\n    (error) => {\n        // Any status codes that falls outside the range of 2xx cause this function to trigger\n        let message;\n\n        if (error && error.response && error.response.status === 404) {\n            <Navigate to=\"/error-404\" />\n        } else if (error && error.response && error.response.status === 500) {\n            <Navigate to=\"/error-500\" />\n        } else {\n            message = error.response && error.response.data ? error.response.data['message'] : error.message || error;\n            return Promise.reject(message);\n        }\n    }\n);\n\nclass APICore {\n    /**\n     * Fetches data from given url\n     */\n    get = (url, params) => {\n        let response;\n        if (params) {\n            var queryString = params\n                ? Object.keys(params)\n                    .map((key) => key + '=' + params[key])\n                    .join('&')\n                : '';\n            response = axios.get(`${url}?${queryString}`, params);\n        } else {\n            response = axios.get(`${url}`, params);\n        }\n        return response;\n    };\n\n    /**\n     * post given data to url\n     */\n    create = (url, data) => {\n        return axios.post(url, data);\n    };\n}\n\nexport { APICore };\n","import { APICore } from './apiCore';\n\nconst api = new APICore();\n\n//App 安装\nfunction AppInstall(params: any): Promise<any> {\n    const baseUrl = '/AppManage/AppInstall';\n    return api.get(`${baseUrl}`, params);\n}\n\n//App 列表查询\nfunction AppList(params: any): Promise<any> {\n    const baseUrl = '/AppManage/AppList';\n    return api.get(`${baseUrl}`, params);\n}\n\n//App 卸载\nfunction AppUninstall(params: any): Promise<any> {\n    const baseUrl = '/AppManage/AppUninstall';\n    return api.get(`${baseUrl}`, params);\n}\n\n//App 停止\nfunction AppStop(params: any): Promise<any> {\n    const baseUrl = '/AppManage/AppStop';\n    return api.get(`${baseUrl}`, params);\n}\n\n//App 启动\nfunction AppStart(params: any): Promise<any> {\n    const baseUrl = '/AppManage/AppStart';\n    return api.get(`${baseUrl}`, params);\n}\n\n//App 重启\nfunction AppRestart(params: any): Promise<any> {\n    const baseUrl = '/AppManage/AppRestart';\n    return api.get(`${baseUrl}`, params);\n}\n\n//App 状态查询\nfunction AppStatus(params: any): Promise<any> {\n    const baseUrl = '/AppManage/AppStatus';\n    return api.get(`${baseUrl}`, params);\n}\n\nexport { AppInstall, AppList, AppUninstall, AppStop, AppStart, AppRestart, AppStatus };\n\n","import React from 'react';\nimport { Card, Col, Form, Row } from 'react-bootstrap';\nimport { useNavigate } from 'react-router-dom';\nimport AdminImg from '../../assets/images/admin-settings.png';\nimport FormInput from '../../components/FormInput';\n\nconst AppLogin = (props): React$Element<React$FragmentType> => {\n    const navigate = useNavigate(); //用于页面跳转\n    return (\n        <>\n            <Card>\n                <Card.Body className=\"profile-user-box\">\n                    <Row>\n                        <Col sm={8}>\n                            <Row className=\"align-items-center\">\n                                <Col className=\"col-auto\">\n                                    <div className=\"avatar-lg\">\n                                        <img\n                                            src={AdminImg}\n                                            style={{ height: '100px' }}\n                                            alt=\"\"\n                                            className=\"rounded-circle img-thumbnail\"\n                                        />\n                                    </div>\n                                </Col>\n                                <Col className=\"avatar-lg\">\n                                    <div>\n                                        <h4 className=\"mt-1 mb-1\">{props.data.url}</h4>\n                                    </div>\n                                </Col>\n                            </Row>\n                        </Col>\n                        <Col sm={4} style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"flex-end\" }}>\n                            <div className=\"text-center mt-sm-0 mt-3 text-sm-end\">\n                                <button type=\"button\" className=\"btn btn-light\" onClick={() => window.open(props.data.url, '_blank')}>\n                                    <i className=\"mdi mdi-account-edit me-1\"></i>Go to\n                                </button>\n                            </div>\n                        </Col>\n                    </Row>\n                </Card.Body>\n            </Card>\n            <Card style={{ marginTop: \"10px\" }}>\n                <Card.Body className=\"profile-user-box\">\n                    <Row>\n                        <Col sm={8}>\n                            <Row className=\"align-items-center\">\n                                <Col className=\"col-auto\">\n                                    <div className=\"avatar-lg\">\n                                        <img\n                                            src={AdminImg}\n                                            style={{ height: '100px' }}\n                                            alt=\"\"\n                                            className=\"rounded-circle img-thumbnail\"\n                                        />\n                                    </div>\n                                </Col>\n                                <Col className=\"avatar-lg\">\n                                    <div>\n                                        <Form.Group as={Row} className=\"mb-3\">\n                                            <Form.Label htmlFor=\"username\" column md={3}>\n                                                Username\n                                            </Form.Label>\n                                            <Col md={9}>\n                                                <Form.Control\n                                                    type=\"text\"\n                                                    name=\"username\"\n                                                    id=\"username\"\n                                                    defaultValue={props.data.user_name}\n                                                    readOnly\n                                                />\n                                            </Col>\n                                        </Form.Group>\n\n                                        <Form.Group as={Row} className=\"mb-3\">\n                                            <Form.Label htmlFor=\"password\" column md={3}>\n                                                Password\n                                            </Form.Label>\n                                            <Col md={9}>\n                                                <FormInput\n                                                    type=\"password\"\n                                                    name=\"password\"\n                                                    containerClass={'mb-3'}\n                                                    value={props.data.password}\n                                                    readOnly\n                                                />\n                                            </Col>\n                                        </Form.Group>\n                                    </div>\n                                </Col>\n                            </Row>\n                        </Col>\n                        <Col sm={4} style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"flex-end\" }}>\n                            <div className=\"text-center mt-sm-0 mt-3 text-sm-end\">\n                                <button type=\"button\" className=\"btn btn-light\" onClick={() => window.open(props.data.admin_url, '_blank')}>\n                                    <i className=\"mdi mdi-account-edit me-1\"></i> Go to login\n                                </button>\n                            </div>\n                        </Col>\n                    </Row>\n\n                </Card.Body>\n\n            </Card >\n        </>\n    );\n}\n\nexport default AppLogin;","import cockpit from \"cockpit\";\nimport { default as React, useEffect, useRef, useState } from 'react';\nimport ScrollToBottom from 'react-scroll-to-bottom';\n\nconst AppLogs = (props): React$Element<React$FragmentType> => {\n    const [appLogs, setAppLog] = useState(\"\");\n\n    const messagesEndRef = useRef(null);\n\n    useEffect(() => {\n        messagesEndRef.current.scrollIntoView({ behavior: \"auto\" });\n    }, []);\n\n    const getAppLog = () => {\n        cockpit.spawn([\"docker\", \"compose\", \"--project-name\", props.projectName.customer_name, \"logs\", \"--tail\", \"200\"]).then(content => {\n            setAppLog(content);\n        }).catch(exception => {\n\n        });\n    };\n\n    useEffect(() => {\n        const timer = setInterval(getAppLog, 1000);\n        return () => clearInterval(timer);\n    }, [getAppLog]);\n\n\n    return (\n        <ScrollToBottom>\n            <div style={{ \"height\": \"600px\", \"width\": \"100%\" }}>\n                <pre style={{ \"white-space\": \"pre-wrap\", \"word-wrap\": \"break-word\" }}>\n                    {appLogs}\n                </pre>\n                <div ref={messagesEndRef} />\n            </div>\n        </ScrollToBottom>\n    );\n}\n\nexport default AppLogs;","import React from 'react';\nimport { Button, Card, Col, Row, Table } from 'react-bootstrap';\n\nconst Backups = (props): React$Element<React$FragmentType> => {\n    const records = [\n        { id: 1, firstName: 'Mark', lastName: 'Otto', username: '@mdo' },\n        { id: 2, firstName: 'Jacob', lastName: 'Thornton', username: '@fat' },\n        { id: 3, firstName: 'Dave', lastName: 'G', username: '@dave' },\n        { id: 4, firstName: 'Nik', lastName: 'N', username: '@nikn' },\n        { id: 5, firstName: 'Shreyu', lastName: 'Navadiya', username: '@sn' },\n    ];\n\n    return (\n        <>\n            <Row className=\"mb-2\">\n                <Col sm={12}>\n                    <label className=\"me-1\" style={{ fontWeight: \"bolder\", marginBottom: \"5px\" }}>Backups</label>\n                    <p>\n                        Backups are complete snapshots of the app. You can use app backups to restore or clone this app.\n                    </p>\n                    <Row>\n                        <Col xs={12}>\n                            <Card>\n                                <Card.Body>\n                                    <Table className=\"mb-0\">\n                                        <thead>\n                                            <tr>\n                                                <th>#</th>\n                                                <th>First Name</th>\n                                                <th>Last Name</th>\n                                                <th>Username</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {records.map((record, index) => {\n                                                return (\n                                                    <tr key={index}>\n                                                        <th scope=\"row\">{record.id}</th>\n                                                        <td>{record.firstName}</td>\n                                                        <td>{record.lastName}</td>\n                                                        <td>{record.username}</td>\n                                                    </tr>\n                                                );\n                                            })}\n                                        </tbody>\n                                    </Table>\n                                </Card.Body>\n                            </Card>\n                        </Col>\n                    </Row>\n\n                    <Button variant=\"primary\" style={{ float: 'right' }} >\n                        Create Backup\n                    </Button>\n                </Col>\n            </Row>\n            <hr></hr>\n            <Row className=\"mb-2\">\n                <Col sm={12}>\n                    <label className=\"me-1\" style={{ fontWeight: \"bolder\", marginBottom: \"5px\" }}>Automatic Backups</label>\n                    <p>\n                        Cloudron periodically creates a backup based on the backup settings.\n                    </p>\n                    <p>\n                        Automatic Backups is currently enabled.\n                    </p>\n                    <Button variant=\"primary\" style={{ float: \"right\" }} >\n                        Enable Automatic Backups\n                    </Button>\n                </Col>\n            </Row>\n        </>\n    );\n}\n\nexport default Backups;","\nimport React, { useState } from 'react';\nimport { Alert, Button, Col, Modal, Row } from 'react-bootstrap';\nimport { useNavigate } from 'react-router-dom';\nimport Spinner from '../../components/Spinner';\nimport { AppStart, AppStop, AppUninstall } from '../../helpers';\n\n//卸载应用时的确定/取消弹窗\nconst UninstallConform = (props) => {\n    const navigate = useNavigate(); //用于页面跳转\n    const [disable, setDisable] = useState(false);//用于按钮禁用\n    const [showAlert, setShowAlert] = useState(false); //用于是否显示错误提示\n    const [alertMessage, setAlertMessage] = useState(\"\");//用于显示错误提示消息\n\n    function closeAllModals() {\n        //关闭弹窗\n        props.onClose();\n        props.onCloseFatherModal();\n\n        //更新主页APP的数据\n        props.onDataChange();\n    }\n\n    return (\n        <Modal show={props.showConform} onHide={props.onClose} size=\"lg\"\n            scrollable=\"true\" backdrop=\"static\" style={{ backgroundColor: \"rgba(0,0,0,0.8)\" }}>\n            <Modal.Header onHide={props.onClose} closeButton style={{ border: \"none\" }}>\n                <h4>Uninstall {props.app.customer_name}</h4>\n            </Modal.Header>\n            <Modal.Body className=\"row\" >\n                <span style={{ margin: \"10px 0px\" }}>This will immediately uninstall {props.app.customer_name} and remove all its data.</span>\n                <div>\n                    {showAlert && <Alert variant=\"danger\" className=\"my-2\">\n                        {alertMessage}\n                    </Alert>}\n                </div>\n            </Modal.Body>\n            <Modal.Footer style={{ border: \"none\" }}>\n                <Button variant=\"light\" onClick={props.onClose}>\n                    Close\n                </Button>{\" \"}\n                <Button disabled={disable} variant=\"warning\" onClick={async () => {\n                    try {\n                        setDisable(true);\n                        //调用卸载应用接口\n                        const response = await AppUninstall({ app_id: props.app.app_id });\n                        if (response.data.Error) {\n                            setShowAlert(true);\n                            setAlertMessage(response.data.Error.Message);\n                        }\n                        else {\n                            //window.location.reload(true); //刷新当前页面\n                            closeAllModals(); //关闭弹窗并更新数据\n                        }\n                    }\n                    catch (error) {\n                        navigate(\"/error-500\");\n                    }\n                }}>\n                    {disable && <Spinner className=\"spinner-border-sm me-1\" tag=\"span\" color=\"white\" />} Uninstall\n                </Button>\n            </Modal.Footer>\n        </Modal >\n    );\n}\n\n//卸载应用选项卡\nconst Uninstall = (props): React$Element<React$FragmentType> => {\n    const [showUninstallConform, setShowUninstallConform] = useState(false);//用于确认卸载弹窗的标识\n    const [disable, setDisable] = useState(false);//用于按钮禁用\n    const navigate = useNavigate(); //用于页面跳转\n\n    //用于显示确定/取消卸载应用的弹窗\n    const handleClick = () => {\n        setShowUninstallConform(true);\n    };\n    //用于关闭确定/取消卸载应用的弹窗\n    const handleClose = () => {\n        setShowUninstallConform(false);\n    };\n\n    return (\n        <>\n            <Row className=\"mb-2\">\n                <Col sm={12}>\n                    <label className=\"me-1\" style={{ fontWeight: \"bolder\", marginBottom: \"5px\" }}>Start / Stop</label>\n                    <p>\n                        Apps can be stopped to conserve server resources instead of uninstalling.\n                        Future app backups will not include any app changes between now and the most recent app backup.\n                        For this reason, it is recommended to trigger a backup before stopping the app.\n                    </p>\n                    {props.data.status === \"running\" ?\n                        <Button variant=\"secondary\" style={{ float: 'right' }} disabled={disable} onClick={async () => {\n                            try {\n                                setDisable(true);\n                                //调用应用停止接口\n                                const response = await AppStop({ app_id: props.data.app_id });\n                                if (response.data.Error) {\n                                    navigate(\"/error\")\n                                }\n                                else {\n                                    setDisable(false);\n                                    props.onDataChange(props.data.app_id);\n                                }\n                            }\n                            catch (error) {\n                                navigate(\"/error-500\");\n                            }\n                        }}>\n                            {disable && <Spinner className=\"spinner-border-sm me-1\" tag=\"span\" color=\"white\" />} Stop App\n                        </Button>\n                        :\n                        <Button variant=\"primary\" style={{ float: 'right' }} disabled={disable} onClick={async () => {\n                            setDisable(true);\n                            try {\n                                const response = await AppStart({ app_id: props.data.app_id });\n                                if (response.data.Error) {\n                                    navigate(\"/error\")\n                                }\n                                else {\n                                    setDisable(false);\n                                    props.onDataChange(props.data.app_id);\n                                }\n                            }\n                            catch (error) {\n                                navigate(\"/error-500\");\n                            }\n                        }}>\n                            {disable && <Spinner className=\"spinner-border-sm me-1\" tag=\"span\" color=\"white\" />} Start App\n                        </Button>\n                    }\n                </Col>\n            </Row>\n            <hr></hr>\n            <Row className=\"mb-2\">\n                <Col sm={12}>\n                    <label className=\"me-1\" style={{ fontWeight: \"bolder\", marginBottom: \"5px\" }}>Uninstall</label>\n                    <p>\n                        This will uninstall the app immediately and remove all its data. The app will be inaccessible.\n                        App backups are not removed and will be cleaned up based on the backup policy.\n                        You can resurrect this app from an existing app backup using the following instructions.\n                    </p>\n                    <Button variant=\"warning\" style={{ float: \"right\" }} onClick={() => { handleClick() }} >\n                        Uninstall\n                    </Button>\n                </Col>\n            </Row>\n            {showUninstallConform && <UninstallConform showConform={showUninstallConform} onClose={handleClose}\n                app={props.data} onDataChange={props.onDataChange} onCloseFatherModal={props.onCloseFatherModal} />}\n        </>\n    );\n}\n\nexport default Uninstall;","import classnames from \"classnames\";\nimport cockpit from 'cockpit';\nimport React, { useEffect, useState } from 'react';\nimport { Col, Modal, Nav, OverlayTrigger, Row, Tab, Tooltip } from 'react-bootstrap';\nimport { Link, useNavigate } from 'react-router-dom';\nimport DefaultImg from '../assets/images/default.png';\nimport { AppRestart, AppStart, AppStop } from '../helpers';\nimport AppLogin from './appdetailtabs/applogin';\nimport AppLogs from './appdetailtabs/applogs';\nimport Backups from './appdetailtabs/backups';\nimport Uninstall from './appdetailtabs/uninstall';\n\nconst _ = cockpit.gettext;\n\nconst AppDetailModal = (props): React$Element<React$FragmentType> => {\n    // const [disable, setDisable] = useState(false);//用于按钮禁用\n    const [currentApp, setCurrentApp] = useState(props.current_app);\n    const navigate = useNavigate(); //用于页面跳转\n\n    useEffect(() => {\n        setCurrentApp(props.current_app);\n    }, [props.current_app]);\n\n    const tabContents = [\n        {\n            id: '1',\n            title: _(\"Domain\"),\n            icon: 'mdi mdi-home-variant',\n            text: 'Home - Food truck quinoa dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Donec quam felis, ultricies nec, pellentesque eu, pretium quis, sem. Nulla consequat massa quis enim.',\n        },\n        {\n            id: '2',\n            title: _(\"Account\"),\n            icon: 'mdi mdi-account-circle',\n            text: <AppLogin data={currentApp} />,\n        },\n        {\n            id: '3',\n            title: _(\"Backups\"),\n            icon: 'mdi mdi-account-circle',\n            text: <Backups data={currentApp} />,\n        },\n        {\n            id: '4',\n            title: _(\"Updates\"),\n            icon: 'mdi mdi-account-circle',\n            text: 'Profile - Food truck quinoa dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Donec quam felis, ultricies nec, pellentesque eu, pretium quis, sem. Nulla consequat massa quis enim.',\n        },\n        {\n            id: '5',\n            title: _(\"Logs\"),\n            icon: 'mdi mdi-account-circle',\n            text: <AppLogs projectName={currentApp} />,\n        },\n        {\n            id: '6',\n            title: _(\"Uninstall\"),\n            icon: 'mdi mdi-cog-outline',\n            text: <Uninstall data={currentApp}\n                onDataChange={props.onDataChange} onCloseFatherModal={props.onClose} />,\n        },\n    ];\n\n    return (\n        currentApp && <Modal show={props.showFlag} onHide={props.onClose} size=\"lg\" scrollable=\"true\" dialogClassName=\"modal-full-width\" >\n            <Modal.Header onHide={props.onClose} closeButton>\n                <div style={{ padding: \"10px\", display: \"flex\", width: \"100%\", alignItems: \"center\" }}>\n                    <div className='appstore-item-content-icon col-same-height'>\n                        <img\n                            src={currentApp.image_url}\n                            alt=\"\"\n                            className=\"app-icon\"\n                            onError={(e) => (e.target.src = DefaultImg)}\n                        />\n                    </div>\n                    <div className='col-same-height'>\n                        <h4 className=\"appstore-item-content-title\" style={{ marginTop: \"5px\" }}>\n                            {currentApp.customer_name}\n                        </h4>\n                        <h5 className=\"appstore-item-content-title\" style={{ marginTop: \"5px\" }}>\n                            {currentApp.status}\n                        </h5>\n                    </div>\n                    <div className='col-same-height' style={{ flexGrow: 1, display: \"flex\", justifyContent: \"flex-end\", alignItems: \"center\" }}>\n                        {\n                            currentApp.status === \"exited\" &&\n                            <OverlayTrigger\n                                key=\"bottom1\"\n                                placement=\"bottom\"\n                                overlay={\n                                    <Tooltip id=\"tooltip-bottom\">\n                                        Start App\n                                    </Tooltip>\n                                }>\n                                <button\n                                    className=\"nav-link dropdown-toggle end-bar-toggle arrow-none btn btn-link shadow-none\"\n                                    style={{ color: \"#fff\", backgroundColor: \"#2196f3\", padding: \"5px 10px\", borderRadius: \"3px\", borderColor: \"#2196f3\", marginRight: \"10px\" }}\n                                    onClick={async () => {\n                                        try {\n                                            const response = await AppStart({ app_id: currentApp.app_id });\n                                            if (response.data.Error) {\n                                                navigate(\"/error\")\n                                            }\n                                            else {\n                                                props.onDataChange();\n                                            }\n                                        }\n                                        catch (error) {\n                                            navigate(\"/error-500\");\n                                        }\n                                    }}\n                                >\n                                    <i className=\"dripicons-media-play noti-icon\"></i>{' '}\n                                </button>\n                            </OverlayTrigger>\n                        }\n                        {\n                            currentApp.status === \"running\" &&\n                            <OverlayTrigger\n                                key=\"bottom2\"\n                                placement=\"bottom\"\n                                overlay={\n                                    <Tooltip id=\"tooltip-bottom\">\n                                        Stop App\n                                    </Tooltip>\n                                }>\n                                <button\n                                    className=\"nav-link dropdown-toggle end-bar-toggle arrow-none btn btn-link shadow-none\"\n                                    style={{ color: \"#fff\", backgroundColor: \"#2196f3\", padding: \"5px 10px\", borderRadius: \"3px\", borderColor: \"#2196f3\", marginRight: \"10px\" }}\n                                    onClick={async () => {\n                                        try {\n                                            const response = await AppStop({ app_id: currentApp.app_id });\n                                            if (response.data.Error) {\n                                                navigate(\"/error\");\n                                            }\n                                            else {\n                                                props.onDataChange();\n                                            }\n                                        }\n                                        catch (error) {\n                                            navigate(\"/error-500\");\n                                        }\n                                    }}\n                                >\n                                    <i className=\"dripicons-media-stop noti-icon\"></i>{' '}\n                                </button>\n                            </OverlayTrigger>\n                        }\n                        <OverlayTrigger\n                            key=\"bottom3\"\n                            placement=\"bottom\"\n                            overlay={\n                                <Tooltip id=\"tooltip-bottom\">\n                                    Restart App\n                                </Tooltip>\n                            }>\n                            <button\n                                className=\"nav-link dropdown-toggle end-bar-toggle arrow-none btn btn-link shadow-none\"\n                                style={{ color: \"#fff\", backgroundColor: \"#2196f3\", padding: \"5px 10px\", borderRadius: \"3px\", borderColor: \"#2196f3\", marginRight: \"10px\" }}\n                                onClick={async () => {\n                                    try {\n                                        const response = await AppRestart({ app_id: currentApp.app_id });\n                                        if (response.data.Error) {\n                                            navigate(\"/error\");\n                                        }\n                                        else {\n                                            props.onDataChange();\n                                        }\n                                    }\n                                    catch (error) {\n                                        navigate(\"/error-500\");\n                                    }\n                                }}\n                            >\n                                <i className=\"dripicons-clockwise noti-icon\"></i>{' '}\n                            </button>\n                        </OverlayTrigger>\n                        {\n                            currentApp.status === \"running\" &&\n                            <OverlayTrigger\n                                key=\"bottom4\"\n                                placement=\"bottom\"\n                                overlay={\n                                    <Tooltip id=\"tooltip-bottom\">\n                                        Terminal\n                                    </Tooltip>\n                                }>\n                                <Link to={{ pathname: '/terminal', search: `?id=${currentApp.customer_name}` }}\n                                    style={{ color: \"#fff\", backgroundColor: \"#2196f3\", padding: \"5px 10px\", borderRadius: \"3px\", borderColor: \"#2196f3\", marginRight: \"10px\" }}\n                                    target=\"_blank\">\n                                    <i className=\"dripicons-code noti-icon\"></i>{' '}\n                                </Link>\n                            </OverlayTrigger>\n                        }\n                        {\n                            <OverlayTrigger\n                                key=\"bottom5\"\n                                placement=\"bottom\"\n                                overlay={\n                                    <Tooltip id=\"tooltip-bottom\">\n                                        Documentation\n                                    </Tooltip>\n                                }>\n                                <a href={'https://support.websoft9.com/docs/' + currentApp.app_name}\n                                    style={{ color: \"#fff\", backgroundColor: \"#2196f3\", padding: \"5px 10px\", borderRadius: \"3px\", borderColor: \"#2196f3\", marginRight: \"10px\" }}\n                                    target=\"_blank\">\n                                    <i className=\"dripicons-document noti-icon\"></i>{' '}\n                                </a>\n                            </OverlayTrigger>\n                        }\n                    </div>\n                </div>\n            </Modal.Header>\n            <Modal.Body className=\"row\">\n                <Tab.Container defaultActiveKey=\"Domain\">\n                    <Col sm={2} className=\"mb-2 mb-sm-0\">\n                        <Nav variant=\"pills\" className=\"flex-column\">\n                            {tabContents.map((tab, index) => {\n                                const renderElement = () => {\n                                    return (\n                                        <Nav.Item key={index}>\n                                            <Nav.Link as={Link} to=\"#\" eventKey={tab.title}>\n                                                <i\n                                                    className={classnames(\n                                                        tab.icon,\n                                                        'd-md-none',\n                                                        'd-block',\n                                                        'me-1'\n                                                    )}></i>\n                                                <span className=\"d-none d-md-block\">{tab.title}</span>\n                                            </Nav.Link>\n                                        </Nav.Item>\n                                    );\n                                }\n                                if (tab.title === \"Terminal\") {\n                                    if (currentApp.status === \"running\") {\n                                        return renderElement();\n                                    }\n                                } else {\n                                    return renderElement();\n                                }\n                            })}\n                        </Nav>\n                    </Col>\n                    <Col sm={10}>\n                        <Tab.Content style={{ height: \"100%\" }}>\n                            {tabContents.map((tab, index) => {\n                                return (\n                                    <Tab.Pane eventKey={tab.title} id={tab.id} key={index} style={{ height: \"100%\" }}>\n                                        <Row style={{ height: \"100%\" }}>\n                                            <Col sm=\"12\" style={{ height: tab.title === \"Terminal\" ? \"600px\" : \"\" }}>\n                                                {tab.text}\n                                            </Col>\n                                        </Row>\n                                    </Tab.Pane>\n                                );\n                            })}\n                        </Tab.Content>\n                    </Col>\n                </Tab.Container>\n            </Modal.Body>\n        </Modal >\n    );\n}\n\nexport default AppDetailModal;","import cockpit from 'cockpit';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Alert, Button, Col, Modal, Row } from 'react-bootstrap';\nimport { Navigate, useNavigate } from 'react-router-dom';\nimport DefaultImg from '../assets/images/default.png';\nimport FormInput from '../components/FormInput';\nimport Spinner from '../components/Spinner';\nimport { AppList, AppUninstall } from '../helpers';\nimport AppDetailModal from './appdetail';\n\nconst _ = cockpit.gettext;\n\n//应用状态为failed时，显示错误消息\nconst ErrorInfoModal = (props): React$Element<React$FragmentType> => {\n    return (\n        <Modal show={props.showConform} onHide={props.onClose} size=\"lg\" scrollable=\"true\" backdrop=\"static\">\n            <Modal.Header onHide={props.onClose} closeButton>\n                <h4>This is the error message for {props.app.customer_name}</h4>\n            </Modal.Header>\n            <Modal.Body className=\"row\" >\n                {\n                    props.app.status_reason &&\n                    <>\n                        <span style={{ margin: \"10px 0px\" }}> <b>{\"Code: \"}</b>{props.app.status_reason.Code} </span>\n                        <span style={{ margin: \"10px 0px\" }}> <b>{\"Message: \"}</b>{props.app.status_reason.Message} </span>\n                        <span style={{ margin: \"10px 0px\" }}> <b>{\"Detail: \"}</b>{props.app.status_reason.Detail} </span>\n                    </>\n                }\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"light\" onClick={props.onClose}>\n                    Close\n                </Button>\n            </Modal.Footer>\n        </Modal >\n    );\n}\n\n//删除应用弹窗\nconst UninstallConform = (props): React$Element<React$FragmentType> => {\n    const navigate = useNavigate(); //用于页面跳转\n    const [disable, setDisable] = useState(false);//用于按钮禁用\n    const [showAlert, setShowAlert] = useState(false); //用于是否显示错误提示\n    const [alertMessage, setAlertMessage] = useState(\"\");//用于显示错误提示消息\n\n    function closeAllModals() {\n        //关闭所有弹窗\n        props.onClose();\n        props.onDataChange();\n    }\n\n    return (\n        <Modal show={props.showConform} onHide={props.onClose} size=\"lg\"\n            scrollable=\"true\" backdrop=\"static\">\n            <Modal.Header onHide={props.onClose} closeButton style={{ border: \"none\" }}>\n                <h4>Remove {props.app.customer_name}</h4>\n            </Modal.Header>\n            <Modal.Body className=\"row\" >\n                <span style={{ margin: \"10px 0px\" }}>This will immediately remove {props.app.customer_name}</span>\n                <div>\n                    {showAlert && <Alert variant=\"danger\" className=\"my-2\">\n                        {alertMessage}\n                    </Alert>}\n                </div>\n            </Modal.Body>\n            <Modal.Footer style={{ border: \"none\" }}>\n                <Button variant=\"light\" onClick={props.onClose}>\n                    Close\n                </Button>{\" \"}\n                <Button disabled={disable} variant=\"warning\" onClick={async () => {\n                    try {\n                        setDisable(true);\n                        //调用卸载应用接口\n                        const response = await AppUninstall({ app_id: props.app.app_id });\n                        if (response.data.Error) {\n                            setShowAlert(true);\n                            setAlertMessage(response.data.Error.Message);\n                        }\n                        else {\n                            closeAllModals(); //关闭弹窗并更新数据\n                        }\n                    }\n                    catch (error) {\n                        navigate(\"/error-500\");\n                    }\n                }}>\n                    {disable && <Spinner className=\"spinner-border-sm me-1\" tag=\"span\" color=\"white\" />} Remove\n                </Button>\n            </Modal.Footer>\n        </Modal >\n    );\n}\n\nconst MyApps = (): React$Element<React$FragmentType> => {\n    const [showModal, setShowModal] = useState(false); //用于显示状态为running或exited弹窗的标识\n    const [showUninstallConform, setShowUninstallConform] = useState(false); //用于显示状态为failed时显示确定删除的弹窗\n    const [showErrorInfo, setShowErrorInfo] = useState(false); //用于显示状态为failed时显示错误消息的弹窗\n    const [showOtherAppModal, setShowOtherAppModal] = useState(false); //用于显示非websoft9应用的的弹窗的标识\n\n    const [selectedApp, setSelectedApp] = useState(null); //用于存储被选中的产品（点击应用详情时使用）\n    const [apps, setApps] = useState([]); //所有“我的应用”\n    const [statusApps, setStatusApps] = useState([]);//根据状态筛选的应用\n    const [searchString, setSearchString] = useState(\"\");//用户输入的筛选字符串\n    const [selectedStatus, setSelectedStatus] = useState(\"all\"); //用于存储用户筛选应用状态的标识\n    const [progressId, setProgressId] = useState([]); //用于存储当前正在安装的应用ID，用于做进度查询的参数\n\n    const selectedAppRef = useRef(selectedApp);\n\n    const [code, setCode] = useState(0);\n    const [error, setError] = useState(null);\n    const [errorDetails, setErrorDetails] = useState(null)\n    const [loading, setLoading] = useState(false);\n\n    let timer;\n\n    //获取所有已安装的App(只执行一次)\n    const getAllAppsOnce = () => {\n        AppList().then((response) => {\n            if (response.data.Error) {\n                setCode(response.data.Error.Code);\n                setError(response.data.Error.Message);\n                setErrorDetails(response.data.Error.Details);\n            }\n            else {\n                const newApps = response.data.ResponseData;\n                setApps(newApps);\n                if (selectedAppRef.current) {\n                    const updatedApp = newApps.find(\n                        (app) => app.app_id === selectedAppRef.current.app_id\n                    );\n                    setSelectedApp(updatedApp);\n                }\n            }\n            setLoading(false);\n        }).catch((error) => {\n            <Navigate to=\"/error-500\" />\n        });\n    }\n\n    //获取所有已安装的App(每隔5秒执行一次)\n    const getAllApps = () => {\n        setLoading(true);\n        //调用接口获取已经安装应用\n        timer = setInterval(() => {\n            AppList().then((response) => {\n                if (response.data.Error) {\n                    setCode(response.data.Error.Code);\n                    setError(response.data.Error.Message);\n                    setErrorDetails(response.data.Error.Details);\n                }\n                else {\n                    const newApps = response.data.ResponseData;\n                    setApps(newApps);\n                    if (selectedAppRef.current) {\n                        const updatedApp = newApps.find(\n                            (app) => app.app_id === selectedAppRef.current.app_id\n                        );\n                        setSelectedApp(updatedApp);\n                    }\n                }\n                setLoading(false);\n            }).catch((error) => {\n                <Navigate to=\"/error-500\" />\n            });\n        }, 5000);\n        return () => clearInterval(timer);\n    }\n\n    useEffect(() => {\n        getAllAppsOnce();\n    }, []);\n\n    useEffect(() => {\n        //getAllApps();\n    }, []);\n\n    useEffect(() => {\n        selectedAppRef.current = selectedApp;\n    }, [selectedApp]);\n\n    useEffect(() => {\n        return () => clearInterval(timer);  //用于清除定时器\n    }, []);\n\n    if (loading) return <Spinner className='dis_mid' />;\n    if (code) return <p>Code : ${code} </p>;\n    if (error) return <p>Error : ${error} </p>;\n\n    //用于根据应用“状态”过滤应用\n    const changeStatus = (selectedStatus) => {\n        setSelectedStatus(selectedStatus);\n    };\n\n    //用于根据用户输入搜索应用\n    const handleInputChange = (searchString) => {\n        setSearchString(searchString);\n    }\n\n    //用于用户点击应用详情\n    const handleClick = (app) => {\n        setSelectedApp(app);\n        setShowModal(true);\n    };\n\n    //用于应用为failed时删除应用\n    const deleteApp = (app) => {\n        setSelectedApp(app);\n        setShowUninstallConform(true);\n    };\n\n    //用于应用为failed时显示错误信息弹窗\n    const showError = (app) => {\n        setSelectedApp(app);\n        setShowErrorInfo(true);\n    };\n\n    //用于关闭显示错误消息弹窗\n    const cancelShowError = () => {\n        setShowErrorInfo(false);\n    };\n\n    //用于取消删除应用\n    const canceldeleteApp = () => {\n        setShowUninstallConform(false);\n    };\n\n    //用于关闭应用详情的弹窗\n    const handleClose = () => {\n        setShowModal(false);\n        setSelectedApp(null);\n    };\n\n    //用于立即刷新数据\n    const handleDataChange = () => {\n        getAllAppsOnce();\n    };\n\n    return (\n        <>\n            <Row className=\"mb-2\" style={{ display: \"flex\", alignItems: \"center\" }}>\n                <Col sm={2}>\n                    <span style={{ fontSize: \"36px\" }}>{_(\"My Apps\")}</span>\n                </Col>\n                <Col sm={3}>\n                    <FormInput\n                        value={selectedStatus}\n                        name=\"select\"\n                        type=\"select\"\n                        className=\"form-select\"\n                        key=\"select\"\n                        onChange={(e) => changeStatus(e.target.value)} >\n                        <option value=\"all\">{_(\"All States\")}</option>\n                        <option value=\"installing\">installing</option>\n                        <option value=\"running\">running</option>\n                        <option value=\"exited\">exited</option>\n                        <option value=\"restarting\">restarting</option>\n                        <option value=\"failed\">failed</option>\n                    </FormInput>\n                </Col>\n                <Col sm={6}>\n                    <Col xs=\"auto\">\n                        <FormInput type=\"text\" name=\"search\"\n                            placeholder=\"Search for apps like WordPress, Dropbox, Slack, Trello, …\"\n                            onChange={(e) => handleInputChange(e.target.value)}\n                        />\n                    </Col>\n                </Col>\n                <Col sm={1}>\n                    <Button variant=\"primary\" style={{ float: \"right\" }} onClick={() => {\n                        window.location.reload(false);\n                    }}>{_(\"Refresh\")}</Button>\n                </Col>\n            </Row>\n            {\n                [true, false].map((official_app) => {\n                    // 过滤出符合条件的apps\n                    const filteredApps = apps.filter((app) => selectedStatus === 'all' || app.status === selectedStatus)\n                        .filter((app) => app.official_app === official_app)\n                        .filter((app) => app.customer_name.includes(searchString));\n                    // 如果有数据，返回一个Row组件，否则返回null\n                    return filteredApps.length > 0 ? (\n                        <Row>\n                            {/* 根据official_app的值显示不同的标题 */}\n                            <h4 style={official_app ? {} : { paddingTop: \"10px\" }}>{official_app ? _(\"Websoft9's Apps\") : _(\"Other Apps\")}</h4>\n                            {filteredApps.map((app, i) => (\n                                <Col xxl={2} md={6} key={app.app_id + i} className=\"appstore-item\">\n                                    <div className='appstore-item-content highlight' style={{ textAlign: \"center\" }}>\n                                        {\n                                            (app.status === \"running\" || app.status === \"exited\") &&\n                                            <div className=\"float-end arrow-none card-drop p-0\" onClick={() => { handleClick(app) }}>\n                                                <i className=\"dripicons-gear noti-icon\"></i>\n                                            </div>\n                                        }\n                                        {\n                                            app.status === 'failed' &&\n                                            <div className=\"float-end arrow-none card-drop p-0\" onClick={() => { deleteApp(app) }}>\n                                                <i className=\"dripicons-trash noti-icon\"></i>\n                                            </div>\n                                        }\n                                        {\n                                            app.status === 'failed' &&\n                                            <div className=\"float-end arrow-none card-drop p-0\" onClick={() => { showError(app) }}>\n                                                <i className=\"dripicons-information noti-icon\" style={{ paddingRight: \"10px\" }}></i>\n                                            </div>\n                                        }\n                                        <div>\n                                            <img\n                                                src={app.image_url}\n                                                alt={app.app_name}\n                                                className=\"app-icon\"\n                                                style={{ margin: \"30px 10px 30px 10px\" }}\n                                                onError={(e) => (e.target.src = DefaultImg)}\n                                            />\n                                        </div>\n                                        <div>\n                                            <h3 className=\"appstore-item-content-title\" style={{ color: \"#2196f3\" }}>\n                                                {app.customer_name}\n                                            </h3>\n                                            <div style={{ color: app.status === 'failed' ? 'red' : 'inherit', display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n                                                {app.status && app.status === \"installing\" && <Spinner className=\"spinner-border-sm m-2\" />}\n                                                {\" \"}\n                                                <div className=\"m-2\">{app.status}</div>\n                                            </div>\n                                        </div>\n                                    </div >\n                                </Col >\n                            ))}\n                        </Row >\n                    ) : null;\n                })\n            }\n            {\n                showModal && <AppDetailModal current_app={selectedApp} showFlag={showModal} onClose={handleClose} onDataChange={handleDataChange} />\n            }\n            {\n                showUninstallConform &&\n                <UninstallConform showConform={showUninstallConform} onClose={canceldeleteApp} app={selectedApp} onDataChange={handleDataChange} />\n            }\n            {\n                showErrorInfo &&\n                <ErrorInfoModal showConform={showErrorInfo} onClose={cancelShowError} app={selectedApp} />\n            }\n        </>\n    );\n};\n\nexport default MyApps;\n"],"names":["PasswordInput","_ref","name","placeholder","refCallback","errors","register","className","value","readOnly","_useState","useState","_useState2","_slicedToArray","showPassword","setShowPassword","_jsx","_Fragment","children","_jsxs","InputGroup","Form","_objectSpread","type","id","as","ref","r","isInvalid","autoComplete","defaultValue","classNames","onClick","_ref2","label","labelClassName","containerClass","otherProps","_objectWithoutProperties","_excluded","comp","Spinner","props","Tag","tag","color","size","role","concat","_defineProperty","defaultProps","axios","response","error","message","status","Navigate","data","Promise","reject","api","_createClass","APICore","_classCallCheck","get","url","params","queryString","Object","keys","map","key","join","create","AppInstall","AppList","AppUninstall","AppStop","AppStart","AppRestart","useNavigate","Card","Row","Col","sm","src","AdminImg","style","height","alt","display","alignItems","justifyContent","window","open","marginTop","htmlFor","column","md","user_name","FormInput","password","admin_url","appLogs","setAppLog","messagesEndRef","useRef","useEffect","current","scrollIntoView","behavior","getAppLog","cockpit","projectName","customer_name","then","content","catch","exception","timer","setInterval","clearInterval","ScrollToBottom","fontWeight","marginBottom","xs","Table","firstName","lastName","username","record","index","scope","Button","variant","float","UninstallConform","navigate","disable","setDisable","_useState3","_useState4","showAlert","setShowAlert","_useState5","_useState6","alertMessage","setAlertMessage","Modal","show","showConform","onHide","onClose","scrollable","backdrop","backgroundColor","closeButton","border","app","margin","Alert","disabled","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","app_id","sent","Error","Message","onCloseFatherModal","onDataChange","t0","stop","_useState7","_useState8","showUninstallConform","setShowUninstallConform","_useState9","_useState10","_callee2","_context2","_callee3","_context3","_","current_app","currentApp","setCurrentApp","tabContents","title","icon","text","AppLogin","Backups","AppLogs","Uninstall","showFlag","dialogClassName","padding","width","image_url","onError","e","target","DefaultImg","flexGrow","OverlayTrigger","placement","overlay","Tooltip","borderRadius","borderColor","marginRight","Link","to","pathname","search","href","app_name","Tab","defaultActiveKey","Nav","tab","renderElement","eventKey","classnames","ErrorInfoModal","status_reason","Code","Detail","showModal","setShowModal","_useState11","_useState12","showErrorInfo","setShowErrorInfo","_useState13","_useState14","_useState15","_useState16","selectedApp","setSelectedApp","_useState17","_useState18","apps","setApps","_useState19","_useState20","_useState21","_useState22","searchString","setSearchString","_useState23","_useState24","selectedStatus","setSelectedStatus","_useState25","_useState26","selectedAppRef","_useState27","_useState28","code","setCode","_useState29","_useState30","setError","_useState31","_useState32","setErrorDetails","_useState33","_useState34","loading","setLoading","getAllAppsOnce","Details","newApps","ResponseData","updatedApp","find","handleDataChange","fontSize","onChange","changeStatus","handleInputChange","location","reload","official_app","filteredApps","filter","includes","length","paddingTop","i","xxl","textAlign","handleClick","deleteApp","showError","paddingRight","AppDetailModal"],"sourceRoot":""}
name: Fetch Contentful Data and Oss Images

on: workflow_dispatch

jobs:
  fetch-data:
    runs-on: ubuntu-latest
    env:
      ACCESS_TOKEN: ${{ secrets.CONTENTFUL_GRAPHQLTOKEN }}
      LOCALES: "en-US,zh-CN"
      DATA_DIR: "plugins/appstore/src/data"
      APPSTORE_LOGO_DIR: "plugins/appstore/src/assets/images/"
      MYAPPS_LOGO_DIR: "plugins/myapps/src/assets/images/"
      SCREENSHOT_DIR: "plugins/appstore/src/assets/images/screenshot"
      LIMIT: 100

    steps:
      - uses: actions/checkout@v2

      - name: Install node
        uses: actions/setup-node@v2
        with:
          node-version: "14"

      - name: Install dependencies
        run: |
          npm install axios fs-extra rimraf stream-json stream-chain stream-reduce stream-array

      - name: Fetch product data and download screenshots
        run: |
          mkdir -p $DATA_DIR
          IFS=',' read -ra LOCALE_ARRAY <<< "$LOCALES"
          for LOCALE in "${LOCALE_ARRAY[@]}"; do
            SKIP=0
            TOTAL=0
            const {chain} = require('stream-chain');
            const {parser} = require('stream-json');
            const {streamArray} = require('stream-json/streamers/StreamArray');
            const {Writable} = require('stream');
            const fs = require('fs-extra');
            const axios = require('axios');
            const output = fs.createWriteStream($DATA_DIR/product_${LOCALE:0:2}.js);
            output.write(`const product_${LOCALE:0:2}= [\n`);
            while [ $SKIP -le $TOTAL ]; do
              RESPONSE=$(bash -c "node -e \"axios.post('https://graphql.contentful.com/content/v1/spaces/ffrhttfighww', {query:'query($locale:String,$skip:Int){productCollection(locale:$locale,where:{appStore:true},limit:$LIMIT,skip:$skip){total items{sys{id} key hot trademark summary overview websiteurl description screenshots distribution vcpu memory storage logo{imageurl} catalogCollection(limit:15){items{key title catalogCollection(limit:5){items{key title}}}}}}}', variables:{locale:'$LOCALE', skip:$SKIP}}, {headers:{'Content-Type':'application/json', 'Authorization':'Bearer $ACCESS_TOKEN'}}).then(res => res.data.pipe(chain([parser(), streamArray(), new Writable({objectMode:true, write({value}, encoding, callback) {output.write(JSON.stringify(value) + ',\n'); callback();}})])))\"")
              TOTAL=$(echo $RESPONSE | jq '.data.productCollection.total')
              SKIP=$((SKIP + LIMIT))
            done
            output.write(`];\nexport { product_${LOCALE:0:2}};`);
            output.end();
          done && rimraf $SCREENSHOT_DIR && mkdir -p $SCREENSHOT_DIR && IFS=',' read -ra LOCALE_ARRAY <<< "$LOCALES" && for LOCALE in "${LOCALE_ARRAY[@]}"; do
            jq -r '.[].screenshots[].value' <(node -e "const { product_${LOCALE:0:2} } = require(`$DATA_DIR/product_${LOCALE:0:2}.js`); console.log(JSON.stringify(product_${LOCALE:0:2}));") |  xargs -I {} -P 8 bash -c 'url={}; url=${url/https:\/\/libs.websoft9.com/http:\/\/libs.websoft9.com};value=${url#*DocsPicture/}; value=${value%/*}; lang=${value%%/*}; mkdir -p $SCREENSHOT_DIR/$lang; FILENAME=$(basename $url); wget --tries=3 --retry-connrefused --waitretry=1 --read-timeout=20 --timeout=15 -t 0 $url -O $SCREENSHOT_DIR/$lang/$FILENAME || echo $url >> $SCREENSHOT_DIR/Error.log'
          done

      - name: Check changes
        id: changes
        run: |
          CHANGED=$(git status --porcelain)
          if [ -n "$CHANGED" ]; then echo "::set-output name=changed::true"; fi

      - name: Commit and push changes
        if: steps.changes.outputs.changed == 'true'
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Update data 、logos、screenshots

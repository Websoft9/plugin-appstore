name: Upload Artifact To Azure Blob

on: workflow_dispatch

jobs:
  Upload_Artifact_To_Azure_Blob:
    runs-on: ubuntu-latest
    env:
      ACCESS_TOKEN: ${{ secrets.CONTENTFUL_GRAPHQLTOKEN }}
      LOCALES: "en-US,zh-CN"
      DATA_DIR: "data/json"
      APPSTORE_LOGO_DIR: "data/logos"
      SCREENSHOT_DIR: "data/screenshots"
      LIMIT: 100
      CI: false

    steps:
      - uses: actions/checkout@v2    

      - name: Install GNU Parallel
        run: sudo apt-get install -y parallel

      - name: Fetch catalog data from contentful graphql
        run: |
          mkdir -p $DATA_DIR
          IFS=',' read -ra LOCALE_ARRAY <<< "$LOCALES"
          for LOCALE in "${LOCALE_ARRAY[@]}"; do
            curl -X POST \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $ACCESS_TOKEN" \
              -d '{"query":"query($locale: String){catalog(id: \"2Yp0TY3kBHgG6VDjsHZNpK\",locale:$locale) {linkedFrom(allowedLocales:[\"en-US\"]) {catalogCollection(limit:20) {items {key position title linkedFrom(allowedLocales:[\"en-US\"]) {catalogCollection(limit:20) {items {key title position}}}}}}}}","variables":{"locale":"'$LOCALE'"}}' \
              https://graphql.contentful.com/content/v1/spaces/ffrhttfighww | \
              jq '.data.catalog.linkedFrom.catalogCollection.items' > $DATA_DIR/catalog_${LOCALE:0:2}.json
          done

      - name: Fetch product data and download screenshots
        run: |
          mkdir -p $SCREENSHOT_DIR && IFS=',' read -ra LOCALE_ARRAY <<< "$LOCALES" && for LOCALE in "${LOCALE_ARRAY[@]}"; do
             SKIP=0
             TOTAL=0
             ITEMS=()
             while [ $SKIP -le $TOTAL ]; do
               RESPONSE=$(curl -X POST \
                 -H "Content-Type: application/json" \
                 -H "Authorization: Bearer $ACCESS_TOKEN" \
                 -d '{"query":"query($locale: String,$skip: Int){productCollection(locale:$locale,where:{appStore:true},limit: '$LIMIT', skip: $skip) {total items {sys {id} key hot trademark summary overview websiteurl description screenshots distribution vcpu memory storage logo {imageurl} catalogCollection(limit:15) {items {key title catalogCollection(limit:5){items{key title}}}}}}}", "variables":{"locale":"'$LOCALE'", "skip":'$SKIP'}}' \
                 https://graphql.contentful.com/content/v1/spaces/ffrhttfighww)
               ITEMS+=($(echo $RESPONSE | jq '.data.productCollection.items[]'))
               TOTAL=$(echo $RESPONSE | jq '.data.productCollection.total')
               SKIP=$((SKIP + LIMIT))
             done
             # 下载图片
             echo ${ITEMS[@]} | jq -r '.screenshots[]?.value' | sed 's/"//g' | parallel -j 10 "wget -t 0 -N {} -P $SCREENSHOT_DIR/${LOCALE:0:2} || echo {} >> $SCREENSHOT_DIR/Error.log"
             # 写入文件
             echo ${ITEMS[@]} | jq -s '.' > $DATA_DIR/product_${LOCALE:0:2}.json
           done

      - name: Install ossutil
        run: |
          wget http://gosspublic.alicdn.com/ossutil/1.7.6/ossutil64
          chmod 755 ossutil64
      - name: Configure ossutil
        run: ./ossutil64 config -e ${{ secrets.OSS_ENDPOINT }} -i ${{ secrets.OSS_ACCESS_KEY_ID }} -k ${{ secrets.OSS_ACCESS_KEY_SECRET }}

      - name: Download logos from oss
        run: ./ossutil64 cp oss://libs-websoft9-com/Websoft9/logo/product/ $APPSTORE_LOGO_DIR -r --update
        
      - name: Update CHANGELOG.md and public/manifest.json
        id: update_data
        run: |
          version=$(jq -r '.Version' appstore.json)
          echo "PLUGIN_VERSION=$version" >> $GITHUB_OUTPUT
          
          changelog=$(cat changelog_latest.md)
          echo "CHANGELOG<<EOF" >> $GITHUB_OUTPUT 
          echo "$changelog" >> $GITHUB_OUTPUT 
          echo "EOF" >> $GITHUB_OUTPUT
          
          current_date=$(date +%Y-%m-%d)
          printf "## $version release on $current_date\n$changelog\n" < CHANGELOG.md > temp.txt
          mv temp.txt CHANGELOG.md
      
          jq -r --arg version "$version" '.version = $version' public/manifest.json > manifest.json.tmp
          mv manifest.json.tmp public/manifest.json

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 20.2.0

      - name: Install dependencies
        run: npm install

      - name: Build
        run: yarn build

      - name: Copy data、logos、screenshots to build
        run: cp -R data/  build/static/

      - name: Create Zip Archive
        run: |
          mkdir artifacts
          mv build appstore
          cp CHANGELOG.md appstore
          cp appstore.json appstore
          zip -r appstore-${{ env.PLUGIN_VERSION }}.zip appstore/
          cp -r appstore-${{ env.PLUGIN_VERSION }}.zip appstore-latest.zip
          cp appstore.json artifacts/
          mv appstore-${{ env.PLUGIN_VERSION }}.zip appstore-latest.zip artifacts/

      - name: Upload To Azure Blob
        uses: LanceMcCarthy/Action-AzureBlobUpload@v2
        with:
          connection_string: ${{ secrets.AZURE_STORAGE_ARTIFACT }}
          container_name: release
          source_folder: artifacts/
          destination_folder: ./websoft9/plugin
          delete_if_exists: true
          fail_if_source_empty: true
          
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: /* 
          tag_name: v${{ env.PLUGIN_VERSION }}   
          body: ${{ env.CHANGELOG }}
          draft: false
          prerelease: true
          
      - name: Checkout websoft9
        uses: actions/checkout@v2
        with:
          repository: Websoft9/websoft9
          ref: main    
      
      - name: Update Version in websoft9/version.json
        run: |
          jq -r --arg version "${{ env.PLUGIN_VERSION }}" '.PLUGINS.APPSTORE = $version' version.json > version.json.tmp
          mv version.json.tmp version.json

      - name: Commit changes
        run: |
          git config user.name "zhaojing1987"
          git config user.email "jing.zhao@websoft9.com"
          git add version.json
          git commit -m "Update the APPSTORE value in version.json to: ${{ env.PLUGIN_VERSION }}"

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.MYGITHUB_ADMIN_TOKEN }}
          branch: auto-branch-${{ github.run_number }}
          delete-branch: true
          commit-message: Update report
          title: "Update the APPSTORE value in version.json to: ${{ env.PLUGIN_VERSION }}"
          body: "This is my modification, please review and merge it"
          labels: "Update Appstore Version"


      - name: Commit and push changes
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Build Plugin and Upload Artifact to Azure Blob
